4,TYPE_DECL,,acorn_version.hpp:<global>,NAMESPACE_BLOCK,<global>,1,acorn_version.hpp,acorn_version.hpp:<global>,,false,1,<global>,1
13,TYPE_DECL,,aliased_buffer-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,aliased_buffer-inl.hpp,aliased_buffer-inl.hpp:<global>,,false,1,<global>,3
24,TYPE_DECL,,aliased_buffer.hpp:<global>,NAMESPACE_BLOCK,<global>,1,aliased_buffer.hpp,aliased_buffer.hpp:<global>,,false,1,<global>,4
35,TYPE_DECL,,aliased_struct-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,aliased_struct-inl.hpp,aliased_struct-inl.hpp:<global>,,false,1,<global>,4
46,TYPE_DECL,,aliased_struct.hpp:<global>,NAMESPACE_BLOCK,<global>,1,aliased_struct.hpp,aliased_struct.hpp:<global>,,false,1,<global>,4
55,TYPE_DECL,,api\async_resource.cc:<global>,NAMESPACE_BLOCK,<global>,1,api\async_resource.cc,api\async_resource.cc:<global>,,false,1,<global>,3
200,TYPE_DECL,,api\callback.cc:<global>,NAMESPACE_BLOCK,<global>,1,api\callback.cc,api\callback.cc:<global>,,false,1,<global>,5
1200,TYPE_DECL,,api\embed_helpers.cc:<global>,NAMESPACE_BLOCK,<global>,1,api\embed_helpers.cc,api\embed_helpers.cc:<global>,,false,1,<global>,5
1462,TYPE_DECL,,,,"struct CommonEnvironmentSetup::Impl {
  MultiIsolatePlatform* platform = nullptr;
  uv_loop_t loop;
  std::shared_ptr<ArrayBufferAllocator> allocator;
  std::optional<SnapshotCreator> snapshot_creator;
  Isolate* isolate = nullptr;
  DeleteFnPtr<IsolateData, FreeIsolateData> isolate_data;
  DeleteFnPtr<Environment, FreeEnvironment> env;
  Global<Context> main_context;
}",1,api\embed_helpers.cc,node.Impl,,false,79,Impl,2
2188,TYPE_DECL,,api\encoding.cc:<global>,NAMESPACE_BLOCK,<global>,1,api\encoding.cc,api\encoding.cc:<global>,,false,1,<global>,5
2721,TYPE_DECL,,api\environment.cc:<global>,NAMESPACE_BLOCK,<global>,1,api\environment.cc,api\environment.cc:<global>,,false,1,<global>,18
5232,TYPE_DECL,,api\exceptions.cc:<global>,NAMESPACE_BLOCK,<global>,1,api\exceptions.cc,api\exceptions.cc:<global>,,false,1,<global>,8
5842,TYPE_DECL,,api\hooks.cc:<global>,NAMESPACE_BLOCK,<global>,1,api\hooks.cc,api\hooks.cc:<global>,,false,1,<global>,5
6108,TYPE_DECL,,,,"struct AsyncCleanupHookInfo final {
  Environment* env;
  AsyncCleanupHook fun;
  void* arg;
  bool started = false;
  // Use a self-reference to make sure the storage is kept alive while the
  // cleanup hook is registered but not yet finished.
  std::shared_ptr<AsyncCleanupHookInfo> self;
}",1,api\hooks.cc,node.AsyncCleanupHookInfo,,false,94,AsyncCleanupHookInfo,11
6121,TYPE_DECL,,,,"struct ACHHandle final {
  std::shared_ptr<AsyncCleanupHookInfo> info;
}",1,api\hooks.cc,node.ACHHandle,,false,108,ACHHandle,12
6515,TYPE_DECL,,api\utils.cc:<global>,NAMESPACE_BLOCK,<global>,1,api\utils.cc,api\utils.cc:<global>,,false,1,<global>,3
6544,TYPE_DECL,,async_wrap-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,async_wrap-inl.hpp,async_wrap-inl.hpp:<global>,,false,1,<global>,4
6558,TYPE_DECL,,async_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,async_wrap.cc,async_wrap.cc:<global>,,false,1,<global>,9
6601,TYPE_DECL,ANY,,,using TryCatchScope = node::errors::TryCatchScope;,1,async_wrap.cc,TryCatchScope,,false,56,TryCatchScope,1
7182,TYPE_DECL,,,,"class DestroyParam {
 public:
  double asyncId;
  Environment* env;
  Global<Object> target;
  Global<Object> propBag;
}",1,async_wrap.cc,node.DestroyParam,,false,196,DestroyParam,12
9037,TYPE_DECL,,async_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,async_wrap.hpp,async_wrap.hpp:<global>,,false,1,<global>,4
9048,TYPE_DECL,,base64-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,base64-inl.hpp,base64-inl.hpp:<global>,,false,1,<global>,4
9061,TYPE_DECL,,base64.hpp:<global>,NAMESPACE_BLOCK,<global>,1,base64.hpp,base64.hpp:<global>,,false,1,<global>,5
9066,TYPE_DECL,,base64_version.hpp:<global>,NAMESPACE_BLOCK,<global>,1,base64_version.hpp,base64_version.hpp:<global>,,false,1,<global>,1
9079,TYPE_DECL,,base_object-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,base_object-inl.hpp,base_object-inl.hpp:<global>,,false,1,<global>,5
9119,TYPE_DECL,,base_object.cc:<global>,NAMESPACE_BLOCK,<global>,1,base_object.cc,base_object.cc:<global>,,false,1,<global>,4
9510,TYPE_DECL,,base_object.hpp:<global>,NAMESPACE_BLOCK,<global>,1,base_object.hpp,base_object.hpp:<global>,,false,1,<global>,5
9517,TYPE_DECL,,base_object_types.hpp:<global>,NAMESPACE_BLOCK,<global>,1,base_object_types.hpp,base_object_types.hpp:<global>,,false,1,<global>,2
9536,TYPE_DECL,,blob_serializer_deserializer-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,blob_serializer_deserializer-inl.hpp,blob_serializer_deserializer-inl.hpp:<global>,,false,1,<global>,8
9545,TYPE_DECL,,blob_serializer_deserializer.hpp:<global>,NAMESPACE_BLOCK,<global>,1,blob_serializer_deserializer.hpp,blob_serializer_deserializer.hpp:<global>,,false,1,<global>,3
9552,TYPE_DECL,,callback_queue-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,callback_queue-inl.hpp,callback_queue-inl.hpp:<global>,,false,1,<global>,2
9559,TYPE_DECL,,callback_queue.hpp:<global>,NAMESPACE_BLOCK,<global>,1,callback_queue.hpp,callback_queue.hpp:<global>,,false,1,<global>,2
9571,TYPE_DECL,,cares_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,cares_wrap.cc,cares_wrap.cc:<global>,,false,1,<global>,20
11592,TYPE_DECL,ANY,,,"using ares_unique_ptr = std::unique_ptr<char[], AresDeleter>;",3,cares_wrap.cc,ares_unique_ptr,,false,525,ares_unique_ptr,3
17315,TYPE_DECL,,cares_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,cares_wrap.hpp,cares_wrap.hpp:<global>,,false,1,<global>,14
17320,TYPE_DECL,,cjs_module_lexer_version.hpp:<global>,NAMESPACE_BLOCK,<global>,1,cjs_module_lexer_version.hpp,cjs_module_lexer_version.hpp:<global>,,false,1,<global>,1
17333,TYPE_DECL,,cleanup_queue-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,cleanup_queue-inl.hpp,cleanup_queue-inl.hpp:<global>,,false,1,<global>,5
17352,TYPE_DECL,,cleanup_queue.cc:<global>,NAMESPACE_BLOCK,<global>,1,cleanup_queue.cc,cleanup_queue.cc:<global>,,false,1,<global>,5
17486,TYPE_DECL,,cleanup_queue.hpp:<global>,NAMESPACE_BLOCK,<global>,1,cleanup_queue.hpp,cleanup_queue.hpp:<global>,,false,1,<global>,6
17495,TYPE_DECL,,connect_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,connect_wrap.cc,connect_wrap.cc:<global>,,false,1,<global>,3
17499,TYPE_DECL,,,,class Environment,1,connect_wrap.cc,node.Environment,,false,9,Environment,1
17513,TYPE_DECL,,connect_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,connect_wrap.hpp,connect_wrap.hpp:<global>,,false,1,<global>,3
17534,TYPE_DECL,,connection_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,connection_wrap.cc,connection_wrap.cc:<global>,,false,1,<global>,9
17823,TYPE_DECL,,connection_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,connection_wrap.hpp,connection_wrap.hpp:<global>,,false,1,<global>,2
17854,TYPE_DECL,,crypto\crypto_aes.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_aes.cc,crypto\crypto_aes.cc:<global>,,false,1,<global>,14
19566,TYPE_DECL,,crypto\crypto_aes.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_aes.hpp,crypto\crypto_aes.hpp:<global>,,false,1,<global>,6
19604,TYPE_DECL,,crypto\crypto_bio.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_bio.cc,crypto\crypto_bio.cc:<global>,,false,1,<global>,8
20875,TYPE_DECL,,crypto\crypto_bio.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_bio.hpp,crypto\crypto_bio.hpp:<global>,,false,1,<global>,5
20981,TYPE_DECL,,crypto\crypto_cipher.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_cipher.cc,crypto\crypto_cipher.cc:<global>,,false,1,<global>,10
24460,TYPE_DECL,,crypto\crypto_cipher.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_cipher.hpp,crypto\crypto_cipher.hpp:<global>,,false,1,<global>,8
24469,TYPE_DECL,,crypto\crypto_clienthello-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_clienthello-inl.hpp,crypto\crypto_clienthello-inl.hpp:<global>,,false,1,<global>,3
24478,TYPE_DECL,,crypto\crypto_clienthello.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_clienthello.cc,crypto\crypto_clienthello.cc:<global>,,false,1,<global>,3
25038,TYPE_DECL,,crypto\crypto_clienthello.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_clienthello.hpp,crypto\crypto_clienthello.hpp:<global>,,false,1,<global>,3
25050,TYPE_DECL,,crypto\crypto_common.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_common.cc,crypto\crypto_common.cc:<global>,,false,1,<global>,21
29759,TYPE_DECL,,crypto\crypto_common.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_common.hpp,crypto\crypto_common.hpp:<global>,,false,1,<global>,6
29798,TYPE_DECL,,crypto\crypto_context.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_context.cc,crypto\crypto_context.cc:<global>,,false,1,<global>,18
34237,TYPE_DECL,,crypto\crypto_context.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_context.hpp,crypto\crypto_context.hpp:<global>,,false,1,<global>,7
34368,TYPE_DECL,,crypto\crypto_dh.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_dh.cc,crypto\crypto_dh.cc:<global>,,false,1,<global>,10
36855,TYPE_DECL,,crypto\crypto_dh.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_dh.hpp,crypto\crypto_dh.hpp:<global>,,false,1,<global>,8
36882,TYPE_DECL,,crypto\crypto_dsa.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_dsa.cc,crypto\crypto_dsa.cc:<global>,,false,1,<global>,12
37331,TYPE_DECL,,crypto\crypto_dsa.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_dsa.hpp,crypto\crypto_dsa.hpp:<global>,,false,1,<global>,7
37352,TYPE_DECL,,crypto\crypto_ec.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_ec.cc,crypto\crypto_ec.cc:<global>,,false,1,<global>,16
41149,TYPE_DECL,,crypto\crypto_ec.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_ec.hpp,crypto\crypto_ec.hpp:<global>,,false,1,<global>,10
41198,TYPE_DECL,,crypto\crypto_hash.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_hash.cc,crypto\crypto_hash.cc:<global>,,false,1,<global>,10
42206,TYPE_DECL,,crypto\crypto_hash.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_hash.hpp,crypto\crypto_hash.hpp:<global>,,false,1,<global>,7
42227,TYPE_DECL,,crypto\crypto_hkdf.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_hkdf.cc,crypto\crypto_hkdf.cc:<global>,,false,1,<global>,9
42734,TYPE_DECL,,crypto\crypto_hkdf.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_hkdf.hpp,crypto\crypto_hkdf.hpp:<global>,,false,1,<global>,6
42783,TYPE_DECL,,crypto\crypto_hmac.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_hmac.cc,crypto\crypto_hmac.cc:<global>,,false,1,<global>,13
43701,TYPE_DECL,,crypto\crypto_hmac.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_hmac.hpp,crypto\crypto_hmac.hpp:<global>,,false,1,<global>,8
43724,TYPE_DECL,,crypto\crypto_keygen.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_keygen.cc,crypto\crypto_keygen.cc:<global>,,false,1,<global>,10
43989,TYPE_DECL,,crypto\crypto_keygen.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_keygen.hpp,crypto\crypto_keygen.hpp:<global>,,false,1,<global>,8
44005,TYPE_DECL,,crypto\crypto_keys.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_keys.cc,crypto\crypto_keys.cc:<global>,,false,1,<global>,18
51068,TYPE_DECL,,crypto\crypto_keys.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_keys.hpp,crypto\crypto_keys.hpp:<global>,,false,1,<global>,11
51089,TYPE_DECL,,crypto\crypto_pbkdf2.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_pbkdf2.cc,crypto\crypto_pbkdf2.cc:<global>,,false,1,<global>,9
51468,TYPE_DECL,,crypto\crypto_pbkdf2.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_pbkdf2.hpp,crypto\crypto_pbkdf2.hpp:<global>,,false,1,<global>,6
51491,TYPE_DECL,,crypto\crypto_random.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_random.cc,crypto\crypto_random.cc:<global>,,false,1,<global>,10
52226,TYPE_DECL,,crypto\crypto_random.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_random.hpp,crypto\crypto_random.hpp:<global>,,false,1,<global>,7
52255,TYPE_DECL,,crypto\crypto_rsa.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_rsa.cc,crypto\crypto_rsa.cc:<global>,,false,1,<global>,13
54520,TYPE_DECL,,crypto\crypto_rsa.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_rsa.hpp,crypto\crypto_rsa.hpp:<global>,,false,1,<global>,8
54541,TYPE_DECL,,crypto\crypto_scrypt.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_scrypt.cc,crypto\crypto_scrypt.cc:<global>,,false,1,<global>,9
54964,TYPE_DECL,,crypto\crypto_scrypt.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_scrypt.hpp,crypto\crypto_scrypt.hpp:<global>,,false,1,<global>,5
55014,TYPE_DECL,,crypto\crypto_sig.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_sig.cc,crypto\crypto_sig.cc:<global>,,false,1,<global>,11
58001,TYPE_DECL,,crypto\crypto_sig.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_sig.hpp,crypto\crypto_sig.hpp:<global>,,false,1,<global>,6
58020,TYPE_DECL,,crypto\crypto_spkac.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_spkac.cc,crypto\crypto_spkac.cc:<global>,,false,1,<global>,8
58488,TYPE_DECL,,crypto\crypto_spkac.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_spkac.hpp,crypto\crypto_spkac.hpp:<global>,,false,1,<global>,4
58507,TYPE_DECL,,crypto\crypto_timing.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_timing.cc,crypto\crypto_timing.cc:<global>,,false,1,<global>,8
58625,TYPE_DECL,,crypto\crypto_timing.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_timing.hpp,crypto\crypto_timing.hpp:<global>,,false,1,<global>,3
58647,TYPE_DECL,,crypto\crypto_tls.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_tls.cc,crypto\crypto_tls.cc:<global>,,false,1,<global>,14
66098,TYPE_DECL,,crypto\crypto_tls.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_tls.hpp,crypto\crypto_tls.hpp:<global>,,false,1,<global>,9
66113,TYPE_DECL,,crypto\crypto_util.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_util.cc,crypto\crypto_util.cc:<global>,,false,1,<global>,16
68644,TYPE_DECL,,crypto\crypto_util.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_util.hpp,crypto\crypto_util.hpp:<global>,,false,1,<global>,26
68675,TYPE_DECL,,crypto\crypto_x509.cc:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_x509.cc,crypto\crypto_x509.cc:<global>,,false,1,<global>,14
70446,TYPE_DECL,,crypto\crypto_x509.hpp:<global>,NAMESPACE_BLOCK,<global>,1,crypto\crypto_x509.hpp,crypto\crypto_x509.hpp:<global>,,false,1,<global>,7
70456,TYPE_DECL,,,,"class IdempotentDataQueueReader final
    : public DataQueue::Reader,
      public std::enable_shared_from_this<IdempotentDataQueueReader> {
 public:
  IdempotentDataQueueReader(std::shared_ptr<DataQueueImpl> data_queue)
      : data_queue_(std::move(data_queue)) {
    CHECK(data_queue_->is_idempotent());
  }

  // Disallow moving and copying.
  IdempotentDataQueueReader(const IdempotentDataQueueReader&) = delete;
  IdempotentDataQueueReader(IdempotentDataQueueReader&&) = delete;
  IdempotentDataQueueReader& operator=(const IdempotentDataQueueReader&) =
      delete;
  IdempotentDataQueueReader& operator=(IdempotentDataQueueReader&&) = delete;

  int Pull(Next next,
           int options,
           DataQueue::Vec* data,
           size_t count,
           size_t max_count_hint = bob::kMaxCountHint) override {
    std::shared_ptr<DataQueue::Reader> self = shared_from_this();

    // If ended is true, this reader has already reached the end and cannot
    // provide any more data.
 ...",1,dataqueue\queue.cc,node.anonymous_namespace_25.IdempotentDataQueueReader,DataQueue.Reader;std.enable_shared_from_this<IdempotentDataQueueReader>,false,185,IdempotentDataQueueReader,5
70596,TYPE_DECL,,,,"class NonIdempotentDataQueueReader final
    : public DataQueue::Reader,
      public std::enable_shared_from_this<NonIdempotentDataQueueReader> {
 public:
  NonIdempotentDataQueueReader(std::shared_ptr<DataQueueImpl> data_queue)
      : data_queue_(std::move(data_queue)) {
    CHECK(!data_queue_->is_idempotent());
  }

  // Disallow moving and copying.
  NonIdempotentDataQueueReader(const NonIdempotentDataQueueReader&) = delete;
  NonIdempotentDataQueueReader(NonIdempotentDataQueueReader&&) = delete;
  NonIdempotentDataQueueReader& operator=(const NonIdempotentDataQueueReader&) =
      delete;
  NonIdempotentDataQueueReader& operator=(NonIdempotentDataQueueReader&&) =
      delete;

  int Pull(Next next,
           int options,
           DataQueue::Vec* data,
           size_t count,
           size_t max_count_hint = bob::kMaxCountHint) override {
    std::shared_ptr<DataQueue::Reader> self = shared_from_this();

    // If ended is true, this reader has already reached the end an...",1,dataqueue\queue.cc,node.anonymous_namespace_39.NonIdempotentDataQueueReader,DataQueue.Reader;std.enable_shared_from_this<NonIdempotentDataQueueReader>,false,337,NonIdempotentDataQueueReader,6
70747,TYPE_DECL,,,,"class EmptyReader final : public DataQueue::Reader,
                            public std::enable_shared_from_this<EmptyReader> {
   public:
    int Pull(Next next,
             int options,
             DataQueue::Vec* data,
             size_t count,
             size_t max_count_hint = bob::kMaxCountHint) override {
      auto self = shared_from_this();
      if (ended_) {
        std::move(next)(bob::Status::STATUS_EOS, nullptr, 0, [](uint64_t) {});
        return bob::Status::STATUS_EOS;
      }

      ended_ = true;
      std::move(next)(
          bob::Status::STATUS_CONTINUE, nullptr, 0, [](uint64_t) {});
      return bob::Status::STATUS_CONTINUE;
    }

    SET_NO_MEMORY_INFO()
    SET_MEMORY_INFO_NAME(EmptyReader)
    SET_SELF_SIZE(EmptyReader)

   private:
    bool ended_ = false;
  }",3,dataqueue\queue.cc,node.anonymous_namespace_58.EmptyEntry.EmptyReader,DataQueue.Reader;std.enable_shared_from_this<EmptyReader>,false,506,EmptyReader,1
70760,TYPE_DECL,,,,"class InMemoryReader final
      : public DataQueue::Reader,
        public std::enable_shared_from_this<InMemoryReader> {
   public:
    InMemoryReader(InMemoryEntry& entry) : entry_(entry) {}

    int Pull(Next next,
             int options,
             DataQueue::Vec* data,
             size_t count,
             size_t max_count_hint = bob::kMaxCountHint) override {
      auto self = shared_from_this();
      if (ended_) {
        std::move(next)(bob::Status::STATUS_EOS, nullptr, 0, [](uint64_t) {});
        return bob::Status::STATUS_EOS;
      }

      ended_ = true;
      DataQueue::Vec vec{
          reinterpret_cast<uint8_t*>(entry_.backing_store_->Data()) +
              entry_.offset_,
          entry_.byte_length_,
      };

      std::move(next)(bob::Status::STATUS_CONTINUE,
                      &vec,
                      1,
                      InMemoryFunctor({entry_.backing_store_}));
      return bob::Status::STATUS_CONTINUE;
    }

    SET_NO_MEMORY_INFO()
   ...",3,dataqueue\queue.cc,node.anonymous_namespace_74.InMemoryEntry.InMemoryReader,DataQueue.Reader;std.enable_shared_from_this<InMemoryReader>,false,573,InMemoryReader,2
70791,TYPE_DECL,,,,"class InMemoryEntry final : public EntryImpl {
 public:
  struct InMemoryFunctor final {
    std::shared_ptr<BackingStore> backing_store;
    void operator()(uint64_t) { backing_store = nullptr; }
  };

  class InMemoryReader final
      : public DataQueue::Reader,
        public std::enable_shared_from_this<InMemoryReader> {
   public:
    InMemoryReader(InMemoryEntry& entry) : entry_(entry) {}

    int Pull(Next next,
             int options,
             DataQueue::Vec* data,
             size_t count,
             size_t max_count_hint = bob::kMaxCountHint) override {
      auto self = shared_from_this();
      if (ended_) {
        std::move(next)(bob::Status::STATUS_EOS, nullptr, 0, [](uint64_t) {});
        return bob::Status::STATUS_EOS;
      }

      ended_ = true;
      DataQueue::Vec vec{
          reinterpret_cast<uint8_t*>(entry_.backing_store_->Data()) +
              entry_.offset_,
          entry_.byte_length_,
      };

      std::move(next)(bob::Status::STATUS_C...",1,dataqueue\queue.cc,node.anonymous_namespace_71.InMemoryEntry,EntryImpl,false,566,InMemoryEntry,9
70801,TYPE_DECL,,,,"class FdEntry final : public EntryImpl {
  // TODO(@jasnell, @flakey5):
  // * This should only allow reading from regular files. No directories, no
  // pipes, etc.
  // * The reader should support accepting the buffer(s) from the pull, if any.
  // It should
  //   only allocate a managed buffer if the pull doesn't provide any.
  // * We might want to consider making the stat on each read sync to eliminate
  // the race
  //   condition described in the comment above.
 public:
  static std::unique_ptr<FdEntry> Create(Environment* env, Local<Value> path) {
    // We're only going to create the FdEntry if the file exists.
    uv_fs_t req = uv_fs_t();
    auto cleanup = OnScopeLeave([&] { uv_fs_req_cleanup(&req); });

    auto buf = std::make_shared<BufferValue>(env->isolate(), path);
    if (uv_fs_stat(nullptr, &req, buf->out(), nullptr) < 0) return nullptr;

    return std::make_unique<FdEntry>(
        env, std::move(buf), req.statbuf, 0, req.statbuf.st_size);
  }

  FdEntry(Envir...",1,dataqueue\queue.cc,node.anonymous_namespace_105.FdEntry,EntryImpl,false,777,FdEntry,11
70820,TYPE_DECL,,,,"class ReaderImpl final : public DataQueue::Reader,
                           public StreamListener,
                           public std::enable_shared_from_this<ReaderImpl> {
   public:
    static std::shared_ptr<ReaderImpl> Create(FdEntry* entry) {
      uv_fs_t req;
      auto cleanup = OnScopeLeave([&] { uv_fs_req_cleanup(&req); });
      int file =
          uv_fs_open(nullptr, &req, entry->path_->out(), O_RDONLY, 0, nullptr);
      if (file < 0 || FdEntry::CheckModified(entry, file)) {
        uv_fs_close(nullptr, &req, file, nullptr);
        return nullptr;
      }
      Realm* realm = entry->env()->principal_realm();
      return std::make_shared<ReaderImpl>(
          BaseObjectPtr<fs::FileHandle>(fs::FileHandle::New(
              realm->GetBindingData<fs::BindingData>(realm->context()),
              file,
              Local<Object>(),
              entry->start_,
              entry->end_ - entry->start_)),
          entry);
    }

    explicit ReaderImpl(BaseObjectP...",3,dataqueue\queue.cc,node.anonymous_namespace_118.FdEntry.ReaderImpl,DataQueue.Reader;StreamListener;std.enable_shared_from_this<ReaderImpl>,false,864,ReaderImpl,15
70916,TYPE_DECL,,dataqueue\queue.cc:<global>,NAMESPACE_BLOCK,<global>,1,dataqueue\queue.cc,dataqueue\queue.cc:<global>,,false,1,<global>,20
70960,TYPE_DECL,,,,class IdempotentDataQueueReader,1,dataqueue\queue.cc,node.anonymous_namespace_1.IdempotentDataQueueReader,,false,31,IdempotentDataQueueReader,1
70961,TYPE_DECL,,,,class NonIdempotentDataQueueReader,1,dataqueue\queue.cc,node.anonymous_namespace_2.NonIdempotentDataQueueReader,,false,32,NonIdempotentDataQueueReader,2
70962,TYPE_DECL,,,,"class EntryImpl : public DataQueue::Entry {
 public:
  virtual std::shared_ptr<DataQueue::Reader> get_reader() = 0;
}",1,dataqueue\queue.cc,node.anonymous_namespace_3.EntryImpl,DataQueue.Entry,false,34,EntryImpl,3
70967,TYPE_DECL,,,,"class DataQueueImpl final : public DataQueue,
                            public std::enable_shared_from_this<DataQueueImpl> {
 public:
  // Constructor for an idempotent, fixed sized DataQueue.
  DataQueueImpl(std::vector<std::unique_ptr<Entry>>&& list, uint64_t size)
      : entries_(std::move(list)),
        idempotent_(true),
        size_(size),
        capped_size_(0) {}

  // Constructor for a non-idempotent DataQueue. This kind of queue can have
  // entries added to it over time. The size is set to 0 initially. The queue
  // can be capped immediately on creation. Depending on the entries that are
  // added, the size can be cleared if any of the entries are not capable of
  // providing a size.
  DataQueueImpl(std::optional<uint64_t> cap = std::nullopt)
      : idempotent_(false), size_(0), capped_size_(cap) {}

  // Disallow moving and copying.
  DataQueueImpl(const DataQueueImpl&) = delete;
  DataQueueImpl(DataQueueImpl&&) = delete;
  DataQueueImpl& operator=(const DataQ...",1,dataqueue\queue.cc,node.anonymous_namespace_5.DataQueueImpl,DataQueue;std.enable_shared_from_this<DataQueueImpl>,false,39,DataQueueImpl,4
71365,TYPE_DECL,,,,friend class DataQueue,3,dataqueue\queue.cc,node.anonymous_namespace_22.DataQueueImpl.DataQueue,,false,176,DataQueue,25
71366,TYPE_DECL,,,,friend class IdempotentDataQueueReader,3,dataqueue\queue.cc,node.anonymous_namespace_23.DataQueueImpl.IdempotentDataQueueReader,,false,177,IdempotentDataQueueReader,26
71367,TYPE_DECL,,,,friend class NonIdempotentDataQueueReader,3,dataqueue\queue.cc,node.anonymous_namespace_24.DataQueueImpl.NonIdempotentDataQueueReader,,false,178,NonIdempotentDataQueueReader,27
71938,TYPE_DECL,,,,"class EmptyEntry final : public EntryImpl {
 public:
  class EmptyReader final : public DataQueue::Reader,
                            public std::enable_shared_from_this<EmptyReader> {
   public:
    int Pull(Next next,
             int options,
             DataQueue::Vec* data,
             size_t count,
             size_t max_count_hint = bob::kMaxCountHint) override {
      auto self = shared_from_this();
      if (ended_) {
        std::move(next)(bob::Status::STATUS_EOS, nullptr, 0, [](uint64_t) {});
        return bob::Status::STATUS_EOS;
      }

      ended_ = true;
      std::move(next)(
          bob::Status::STATUS_CONTINUE, nullptr, 0, [](uint64_t) {});
      return bob::Status::STATUS_CONTINUE;
    }

    SET_NO_MEMORY_INFO()
    SET_MEMORY_INFO_NAME(EmptyReader)
    SET_SELF_SIZE(EmptyReader)

   private:
    bool ended_ = false;
  };

  EmptyEntry() = default;

  // Disallow moving and copying.
  EmptyEntry(const EmptyEntry&) = delete;
  EmptyEntry(EmptyEntry&&) = ...",1,dataqueue\queue.cc,node.anonymous_namespace_57.EmptyEntry,EntryImpl,false,504,EmptyEntry,8
72063,TYPE_DECL,,,,"struct InMemoryFunctor final {
    std::shared_ptr<BackingStore> backing_store;
    void operator()(uint64_t) { backing_store = nullptr; }
  }",3,dataqueue\queue.cc,node.anonymous_namespace_72.InMemoryEntry.InMemoryFunctor,,false,568,InMemoryFunctor,1
72313,TYPE_DECL,,,,friend class InMemoryReader,3,dataqueue\queue.cc,node.anonymous_namespace_89.InMemoryEntry.InMemoryReader,,false,681,InMemoryReader,20
72314,TYPE_DECL,,,,"class DataQueueEntry : public EntryImpl {
 public:
  explicit DataQueueEntry(std::shared_ptr<DataQueue> data_queue)
      : data_queue_(std::move(data_queue)) {
    CHECK(data_queue_);
  }

  // Disallow moving and copying.
  DataQueueEntry(const DataQueueEntry&) = delete;
  DataQueueEntry(DataQueueEntry&&) = delete;
  DataQueueEntry& operator=(const DataQueueEntry&) = delete;
  DataQueueEntry& operator=(DataQueueEntry&&) = delete;

  std::shared_ptr<DataQueue::Reader> get_reader() override {
    return std::make_shared<ReaderImpl>(data_queue_->get_reader());
  }

  std::unique_ptr<Entry> slice(
      uint64_t start, std::optional<uint64_t> end = std::nullopt) override {
    std::shared_ptr<DataQueue> sliced = data_queue_->slice(start, end);
    if (!sliced) return nullptr;

    return std::make_unique<DataQueueEntry>(std::move(sliced));
  }

  // Returns the number of bytes represented by this Entry if it is
  // known. Certain types of entries, such as those backed by streams
  //...",1,dataqueue\queue.cc,node.anonymous_namespace_90.DataQueueEntry,EntryImpl,false,688,DataQueueEntry,10
72437,TYPE_DECL,,,,"class ReaderImpl : public DataQueue::Reader,
                     public std::enable_shared_from_this<ReaderImpl> {
   public:
    explicit ReaderImpl(std::shared_ptr<DataQueue::Reader> inner)
        : inner_(std::move(inner)) {}

    int Pull(DataQueue::Reader::Next next,
             int options,
             DataQueue::Vec* data,
             size_t count,
             size_t max_count_hint) override {
      auto self = shared_from_this();
      return inner_->Pull(
          std::move(next), options, data, count, max_count_hint);
    }

    SET_NO_MEMORY_INFO()
    SET_MEMORY_INFO_NAME(ReaderImpl)
    SET_SELF_SIZE(ReaderImpl)

   private:
    std::shared_ptr<DataQueue::Reader> inner_;
  }",3,dataqueue\queue.cc,node.anonymous_namespace_102.DataQueueEntry.ReaderImpl,DataQueue.Reader;std.enable_shared_from_this<ReaderImpl>,false,742,ReaderImpl,17
73186,TYPE_DECL,,,,friend class FdEntry,5,dataqueue\queue.cc,node.anonymous_namespace_146.FdEntry.ReaderImpl.FdEntry,,false,1022,FdEntry,17
73197,TYPE_DECL,,,,friend class ReaderImpl,3,dataqueue\queue.cc,node.anonymous_namespace_147.FdEntry.ReaderImpl,,false,1025,ReaderImpl,16
73426,TYPE_DECL,,dataqueue\queue.hpp:<global>,NAMESPACE_BLOCK,<global>,1,dataqueue\queue.hpp,dataqueue\queue.hpp:<global>,,false,1,<global>,12
73437,TYPE_DECL,,debug_utils-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,debug_utils-inl.hpp,debug_utils-inl.hpp:<global>,,false,1,<global>,4
73569,TYPE_DECL,,debug_utils.cc:<global>,NAMESPACE_BLOCK,<global>,1,debug_utils.cc,debug_utils.cc:<global>,,false,1,<global>,22
73709,TYPE_DECL,,,,"class Win32SymbolDebuggingContext final : public NativeSymbolDebuggingContext {
 public:
  Win32SymbolDebuggingContext() {
    current_process_ = GetCurrentProcess();
    USE(SymInitialize(current_process_, nullptr, true));
  }

  ~Win32SymbolDebuggingContext() override {
    USE(SymCleanup(current_process_));
  }

  using NameAndDisplacement = std::pair<std::string, DWORD64>;
  NameAndDisplacement WrappedSymFromAddr(DWORD64 dwAddress) const {
    // Refs: https://docs.microsoft.com/en-us/windows/desktop/Debug/retrieving-symbol-information-by-address
    // Patches:
    // Use `fprintf(stderr, ` instead of `printf`
    // `sym.filename = pSymbol->Name` on success
    // `current_process_` instead of `hProcess.
    DWORD64 dwDisplacement = 0;
    // Patch: made into arg - DWORD64  dwAddress = SOME_ADDRESS;

    char buffer[sizeof(SYMBOL_INFO) + MAX_SYM_NAME * sizeof(TCHAR)];
    const auto pSymbol = reinterpret_cast<PSYMBOL_INFO>(buffer);

    pSymbol->SizeOfStruct = sizeof(SYMBOL_IN...",1,debug_utils.cc,node.Win32SymbolDebuggingContext,NativeSymbolDebuggingContext,false,151,Win32SymbolDebuggingContext,4
73729,TYPE_DECL,ANY,,,"using NameAndDisplacement = std::pair<std::string, DWORD64>;",3,debug_utils.cc,NameAndDisplacement,,false,162,NameAndDisplacement,3
74196,TYPE_DECL,,debug_utils.hpp:<global>,NAMESPACE_BLOCK,<global>,1,debug_utils.hpp,debug_utils.hpp:<global>,,false,1,<global>,6
74203,TYPE_DECL,,diagnosticfilename-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,diagnosticfilename-inl.hpp,diagnosticfilename-inl.hpp:<global>,,false,1,<global>,2
74226,TYPE_DECL,,encoding_binding.cc:<global>,NAMESPACE_BLOCK,<global>,1,encoding_binding.cc,encoding_binding.cc:<global>,,false,1,<global>,10
75112,TYPE_DECL,,encoding_binding.hpp:<global>,NAMESPACE_BLOCK,<global>,1,encoding_binding.hpp,encoding_binding.hpp:<global>,,false,1,<global>,5
75147,TYPE_DECL,,env-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,env-inl.hpp,env-inl.hpp:<global>,,false,1,<global>,16
75162,TYPE_DECL,,env.cc:<global>,NAMESPACE_BLOCK,<global>,1,env.cc,env.cc:<global>,,false,1,<global>,30
80449,TYPE_DECL,,env.hpp:<global>,NAMESPACE_BLOCK,<global>,1,env.hpp,env.hpp:<global>,,false,1,<global>,35
80454,TYPE_DECL,,env_properties.hpp:<global>,NAMESPACE_BLOCK,<global>,1,env_properties.hpp,env_properties.hpp:<global>,,false,1,<global>,1
80473,TYPE_DECL,,fs_event_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,fs_event_wrap.cc,fs_event_wrap.cc:<global>,,false,1,<global>,8
80478,TYPE_DECL,,,,"class FSEventWrap: public HandleWrap {
 public:
  static void Initialize(Local<Object> target,
                         Local<Value> unused,
                         Local<Context> context,
                         void* priv);
  static void RegisterExternalReferences(ExternalReferenceRegistry* registry);
  static void New(const FunctionCallbackInfo<Value>& args);
  static void Start(const FunctionCallbackInfo<Value>& args);
  static void GetInitialized(const FunctionCallbackInfo<Value>& args);

  SET_NO_MEMORY_INFO()
  SET_MEMORY_INFO_NAME(FSEventWrap)
  SET_SELF_SIZE(FSEventWrap)

 private:
  static const encoding kDefaultEncoding = UTF8;

  FSEventWrap(Environment* env, Local<Object> object);
  ~FSEventWrap() override = default;

  static void OnEvent(uv_fs_event_t* handle, const char* filename, int events,
    int status);

  uv_fs_event_t handle_;
  enum encoding encoding_ = kDefaultEncoding;
}",1,fs_event_wrap.cc,node.anonymous_namespace_1.FSEventWrap,HandleWrap,false,51,FSEventWrap,1
80527,TYPE_DECL,encoding_,,,enum encoding,3,fs_event_wrap.cc,node.anonymous_namespace_10.FSEventWrap.encoding,,false,76,encoding,11
81118,TYPE_DECL,,handle_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,handle_wrap.cc,handle_wrap.cc:<global>,,false,1,<global>,6
81595,TYPE_DECL,,handle_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,handle_wrap.hpp,handle_wrap.hpp:<global>,,false,1,<global>,5
81616,TYPE_DECL,,heap_utils.cc:<global>,NAMESPACE_BLOCK,<global>,1,heap_utils.cc,heap_utils.cc:<global>,,false,1,<global>,9
81621,TYPE_DECL,,,,"class JSGraphJSNode : public EmbedderGraph::Node {
 public:
  const char* Name() override { return ""<JS Node>""; }
  size_t SizeInBytes() override { return 0; }
  bool IsEmbedderNode() override { return false; }
  Local<Value> JSValue() { return PersistentToLocal::Strong(persistent_); }

  int IdentityHash() {
    Local<Value> v = JSValue();
    if (v->IsObject()) return v.As<Object>()->GetIdentityHash();
    if (v->IsName()) return v.As<v8::Name>()->GetIdentityHash();
    if (v->IsInt32()) return v.As<v8::Int32>()->Value();
    return 0;
  }

  JSGraphJSNode(Isolate* isolate, Local<Value> val)
      : persistent_(isolate, val) {
    CHECK(!val.IsEmpty());
  }

  struct Hash {
    inline size_t operator()(JSGraphJSNode* n) const {
      return static_cast<size_t>(n->IdentityHash());
    }
  };

  struct Equal {
    inline bool operator()(JSGraphJSNode* a, JSGraphJSNode* b) const {
      return a->JSValue()->SameValue(b->JSValue());
    }
  };

 private:
  Global<Value> persistent_;
}",1,heap_utils.cc,node.heap.JSGraphJSNode,EmbedderGraph.Node,false,47,JSGraphJSNode,1
81717,TYPE_DECL,,,,"struct Hash {
    inline size_t operator()(JSGraphJSNode* n) const {
      return static_cast<size_t>(n->IdentityHash());
    }
  }",3,heap_utils.cc,node.heap.JSGraphJSNode.Hash,,false,67,Hash,7
81730,TYPE_DECL,,,,"struct Equal {
    inline bool operator()(JSGraphJSNode* a, JSGraphJSNode* b) const {
      return a->JSValue()->SameValue(b->JSValue());
    }
  }",3,heap_utils.cc,node.heap.JSGraphJSNode.Equal,,false,73,Equal,8
81750,TYPE_DECL,,,,"class JSGraph : public EmbedderGraph {
 public:
  explicit JSGraph(Isolate* isolate) : isolate_(isolate) {}

  Node* V8Node(const Local<Value>& value) override {
    std::unique_ptr<JSGraphJSNode> n { new JSGraphJSNode(isolate_, value) };
    auto it = engine_nodes_.find(n.get());
    if (it != engine_nodes_.end())
      return *it;
    engine_nodes_.insert(n.get());
    return AddNode(std::unique_ptr<Node>(n.release()));
  }

  Node* AddNode(std::unique_ptr<Node> node) override {
    Node* n = node.get();
    nodes_.emplace(std::move(node));
    return n;
  }

  void AddEdge(Node* from, Node* to, const char* name = nullptr) override {
    edges_[from].insert(std::make_pair(name, to));
  }

  MaybeLocal<Array> CreateObject() const {
    EscapableHandleScope handle_scope(isolate_);
    Local<Context> context = isolate_->GetCurrentContext();
    Environment* env = Environment::GetCurrent(context);

    std::unordered_map<Node*, Local<Object>> info_objects;
    Local<Array> nodes = Arr...",1,heap_utils.cc,node.heap.JSGraph,EmbedderGraph,false,83,JSGraph,2
82449,TYPE_DECL,,,,"class FileOutputStream : public v8::OutputStream {
 public:
  FileOutputStream(const int fd, uv_fs_t* req) : fd_(fd), req_(req) {}

  int GetChunkSize() override {
    return 65536;  // big chunks == faster
  }

  void EndOfStream() override {}

  WriteResult WriteAsciiChunk(char* data, const int size) override {
    DCHECK_EQ(status_, 0);
    int offset = 0;
    while (offset < size) {
      const uv_buf_t buf = uv_buf_init(data + offset, size - offset);
      const int num_bytes_written = uv_fs_write(nullptr,
                                                req_,
                                                fd_,
                                                &buf,
                                                1,
                                                -1,
                                                nullptr);
      uv_fs_req_cleanup(req_);
      if (num_bytes_written < 0) {
        status_ = num_bytes_written;
        return kAbort;
      }
      DCHECK_LE(static_c...",1,heap_utils.cc,node.heap.anonymous_namespace_1.FileOutputStream,v8.OutputStream,false,224,FileOutputStream,1
82550,TYPE_DECL,,,,"class HeapSnapshotStream : public AsyncWrap,
                           public StreamBase,
                           public v8::OutputStream {
 public:
  HeapSnapshotStream(
      Environment* env,
      HeapSnapshotPointer&& snapshot,
      Local<Object> obj) :
      AsyncWrap(env, obj, AsyncWrap::PROVIDER_HEAPSNAPSHOT),
      StreamBase(env),
      snapshot_(std::move(snapshot)) {
    MakeWeak();
    StreamBase::AttachToObject(GetObject());
  }

  ~HeapSnapshotStream() override {}

  int GetChunkSize() override {
    return 65536;  // big chunks == faster
  }

  void EndOfStream() override {
    EmitRead(UV_EOF);
    snapshot_.reset();
  }

  WriteResult WriteAsciiChunk(char* data, int size) override {
    int len = size;
    while (len != 0) {
      uv_buf_t buf = EmitAlloc(size);
      ssize_t avail = len;
      if (static_cast<ssize_t>(buf.len) < avail)
        avail = buf.len;
      memcpy(buf.base, data, avail);
      data += avail;
      len -= static_cast<int>(avail);
    ...",1,heap_utils.cc,node.heap.anonymous_namespace_7.HeapSnapshotStream,AsyncWrap;StreamBase;v8.OutputStream,false,266,HeapSnapshotStream,2
83320,TYPE_DECL,,histogram-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,histogram-inl.hpp,histogram-inl.hpp:<global>,,false,1,<global>,4
83361,TYPE_DECL,,histogram.cc:<global>,NAMESPACE_BLOCK,<global>,1,histogram.cc,histogram.cc:<global>,,false,1,<global>,7
85925,TYPE_DECL,,histogram.hpp:<global>,NAMESPACE_BLOCK,<global>,1,histogram.hpp,histogram.hpp:<global>,,false,1,<global>,12
85943,TYPE_DECL,,,,"class ThreadSafeDelegate : public InspectorSessionDelegate {
 public:
  ThreadSafeDelegate(std::shared_ptr<MainThreadHandle> thread, int object_id)
                     : thread_(thread), delegate_(thread, object_id) {}

  void SendMessageToFrontend(const v8_inspector::StringView& message) override {
    delegate_.Call(
        [m = StringBuffer::create(message)]
        (InspectorSessionDelegate* delegate) {
      delegate->SendMessageToFrontend(m->string());
    });
  }

 private:
  std::shared_ptr<MainThreadHandle> thread_;
  AnotherThreadObjectReference<InspectorSessionDelegate> delegate_;
}",1,inspector\main_thread_interface.cc,node.inspector.anonymous_namespace_34.ThreadSafeDelegate,InspectorSessionDelegate,false,180,ThreadSafeDelegate,10
85965,TYPE_DECL,,inspector\main_thread_interface.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector\main_thread_interface.cc,inspector\main_thread_interface.cc:<global>,,false,1,<global>,7
85984,TYPE_DECL,node.inspector.anonymous_namespace_3.DeletableWrapper<T>,,,"class DeletableWrapper : public Deletable {
 public:
  explicit DeletableWrapper(std::unique_ptr<T> object)
                        : object_(std::move(object)) {}
  ~DeletableWrapper() override = default;

  static T* get(MainThreadInterface* thread, int id) {
    return
        static_cast<DeletableWrapper<T>*>(thread->GetObject(id))->object_.get();
  }

 private:
  std::unique_ptr<T> object_;
}",1,inspector\main_thread_interface.cc,node.inspector.anonymous_namespace_3.DeletableWrapper,Deletable,false,18,DeletableWrapper,1
86035,TYPE_DECL,node.inspector.anonymous_namespace_8.CreateObjectRequest<Factory>,,,"class CreateObjectRequest : public Request {
 public:
  CreateObjectRequest(int object_id, Factory factory)
                      : object_id_(object_id), factory_(std::move(factory)) {}

  void Call(MainThreadInterface* thread) override {
    thread->AddObject(object_id_, WrapInDeletable(factory_(thread)));
  }

 private:
  int object_id_;
  Factory factory_;
}",1,inspector\main_thread_interface.cc,node.inspector.anonymous_namespace_8.CreateObjectRequest,Request,false,40,CreateObjectRequest,3
86078,TYPE_DECL,,,,"class DeleteRequest : public Request {
 public:
  explicit DeleteRequest(int object_id) : object_id_(object_id) {}

  void Call(MainThreadInterface* thread) override {
    thread->RemoveObject(object_id_);
  }

 private:
  int object_id_;
}",1,inspector\main_thread_interface.cc,node.inspector.anonymous_namespace_12.DeleteRequest,Request,false,60,DeleteRequest,5
86095,TYPE_DECL,"node.inspector.anonymous_namespace_15.CallRequest<Target,Fn>",,,"class CallRequest : public Request {
 public:
  CallRequest(int id, Fn fn) : id_(id), fn_(std::move(fn)) {}

  void Call(MainThreadInterface* thread) override {
    fn_(DeletableWrapper<Target>::get(thread, id_));
  }

 private:
  int id_;
  Fn fn_;
}",1,inspector\main_thread_interface.cc,node.inspector.anonymous_namespace_15.CallRequest,Request,false,73,CallRequest,6
86116,TYPE_DECL,node.inspector.anonymous_namespace_18.AnotherThreadObjectReference<T>,,,"class AnotherThreadObjectReference {
 public:
  AnotherThreadObjectReference(
      std::shared_ptr<MainThreadHandle> thread, int object_id)
      : thread_(thread), object_id_(object_id) {}

  template <typename Factory>
  AnotherThreadObjectReference(
      std::shared_ptr<MainThreadHandle> thread, Factory factory)
      : AnotherThreadObjectReference(thread, thread->newObjectId()) {
    thread_->Post(NewCreateRequest(object_id_, std::move(factory)));
  }
  AnotherThreadObjectReference(AnotherThreadObjectReference&) = delete;

  ~AnotherThreadObjectReference() {
    // Disappearing thread may cause a memory leak
    thread_->Post(std::make_unique<DeleteRequest>(object_id_));
  }

  template <typename Fn>
  void Call(Fn fn) const {
    using Request = CallRequest<T, Fn>;
    thread_->Post(std::unique_ptr<Request>(
        new Request(object_id_, std::move(fn))));
  }

  template <typename Arg>
  void Call(void (T::*fn)(Arg), Arg argument) const {
    Call(std::bind(Apply<Arg>, std:...",1,inspector\main_thread_interface.cc,node.inspector.anonymous_namespace_18.AnotherThreadObjectReference,,false,87,AnotherThreadObjectReference,7
86163,TYPE_DECL,"CallRequest<T, Fn>",,,"using Request = CallRequest<T, Fn>;",5,inspector\main_thread_interface.cc,Request,,false,108,Request,1
86225,TYPE_DECL,,,,"class MainThreadSessionState {
 public:
  MainThreadSessionState(MainThreadInterface* thread, bool prevent_shutdown)
                         : thread_(thread),
                           prevent_shutdown_(prevent_shutdown) {}

  static std::unique_ptr<MainThreadSessionState> Create(
      MainThreadInterface* thread, bool prevent_shutdown) {
    return std::make_unique<MainThreadSessionState>(thread, prevent_shutdown);
  }

  void Connect(std::unique_ptr<InspectorSessionDelegate> delegate) {
    Agent* agent = thread_->inspector_agent();
    if (agent != nullptr)
      session_ = agent->Connect(std::move(delegate), prevent_shutdown_);
  }

  void Dispatch(std::unique_ptr<StringBuffer> message) {
    session_->Dispatch(message->string());
  }

 private:
  MainThreadInterface* thread_;
  bool prevent_shutdown_;
  std::unique_ptr<InspectorSession> session_;
}",1,inspector\main_thread_interface.cc,node.inspector.anonymous_namespace_26.MainThreadSessionState,,false,131,MainThreadSessionState,8
86294,TYPE_DECL,,,,"class CrossThreadInspectorSession : public InspectorSession {
 public:
  CrossThreadInspectorSession(
      int id,
      std::shared_ptr<MainThreadHandle> thread,
      std::unique_ptr<InspectorSessionDelegate> delegate,
      bool prevent_shutdown)
      : state_(thread, std::bind(MainThreadSessionState::Create,
                                 std::placeholders::_1,
                                 prevent_shutdown)) {
    state_.Call(&MainThreadSessionState::Connect, std::move(delegate));
  }

  void Dispatch(const StringView& message) override {
    state_.Call(&MainThreadSessionState::Dispatch,
                StringBuffer::create(message));
  }

 private:
  AnotherThreadObjectReference<MainThreadSessionState> state_;
}",1,inspector\main_thread_interface.cc,node.inspector.anonymous_namespace_31.CrossThreadInspectorSession,InspectorSession,false,158,CrossThreadInspectorSession,9
86785,TYPE_DECL,,inspector\main_thread_interface.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector\main_thread_interface.hpp,inspector\main_thread_interface.hpp:<global>,,false,1,<global>,7
86789,TYPE_DECL,,,,class StringBuffer,1,inspector\main_thread_interface.hpp,v8_inspector.StringBuffer,,false,17,StringBuffer,1
86790,TYPE_DECL,,,,class StringView,1,inspector\main_thread_interface.hpp,v8_inspector.StringView,,false,18,StringView,2
86793,TYPE_DECL,,,,class MainThreadInterface,1,inspector\main_thread_interface.hpp,node.inspector.MainThreadInterface,,false,23,MainThreadInterface,1
86794,TYPE_DECL,,,,"class Request {
 public:
  virtual void Call(MainThreadInterface*) = 0;
  virtual ~Request() = default;
}",1,inspector\main_thread_interface.hpp,node.inspector.Request,,false,25,Request,2
86804,TYPE_DECL,,,,"class Deletable {
 public:
  virtual ~Deletable() = default;
}",1,inspector\main_thread_interface.hpp,node.inspector.Deletable,,false,31,Deletable,3
86814,TYPE_DECL,ANY,,,using MessageQueue = std::deque<std::unique_ptr<Request>>;,1,inspector\main_thread_interface.hpp,MessageQueue,,false,39,MessageQueue,5
86815,TYPE_DECL,,,,"class MainThreadHandle : public std::enable_shared_from_this<MainThreadHandle> {
 public:
  explicit MainThreadHandle(MainThreadInterface* main_thread)
                            : main_thread_(main_thread) {
  }
  ~MainThreadHandle() {
    Mutex::ScopedLock scoped_lock(block_lock_);
    CHECK_NULL(main_thread_);  // main_thread_ should have called Reset
  }
  std::unique_ptr<InspectorSession> Connect(
      std::unique_ptr<InspectorSessionDelegate> delegate,
      bool prevent_shutdown);
  int newObjectId() {
    return ++next_object_id_;
  }
  bool Post(std::unique_ptr<Request> request);
  std::unique_ptr<InspectorSessionDelegate> MakeDelegateThreadSafe(
      std::unique_ptr<InspectorSessionDelegate> delegate);
  bool Expired();

 private:
  void Reset();

  MainThreadInterface* main_thread_;
  Mutex block_lock_;
  int next_session_id_ = 0;
  std::atomic_int next_object_id_ = {1};

  friend class MainThreadInterface;
}",1,inspector\main_thread_interface.hpp,node.inspector.MainThreadHandle,std.enable_shared_from_this<MainThreadHandle>,false,41,MainThreadHandle,6
86865,TYPE_DECL,,,,friend class MainThreadInterface,3,inspector\main_thread_interface.hpp,node.inspector.MainThreadHandle.MainThreadInterface,,false,69,MainThreadInterface,13
86877,TYPE_DECL,,,,"class MainThreadInterface :
    public std::enable_shared_from_this<MainThreadInterface> {
 public:
  explicit MainThreadInterface(Agent* agent);
  ~MainThreadInterface();

  void DispatchMessages();
  void Post(std::unique_ptr<Request> request);
  bool WaitForFrontendEvent();
  std::shared_ptr<MainThreadHandle> GetHandle();
  Agent* inspector_agent() {
    return agent_;
  }
  void AddObject(int handle, std::unique_ptr<Deletable> object);
  Deletable* GetObject(int id);
  Deletable* GetObjectIfExists(int id);
  void RemoveObject(int handle);

 private:
  MessageQueue requests_;
  Mutex requests_lock_;   // requests_ live across threads
  // This queue is to maintain the order of the messages for the cases
  // when we reenter the DispatchMessages function.
  MessageQueue dispatching_message_queue_;
  bool dispatching_messages_ = false;
  ConditionVariable incoming_message_cond_;
  // Used from any thread
  Agent* const agent_;
  std::shared_ptr<MainThreadHandle> handle_;
  std::uno...",1,inspector\main_thread_interface.hpp,node.inspector.MainThreadInterface,std.enable_shared_from_this<MainThreadInterface>,false,72,MainThreadInterface,7
86958,TYPE_DECL,,inspector\node_string.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector\node_string.cc,inspector\node_string.cc:<global>,,false,1,<global>,6
87478,TYPE_DECL,,inspector\node_string.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector\node_string.hpp,inspector\node_string.hpp:<global>,,false,1,<global>,6
87484,TYPE_DECL,,,,class Value,1,inspector\node_string.hpp,node.inspector.protocol.Value,,false,17,Value,1
87485,TYPE_DECL,ANY,,,using String = std::string;,1,inspector\node_string.hpp,String,,false,19,String,2
87486,TYPE_DECL,ANY,,,using StringBuilder = std::ostringstream;,1,inspector\node_string.hpp,StringBuilder,,false,20,StringBuilder,3
87487,TYPE_DECL,ANY,,,using ProtocolMessage = std::string;,1,inspector\node_string.hpp,ProtocolMessage,,false,21,ProtocolMessage,4
87670,TYPE_DECL,,,,"class Binary {
 public:
  const uint8_t* data() const { UNREACHABLE(); }
  size_t size() const { UNREACHABLE(); }
  String toBase64() const { UNREACHABLE(); }
  static Binary fromBase64(const std::string_view base64, bool* success) {
    UNREACHABLE();
  }
  static Binary fromSpan(const uint8_t* data, size_t size) { UNREACHABLE(); }
}",1,inspector\node_string.hpp,node.inspector.protocol.Binary,,false,95,Binary,6
87708,TYPE_DECL,,inspector\runtime_agent.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector\runtime_agent.cc,inspector\runtime_agent.cc:<global>,,false,1,<global>,4
87779,TYPE_DECL,,inspector\runtime_agent.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector\runtime_agent.hpp,inspector\runtime_agent.hpp:<global>,,false,1,<global>,3
87783,TYPE_DECL,,,,class Environment,1,inspector\runtime_agent.hpp,node.Environment,,false,8,Environment,1
87786,TYPE_DECL,,,,"class RuntimeAgent : public NodeRuntime::Backend {
 public:
  RuntimeAgent();

  void Wire(UberDispatcher* dispatcher);

  DispatchResponse notifyWhenWaitingForDisconnect(bool enabled) override;

  bool notifyWaitingForDisconnect();

 private:
  std::shared_ptr<NodeRuntime::Frontend> frontend_;
  bool notify_when_waiting_for_disconnect_;
}",1,inspector\runtime_agent.hpp,node.inspector.protocol.RuntimeAgent,NodeRuntime.Backend,false,13,RuntimeAgent,1
87823,TYPE_DECL,,inspector\tracing_agent.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector\tracing_agent.cc,inspector\tracing_agent.cc:<global>,,false,1,<global>,8
87830,TYPE_DECL,,,,"class DeletableFrontendWrapper : public Deletable {
 public:
  explicit DeletableFrontendWrapper(
      std::weak_ptr<NodeTracing::Frontend> frontend)
      : frontend_(frontend) {}

  // This should only be called from the main thread, meaning frontend should
  // not be destroyed concurrently.
  NodeTracing::Frontend* get() { return frontend_.lock().get(); }

 private:
  std::weak_ptr<NodeTracing::Frontend> frontend_;
}",1,inspector\tracing_agent.cc,node.inspector.protocol.anonymous_namespace_2.DeletableFrontendWrapper,Deletable,false,17,DeletableFrontendWrapper,1
87849,TYPE_DECL,,,,"class CreateFrontendWrapperRequest : public Request {
 public:
  CreateFrontendWrapperRequest(int object_id,
                               std::weak_ptr<NodeTracing::Frontend> frontend)
      : object_id_(object_id) {
    frontend_wrapper_ = std::make_unique<DeletableFrontendWrapper>(frontend);
  }

  void Call(MainThreadInterface* thread) override {
    thread->AddObject(object_id_, std::move(frontend_wrapper_));
  }

 private:
  int object_id_;
  std::unique_ptr<DeletableFrontendWrapper> frontend_wrapper_;
}",1,inspector\tracing_agent.cc,node.inspector.protocol.anonymous_namespace_5.CreateFrontendWrapperRequest,Request,false,31,CreateFrontendWrapperRequest,2
87882,TYPE_DECL,,,,"class DestroyFrontendWrapperRequest : public Request {
 public:
  explicit DestroyFrontendWrapperRequest(int object_id)
      : object_id_(object_id) {}

  void Call(MainThreadInterface* thread) override {
    thread->RemoveObject(object_id_);
  }

 private:
  int object_id_;
}",1,inspector\tracing_agent.cc,node.inspector.protocol.anonymous_namespace_8.DestroyFrontendWrapperRequest,Request,false,48,DestroyFrontendWrapperRequest,3
87899,TYPE_DECL,,,,"class SendMessageRequest : public Request {
 public:
  explicit SendMessageRequest(int object_id, const std::string& message)
      : object_id_(object_id), message_(message) {}

  void Call(MainThreadInterface* thread) override {
    DeletableFrontendWrapper* frontend_wrapper =
        static_cast<DeletableFrontendWrapper*>(
            thread->GetObjectIfExists(object_id_));
    if (frontend_wrapper == nullptr) return;
    auto frontend = frontend_wrapper->get();
    if (frontend != nullptr) {
      frontend->sendRawJSONNotification(message_);
    }
  }

 private:
  int object_id_;
  std::string message_;
}",1,inspector\tracing_agent.cc,node.inspector.protocol.anonymous_namespace_11.SendMessageRequest,Request,false,61,SendMessageRequest,4
87946,TYPE_DECL,,,,"class InspectorTraceWriter : public node::tracing::AsyncTraceWriter {
 public:
  explicit InspectorTraceWriter(int frontend_object_id,
                                std::shared_ptr<MainThreadHandle> main_thread)
      : frontend_object_id_(frontend_object_id), main_thread_(main_thread) {}

  void AppendTraceEvent(
      v8::platform::tracing::TraceObject* trace_event) override {
    if (!json_writer_)
      json_writer_.reset(TraceWriter::CreateJSONTraceWriter(stream_, ""value""));
    json_writer_->AppendTraceEvent(trace_event);
  }

  void Flush(bool) override {
    if (!json_writer_)
      return;
    json_writer_.reset();
    std::ostringstream result(
        ""{\""method\"":\""NodeTracing.dataCollected\"",\""params\"":"",
        std::ostringstream::ate);
    result << stream_.str();
    result << ""}"";
    main_thread_->Post(std::make_unique<SendMessageRequest>(frontend_object_id_,
                                                            result.str()));
    stream_.str("""");
  }

 p...",1,inspector\tracing_agent.cc,node.inspector.protocol.anonymous_namespace_14.InspectorTraceWriter,node.tracing.AsyncTraceWriter,false,82,InspectorTraceWriter,5
88394,TYPE_DECL,,inspector\tracing_agent.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector\tracing_agent.hpp,inspector\tracing_agent.hpp:<global>,,false,1,<global>,4
88398,TYPE_DECL,,,,class Environment,1,inspector\tracing_agent.hpp,node.Environment,,false,10,Environment,1
88400,TYPE_DECL,,,,class MainThreadHandle,1,inspector\tracing_agent.hpp,node.inspector.MainThreadHandle,,false,13,MainThreadHandle,1
88402,TYPE_DECL,,,,"class TracingAgent : public NodeTracing::Backend {
 public:
  explicit TracingAgent(Environment*, std::shared_ptr<MainThreadHandle>);
  ~TracingAgent() override;

  void Wire(UberDispatcher* dispatcher);

  DispatchResponse start(
      std::unique_ptr<protocol::NodeTracing::TraceConfig> traceConfig) override;
  DispatchResponse stop() override;
  DispatchResponse getCategories(
      std::unique_ptr<protocol::Array<String>>* categories) override;

 private:
  Environment* env_;
  std::shared_ptr<MainThreadHandle> main_thread_;
  tracing::AgentWriterHandle trace_writer_;
  int frontend_object_id_ = 0;
  std::shared_ptr<NodeTracing::Frontend> frontend_;
}",1,inspector\tracing_agent.hpp,node.inspector.protocol.TracingAgent,NodeTracing.Backend,false,17,TracingAgent,1
88454,TYPE_DECL,,inspector\worker_agent.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector\worker_agent.cc,inspector\worker_agent.cc:<global>,,false,1,<global>,5
88460,TYPE_DECL,,,,"class NodeWorkers
    : public std::enable_shared_from_this<NodeWorkers> {
 public:
  explicit NodeWorkers(std::weak_ptr<NodeWorker::Frontend> frontend,
                      std::shared_ptr<MainThreadHandle> thread)
                      : frontend_(frontend), thread_(thread) {}
  void WorkerCreated(const std::string& title,
                     const std::string& url,
                     bool waiting,
                     std::shared_ptr<MainThreadHandle> target);
  void Receive(const std::string& id, const std::string& message);
  void Send(const std::string& id, const std::string& message);
  void Detached(const std::string& id);

 private:
  std::weak_ptr<NodeWorker::Frontend> frontend_;
  std::shared_ptr<MainThreadHandle> thread_;
  std::unordered_map<std::string, std::unique_ptr<InspectorSession>> sessions_;
  int next_target_id_ = 0;
}",1,inspector\worker_agent.cc,node.inspector.protocol.NodeWorkers,std.enable_shared_from_this<NodeWorkers>,false,11,NodeWorkers,1
88504,TYPE_DECL,,,,"class AgentWorkerInspectorDelegate : public WorkerDelegate {
 public:
  explicit AgentWorkerInspectorDelegate(std::shared_ptr<NodeWorkers> workers)
                                        : workers_(workers) {}

  void WorkerCreated(const std::string& title,
                     const std::string& url,
                     bool waiting,
                     std::shared_ptr<MainThreadHandle> target) override {
    workers_->WorkerCreated(title, url, waiting, target);
  }

 private:
  std::shared_ptr<NodeWorkers> workers_;
}",1,inspector\worker_agent.cc,node.inspector.protocol.anonymous_namespace_1.AgentWorkerInspectorDelegate,WorkerDelegate,false,33,AgentWorkerInspectorDelegate,1
88527,TYPE_DECL,,,,"class ParentInspectorSessionDelegate : public InspectorSessionDelegate {
 public:
  ParentInspectorSessionDelegate(const std::string& id,
                                 std::shared_ptr<NodeWorkers> workers)
                                 : id_(id), workers_(workers) {}

  ~ParentInspectorSessionDelegate() override {
    workers_->Detached(id_);
  }

  void SendMessageToFrontend(const v8_inspector::StringView& msg) override {
    std::string message = protocol::StringUtil::StringViewToUtf8(msg);
    workers_->Send(id_, message);
  }

 private:
  std::string id_;
  std::shared_ptr<NodeWorkers> workers_;
}",1,inspector\worker_agent.cc,node.inspector.protocol.anonymous_namespace_4.ParentInspectorSessionDelegate,InspectorSessionDelegate,false,49,ParentInspectorSessionDelegate,2
88908,TYPE_DECL,,inspector\worker_agent.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector\worker_agent.hpp,inspector\worker_agent.hpp:<global>,,false,1,<global>,3
88913,TYPE_DECL,,,,class WorkerManagerEventHandle,1,inspector\worker_agent.hpp,node.inspector.WorkerManagerEventHandle,,false,10,WorkerManagerEventHandle,1
88914,TYPE_DECL,,,,class WorkerManager,1,inspector\worker_agent.hpp,node.inspector.WorkerManager,,false,11,WorkerManager,2
88916,TYPE_DECL,,,,class NodeWorkers,1,inspector\worker_agent.hpp,node.inspector.protocol.NodeWorkers,,false,14,NodeWorkers,1
88917,TYPE_DECL,,,,"class WorkerAgent : public NodeWorker::Backend {
 public:
  explicit WorkerAgent(std::weak_ptr<WorkerManager> manager);
  ~WorkerAgent() override = default;

  void Wire(UberDispatcher* dispatcher);

  DispatchResponse sendMessageToWorker(const String& message,
                                       const String& sessionId) override;

  DispatchResponse enable(bool waitForDebuggerOnStart) override;
  DispatchResponse disable() override;
  DispatchResponse detach(const String& sessionId) override;

 private:
  std::shared_ptr<NodeWorker::Frontend> frontend_;
  std::weak_ptr<WorkerManager> manager_;
  std::unique_ptr<WorkerManagerEventHandle> event_handle_;
  std::shared_ptr<NodeWorkers> workers_;
}",1,inspector\worker_agent.hpp,node.inspector.protocol.WorkerAgent,NodeWorker.Backend,false,16,WorkerAgent,2
88966,TYPE_DECL,,inspector\worker_inspector.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector\worker_inspector.cc,inspector\worker_inspector.cc:<global>,,false,1,<global>,5
88972,TYPE_DECL,,,,"class WorkerStartedRequest : public Request {
 public:
  WorkerStartedRequest(
      uint64_t id,
      const std::string& url,
      std::shared_ptr<node::inspector::MainThreadHandle> worker_thread,
      bool waiting,
      const std::string& name)
      : id_(id),
        info_(BuildWorkerTitle(id, name), url, worker_thread),
        waiting_(waiting) {}
  void Call(MainThreadInterface* thread) override {
    auto manager = thread->inspector_agent()->GetWorkerManager();
    manager->WorkerStarted(id_, info_, waiting_);
  }

 private:
  static std::string BuildWorkerTitle(int id, const std::string& name) {
    return ""[worker "" + std::to_string(id) + ""]"" +
           (name == """" ? """" : "" "" + name);
  }

  uint64_t id_;
  WorkerInfo info_;
  bool waiting_;
}",1,inspector\worker_inspector.cc,node.inspector.anonymous_namespace_1.WorkerStartedRequest,Request,false,11,WorkerStartedRequest,1
89058,TYPE_DECL,,,,"class WorkerFinishedRequest : public Request {
 public:
  explicit WorkerFinishedRequest(uint64_t worker_id) : worker_id_(worker_id) {}

  void Call(MainThreadInterface* thread) override {
    thread->inspector_agent()->GetWorkerManager()->WorkerFinished(worker_id_);
  }

 private:
  uint64_t worker_id_;
}",1,inspector\worker_inspector.cc,node.inspector.anonymous_namespace_6.WorkerFinishedRequest,Request,false,45,WorkerFinishedRequest,3
89331,TYPE_DECL,,inspector\worker_inspector.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector\worker_inspector.hpp,inspector\worker_inspector.hpp:<global>,,false,1,<global>,5
89336,TYPE_DECL,,,,class InspectorSession,1,inspector\worker_inspector.hpp,node.inspector.InspectorSession,,false,15,InspectorSession,1
89337,TYPE_DECL,,,,class InspectorSessionDelegate,1,inspector\worker_inspector.hpp,node.inspector.InspectorSessionDelegate,,false,16,InspectorSessionDelegate,2
89338,TYPE_DECL,,,,class MainThreadHandle,1,inspector\worker_inspector.hpp,node.inspector.MainThreadHandle,,false,17,MainThreadHandle,3
89339,TYPE_DECL,,,,class WorkerManager,1,inspector\worker_inspector.hpp,node.inspector.WorkerManager,,false,18,WorkerManager,4
89340,TYPE_DECL,,,,"class WorkerDelegate {
 public:
  virtual void WorkerCreated(const std::string& title,
                             const std::string& url,
                             bool waiting,
                             std::shared_ptr<MainThreadHandle> worker) = 0;
  virtual ~WorkerDelegate() = default;
}",1,inspector\worker_inspector.hpp,node.inspector.WorkerDelegate,,false,20,WorkerDelegate,5
89353,TYPE_DECL,,,,"class WorkerManagerEventHandle {
 public:
  explicit WorkerManagerEventHandle(std::shared_ptr<WorkerManager> manager,
                                    int id)
                                    : manager_(manager), id_(id) {}
  void SetWaitOnStart(bool wait_on_start);
  ~WorkerManagerEventHandle();

 private:
  std::shared_ptr<WorkerManager> manager_;
  int id_;
}",1,inspector\worker_inspector.hpp,node.inspector.WorkerManagerEventHandle,,false,29,WorkerManagerEventHandle,6
89371,TYPE_DECL,,,,"struct WorkerInfo {
  WorkerInfo(const std::string& target_title,
             const std::string& target_url,
             std::shared_ptr<MainThreadHandle> worker_thread)
             : title(target_title),
               url(target_url),
               worker_thread(worker_thread) {}
  std::string title;
  std::string url;
  std::shared_ptr<MainThreadHandle> worker_thread;
}",1,inspector\worker_inspector.hpp,node.inspector.WorkerInfo,,false,42,WorkerInfo,7
89382,TYPE_DECL,,,,"class ParentInspectorHandle {
 public:
  ParentInspectorHandle(uint64_t id,
                        const std::string& url,
                        std::shared_ptr<MainThreadHandle> parent_thread,
                        bool wait_for_connect,
                        const std::string& name);
  ~ParentInspectorHandle();
  std::unique_ptr<ParentInspectorHandle> NewParentInspectorHandle(
      uint64_t thread_id, const std::string& url, const std::string& name) {
    return std::make_unique<ParentInspectorHandle>(
        thread_id, url, parent_thread_, wait_, name);
  }
  void WorkerStarted(std::shared_ptr<MainThreadHandle> worker_thread,
                     bool waiting);
  bool WaitForConnect() {
    return wait_;
  }
  const std::string& url() const { return url_; }
  std::unique_ptr<inspector::InspectorSession> Connect(
      std::unique_ptr<inspector::InspectorSessionDelegate> delegate,
      bool prevent_shutdown);

 private:
  uint64_t id_;
  std::string url_;
  std::shared_p...",1,inspector\worker_inspector.hpp,node.inspector.ParentInspectorHandle,,false,54,ParentInspectorHandle,8
89446,TYPE_DECL,,,,"class WorkerManager : public std::enable_shared_from_this<WorkerManager> {
 public:
  explicit WorkerManager(std::shared_ptr<MainThreadHandle> thread)
                         : thread_(thread) {}

  std::unique_ptr<ParentInspectorHandle> NewParentHandle(
      uint64_t thread_id, const std::string& url, const std::string& name);
  void WorkerStarted(uint64_t session_id, const WorkerInfo& info, bool waiting);
  void WorkerFinished(uint64_t session_id);
  std::unique_ptr<WorkerManagerEventHandle> SetAutoAttach(
      std::unique_ptr<WorkerDelegate> attach_delegate);
  void SetWaitOnStartForDelegate(int id, bool wait);
  void RemoveAttachDelegate(int id);
  std::shared_ptr<MainThreadHandle> MainThread() {
    return thread_;
  }

 private:
  std::shared_ptr<MainThreadHandle> thread_;
  std::unordered_map<uint64_t, WorkerInfo> children_;
  std::unordered_map<int, std::unique_ptr<WorkerDelegate>> delegates_;
  // If any one needs it, workers stop for all
  std::unordered_set<int> delega...",1,inspector\worker_inspector.hpp,node.inspector.WorkerManager,std.enable_shared_from_this<WorkerManager>,false,85,WorkerManager,9
89514,TYPE_DECL,,,,"class NodeInspectorClient : public V8InspectorClient {
 public:
  explicit NodeInspectorClient(node::Environment* env, bool is_main)
      : env_(env), is_main_(is_main) {
    client_ = V8Inspector::create(env->isolate(), this);
    // TODO(bnoordhuis) Make name configurable from src/node.cc.
    std::string name =
        is_main_ ? GetHumanReadableProcessName() : GetWorkerLabel(env);
    ContextInfo info(name);
    info.is_default = true;
    contextCreated(env->context(), info);
  }

  void runMessageLoopOnPause(int context_group_id) override {
    waiting_for_resume_ = true;
    runMessageLoop();
  }

  void waitForSessionsDisconnect() {
    waiting_for_sessions_disconnect_ = true;
    runMessageLoop();
  }

  void waitForFrontend() {
    waiting_for_frontend_ = true;
    runMessageLoop();
  }

  void maxAsyncCallStackDepthChanged(int depth) override {
    if (waiting_for_sessions_disconnect_) {
      // V8 isolate is mostly done and is only letting Inspector protocol
      // c...",1,inspector_agent.cc,node.inspector.NodeInspectorClient,V8InspectorClient,false,399,NodeInspectorClient,2
89527,TYPE_DECL,,inspector_agent.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector_agent.cc,inspector_agent.cc:<global>,,false,1,<global>,29
89717,TYPE_DECL,,,,"class ChannelImpl final : public v8_inspector::V8Inspector::Channel,
                          public protocol::FrontendChannel {
 public:
  explicit ChannelImpl(Environment* env,
                       const std::unique_ptr<V8Inspector>& inspector,
                       std::shared_ptr<WorkerManager> worker_manager,
                       std::unique_ptr<InspectorSessionDelegate> delegate,
                       std::shared_ptr<MainThreadHandle> main_thread_,
                       bool prevent_shutdown)
      : delegate_(std::move(delegate)), prevent_shutdown_(prevent_shutdown),
        retaining_context_(false) {
    session_ = inspector->connect(CONTEXT_GROUP_ID,
                                  this,
                                  StringView(),
                                  V8Inspector::ClientTrustLevel::kFullyTrusted);
    node_dispatcher_ = std::make_unique<protocol::UberDispatcher>(this);
    tracing_agent_ =
        std::make_unique<protocol::TracingAgent>(env, mai...",1,inspector_agent.cc,node.inspector.anonymous_namespace_17.ChannelImpl,v8_inspector.V8Inspector.Channel;protocol.FrontendChannel,false,212,ChannelImpl,10
90058,TYPE_DECL,ANY,,,using Serializable = protocol::Serializable;,3,inspector_agent.cc,Serializable,,false,317,Serializable,13
90097,TYPE_DECL,,,,"class SameThreadInspectorSession : public InspectorSession {
 public:
  SameThreadInspectorSession(
      int session_id, std::shared_ptr<NodeInspectorClient> client)
      : session_id_(session_id), client_(client) {}
  ~SameThreadInspectorSession() override;
  void Dispatch(const v8_inspector::StringView& message) override;

 private:
  int session_id_;
  std::weak_ptr<NodeInspectorClient> client_;
}",1,inspector_agent.cc,node.inspector.anonymous_namespace_33.SameThreadInspectorSession,InspectorSession,false,344,SameThreadInspectorSession,11
92038,TYPE_DECL,,inspector_agent.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector_agent.hpp,inspector_agent.hpp:<global>,,false,1,<global>,5
92064,TYPE_DECL,,,,"class RequestQueueData {
 public:
  using MessageQueue = std::deque<RequestToServer>;

  explicit RequestQueueData(uv_loop_t* loop)
                            : handle_(std::make_shared<RequestQueue>(this)) {
    int err = uv_async_init(loop, &async_, [](uv_async_t* async) {
      RequestQueueData* wrapper =
          node::ContainerOf(&RequestQueueData::async_, async);
      wrapper->DoDispatch();
    });
    CHECK_EQ(0, err);
  }

  static void CloseAndFree(RequestQueueData* queue);

  void Post(int session_id,
            TransportAction action,
            std::unique_ptr<StringBuffer> message) {
    Mutex::ScopedLock scoped_lock(state_lock_);
    bool notify = messages_.empty();
    messages_.emplace_back(action, session_id, std::move(message));
    if (notify) {
      CHECK_EQ(0, uv_async_send(&async_));
      incoming_message_cond_.Broadcast(scoped_lock);
    }
  }

  void Wait() {
    Mutex::ScopedLock scoped_lock(state_lock_);
    if (messages_.empty()) {
      incoming_me...",1,inspector_io.cc,node.inspector.anonymous_namespace_9.RequestQueueData,,false,95,RequestQueueData,5
92091,TYPE_DECL,,inspector_io.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector_io.cc,inspector_io.cc:<global>,,false,1,<global>,17
92130,TYPE_DECL,,,,"enum class TransportAction { kKill, kSendMessage, kStop }",1,inspector_io.cc,node.inspector.anonymous_namespace_3.TransportAction,,false,27,TransportAction,1
92243,TYPE_DECL,,,,"class RequestToServer {
 public:
  RequestToServer(TransportAction action,
                  int session_id,
                  std::unique_ptr<v8_inspector::StringBuffer> message)
                  : action_(action),
                    session_id_(session_id),
                    message_(std::move(message)) {}

  void Dispatch(InspectorSocketServer* server) const {
    switch (action_) {
      case TransportAction::kKill:
        server->TerminateConnections();
        [[fallthrough]];
      case TransportAction::kStop:
        server->Stop();
        break;
      case TransportAction::kSendMessage:
        server->Send(
            session_id_,
            protocol::StringUtil::StringViewToUtf8(message_->string()));
        break;
    }
  }

 private:
  TransportAction action_;
  int session_id_;
  std::unique_ptr<v8_inspector::StringBuffer> message_;
}",1,inspector_io.cc,node.inspector.anonymous_namespace_6.RequestToServer,,false,64,RequestToServer,4
92299,TYPE_DECL,ANY,,,using MessageQueue = std::deque<RequestToServer>;,3,inspector_io.cc,MessageQueue,,false,97,MessageQueue,1
92445,TYPE_DECL,,,,"class RequestQueue {
 public:
  explicit RequestQueue(RequestQueueData* data) : data_(data) {}

  void Reset() {
    Mutex::ScopedLock scoped_lock(lock_);
    data_ = nullptr;
  }

  void Post(int session_id,
            TransportAction action,
            std::unique_ptr<StringBuffer> message) {
    Mutex::ScopedLock scoped_lock(lock_);
    if (data_ != nullptr)
      data_->Post(session_id, action, std::move(message));
  }

  bool Expired() {
    Mutex::ScopedLock scoped_lock(lock_);
    return data_ == nullptr;
  }

 private:
  RequestQueueData* data_;
  Mutex lock_;
}",1,inspector_io.cc,node.inspector.RequestQueue,,false,165,RequestQueue,2
92500,TYPE_DECL,,,,"class IoSessionDelegate : public InspectorSessionDelegate {
 public:
  explicit IoSessionDelegate(std::shared_ptr<RequestQueue> queue, int id)
                             : request_queue_(queue), id_(id) { }
  void SendMessageToFrontend(const v8_inspector::StringView& message) override {
    request_queue_->Post(id_, TransportAction::kSendMessage,
                         StringBuffer::create(message));
  }

 private:
  std::shared_ptr<RequestQueue> request_queue_;
  int id_;
}",1,inspector_io.cc,node.inspector.IoSessionDelegate,InspectorSessionDelegate,false,192,IoSessionDelegate,3
92527,TYPE_DECL,,,,"class InspectorIoDelegate: public node::inspector::SocketServerDelegate {
 public:
  InspectorIoDelegate(std::shared_ptr<RequestQueueData> queue,
                      std::shared_ptr<MainThreadHandle> main_thread,
                      const std::string& target_id,
                      const std::string& script_path,
                      const std::string& script_name);
  ~InspectorIoDelegate() override = default;

  void StartSession(int session_id, const std::string& target_id) override;
  void MessageReceived(int session_id, const std::string& message) override;
  void EndSession(int session_id) override;

  std::vector<std::string> GetTargetIds() override;
  std::string GetTargetTitle(const std::string& id) override;
  std::string GetTargetUrl(const std::string& id) override;
  void AssignServer(InspectorSocketServer* server) override {
    request_queue_->SetServer(server);
  }

 private:
  std::shared_ptr<RequestQueueData> request_queue_;
  std::shared_ptr<MainThreadHandle>...",1,inspector_io.cc,node.inspector.InspectorIoDelegate,node.inspector.SocketServerDelegate,false,208,InspectorIoDelegate,4
93002,TYPE_DECL,,inspector_io.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector_io.hpp,inspector_io.hpp:<global>,,false,1,<global>,6
93027,TYPE_DECL,,inspector_js_api.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector_js_api.cc,inspector_js_api.cc:<global>,,false,1,<global>,11
93055,TYPE_DECL,,,,"struct LocalConnection {
  static std::unique_ptr<InspectorSession> Connect(
      Agent* inspector, std::unique_ptr<InspectorSessionDelegate> delegate) {
    return inspector->Connect(std::move(delegate), false);
  }

  static Local<String> GetClassName(Environment* env) {
    return FIXED_ONE_BYTE_STRING(env->isolate(), ""Connection"");
  }
}",1,inspector_js_api.cc,node.inspector.anonymous_namespace_18.LocalConnection,,false,41,LocalConnection,2
93085,TYPE_DECL,,,,"struct MainThreadConnection {
  static std::unique_ptr<InspectorSession> Connect(
      Agent* inspector, std::unique_ptr<InspectorSessionDelegate> delegate) {
    return inspector->ConnectToMainThread(std::move(delegate), true);
  }

  static Local<String> GetClassName(Environment* env) {
    return FIXED_ONE_BYTE_STRING(env->isolate(), ""MainThreadConnection"");
  }
}",1,inspector_js_api.cc,node.inspector.anonymous_namespace_21.MainThreadConnection,,false,52,MainThreadConnection,3
93115,TYPE_DECL,node.inspector.anonymous_namespace_24.JSBindingsConnection<ConnectionType>,,,"class JSBindingsConnection : public AsyncWrap {
 public:
  class JSBindingsSessionDelegate : public InspectorSessionDelegate {
   public:
    JSBindingsSessionDelegate(Environment* env,
                              JSBindingsConnection* connection)
                              : env_(env),
                                connection_(connection) {
    }

    void SendMessageToFrontend(const v8_inspector::StringView& message)
        override {
      Isolate* isolate = env_->isolate();
      HandleScope handle_scope(isolate);
      Context::Scope context_scope(env_->context());
      Local<Value> argument;
      if (!String::NewFromTwoByte(isolate, message.characters16(),
                                  NewStringType::kNormal,
                                  message.length()).ToLocal(&argument)) return;
      connection_->OnMessage(argument);
    }

   private:
    Environment* env_;
    BaseObjectPtr<JSBindingsConnection> connection_;
  };

  JSBindingsConnection(Environment* e...",1,inspector_js_api.cc,node.inspector.anonymous_namespace_24.JSBindingsConnection,AsyncWrap,false,64,JSBindingsConnection,4
93116,TYPE_DECL,,,,"class JSBindingsSessionDelegate : public InspectorSessionDelegate {
   public:
    JSBindingsSessionDelegate(Environment* env,
                              JSBindingsConnection* connection)
                              : env_(env),
                                connection_(connection) {
    }

    void SendMessageToFrontend(const v8_inspector::StringView& message)
        override {
      Isolate* isolate = env_->isolate();
      HandleScope handle_scope(isolate);
      Context::Scope context_scope(env_->context());
      Local<Value> argument;
      if (!String::NewFromTwoByte(isolate, message.characters16(),
                                  NewStringType::kNormal,
                                  message.length()).ToLocal(&argument)) return;
      connection_->OnMessage(argument);
    }

   private:
    Environment* env_;
    BaseObjectPtr<JSBindingsConnection> connection_;
  }",3,inspector_js_api.cc,node.inspector.anonymous_namespace_25.JSBindingsConnection.JSBindingsSessionDelegate,InspectorSessionDelegate,false,66,JSBindingsSessionDelegate,1
94495,TYPE_DECL,,inspector_profiler.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector_profiler.cc,inspector_profiler.cc:<global>,,false,1,<global>,14
96133,TYPE_DECL,,inspector_profiler.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector_profiler.hpp,inspector_profiler.hpp:<global>,,false,1,<global>,3
96147,TYPE_DECL,,inspector_socket.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector_socket.cc,inspector_socket.cc:<global>,,false,1,<global>,9
96169,TYPE_DECL,,,,"class TcpHolder {
 public:
  static void DisconnectAndDispose(TcpHolder* holder);
  using Pointer = DeleteFnPtr<TcpHolder, DisconnectAndDispose>;

  static Pointer Accept(uv_stream_t* server,
                        InspectorSocket::DelegatePointer delegate);
  void SetHandler(ProtocolHandler* handler);
  int WriteRaw(const std::vector<char>& buffer, uv_write_cb write_cb);
  uv_tcp_t* tcp() {
    return &tcp_;
  }
  InspectorSocket::Delegate* delegate();

 private:
  static TcpHolder* From(void* handle) {
    return node::ContainerOf(&TcpHolder::tcp_,
                             reinterpret_cast<uv_tcp_t*>(handle));
  }
  static void OnClosed(uv_handle_t* handle);
  static void OnDataReceivedCb(uv_stream_t* stream, ssize_t nread,
                               const uv_buf_t* buf);
  explicit TcpHolder(InspectorSocket::DelegatePointer delegate);
  ~TcpHolder() = default;
  void ReclaimUvBuf(const uv_buf_t* buf, ssize_t read);

  uv_tcp_t tcp_;
  const InspectorSocket::DelegatePoint...",1,inspector_socket.cc,node.inspector.TcpHolder,,false,21,TcpHolder,1
96175,TYPE_DECL,"DeleteFnPtr<TcpHolder, DisconnectAndDispose>",,,"using Pointer = DeleteFnPtr<TcpHolder, DisconnectAndDispose>;",3,inspector_socket.cc,Pointer,,false,24,Pointer,2
96252,TYPE_DECL,,,,"class ProtocolHandler {
 public:
  ProtocolHandler(InspectorSocket* inspector, TcpHolder::Pointer tcp);

  virtual void AcceptUpgrade(const std::string& accept_key) = 0;
  virtual void OnData(std::vector<char>* data) = 0;
  virtual void OnEof() = 0;
  virtual void Write(const std::vector<char> data) = 0;
  virtual void CancelHandshake() = 0;

  std::string GetHost() const;

  InspectorSocket* inspector() {
    return inspector_;
  }
  virtual void Shutdown() = 0;

 protected:
  virtual ~ProtocolHandler() = default;
  int WriteRaw(const std::vector<char>& buffer, uv_write_cb write_cb);
  InspectorSocket::Delegate* delegate();

  InspectorSocket* const inspector_;
  TcpHolder::Pointer tcp_;
}",1,inspector_socket.cc,node.inspector.ProtocolHandler,,false,54,ProtocolHandler,2
96313,TYPE_DECL,,,,"class WriteRequest {
 public:
  WriteRequest(ProtocolHandler* handler, const std::vector<char>& buffer)
      : handler(handler)
      , storage(buffer)
      , req(uv_write_t())
      , buf(uv_buf_init(storage.data(), storage.size())) {}

  static WriteRequest* from_write_req(uv_write_t* req) {
    return node::ContainerOf(&WriteRequest::req, req);
  }

  static void Cleanup(uv_write_t* req, int status) {
    delete WriteRequest::from_write_req(req);
  }

  ProtocolHandler* const handler;
  std::vector<char> storage;
  uv_write_t req;
  uv_buf_t buf;
}",1,inspector_socket.cc,node.inspector.anonymous_namespace_1.WriteRequest,,false,108,WriteRequest,1
96391,TYPE_DECL,,,,"enum ws_decode_result {
  FRAME_OK, FRAME_INCOMPLETE, FRAME_CLOSE, FRAME_ERROR
}",1,inspector_socket.cc,node.inspector.anonymous_namespace_8.ws_decode_result,,false,140,ws_decode_result,6
96640,TYPE_DECL,int,,,typedef int OpCode;,13,inspector_socket.cc,OpCode,,false,234,OpCode,10
97149,TYPE_DECL,,,,"class WsHandler : public ProtocolHandler {
 public:
  WsHandler(InspectorSocket* inspector, TcpHolder::Pointer tcp)
            : ProtocolHandler(inspector, std::move(tcp)),
              OnCloseSent(&WsHandler::WaitForCloseReply),
              OnCloseReceived(&WsHandler::CloseFrameReceived),
              dispose_(false) { }

  void AcceptUpgrade(const std::string& accept_key) override { }
  void CancelHandshake() override {}

  void OnEof() override {
    tcp_.reset();
    if (dispose_)
      delete this;
  }

  void OnData(std::vector<char>* data) override {
    // 1. Parse.
    int processed = 0;
    do {
      processed = ParseWsFrames(*data);
      // 2. Fix the data size & length
      if (processed > 0) {
        remove_from_beginning(data, processed);
      }
    } while (processed > 0 && !data->empty());
  }

  void Write(const std::vector<char> data) override {
    std::vector<char> output = encode_frame_hybi17(data);
    WriteRaw(output, WriteRequest::Cleanup);
  }

 pr...",1,inspector_socket.cc,node.inspector.anonymous_namespace_15.WsHandler,ProtocolHandler,false,371,WsHandler,47
97241,TYPE_DECL,void(*)(),,,using Callback = void (WsHandler::*)();,3,inspector_socket.cc,Callback,,false,416,Callback,8
97380,TYPE_DECL,,,,"class HttpEvent {
 public:
  HttpEvent(const std::string& path, bool upgrade, bool isGET,
            const std::string& ws_key, const std::string& host)
            : path(path), upgrade(upgrade), isGET(isGET), ws_key(ws_key),
              host(host) { }

  std::string path;
  bool upgrade;
  bool isGET;
  std::string ws_key;
  std::string host;
}",1,inspector_socket.cc,node.inspector.anonymous_namespace_36.HttpEvent,,false,469,HttpEvent,48
97395,TYPE_DECL,,,,"class HttpHandler : public ProtocolHandler {
 public:
  explicit HttpHandler(InspectorSocket* inspector, TcpHolder::Pointer tcp)
                       : ProtocolHandler(inspector, std::move(tcp)),
                         parsing_value_(false) {
    llhttp_init(&parser_, HTTP_REQUEST, &parser_settings);
    llhttp_settings_init(&parser_settings);
    parser_settings.on_header_field = OnHeaderField;
    parser_settings.on_header_value = OnHeaderValue;
    parser_settings.on_message_complete = OnMessageComplete;
    parser_settings.on_url = OnPath;
  }

  void AcceptUpgrade(const std::string& accept_key) override {
    char accept_string[ACCEPT_KEY_LENGTH];
    generate_accept_string(accept_key, &accept_string);
    const char accept_ws_prefix[] = ""HTTP/1.1 101 Switching Protocols\r\n""
                                    ""Upgrade: websocket\r\n""
                                    ""Connection: Upgrade\r\n""
                                    ""Sec-WebSocket-Accept: "";
    const char a...",1,inspector_socket.cc,node.inspector.anonymous_namespace_38.HttpHandler,ProtocolHandler,false,483,HttpHandler,49
98439,TYPE_DECL,,inspector_socket.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector_socket.hpp,inspector_socket.hpp:<global>,,false,1,<global>,5
98464,TYPE_DECL,,inspector_socket_server.cc:<global>,NAMESPACE_BLOCK,<global>,1,inspector_socket_server.cc,inspector_socket_server.cc:<global>,,false,1,<global>,11
98912,TYPE_DECL,,,,"class SocketSession {
 public:
  SocketSession(InspectorSocketServer* server, int id, int server_port);
  void Close() {
    ws_socket_.reset();
  }
  void Send(const std::string& message);
  void Own(InspectorSocket::Pointer ws_socket) {
    ws_socket_ = std::move(ws_socket);
  }
  int id() const { return id_; }
  int server_port() {
    return server_port_;
  }
  InspectorSocket* ws_socket() {
    return ws_socket_.get();
  }
  void Accept(const std::string& ws_key) {
    ws_socket_->AcceptUpgrade(ws_key);
  }
  void Decline() {
    ws_socket_->CancelHandshake();
  }

  class Delegate : public InspectorSocket::Delegate {
   public:
    Delegate(InspectorSocketServer* server, int session_id)
             : server_(server), session_id_(session_id) { }
    ~Delegate() override {
      server_->SessionTerminated(session_id_);
    }
    void OnHttpGet(const std::string& host, const std::string& path) override;
    void OnSocketUpgrade(const std::string& host, const std::string& path,
 ...",1,inspector_socket_server.cc,node.inspector.SocketSession,,false,154,SocketSession,4
98984,TYPE_DECL,,,,"class Delegate : public InspectorSocket::Delegate {
   public:
    Delegate(InspectorSocketServer* server, int session_id)
             : server_(server), session_id_(session_id) { }
    ~Delegate() override {
      server_->SessionTerminated(session_id_);
    }
    void OnHttpGet(const std::string& host, const std::string& path) override;
    void OnSocketUpgrade(const std::string& host, const std::string& path,
                         const std::string& ws_key) override;
    void OnWsFrame(const std::vector<char>& data) override;

   private:
    SocketSession* Session() {
      return server_->Session(session_id_);
    }

    InspectorSocketServer* server_;
    int session_id_;
  }",3,inspector_socket_server.cc,node.inspector.SocketSession.Delegate,InspectorSocket.Delegate,false,178,Delegate,10
99033,TYPE_DECL,,,,"class ServerSocket {
 public:
  explicit ServerSocket(InspectorSocketServer* server)
                        : tcp_socket_(uv_tcp_t()), server_(server) {}
  int Listen(sockaddr* addr, uv_loop_t* loop);
  void Close() {
    uv_close(reinterpret_cast<uv_handle_t*>(&tcp_socket_), FreeOnCloseCallback);
  }
  int port() const { return port_; }

 private:
  template <typename UvHandle>
  static ServerSocket* FromTcpSocket(UvHandle* socket) {
    return node::ContainerOf(&ServerSocket::tcp_socket_,
                             reinterpret_cast<uv_tcp_t*>(socket));
  }
  static void SocketConnectedCallback(uv_stream_t* tcp_socket, int status);
  static void FreeOnCloseCallback(uv_handle_t* tcp_socket_) {
    delete FromTcpSocket(tcp_socket_);
  }
  int DetectPort();
  ~ServerSocket() = default;

  uv_tcp_t tcp_socket_;
  InspectorSocketServer* server_;
  int port_ = -1;
}",1,inspector_socket_server.cc,node.inspector.ServerSocket,,false,205,ServerSocket,5
100227,TYPE_DECL,,inspector_socket_server.hpp:<global>,NAMESPACE_BLOCK,<global>,1,inspector_socket_server.hpp,inspector_socket_server.hpp:<global>,,false,1,<global>,7
100238,TYPE_DECL,,js_native_api.hpp:<global>,NAMESPACE_BLOCK,<global>,1,js_native_api.hpp,js_native_api.hpp:<global>,,false,1,<global>,4
101114,TYPE_DECL,,js_native_api_types.hpp:<global>,NAMESPACE_BLOCK,<global>,1,js_native_api_types.hpp,js_native_api_types.hpp:<global>,,false,1,<global>,3
101117,TYPE_DECL,napi_env,,,typedef struct napi_env__,1,js_native_api_types.hpp,napi_env__,,false,24,napi_env__,1
101118,TYPE_DECL,napi_env__*,,,typedef struct napi_env__* napi_env;,26,js_native_api_types.hpp,napi_env,,false,24,napi_env,2
101119,TYPE_DECL,napi_value,,,typedef struct napi_value__,1,js_native_api_types.hpp,napi_value__,,false,25,napi_value__,3
101120,TYPE_DECL,napi_value__*,,,typedef struct napi_value__* napi_value;,28,js_native_api_types.hpp,napi_value,,false,25,napi_value,4
101121,TYPE_DECL,napi_ref,,,typedef struct napi_ref__,1,js_native_api_types.hpp,napi_ref__,,false,26,napi_ref__,5
101122,TYPE_DECL,napi_ref__*,,,typedef struct napi_ref__* napi_ref;,26,js_native_api_types.hpp,napi_ref,,false,26,napi_ref,6
101123,TYPE_DECL,napi_handle_scope,,,typedef struct napi_handle_scope__,1,js_native_api_types.hpp,napi_handle_scope__,,false,27,napi_handle_scope__,7
101124,TYPE_DECL,napi_handle_scope__*,,,typedef struct napi_handle_scope__* napi_handle_scope;,35,js_native_api_types.hpp,napi_handle_scope,,false,27,napi_handle_scope,8
101125,TYPE_DECL,napi_escapable_handle_scope,,,typedef struct napi_escapable_handle_scope__,1,js_native_api_types.hpp,napi_escapable_handle_scope__,,false,28,napi_escapable_handle_scope__,9
101126,TYPE_DECL,napi_escapable_handle_scope__*,,,typedef struct napi_escapable_handle_scope__* napi_escapable_handle_scope;,45,js_native_api_types.hpp,napi_escapable_handle_scope,,false,28,napi_escapable_handle_scope,10
101127,TYPE_DECL,napi_callback_info,,,typedef struct napi_callback_info__,1,js_native_api_types.hpp,napi_callback_info__,,false,29,napi_callback_info__,11
101128,TYPE_DECL,napi_callback_info__*,,,typedef struct napi_callback_info__* napi_callback_info;,36,js_native_api_types.hpp,napi_callback_info,,false,29,napi_callback_info,12
101129,TYPE_DECL,napi_deferred,,,typedef struct napi_deferred__,1,js_native_api_types.hpp,napi_deferred__,,false,30,napi_deferred__,13
101130,TYPE_DECL,napi_deferred__*,,,typedef struct napi_deferred__* napi_deferred;,31,js_native_api_types.hpp,napi_deferred,,false,30,napi_deferred,14
101131,TYPE_DECL,,,,"typedef enum {
  napi_default = 0,
  napi_writable = 1 << 0,
  napi_enumerable = 1 << 1,
  napi_configurable = 1 << 2,

  // Used with napi_define_class to distinguish static properties
  // from instance properties. Ignored by napi_define_properties.
  napi_static = 1 << 10,

#if NAPI_VERSION >= 8
  // Default for class methods.
  napi_default_method = napi_writable | napi_configurable,

  // Default for object properties, like in JS obj[prop].
  napi_default_jsproperty = napi_writable | napi_enumerable | napi_configurable,
#endif  // NAPI_VERSION >= 8
}",1,js_native_api_types.hpp,napi_property_attributes,,false,32,napi_property_attributes,15
101165,TYPE_DECL,,,,"typedef enum {
  // ES6 types (corresponds to typeof)
  napi_undefined,
  napi_null,
  napi_boolean,
  napi_number,
  napi_string,
  napi_symbol,
  napi_object,
  napi_function,
  napi_external,
  napi_bigint,
}",1,js_native_api_types.hpp,napi_valuetype,,false,51,napi_valuetype,17
101177,TYPE_DECL,,,,"typedef enum {
  napi_int8_array,
  napi_uint8_array,
  napi_uint8_clamped_array,
  napi_int16_array,
  napi_uint16_array,
  napi_int32_array,
  napi_uint32_array,
  napi_float32_array,
  napi_float64_array,
  napi_bigint64_array,
  napi_biguint64_array,
}",1,js_native_api_types.hpp,napi_typedarray_type,,false,65,napi_typedarray_type,19
101190,TYPE_DECL,,,,"typedef enum {
  napi_ok,
  napi_invalid_arg,
  napi_object_expected,
  napi_string_expected,
  napi_name_expected,
  napi_function_expected,
  napi_number_expected,
  napi_boolean_expected,
  napi_array_expected,
  napi_generic_failure,
  napi_pending_exception,
  napi_cancelled,
  napi_escape_called_twice,
  napi_handle_scope_mismatch,
  napi_callback_scope_mismatch,
  napi_queue_full,
  napi_closing,
  napi_bigint_expected,
  napi_date_expected,
  napi_arraybuffer_expected,
  napi_detachable_arraybuffer_expected,
  napi_would_deadlock,  // unused
  napi_no_external_buffers_allowed,
  napi_cannot_run_js,
}",1,js_native_api_types.hpp,napi_status,,false,79,napi_status,21
101229,TYPE_DECL,napi_property_descriptor,,,"typedef struct {
  // One of utf8name or name should be NULL.
  const char* utf8name;
  napi_value name;

  napi_callback method;
  napi_callback getter;
  napi_callback setter;
  napi_value value;

  napi_property_attributes attributes;
  void* data;
}",1,js_native_api_types.hpp,napi_property_descriptor,,false,119,napi_property_descriptor,25
101239,TYPE_DECL,napi_extended_error_info,,,"typedef struct {
  const char* error_message;
  void* engine_reserved;
  uint32_t engine_error_code;
  napi_status error_code;
}",1,js_native_api_types.hpp,napi_extended_error_info,,false,133,napi_extended_error_info,27
101260,TYPE_DECL,,,,"class CallbackWrapperBase : public CallbackWrapper {
 public:
  inline CallbackWrapperBase(const v8::FunctionCallbackInfo<v8::Value>& cbinfo,
                             const size_t args_length)
      : CallbackWrapper(
            JsValueFromV8LocalValue(cbinfo.This()), args_length, nullptr),
        _cbinfo(cbinfo) {
    _bundle = reinterpret_cast<CallbackBundle*>(
        cbinfo.Data().As<v8::External>()->Value());
    _data = _bundle->cb_data;
  }

 protected:
  inline void InvokeCallback() {
    napi_callback_info cbinfo_wrapper = reinterpret_cast<napi_callback_info>(
        static_cast<CallbackWrapper*>(this));

    // All other pointers we need are stored in `_bundle`
    napi_env env = _bundle->env;
    napi_callback cb = _bundle->cb;

    napi_value result = nullptr;
    bool exceptionOccurred = false;
    env->CallIntoModule([&](napi_env env) { result = cb(env, cbinfo_wrapper); },
                        [&](napi_env env, v8::Local<v8::Value> value) {
                  ...",1,js_native_api_v8.cc,v8impl.anonymous_namespace_45.CallbackWrapperBase,CallbackWrapper,false,418,CallbackWrapperBase,21
101311,TYPE_DECL,,js_native_api_v8.cc:<global>,NAMESPACE_BLOCK,<global>,1,js_native_api_v8.cc,js_native_api_v8.cc:<global>,,false,1,<global>,8
101639,TYPE_DECL,,,,"class TrackedStringResource : public Finalizer, RefTracker {
 public:
  TrackedStringResource(napi_env env,
                        napi_finalize finalize_callback,
                        void* data,
                        void* finalize_hint)
      : Finalizer(env, finalize_callback, data, finalize_hint) {
    Link(finalize_callback == nullptr ? &env->reflist
                                      : &env->finalizing_reflist);
  }

 protected:
  // The only time Finalize() gets called before Dispose() is if the
  // environment is dying. Finalize() expects that the item will be unlinked,
  // so we do it here. V8 will still call Dispose() on us later, so we don't do
  // any deleting here. We just null out env_ to avoid passing a stale pointer
  // to the user's finalizer when V8 does finally call Dispose().
  void Finalize() override {
    Unlink();
    env_ = nullptr;
  }

  ~TrackedStringResource() {
    if (finalize_callback_ == nullptr) return;
    if (env_ == nullptr) {
     ...",1,js_native_api_v8.cc,v8impl.anonymous_namespace_3.TrackedStringResource,Finalizer;RefTracker,false,114,TrackedStringResource,3
101698,TYPE_DECL,,,,"class ExternalOneByteStringResource
    : public v8::String::ExternalOneByteStringResource,
      TrackedStringResource {
 public:
  ExternalOneByteStringResource(napi_env env,
                                char* string,
                                const size_t length,
                                napi_finalize finalize_callback,
                                void* finalize_hint)
      : TrackedStringResource(env, finalize_callback, string, finalize_hint),
        string_(string),
        length_(length) {}

  const char* data() const override { return string_; }
  size_t length() const override { return length_; }

 private:
  const char* string_;
  const size_t length_;
}",1,js_native_api_v8.cc,v8impl.anonymous_namespace_7.ExternalOneByteStringResource,v8.String.ExternalOneByteStringResource;TrackedStringResource,false,150,ExternalOneByteStringResource,4
101722,TYPE_DECL,,,,"class ExternalStringResource : public v8::String::ExternalStringResource,
                               TrackedStringResource {
 public:
  ExternalStringResource(napi_env env,
                         char16_t* string,
                         const size_t length,
                         napi_finalize finalize_callback,
                         void* finalize_hint)
      : TrackedStringResource(env, finalize_callback, string, finalize_hint),
        string_(reinterpret_cast<uint16_t*>(string)),
        length_(length) {}

  const uint16_t* data() const override { return string_; }
  size_t length() const override { return length_; }

 private:
  const uint16_t* string_;
  const size_t length_;
}",1,js_native_api_v8.cc,v8impl.anonymous_namespace_11.ExternalStringResource,v8.String.ExternalStringResource;TrackedStringResource,false,171,ExternalStringResource,5
102002,TYPE_DECL,,,,"class HandleScopeWrapper {
 public:
  explicit HandleScopeWrapper(v8::Isolate* isolate) : scope(isolate) {}

 private:
  v8::HandleScope scope;
}",1,js_native_api_v8.cc,v8impl.anonymous_namespace_19.HandleScopeWrapper,,false,240,HandleScopeWrapper,10
102009,TYPE_DECL,,,,"class EscapableHandleScopeWrapper {
 public:
  explicit EscapableHandleScopeWrapper(v8::Isolate* isolate)
      : scope(isolate), escape_called_(false) {}
  bool escape_called() const { return escape_called_; }
  template <typename T>
  v8::Local<T> Escape(v8::Local<T> handle) {
    escape_called_ = true;
    return scope.Escape(handle);
  }

 private:
  v8::EscapableHandleScope scope;
  bool escape_called_;
}",1,js_native_api_v8.cc,v8impl.anonymous_namespace_21.EscapableHandleScopeWrapper,,false,253,EscapableHandleScopeWrapper,11
102271,TYPE_DECL,,,,"enum UnwrapAction { KeepWrap, RemoveWrap }",1,js_native_api_v8.cc,v8impl.anonymous_namespace_31.UnwrapAction,,false,317,UnwrapAction,17
102568,TYPE_DECL,,,,"class CallbackBundle {
 public:
  // Creates an object to be made available to the static function callback
  // wrapper, used to retrieve the native callback function and data pointer.
  static inline v8::Local<v8::Value> New(napi_env env,
                                         napi_callback cb,
                                         void* data) {
    CallbackBundle* bundle = new CallbackBundle();
    bundle->cb = cb;
    bundle->cb_data = data;
    bundle->env = env;

    v8::Local<v8::Value> cbdata = v8::External::New(env->isolate, bundle);
    Reference::New(
        env, cbdata, 0, Ownership::kRuntime, Delete, bundle, nullptr);
    return cbdata;
  }
  napi_env env;   // Necessary to invoke C++ NAPI callback
  void* cb_data;  // The user provided callback data
  napi_callback cb;

 private:
  static void Delete(napi_env env, void* data, void* hint) {
    CallbackBundle* bundle = static_cast<CallbackBundle*>(data);
    delete bundle;
  }
}",1,js_native_api_v8.cc,v8impl.anonymous_namespace_33.CallbackBundle,,false,367,CallbackBundle,19
102649,TYPE_DECL,,,,"class CallbackWrapper {
 public:
  inline CallbackWrapper(napi_value this_arg, size_t args_length, void* data)
      : _this(this_arg), _args_length(args_length), _data(data) {}

  virtual napi_value GetNewTarget() = 0;
  virtual void Args(napi_value* buffer, size_t bufferlength) = 0;
  virtual void SetReturnValue(napi_value value) = 0;

  napi_value This() { return _this; }

  size_t ArgsLength() { return _args_length; }

  void* Data() { return _data; }

 protected:
  const napi_value _this;
  const size_t _args_length;
  void* _data;
}",1,js_native_api_v8.cc,v8impl.anonymous_namespace_37.CallbackWrapper,,false,397,CallbackWrapper,20
102767,TYPE_DECL,,,,"class FunctionCallbackWrapper : public CallbackWrapperBase {
 public:
  static void Invoke(const v8::FunctionCallbackInfo<v8::Value>& info) {
    FunctionCallbackWrapper cbwrapper(info);
    cbwrapper.InvokeCallback();
  }

  static inline napi_status NewFunction(napi_env env,
                                        napi_callback cb,
                                        void* cb_data,
                                        v8::Local<v8::Function>* result) {
    v8::Local<v8::Value> cbdata = v8impl::CallbackBundle::New(env, cb, cb_data);
    RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure);

    v8::MaybeLocal<v8::Function> maybe_function =
        v8::Function::New(env->context(), Invoke, cbdata);
    CHECK_MAYBE_EMPTY(env, maybe_function, napi_generic_failure);

    *result = maybe_function.ToLocalChecked();
    return napi_clear_last_error(env);
  }

  static inline napi_status NewTemplate(
      napi_env env,
      napi_callback cb,
      void* cb_data,
  ...",1,js_native_api_v8.cc,v8impl.anonymous_namespace_50.FunctionCallbackWrapper,CallbackWrapperBase,false,459,FunctionCallbackWrapper,22
122057,TYPE_DECL,,,,"struct napi_env__ {
  explicit napi_env__(v8::Local<v8::Context> context,
                      int32_t module_api_version)
      : isolate(context->GetIsolate()),
        context_persistent(isolate, context),
        module_api_version(module_api_version) {
    napi_clear_last_error(this);
  }

  inline v8::Local<v8::Context> context() const {
    return v8impl::PersistentToLocal::Strong(context_persistent);
  }

  inline void Ref() { refs++; }
  inline void Unref() {
    if (--refs == 0) DeleteMe();
  }

  virtual bool can_call_into_js() const { return true; }

  static inline void HandleThrow(napi_env env, v8::Local<v8::Value> value) {
    if (env->terminatedOrTerminating()) {
      return;
    }
    env->isolate->ThrowException(value);
  }

  // i.e. whether v8 exited or is about to exit
  inline bool terminatedOrTerminating() {
    return this->isolate->IsExecutionTerminating() || !can_call_into_js();
  }

  // v8 uses a special exception to indicate termination, the
  // `hand...",1,js_native_api_v8.hpp,napi_env__,,false,53,napi_env__,3
122063,TYPE_DECL,,js_native_api_v8.hpp:<global>,NAMESPACE_BLOCK,<global>,1,js_native_api_v8.hpp,js_native_api_v8.hpp:<global>,,false,1,<global>,3
122072,TYPE_DECL,,,,"class RefTracker {
 public:
  RefTracker() {}
  virtual ~RefTracker() {}
  virtual void Finalize() {}

  typedef RefTracker RefList;

  inline void Link(RefList* list) {
    prev_ = list;
    next_ = list->next_;
    if (next_ != nullptr) {
      next_->prev_ = this;
    }
    list->next_ = this;
  }

  inline void Unlink() {
    if (prev_ != nullptr) {
      prev_->next_ = next_;
    }
    if (next_ != nullptr) {
      next_->prev_ = prev_;
    }
    prev_ = nullptr;
    next_ = nullptr;
  }

  static void FinalizeAll(RefList* list) {
    while (list->next_ != nullptr) {
      list->next_->Finalize();
    }
  }

 private:
  RefList* next_ = nullptr;
  RefList* prev_ = nullptr;
}",1,js_native_api_v8.hpp,v8impl.RefTracker,,false,11,RefTracker,1
122085,TYPE_DECL,ANY,,,typedef RefTracker RefList;,22,js_native_api_v8.hpp,RefList,,false,17,RefList,4
122174,TYPE_DECL,,,,class Finalizer,1,js_native_api_v8.hpp,v8impl.Finalizer,,false,50,Finalizer,2
122494,TYPE_DECL,,,,"class Finalizer {
 protected:
  Finalizer(napi_env env,
            napi_finalize finalize_callback,
            void* finalize_data,
            void* finalize_hint)
      : env_(env),
        finalize_callback_(finalize_callback),
        finalize_data_(finalize_data),
        finalize_hint_(finalize_hint) {}

  virtual ~Finalizer() = default;

 public:
  static Finalizer* New(napi_env env,
                        napi_finalize finalize_callback = nullptr,
                        void* finalize_data = nullptr,
                        void* finalize_hint = nullptr) {
    return new Finalizer(env, finalize_callback, finalize_data, finalize_hint);
  }

  napi_finalize callback() { return finalize_callback_; }
  void* data() { return finalize_data_; }
  void* hint() { return finalize_hint_; }

  void ResetFinalizer();

 protected:
  napi_env env_;
  napi_finalize finalize_callback_;
  void* finalize_data_;
  void* finalize_hint_;
}",1,js_native_api_v8.hpp,v8impl.Finalizer,,false,308,Finalizer,4
122548,TYPE_DECL,,,,"class TryCatch : public v8::TryCatch {
 public:
  explicit TryCatch(napi_env env) : v8::TryCatch(env->isolate), _env(env) {}

  ~TryCatch() {
    if (HasCaught()) {
      _env->last_exception.Reset(_env->isolate, Exception());
    }
  }

 private:
  napi_env _env;
}",1,js_native_api_v8.hpp,v8impl.TryCatch,v8.TryCatch,false,342,TryCatch,5
122572,TYPE_DECL,,,,"enum class Ownership {
  // The reference is owned by the runtime. No userland call is needed to
  // destruct the reference.
  kRuntime,
  // The reference is owned by the userland. User code is responsible to delete
  // the reference with appropriate node-api calls.
  kUserland,
}",1,js_native_api_v8.hpp,v8impl.Ownership,,false,357,Ownership,6
122575,TYPE_DECL,,,,"class RefBase : public Finalizer, public RefTracker {
 protected:
  RefBase(napi_env env,
          uint32_t initial_refcount,
          Ownership ownership,
          napi_finalize finalize_callback,
          void* finalize_data,
          void* finalize_hint);

 public:
  static RefBase* New(napi_env env,
                      uint32_t initial_refcount,
                      Ownership ownership,
                      napi_finalize finalize_callback,
                      void* finalize_data,
                      void* finalize_hint);
  virtual ~RefBase();

  void* Data();
  uint32_t Ref();
  uint32_t Unref();
  uint32_t RefCount();

  Ownership ownership() { return ownership_; }

 protected:
  void Finalize() override;

 private:
  uint32_t refcount_;
  Ownership ownership_;
}",1,js_native_api_v8.hpp,v8impl.RefBase,Finalizer;RefTracker,false,367,RefBase,7
122628,TYPE_DECL,,,,"class Reference : public RefBase {
 protected:
  template <typename... Args>
  Reference(napi_env env, v8::Local<v8::Value> value, Args&&... args);

 public:
  static Reference* New(napi_env env,
                        v8::Local<v8::Value> value,
                        uint32_t initial_refcount,
                        Ownership ownership,
                        napi_finalize finalize_callback = nullptr,
                        void* finalize_data = nullptr,
                        void* finalize_hint = nullptr);

  virtual ~Reference();
  uint32_t Ref();
  uint32_t Unref();
  v8::Local<v8::Value> Get();

 protected:
  void Finalize() override;

 private:
  static void WeakCallback(const v8::WeakCallbackInfo<Reference>& data);

  void SetWeak();

  v8impl::Persistent<v8::Value> persistent_;
  bool can_be_weak_;
}",1,js_native_api_v8.hpp,v8impl.Reference,RefBase,false,401,Reference,8
122688,TYPE_DECL,,js_native_api_v8_internals.hpp:<global>,NAMESPACE_BLOCK,<global>,1,js_native_api_v8_internals.hpp,js_native_api_v8_internals.hpp:<global>,,false,1,<global>,5
122692,TYPE_DECL,ANY,,,using Persistent = v8::Global<T>;,1,js_native_api_v8_internals.hpp,Persistent,,false,33,Persistent,1
122693,TYPE_DECL,ANY,,,using PersistentToLocal = node::PersistentToLocal;,1,js_native_api_v8_internals.hpp,PersistentToLocal,,false,35,PersistentToLocal,2
122710,TYPE_DECL,,js_stream.cc:<global>,NAMESPACE_BLOCK,<global>,1,js_stream.cc,js_stream.cc:<global>,,false,1,<global>,8
123468,TYPE_DECL,,js_stream.hpp:<global>,NAMESPACE_BLOCK,<global>,1,js_stream.hpp,js_stream.hpp:<global>,,false,1,<global>,3
123483,TYPE_DECL,,js_udp_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,js_udp_wrap.cc,js_udp_wrap.cc:<global>,,false,1,<global>,6
123487,TYPE_DECL,,,,"class JSUDPWrap final : public UDPWrapBase, public AsyncWrap {
 public:
  JSUDPWrap(Environment* env, Local<Object> obj);

  int RecvStart() override;
  int RecvStop() override;
  ssize_t Send(uv_buf_t* bufs,
               size_t nbufs,
               const sockaddr* addr) override;
  SocketAddress GetPeerName() override;
  SocketAddress GetSockName() override;
  AsyncWrap* GetAsyncWrap() override { return this; }

  static void New(const FunctionCallbackInfo<Value>& args);
  static void EmitReceived(const FunctionCallbackInfo<Value>& args);
  static void OnSendDone(const FunctionCallbackInfo<Value>& args);
  static void OnAfterBind(const FunctionCallbackInfo<Value>& args);

  static void Initialize(Local<Object> target,
                         Local<Value> unused,
                         Local<Context> context,
                         void* priv);
  SET_NO_MEMORY_INFO()
  SET_MEMORY_INFO_NAME(JSUDPWrap)
  SET_SELF_SIZE(JSUDPWrap)
}",1,js_udp_wrap.cc,node.JSUDPWrap,UDPWrapBase;AsyncWrap,false,27,JSUDPWrap,1
124330,TYPE_DECL,,json_parser.cc:<global>,NAMESPACE_BLOCK,<global>,1,json_parser.cc,json_parser.cc:<global>,,false,1,<global>,5
124718,TYPE_DECL,,json_parser.hpp:<global>,NAMESPACE_BLOCK,<global>,1,json_parser.hpp,json_parser.hpp:<global>,,false,1,<global>,6
124725,TYPE_DECL,,json_utils.cc:<global>,NAMESPACE_BLOCK,<global>,1,json_utils.cc,json_utils.cc:<global>,,false,1,<global>,2
124973,TYPE_DECL,,json_utils.hpp:<global>,NAMESPACE_BLOCK,<global>,1,json_utils.hpp,json_utils.hpp:<global>,,false,1,<global>,6
125010,TYPE_DECL,,large_pages\node_large_page.cc:<global>,NAMESPACE_BLOCK,<global>,1,large_pages\node_large_page.cc,large_pages\node_large_page.cc:<global>,,false,1,<global>,17
125054,TYPE_DECL,,large_pages\node_large_page.hpp:<global>,NAMESPACE_BLOCK,<global>,1,large_pages\node_large_page.hpp,large_pages\node_large_page.hpp:<global>,,false,1,<global>,1
125063,TYPE_DECL,,memory_tracker-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,memory_tracker-inl.hpp,memory_tracker-inl.hpp:<global>,,false,1,<global>,3
125082,TYPE_DECL,,memory_tracker.hpp:<global>,NAMESPACE_BLOCK,<global>,1,memory_tracker.hpp,memory_tracker.hpp:<global>,,false,1,<global>,8
125119,TYPE_DECL,,module_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,module_wrap.cc,module_wrap.cc:<global>,,false,1,<global>,13
128512,TYPE_DECL,,module_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,module_wrap.hpp,module_wrap.hpp:<global>,,false,1,<global>,5
128537,TYPE_DECL,,node.cc:<global>,NAMESPACE_BLOCK,<global>,1,node.cc,node.cc:<global>,,false,1,<global>,54
128693,TYPE_DECL,v8_platform,,,struct V8Platform,1,node.cc,node.per_process.V8Platform,,false,159,V8Platform,6
130614,TYPE_DECL,,node.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node.hpp,node.hpp:<global>,,false,1,<global>,12
130664,TYPE_DECL,,,,struct uv_loop_s,1,node.hpp,uv_loop_s,,false,125,uv_loop_s,1
130666,TYPE_DECL,,,,struct SnapshotData,1,node.hpp,node.SnapshotData,,false,131,SnapshotData,1
130668,TYPE_DECL,,,,class TracingController,1,node.hpp,node.tracing.TracingController,,false,135,TracingController,1
130747,TYPE_DECL,,,,class IsolateData,1,node.hpp,node.IsolateData,,false,228,IsolateData,1
130748,TYPE_DECL,,,,class Environment,1,node.hpp,node.Environment,,false,229,Environment,2
130749,TYPE_DECL,,,,class MultiIsolatePlatform,1,node.hpp,node.MultiIsolatePlatform,,false,230,MultiIsolatePlatform,3
130750,TYPE_DECL,,,,class InitializationResultImpl,1,node.hpp,node.InitializationResultImpl,,false,231,InitializationResultImpl,4
130752,TYPE_DECL,,,,"enum Flags : uint32_t {
  kNoFlags = 0,
  // Enable stdio inheritance, which is disabled by default.
  // This flag is also implied by kNoStdioInitialization.
  kEnableStdioInheritance = 1 << 0,
  // Disable reading the NODE_OPTIONS environment variable.
  kDisableNodeOptionsEnv = 1 << 1,
  // Do not parse CLI options.
  kDisableCLIOptions = 1 << 2,
  // Do not initialize ICU.
  kNoICU = 1 << 3,
  // Do not modify stdio file descriptor or TTY state.
  kNoStdioInitialization = 1 << 4,
  // Do not register Node.js-specific signal handlers
  // and reset other signal handlers to default state.
  kNoDefaultSignalHandling = 1 << 5,
  // Do not perform V8 initialization.
  kNoInitializeV8 = 1 << 6,
  // Do not initialize a default Node.js-provided V8 platform instance.
  kNoInitializeNodeV8Platform = 1 << 7,
  // Do not initialize OpenSSL config.
  kNoInitOpenSSL = 1 << 8,
  // Do not initialize Node.js debugging based on environment variables.
  kNoParseGlobalDebugVariables = 1 << 9,
  /...",1,node.hpp,node.ProcessInitializationFlags.Flags,,false,234,Flags,1
130861,TYPE_DECL,,,,"enum Flags : uint32_t {
  kNoFlags = 0,
  // Do not explicitly terminate the Isolate
  // when exiting the Environment.
  kDoNotTerminateIsolate = 1 << 0,
}",1,node.hpp,node.StopFlags.Flags,,false,278,Flags,1
130876,TYPE_DECL,,,,"class NODE_EXTERN InitializationResult {
 public:
  virtual ~InitializationResult();

  // Returns a suggested process exit code.
  virtual int exit_code() const = 0;

  // Returns 'true' if initialization was aborted early due to errors.
  virtual bool early_return() const = 0;

  // Returns the parsed list of non-Node.js arguments.
  virtual const std::vector<std::string>& args() const = 0;

  // Returns the parsed list of Node.js arguments.
  virtual const std::vector<std::string>& exec_args() const = 0;

  // Returns an array of errors. Note that these may be warnings
  // whose existence does not imply a non-zero exit code.
  virtual const std::vector<std::string>& errors() const = 0;

  // If kNoInitializeNodeV8Platform was not specified, the global Node.js
  // platform instance.
  virtual MultiIsolatePlatform* platform() const = 0;

 private:
  InitializationResult() = default;
  friend class InitializationResultImpl;
}",1,node.hpp,node.InitializationResult,,false,286,InitializationResult,8
130909,TYPE_DECL,,,,friend class InitializationResultImpl,3,node.hpp,node.InitializationResult.InitializationResultImpl,,false,312,InitializationResultImpl,9
130966,TYPE_DECL,,,,"enum OptionEnvvarSettings {
  // Allow the options to be set via the environment variable, like
  // `NODE_OPTIONS`.
  kAllowedInEnvvar = 0,
  // Disallow the options to be set via the environment variable, like
  // `NODE_OPTIONS`.
  kDisallowedInEnvvar = 1,
  // Deprecated, use kAllowedInEnvvar instead.
  kAllowedInEnvironment = kAllowedInEnvvar,
  // Deprecated, use kDisallowedInEnvvar instead.
  kDisallowedInEnvironment = kDisallowedInEnvvar,
}",1,node.hpp,node.OptionEnvvarSettings,,false,363,OptionEnvvarSettings,15
130995,TYPE_DECL,,,,class NodeArrayBufferAllocator,1,node.hpp,node.NodeArrayBufferAllocator,,false,388,NodeArrayBufferAllocator,17
130996,TYPE_DECL,,,,"class NODE_EXTERN ArrayBufferAllocator : public v8::ArrayBuffer::Allocator {
 public:
  // If `always_debug` is true, create an ArrayBuffer::Allocator instance
  // that performs additional integrity checks (e.g. make sure that only memory
  // that was allocated by the it is also freed by it).
  // This can also be set using the --debug-arraybuffer-allocations flag.
  static std::unique_ptr<ArrayBufferAllocator> Create(
      bool always_debug = false);

 private:
  virtual NodeArrayBufferAllocator* GetImpl() = 0;

  friend class IsolateData;
}",1,node.hpp,node.ArrayBufferAllocator,v8.ArrayBuffer.Allocator,false,396,ArrayBufferAllocator,18
131006,TYPE_DECL,,,,friend class IsolateData,3,node.hpp,node.ArrayBufferAllocator.IsolateData,,false,408,IsolateData,3
131016,TYPE_DECL,,,,"class NODE_EXTERN IsolatePlatformDelegate {
 public:
  virtual std::shared_ptr<v8::TaskRunner> GetForegroundTaskRunner() = 0;
  virtual bool IdleTasksEnabled() = 0;
}",1,node.hpp,node.IsolatePlatformDelegate,,false,415,IsolatePlatformDelegate,21
131025,TYPE_DECL,,,,"class NODE_EXTERN MultiIsolatePlatform : public v8::Platform {
 public:
  ~MultiIsolatePlatform() override = default;
  // Returns true if work was dispatched or executed. New tasks that are
  // posted during flushing of the queue are postponed until the next
  // flushing.
  virtual bool FlushForegroundTasks(v8::Isolate* isolate) = 0;
  virtual void DrainTasks(v8::Isolate* isolate) = 0;

  // This needs to be called between the calls to `Isolate::Allocate()` and
  // `Isolate::Initialize()`, so that initialization can already start
  // using the platform.
  // When using `NewIsolate()`, this is taken care of by that function.
  // This function may only be called once per `Isolate`.
  virtual void RegisterIsolate(v8::Isolate* isolate,
                               struct uv_loop_s* loop) = 0;
  // This method can be used when an application handles task scheduling on its
  // own through `IsolatePlatformDelegate`. Upon registering an isolate with
  // this overload any other met...",1,node.hpp,node.MultiIsolatePlatform,v8.Platform,false,421,MultiIsolatePlatform,22
131071,TYPE_DECL,,,,"enum IsolateSettingsFlags {
  MESSAGE_LISTENER_WITH_ERROR_LEVEL = 1 << 0,
  DETAILED_SOURCE_POSITIONS_FOR_PROFILING = 1 << 1,
  SHOULD_NOT_SET_PROMISE_REJECTION_CALLBACK = 1 << 2,
  SHOULD_NOT_SET_PREPARE_STACK_TRACE_CALLBACK = 1 << 3,
  ALLOW_MODIFY_CODE_GENERATION_FROM_STRINGS_CALLBACK = 0, /* legacy no-op */
}",1,node.hpp,node.IsolateSettingsFlags,,false,462,IsolateSettingsFlags,23
131104,TYPE_DECL,,,,"struct IsolateSettings {
  uint64_t flags = MESSAGE_LISTENER_WITH_ERROR_LEVEL |
      DETAILED_SOURCE_POSITIONS_FOR_PROFILING;
  v8::MicrotasksPolicy policy = v8::MicrotasksPolicy::kExplicit;

  // Error handling callbacks
  v8::Isolate::AbortOnUncaughtExceptionCallback
      should_abort_on_uncaught_exception_callback = nullptr;
  v8::FatalErrorCallback fatal_error_callback = nullptr;
  v8::PrepareStackTraceCallback prepare_stack_trace_callback = nullptr;

  // Miscellaneous callbacks
  v8::PromiseRejectCallback promise_reject_callback = nullptr;
  v8::AllowWasmCodeGenerationCallback
      allow_wasm_code_generation_callback = nullptr;
  v8::ModifyCodeGenerationFromStringsCallback2
      modify_code_generation_from_strings_callback = nullptr;
}",1,node.hpp,node.IsolateSettings,,false,470,IsolateSettings,24
131147,TYPE_DECL,,,,"class EmbedderSnapshotData {
 public:
  struct DeleteSnapshotData {
    void operator()(const EmbedderSnapshotData*) const;
  };
  using Pointer =
      std::unique_ptr<const EmbedderSnapshotData, DeleteSnapshotData>;

  // Return an EmbedderSnapshotData object that refers to the built-in
  // snapshot of Node.js. This can have been configured through e.g.
  // --node-snapshot-main=entry.js.
  static Pointer BuiltinSnapshotData();

  // Return an EmbedderSnapshotData object that is based on an input file.
  // Calling this method will consume but not close the FILE* handle.
  // The FILE* handle can be closed immediately following this call.
  // If the snapshot is invalid, this returns an empty pointer.
  static Pointer FromFile(FILE* in);
  static Pointer FromBlob(const std::vector<char>& in);

  // Write this EmbedderSnapshotData object to an output file.
  // Calling this method will not close the FILE* handle.
  // The FILE* handle can be closed immediately following this call....",1,node.hpp,node.EmbedderSnapshotData,,false,514,EmbedderSnapshotData,25
131148,TYPE_DECL,,,,"struct DeleteSnapshotData {
    void operator()(const EmbedderSnapshotData*) const;
  }",3,node.hpp,node.EmbedderSnapshotData.DeleteSnapshotData,,false,516,DeleteSnapshotData,1
131154,TYPE_DECL,ANY,,,"using Pointer =
      std::unique_ptr<const EmbedderSnapshotData, DeleteSnapshotData>;",3,node.hpp,Pointer,,false,519,Pointer,2
131210,TYPE_DECL,,,,friend struct SnapshotData,3,node.hpp,node.EmbedderSnapshotData.SnapshotData,,false,555,SnapshotData,16
131211,TYPE_DECL,,,,friend class CommonEnvironmentSetup,3,node.hpp,node.EmbedderSnapshotData.CommonEnvironmentSetup,,false,556,CommonEnvironmentSetup,17
131266,TYPE_DECL,,,,"struct ThreadId {
  uint64_t id = static_cast<uint64_t>(-1);
}",1,node.hpp,node.ThreadId,,false,606,ThreadId,34
131283,TYPE_DECL,,,,"enum Flags : uint64_t {
  kNoFlags = 0,
  // Use the default behaviour for Node.js instances.
  kDefaultFlags = 1 << 0,
  // Controls whether this Environment is allowed to affect per-process state
  // (e.g. cwd, process title, uid, etc.).
  // This is set when using kDefaultFlags.
  kOwnsProcessState = 1 << 1,
  // Set if this Environment instance is associated with the global inspector
  // handling code (i.e. listening on SIGUSR1).
  // This is set when using kDefaultFlags.
  kOwnsInspector = 1 << 2,
  // Set if Node.js should not run its own esm loader. This is needed by some
  // embedders, because it's possible for the Node.js esm loader to conflict
  // with another one in an embedder environment, e.g. Blink's in Chromium.
  kNoRegisterESMLoader = 1 << 3,
  // Set this flag to make Node.js track ""raw"" file descriptors, i.e. managed
  // by fs.open() and fs.close(), and close them during FreeEnvironment().
  kTrackUnmanagedFds = 1 << 4,
  // Set this flag to force hiding cons...",1,node.hpp,node.EnvironmentFlags.Flags,,false,612,Flags,1
131352,TYPE_DECL,,,,"struct InspectorParentHandle {
  virtual ~InspectorParentHandle();
}",1,node.hpp,node.InspectorParentHandle,,false,656,InspectorParentHandle,37
131383,TYPE_DECL,,,,"struct StartExecutionCallbackInfo {
  v8::Local<v8::Object> process_object;
  v8::Local<v8::Function> native_require;
  v8::Local<v8::Function> run_cjs;
}",1,node.hpp,node.StartExecutionCallbackInfo,,false,692,StartExecutionCallbackInfo,41
131387,TYPE_DECL,ANY,,,"using StartExecutionCallback =
    std::function<v8::MaybeLocal<v8::Value>(const StartExecutionCallbackInfo&)>;",1,node.hpp,StartExecutionCallback,,false,698,StartExecutionCallback,42
131557,TYPE_DECL,GetCurrentEventLoop,,,struct uv_loop_s,13,node.hpp,node.uv_loop_s,,false,804,uv_loop_s,72
131568,TYPE_DECL,,,,"class NODE_EXTERN CommonEnvironmentSetup {
 public:
  ~CommonEnvironmentSetup();

  // Create a new CommonEnvironmentSetup, that is, a group of objects that
  // together form the typical setup for a single Node.js Environment instance.
  // If any error occurs, `*errors` will be populated and the returned pointer
  // will be empty.
  // env_args will be passed through as arguments to CreateEnvironment(), after
  // `isolate_data` and `context`.
  template <typename... EnvironmentArgs>
  static std::unique_ptr<CommonEnvironmentSetup> Create(
      MultiIsolatePlatform* platform,
      std::vector<std::string>* errors,
      EnvironmentArgs&&... env_args);
  template <typename... EnvironmentArgs>
  static std::unique_ptr<CommonEnvironmentSetup> CreateFromSnapshot(
      MultiIsolatePlatform* platform,
      std::vector<std::string>* errors,
      const EmbedderSnapshotData* snapshot_data,
      EnvironmentArgs&&... env_args);

  // Create an embedding setup which will be used for cr...",1,node.hpp,node.CommonEnvironmentSetup,,false,821,CommonEnvironmentSetup,76
131600,TYPE_DECL,event_loop,,,struct uv_loop_s,3,node.hpp,node.CommonEnvironmentSetup.uv_loop_s,,false,870,uv_loop_s,6
131646,TYPE_DECL,,,,"enum Flags : uint32_t {
    kNoFlags = 0,
    kIsForSnapshotting = 1,
  }",3,node.hpp,node.CommonEnvironmentSetup.Flags,,false,885,Flags,18
131659,TYPE_DECL,,,,struct Impl,3,node.hpp,node.CommonEnvironmentSetup.Impl,,false,890,Impl,19
132071,TYPE_DECL,,,,"enum encoding {
  ASCII,
  UTF8,
  BASE64,
  UCS2,
  BINARY,
  HEX,
  BUFFER,
  BASE64URL,
  LATIN1 = BINARY
}",1,node.hpp,node.encoding,,false,1049,encoding,84
132088,TYPE_DECL,ParseEncoding,,,enum encoding,13,node.hpp,node.encoding,,false,1061,encoding,85
132147,TYPE_DECL,,,,"enum ModuleFlags {
  kLinked = 0x02
}",1,node.hpp,node.ModuleFlags,,false,1113,ModuleFlags,95
132156,TYPE_DECL,,,,"struct node_module {
  int nm_version;
  unsigned int nm_flags;
  void* nm_dso_handle;
  const char* nm_filename;
  node::addon_register_func nm_register_func;
  node::addon_context_register_func nm_context_register_func;
  const char* nm_modname;
  void* nm_priv;
  struct node_module* nm_link;
}",1,node.hpp,node.node_module,,false,1117,node_module,96
132165,TYPE_DECL,nm_link,,,struct node_module,3,node.hpp,node.node_module.node_module,,false,1126,node_module,9
132207,TYPE_DECL,double,,,typedef double async_id;,16,node.hpp,async_id,,false,1267,async_id,103
132208,TYPE_DECL,,,,"struct async_context {
  ::node::async_id async_id;
  ::node::async_id trigger_async_id;
}",1,node.hpp,node.async_context,,false,1268,async_context,104
132225,TYPE_DECL,,,,struct ACHHandle,1,node.hpp,node.ACHHandle,,false,1289,ACHHandle,107
132226,TYPE_DECL,,,,struct NODE_EXTERN DeleteACHHandle { void operator()(ACHHandle*) const; },1,node.hpp,node.DeleteACHHandle,,false,1290,DeleteACHHandle,108
132232,TYPE_DECL,ANY,,,"typedef std::unique_ptr<ACHHandle, DeleteACHHandle> AsyncCleanupHookHandle;",53,node.hpp,AsyncCleanupHookHandle,,false,1291,AsyncCleanupHookHandle,109
132313,TYPE_DECL,,,,class InternalCallbackScope,1,node.hpp,node.InternalCallbackScope,,false,1359,InternalCallbackScope,121
132314,TYPE_DECL,,,,"class NODE_EXTERN CallbackScope {
 public:
  CallbackScope(v8::Isolate* isolate,
                v8::Local<v8::Object> resource,
                async_context asyncContext);
  CallbackScope(Environment* env,
                v8::Local<v8::Object> resource,
                async_context asyncContext);
  ~CallbackScope();

  void operator=(const CallbackScope&) = delete;
  void operator=(CallbackScope&&) = delete;
  CallbackScope(const CallbackScope&) = delete;
  CallbackScope(CallbackScope&&) = delete;

 private:
  InternalCallbackScope* private_;
  v8::TryCatch try_catch_;
}",1,node.hpp,node.CallbackScope,,false,1376,CallbackScope,122
132375,TYPE_DECL,,,,"class NODE_EXTERN AsyncResource {
 public:
  AsyncResource(v8::Isolate* isolate,
                v8::Local<v8::Object> resource,
                const char* name,
                async_id trigger_async_id = -1);

  virtual ~AsyncResource();

  AsyncResource(const AsyncResource&) = delete;
  void operator=(const AsyncResource&) = delete;

  v8::MaybeLocal<v8::Value> MakeCallback(
      v8::Local<v8::Function> callback,
      int argc,
      v8::Local<v8::Value>* argv);

  v8::MaybeLocal<v8::Value> MakeCallback(
      const char* method,
      int argc,
      v8::Local<v8::Value>* argv);

  v8::MaybeLocal<v8::Value> MakeCallback(
      v8::Local<v8::String> symbol,
      int argc,
      v8::Local<v8::Value>* argv);

  v8::Local<v8::Object> get_resource();
  async_id get_async_id() const;
  async_id get_trigger_async_id() const;

 protected:
  class NODE_EXTERN CallbackScope : public node::CallbackScope {
   public:
    explicit CallbackScope(AsyncResource* res);
  };

 private:
  Envi...",1,node.hpp,node.AsyncResource,,false,1431,AsyncResource,125
132424,TYPE_DECL,,,,"class NODE_EXTERN CallbackScope : public node::CallbackScope {
   public:
    explicit CallbackScope(AsyncResource* res);
  }",3,node.hpp,node.AsyncResource.CallbackScope,node.CallbackScope,false,1463,CallbackScope,10
132453,TYPE_DECL,,node_api.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_api.cc,node_api.cc:<global>,,false,1,<global>,19
132548,TYPE_DECL,,,,"class ThreadSafeFunction : public node::AsyncResource {
 public:
  ThreadSafeFunction(v8::Local<v8::Function> func,
                     v8::Local<v8::Object> resource,
                     v8::Local<v8::String> name,
                     size_t thread_count_,
                     void* context_,
                     size_t max_queue_size_,
                     node_napi_env env_,
                     void* finalize_data_,
                     napi_finalize finalize_cb_,
                     napi_threadsafe_function_call_js call_js_cb_)
      : AsyncResource(env_->isolate,
                      resource,
                      *v8::String::Utf8Value(env_->isolate, name)),
        thread_count(thread_count_),
        is_closing(false),
        dispatch_state(kDispatchIdle),
        context(context_),
        max_queue_size(max_queue_size_),
        env(env_),
        finalize_data(finalize_data_),
        finalize_cb(finalize_cb_),
        call_js_cb(call_js_cb_ == nullptr ? CallJs : ...",1,node_api.cc,v8impl.anonymous_namespace_11.ThreadSafeFunction,node.AsyncResource,false,199,ThreadSafeFunction,4
132614,TYPE_DECL,,,,"struct napi_async_cleanup_hook_handle__ {
  napi_async_cleanup_hook_handle__(napi_env env,
                                   napi_async_cleanup_hook user_hook,
                                   void* user_data)
      : env_(env), user_hook_(user_hook), user_data_(user_data) {
    handle_ = node::AddEnvironmentCleanupHook(env->isolate, Hook, this);
    env->Ref();
  }

  ~napi_async_cleanup_hook_handle__() {
    node::RemoveEnvironmentCleanupHook(std::move(handle_));
    if (done_cb_ != nullptr) done_cb_(done_data_);

    // Release the `env` handle asynchronously since it would be surprising if
    // a call to a N-API function would destroy `env` synchronously.
    static_cast<node_napi_env>(env_)->node_env()->SetImmediate(
        [env = env_](node::Environment*) { env->Unref(); });
  }

  static void Hook(void* data, void (*done_cb)(void*), void* done_data) {
    napi_async_cleanup_hook_handle__* handle =
        static_cast<napi_async_cleanup_hook_handle__*>(data);
    handle-...",1,node_api.cc,napi_async_cleanup_hook_handle__,,false,785,napi_async_cleanup_hook_handle__,19
132627,TYPE_DECL,,,,"class Work : public node::AsyncResource, public node::ThreadPoolWork {
 private:
  explicit Work(node_napi_env env,
                v8::Local<v8::Object> async_resource,
                v8::Local<v8::String> async_resource_name,
                napi_async_execute_callback execute,
                napi_async_complete_callback complete = nullptr,
                void* data = nullptr)
      : AsyncResource(
            env->isolate,
            async_resource,
            *v8::String::Utf8Value(env->isolate, async_resource_name)),
        ThreadPoolWork(env->node_env(), ""node_api""),
        _env(env),
        _data(data),
        _execute(execute),
        _complete(complete) {}

  ~Work() override = default;

 public:
  static Work* New(node_napi_env env,
                   v8::Local<v8::Object> async_resource,
                   v8::Local<v8::String> async_resource_name,
                   napi_async_execute_callback execute,
                   napi_async_complete_callback complete,
...",1,node_api.cc,anonymous_namespace_75.uvimpl.Work,node.AsyncResource;node.ThreadPoolWork,false,1151,Work,2
132817,TYPE_DECL,,,,"class BufferFinalizer : private Finalizer {
 public:
  static BufferFinalizer* New(napi_env env,
                              napi_finalize finalize_callback = nullptr,
                              void* finalize_data = nullptr,
                              void* finalize_hint = nullptr) {
    return new BufferFinalizer(
        env, finalize_callback, finalize_data, finalize_hint);
  }
  // node::Buffer::FreeCallback
  static void FinalizeBufferCallback(char* data, void* hint) {
    std::unique_ptr<BufferFinalizer, Deleter> finalizer{
        static_cast<BufferFinalizer*>(hint)};
    finalizer->finalize_data_ = data;

    // It is safe to call into JavaScript at this point.
    if (finalizer->finalize_callback_ == nullptr) return;
    finalizer->env_->CallFinalizer(finalizer->finalize_callback_,
                                   finalizer->finalize_data_,
                                   finalizer->finalize_hint_);
  }

  struct Deleter {
    void operator()(BufferFinalizer* ...",1,node_api.cc,v8impl.anonymous_namespace_1.BufferFinalizer,Finalizer,false,117,BufferFinalizer,1
132874,TYPE_DECL,,,,"struct Deleter {
    void operator()(BufferFinalizer* finalizer) { delete finalizer; }
  }",3,node_api.cc,v8impl.anonymous_namespace_4.BufferFinalizer.Deleter,,false,139,Deleter,3
133750,TYPE_DECL,,,,"class AsyncContext {
 public:
  AsyncContext(node_napi_env env,
               v8::Local<v8::Object> resource_object,
               const v8::Local<v8::String> resource_name,
               bool externally_managed_resource)
      : env_(env) {
    async_id_ = node_env()->new_async_id();
    trigger_async_id_ = node_env()->get_default_trigger_async_id();
    resource_.Reset(node_env()->isolate(), resource_object);
    lost_reference_ = false;
    if (externally_managed_resource) {
      resource_.SetWeak(
          this, AsyncContext::WeakCallback, v8::WeakCallbackType::kParameter);
    }

    node::AsyncWrap::EmitAsyncInit(node_env(),
                                   resource_object,
                                   resource_name,
                                   async_id_,
                                   trigger_async_id_);
  }

  ~AsyncContext() {
    resource_.Reset();
    lost_reference_ = true;
    node::AsyncWrap::EmitDestroy(node_env(), async_id_);
  }

  inline v8:...",1,node_api.cc,v8impl.anonymous_namespace_43.AsyncContext,,false,535,AsyncContext,5
133973,TYPE_DECL,,,,"class CallbackScope : public node::CallbackScope {
   public:
    explicit CallbackScope(AsyncContext* async_context)
        : node::CallbackScope(async_context->node_env(),
                              async_context->resource_.Get(
                                  async_context->node_env()->isolate()),
                              async_context->async_context()) {}
  }",3,node_api.cc,v8impl.anonymous_namespace_67.AsyncContext.CallbackScope,node.CallbackScope,false,618,CallbackScope,11
137348,TYPE_DECL,,node_api.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_api.hpp,node_api.hpp:<global>,,false,1,<global>,3
137351,TYPE_DECL,,,,struct uv_loop_s,1,node_api.hpp,uv_loop_s,,false,15,uv_loop_s,1
137362,TYPE_DECL,napi_module,,,"typedef struct napi_module {
  int nm_version;
  unsigned int nm_flags;
  const char* nm_filename;
  napi_addon_register_func nm_register_func;
  const char* nm_modname;
  void* nm_priv;
  void* reserved[4];
}",1,node_api.hpp,napi_module,,false,36,napi_module,4
137376,TYPE_DECL,napi_module,,,"typedef struct napi_module {
  int nm_version;
  unsigned int nm_flags;
  const char* nm_filename;
  napi_addon_register_func nm_register_func;
  const char* nm_modname;
  void* nm_priv;
  void* reserved[4];
} napi_module;",3,node_api.hpp,napi_module,,false,44,napi_module,5
137608,TYPE_DECL,,node_api_internals.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_api_internals.hpp,node_api_internals.hpp:<global>,,false,1,<global>,6
137611,TYPE_DECL,,,,"struct node_napi_env__ : public napi_env__ {
  node_napi_env__(v8::Local<v8::Context> context,
                  const std::string& module_filename,
                  int32_t module_api_version);

  bool can_call_into_js() const override;
  void CallFinalizer(napi_finalize cb, void* data, void* hint) override;
  template <bool enforceUncaughtExceptionPolicy>
  void CallFinalizer(napi_finalize cb, void* data, void* hint);

  void EnqueueFinalizer(v8impl::RefTracker* finalizer) override;
  void DrainFinalizerQueue();

  void trigger_fatal_exception(v8::Local<v8::Value> local_err);
  template <bool enforceUncaughtExceptionPolicy, typename T>
  void CallbackIntoModule(T&& call);

  void DeleteMe() override;

  inline node::Environment* node_env() const {
    return node::Environment::GetCurrent(context());
  }
  inline const char* GetFilename() const { return filename.c_str(); }

  std::string filename;
  bool destructing = false;
  bool finalization_scheduled = false;
}",1,node_api_internals.hpp,node_napi_env__,napi_env__,false,11,node_napi_env__,1
137694,TYPE_DECL,node_napi_env__*,,,using node_napi_env = node_napi_env__*;,1,node_api_internals.hpp,node_napi_env,,false,40,node_napi_env,2
137699,TYPE_DECL,,node_api_types.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_api_types.hpp,node_api_types.hpp:<global>,,false,1,<global>,2
137702,TYPE_DECL,napi_callback_scope,,,typedef struct napi_callback_scope__,1,node_api_types.hpp,napi_callback_scope__,,false,6,napi_callback_scope__,1
137703,TYPE_DECL,napi_callback_scope__*,,,typedef struct napi_callback_scope__* napi_callback_scope;,37,node_api_types.hpp,napi_callback_scope,,false,6,napi_callback_scope,2
137704,TYPE_DECL,napi_async_context,,,typedef struct napi_async_context__,1,node_api_types.hpp,napi_async_context__,,false,7,napi_async_context__,3
137705,TYPE_DECL,napi_async_context__*,,,typedef struct napi_async_context__* napi_async_context;,36,node_api_types.hpp,napi_async_context,,false,7,napi_async_context,4
137706,TYPE_DECL,napi_async_work,,,typedef struct napi_async_work__,1,node_api_types.hpp,napi_async_work__,,false,8,napi_async_work__,5
137707,TYPE_DECL,napi_async_work__*,,,typedef struct napi_async_work__* napi_async_work;,33,node_api_types.hpp,napi_async_work,,false,8,napi_async_work,6
137721,TYPE_DECL,napi_node_version,,,"typedef struct {
  uint32_t major;
  uint32_t minor;
  uint32_t patch;
  const char* release;
}",1,node_api_types.hpp,napi_node_version,,false,39,napi_node_version,9
138004,TYPE_DECL,,node_binding.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_binding.cc,node_binding.cc:<global>,,false,1,<global>,9
138310,TYPE_DECL,global_handle_map,,,"static struct global_handle_map_t {
 public:
  void set(void* handle, node_module* mod) {
    CHECK_NE(handle, nullptr);
    Mutex::ScopedLock lock(mutex_);

    map_[handle].module = mod;
    // We need to store this flag internally to avoid a chicken-and-egg problem
    // during cleanup. By the time we actually use the flag's value,
    // the shared object has been unloaded, and its memory would be gone,
    // making it impossible to access fields of `mod` --
    // unless `mod` *is* dynamically allocated, but we cannot know that
    // without checking the flag.
    map_[handle].wants_delete_module = mod->nm_flags & NM_F_DELETEME;
    map_[handle].refcount++;
  }

  node_module* get_and_increase_refcount(void* handle) {
    CHECK_NE(handle, nullptr);
    Mutex::ScopedLock lock(mutex_);

    auto it = map_.find(handle);
    if (it == map_.end()) return nullptr;
    it->second.refcount++;
    return it->second.module;
  }

  void erase(void* handle) {
    CHECK_NE(handle, nullpt...",1,node_binding.cc,node.binding.global_handle_map_t,,false,274,global_handle_map_t,1
138452,TYPE_DECL,,,,"struct Entry {
    unsigned int refcount;
    bool wants_delete_module;
    node_module* module;
  }",3,node_binding.cc,node.binding.global_handle_map_t.Entry,,false,317,Entry,5
138569,TYPE_DECL,"void(*)(Local<Object>,Local<Value>,Local<Context>)",,,"using InitializerCallback = void (*)(Local<Object> exports,
                                     Local<Value> module,
                                     Local<Context> context);",1,node_binding.cc,InitializerCallback,,false,396,InitializerCallback,9
139346,TYPE_DECL,,node_binding.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_binding.hpp,node_binding.hpp:<global>,,false,1,<global>,5
139441,TYPE_DECL,,node_blob.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_blob.cc,node_blob.cc:<global>,,false,1,<global>,15
141707,TYPE_DECL,,node_blob.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_blob.hpp,node_blob.hpp:<global>,,false,1,<global>,15
141717,TYPE_DECL,,node_bob-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_bob-inl.hpp,node_bob-inl.hpp:<global>,,false,1,<global>,3
141789,TYPE_DECL,,node_bob.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_bob.hpp,node_bob.hpp:<global>,,false,1,<global>,2
141798,TYPE_DECL,,,,"enum Status : int {
  // Indicates that an attempt was made to pull after end.
  STATUS_EOS = 0,

  // Indicates that there is additional data available
  // and the consumer may continue to pull.
  STATUS_CONTINUE = 1,

  // Indicates that there is no additional data available
  // but the stream has not ended. The consumer should not
  // continue to pull but may resume pulling later when
  // data is available.
  STATUS_BLOCK = 2,

  // Indicates that there is no additional data available
  // but the stream has not ended and the source will call
  // next again later when data is available. STATUS_WAIT
  // must not be used with the OPTIONS_SYNC option.
  STATUS_WAIT = 3,
}",1,node_bob.hpp,node.bob.Status,,false,12,Status,3
141819,TYPE_DECL,,,,"enum Options : int {
  OPTIONS_NONE = 0,

  // Indicates that the consumer is requesting the end
  // of the stream.
  OPTIONS_END = 1,

  // Indicates that the consumer requires the source to
  // invoke Next synchronously. If the source is
  // unable to provide data immediately but the
  // stream has not yet ended, it should call Next
  // using STATUS_BLOCK. When not set, the source
  // may call Next asynchronously.
  OPTIONS_SYNC = 2
}",1,node_bob.hpp,node.bob.Options,,false,33,Options,4
141836,TYPE_DECL,ANY,,,using Done = std::function<void(size_t)>;,1,node_bob.hpp,Done,,false,63,Done,5
141837,TYPE_DECL,ANY,,,"using Next = std::function<void(int, const T*, size_t count, Done done)>;",1,node_bob.hpp,Next,,false,65,Next,6
141838,TYPE_DECL,node.bob.Source<T>,,,"class Source {
 public:
  virtual ~Source() = default;
  virtual int Pull(
      Next<T> next,
      int options,
      T* data,
      size_t count,
      size_t max_count_hint = kMaxCountHint) = 0;
}",1,node_bob.hpp,node.bob.Source,,false,68,Source,7
141852,TYPE_DECL,node.bob.SourceImpl<T>,,,"class SourceImpl : public Source<T> {
 public:
  int Pull(
      Next<T> next,
      int options,
      T* data,
      size_t count,
      size_t max_count_hint = kMaxCountHint) override;

  bool is_eos() const { return eos_; }

 protected:
  virtual int DoPull(
      Next<T> next,
      int options,
      T* data,
      size_t count,
      size_t max_count_hint) = 0;

 private:
  bool eos_ = false;
}",1,node_bob.hpp,node.bob.SourceImpl,Source<T>,false,81,SourceImpl,8
141900,TYPE_DECL,,node_buffer.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_buffer.cc,node_buffer.cc:<global>,,false,1,<global>,17
141974,TYPE_DECL,,,,"class CallbackInfo {
 public:
  static inline Local<ArrayBuffer> CreateTrackedArrayBuffer(
      Environment* env,
      char* data,
      size_t length,
      FreeCallback callback,
      void* hint);

  CallbackInfo(const CallbackInfo&) = delete;
  CallbackInfo& operator=(const CallbackInfo&) = delete;

 private:
  static void CleanupHook(void* data);
  inline void OnBackingStoreFree();
  inline void CallAndResetCallback();
  inline CallbackInfo(Environment* env,
                      FreeCallback callback,
                      char* data,
                      void* hint);
  Global<ArrayBuffer> persistent_;
  Mutex mutex_;  // Protects callback_.
  FreeCallback callback_;
  char* const data_;
  void* const hint_;
  Environment* const env_;
}",1,node_buffer.cc,node.Buffer.anonymous_namespace_1.CallbackInfo,,false,82,CallbackInfo,1
147250,TYPE_DECL,,node_buffer.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_buffer.hpp,node_buffer.hpp:<global>,,false,1,<global>,3
147371,TYPE_DECL,,node_builtins.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_builtins.cc,node_builtins.cc:<global>,,false,1,<global>,9
149460,TYPE_DECL,,node_builtins.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_builtins.hpp,node_builtins.hpp:<global>,,false,1,<global>,13
149479,TYPE_DECL,,node_config.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_config.cc,node_config.cc:<global>,,false,1,<global>,8
149570,TYPE_DECL,,node_constants.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_constants.cc,node_constants.cc:<global>,,false,1,<global>,18
150197,TYPE_DECL,,node_constants.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_constants.hpp,node_constants.hpp:<global>,,false,1,<global>,3
150206,TYPE_DECL,,node_context_data.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_context_data.hpp,node_context_data.hpp:<global>,,false,1,<global>,3
150255,TYPE_DECL,,node_contextify.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_contextify.cc,node_contextify.cc:<global>,,false,1,<global>,12
155082,TYPE_DECL,,node_contextify.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_contextify.hpp,node_contextify.hpp:<global>,,false,1,<global>,4
155107,TYPE_DECL,,node_credentials.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_credentials.cc,node_credentials.cc:<global>,,false,1,<global>,11
155380,TYPE_DECL,,node_crypto.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_crypto.cc,node_crypto.cc:<global>,,false,1,<global>,8
155708,TYPE_DECL,,node_crypto.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_crypto.hpp,node_crypto.hpp:<global>,,false,1,<global>,23
155738,TYPE_DECL,,node_dir.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_dir.cc,node_dir.cc:<global>,,false,1,<global>,17
158321,TYPE_DECL,,node_dir.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_dir.hpp,node_dir.hpp:<global>,,false,1,<global>,2
158335,TYPE_DECL,,node_env_var.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_env_var.cc,node_env_var.cc:<global>,,false,1,<global>,8
158354,TYPE_DECL,,,,"class RealEnvStore final : public KVStore {
 public:
  MaybeLocal<String> Get(Isolate* isolate, Local<String> key) const override;
  Maybe<std::string> Get(const char* key) const override;
  void Set(Isolate* isolate, Local<String> key, Local<String> value) override;
  int32_t Query(Isolate* isolate, Local<String> key) const override;
  int32_t Query(const char* key) const override;
  void Delete(Isolate* isolate, Local<String> key) override;
  Local<Array> Enumerate(Isolate* isolate) const override;
}",1,node_env_var.cc,node.RealEnvStore,KVStore,false,37,RealEnvStore,1
158395,TYPE_DECL,,,,"class MapKVStore final : public KVStore {
 public:
  MaybeLocal<String> Get(Isolate* isolate, Local<String> key) const override;
  Maybe<std::string> Get(const char* key) const override;
  void Set(Isolate* isolate, Local<String> key, Local<String> value) override;
  int32_t Query(Isolate* isolate, Local<String> key) const override;
  int32_t Query(const char* key) const override;
  void Delete(Isolate* isolate, Local<String> key) override;
  Local<Array> Enumerate(Isolate* isolate) const override;

  std::shared_ptr<KVStore> Clone(Isolate* isolate) const override;

  MapKVStore() = default;
  MapKVStore(const MapKVStore& other) : KVStore(), map_(other.map_) {}

 private:
  mutable Mutex mutex_;
  std::unordered_map<std::string, std::string> map_;
}",1,node_env_var.cc,node.MapKVStore,KVStore,false,48,MapKVStore,2
159988,TYPE_DECL,,node_errors.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_errors.cc,node_errors.cc:<global>,,false,1,<global>,11
161171,TYPE_DECL,,,,"enum class EnhanceFatalException { kEnhance, kDontEnhance }",1,node_errors.cc,node.EnhanceFatalException,,false,352,EnhanceFatalException,14
162970,TYPE_DECL,,node_errors.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_errors.hpp,node_errors.hpp:<global>,,false,1,<global>,5
162975,TYPE_DECL,,node_exit_code.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_exit_code.hpp,node_exit_code.hpp:<global>,,false,1,<global>,1
162990,TYPE_DECL,,node_external_reference.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_external_reference.cc,node_external_reference.cc:<global>,,false,1,<global>,6
163037,TYPE_DECL,,node_external_reference.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_external_reference.hpp,node_external_reference.hpp:<global>,,false,1,<global>,5
163046,TYPE_DECL,,node_file-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_file-inl.hpp,node_file-inl.hpp:<global>,,false,1,<global>,3
163081,TYPE_DECL,,node_file.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_file.cc,node_file.cc:<global>,,false,1,<global>,26
166292,TYPE_DECL,ANY,,,typedef SimpleShutdownWrap<ReqWrap<uv_fs_t>> FileHandleCloseWrap;,46,node_file.cc,FileHandleCloseWrap,,false,673,FileHandleCloseWrap,38
187784,TYPE_DECL,,node_file.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_file.hpp,node_file.hpp:<global>,,false,1,<global>,6
187803,TYPE_DECL,,node_http2.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_http2.cc,node_http2.cc:<global>,,false,1,<global>,20
199154,TYPE_DECL,,node_http2.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_http2.hpp,node_http2.hpp:<global>,,false,1,<global>,13
199161,TYPE_DECL,,node_http2_state.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_http2_state.hpp,node_http2_state.hpp:<global>,,false,1,<global>,2
199178,TYPE_DECL,,node_http_common-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_http_common-inl.hpp,node_http_common-inl.hpp:<global>,,false,1,<global>,7
199799,TYPE_DECL,,node_http_common.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_http_common.hpp,node_http_common.hpp:<global>,,false,1,<global>,4
199832,TYPE_DECL,,,,"class Parser : public AsyncWrap, public StreamListener {
  friend class ConnectionsList;
  friend struct ParserComparator;

 public:
  Parser(BindingData* binding_data, Local<Object> wrap)
      : AsyncWrap(binding_data->env(), wrap),
        current_buffer_len_(0),
        current_buffer_data_(nullptr),
        binding_data_(binding_data) {
  }

  SET_NO_MEMORY_INFO()
  SET_MEMORY_INFO_NAME(Parser)
  SET_SELF_SIZE(Parser)

  int on_message_begin() {
    // Important: Pop from the lists BEFORE resetting the last_message_start_
    // otherwise std::set.erase will fail.
    if (connectionsList_ != nullptr) {
      connectionsList_->Pop(this);
      connectionsList_->PopActive(this);
    }

    num_fields_ = num_values_ = 0;
    headers_completed_ = false;
    last_message_start_ = uv_hrtime();
    url_.Reset();
    status_message_.Reset();

    if (connectionsList_ != nullptr) {
      connectionsList_->Push(this);
      connectionsList_->PushActive(this);
    }

    Local<Value> cb =...",1,node_http_parser.cc,node.anonymous_namespace_49.Parser,AsyncWrap;StreamListener,false,238,Parser,33
199856,TYPE_DECL,,node_http_parser.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_http_parser.cc,node_http_parser.cc:<global>,,false,1,<global>,12
199936,TYPE_DECL,,,,"class BindingData : public BaseObject {
 public:
  BindingData(Realm* realm, Local<Object> obj) : BaseObject(realm, obj) {}

  SET_BINDING_ID(http_parser_binding_data)

  std::vector<char> parser_buffer;
  bool parser_buffer_in_use = false;

  void MemoryInfo(MemoryTracker* tracker) const override {
    tracker->TrackField(""parser_buffer"", parser_buffer);
  }
  SET_SELF_SIZE(BindingData)
  SET_MEMORY_INFO_NAME(BindingData)
}",1,node_http_parser.cc,node.anonymous_namespace_22.BindingData,BaseObject,false,94,BindingData,28
199969,TYPE_DECL,,,,"struct StringPtr {
  StringPtr() {
    on_heap_ = false;
    Reset();
  }


  ~StringPtr() {
    Reset();
  }


  // If str_ does not point to a heap string yet, this function makes it do
  // so. This is called at the end of each http_parser_execute() so as not
  // to leak references. See issue #2438 and test-http-parser-bad-ref.js.
  void Save() {
    if (!on_heap_ && size_ > 0) {
      char* s = new char[size_];
      memcpy(s, str_, size_);
      str_ = s;
      on_heap_ = true;
    }
  }


  void Reset() {
    if (on_heap_) {
      delete[] str_;
      on_heap_ = false;
    }

    str_ = nullptr;
    size_ = 0;
  }


  void Update(const char* str, size_t size) {
    if (str_ == nullptr) {
      str_ = str;
    } else if (on_heap_ || str_ + size_ != str) {
      // Non-consecutive input, make a copy on the heap.
      // TODO(bnoordhuis) Use slab allocation, O(n) allocs is bad.
      char* s = new char[size_ + size];
      memcpy(s, str_, size_);
      memcpy(s + size_, str, si...",1,node_http_parser.cc,node.anonymous_namespace_25.StringPtr,,false,111,StringPtr,29
200138,TYPE_DECL,,,,class Parser,1,node_http_parser.cc,node.anonymous_namespace_36.Parser,,false,190,Parser,30
200139,TYPE_DECL,,,,"struct ParserComparator {
  bool operator()(const Parser* lhs, const Parser* rhs) const;
}",1,node_http_parser.cc,node.anonymous_namespace_37.ParserComparator,,false,192,ParserComparator,31
200146,TYPE_DECL,,,,"class ConnectionsList : public BaseObject {
 public:
    static void New(const FunctionCallbackInfo<Value>& args);

    static void All(const FunctionCallbackInfo<Value>& args);

    static void Idle(const FunctionCallbackInfo<Value>& args);

    static void Active(const FunctionCallbackInfo<Value>& args);

    static void Expired(const FunctionCallbackInfo<Value>& args);

    void Push(Parser* parser) {
      all_connections_.insert(parser);
    }

    void Pop(Parser* parser) {
      all_connections_.erase(parser);
    }

    void PushActive(Parser* parser) {
      active_connections_.insert(parser);
    }

    void PopActive(Parser* parser) {
      active_connections_.erase(parser);
    }

    SET_NO_MEMORY_INFO()
    SET_MEMORY_INFO_NAME(ConnectionsList)
    SET_SELF_SIZE(ConnectionsList)

 private:
    ConnectionsList(Environment* env, Local<Object> object)
      : BaseObject(env, object) {
        MakeWeak();
      }

    std::set<Parser*, ParserComparator> all_connections_;
 ...",1,node_http_parser.cc,node.anonymous_namespace_39.ConnectionsList,BaseObject,false,196,ConnectionsList,32
200215,TYPE_DECL,,,,friend class ConnectionsList,3,node_http_parser.cc,node.anonymous_namespace_50.Parser.ConnectionsList,,false,239,ConnectionsList,1
200216,TYPE_DECL,,,,friend struct ParserComparator,3,node_http_parser.cc,node.anonymous_namespace_51.Parser.ParserComparator,,false,240,ParserComparator,2
202354,TYPE_DECL,"node.anonymous_namespace_95.Parser.Proxy<Parser,Parser>",,,struct Proxy,38,node_http_parser.cc,node.anonymous_namespace_95.Parser.Proxy,,false,997,Proxy,56
202355,TYPE_DECL,"node.anonymous_namespace_96.Parser.Proxy<int(Parser.*)(Args...),Member><Parser,Args,int(Parser.*)(Args...)>",,,"struct Proxy<int (Parser::*)(Args...), Member> {
    static int Raw(llhttp_t* p, Args ... args) {
      Parser* parser = ContainerOf(&Parser::parser_, p);
      int rv = (parser->*Member)(std::forward<Args>(args)...);
      if (rv == 0) {
        rv = parser->MaybePause();
      }
      return rv;
    }
  }",3,node_http_parser.cc,"node.anonymous_namespace_96.Parser.Proxy<int(Parser.*)(Args...),Member>",,false,999,"Proxy<int (Parser::*)(Args...),Member>",57
203647,TYPE_DECL,,node_i18n.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_i18n.cc,node_i18n.cc:<global>,,false,1,<global>,25
203664,TYPE_DECL,,node_i18n.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_i18n.hpp,node_i18n.hpp:<global>,,false,1,<global>,7
203693,TYPE_DECL,,node_internals.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_internals.hpp,node_internals.hpp:<global>,,false,1,<global>,13
203708,TYPE_DECL,,node_main.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_main.cc,node_main.cc:<global>,,false,1,<global>,6
203758,TYPE_DECL,,node_main_instance.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_main_instance.cc,node_main_instance.cc:<global>,,false,1,<global>,17
204061,TYPE_DECL,,node_main_instance.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_main_instance.hpp,node_main_instance.hpp:<global>,,false,1,<global>,8
204070,TYPE_DECL,,node_mem-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_mem-inl.hpp,node_mem-inl.hpp:<global>,,false,1,<global>,3
204077,TYPE_DECL,,node_mem.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_mem.hpp,node_mem.hpp:<global>,,false,1,<global>,2
204099,TYPE_DECL,,node_messaging.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_messaging.cc,node_messaging.cc:<global>,,false,1,<global>,11
204157,TYPE_DECL,ANY,,,using BaseObjectList = std::vector<BaseObjectPtr<BaseObject>>;,1,node_messaging.cc,BaseObjectList,,false,44,BaseObjectList,1
204229,TYPE_DECL,,,,"class DeserializerDelegate : public ValueDeserializer::Delegate {
 public:
  DeserializerDelegate(
      Message* m,
      Environment* env,
      const std::vector<BaseObjectPtr<BaseObject>>& host_objects,
      const std::vector<Local<SharedArrayBuffer>>& shared_array_buffers,
      const std::vector<CompiledWasmModule>& wasm_modules,
      const std::optional<SharedValueConveyor>& shared_value_conveyor)
      : host_objects_(host_objects),
        shared_array_buffers_(shared_array_buffers),
        wasm_modules_(wasm_modules),
        shared_value_conveyor_(shared_value_conveyor) {}

  MaybeLocal<Object> ReadHostObject(Isolate* isolate) override {
    // Identifying the index in the message's BaseObject array is sufficient.
    uint32_t id;
    if (!deserializer->ReadUint32(&id))
      return MaybeLocal<Object>();
    if (id != kNormalObject) {
      CHECK_LT(id, host_objects_.size());
      return host_objects_[id]->object(isolate);
    }
    EscapableHandleScope scope(isolate)...",1,node_messaging.cc,node.worker.anonymous_namespace_1.DeserializerDelegate,ValueDeserializer.Delegate,false,89,DeserializerDelegate,1
204990,TYPE_DECL,,,,"class SerializerDelegate : public ValueSerializer::Delegate {
 public:
  SerializerDelegate(Environment* env, Local<Context> context, Message* m)
      : env_(env), context_(context), msg_(m) {}

  void ThrowDataCloneError(Local<String> message) override {
    ThrowDataCloneException(context_, message);
  }

  Maybe<bool> WriteHostObject(Isolate* isolate, Local<Object> object) override {
    if (BaseObject::IsBaseObject(object)) {
      return WriteHostObject(
          BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(object) });
    }

    // Convert process.env to a regular object.
    auto env_proxy_ctor_template = env_->env_proxy_ctor_template();
    if (!env_proxy_ctor_template.IsEmpty() &&
        env_proxy_ctor_template->HasInstance(object)) {
      HandleScope scope(isolate);
      // TODO(bnoordhuis) Prototype-less object in case process.env contains
      // a ""__proto__"" key? process.env has a prototype with concomitant
      // methods like toString(). It's probably confus...",1,node_messaging.cc,node.worker.anonymous_namespace_12.SerializerDelegate,ValueSerializer.Delegate,false,311,SerializerDelegate,4
205479,TYPE_DECL,,,,friend class worker::Message,3,node_messaging.cc,node.worker.anonymous_namespace_25.SerializerDelegate.Message,,false,452,Message,18
209545,TYPE_DECL,,node_messaging.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_messaging.hpp,node_messaging.hpp:<global>,,false,1,<global>,8
209600,TYPE_DECL,,node_metadata.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_metadata.cc,node_metadata.cc:<global>,,false,1,<global>,26
209728,TYPE_DECL,,node_metadata.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_metadata.hpp,node_metadata.hpp:<global>,,false,1,<global>,5
209741,TYPE_DECL,,node_mutex.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_mutex.hpp,node_mutex.hpp:<global>,,false,1,<global>,5
209750,TYPE_DECL,,node_object_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_object_wrap.hpp,node_object_wrap.hpp:<global>,,false,1,<global>,3
209754,TYPE_DECL,,,,"class ObjectWrap {
 public:
  ObjectWrap() {
    refs_ = 0;
  }


  virtual ~ObjectWrap() {
    if (persistent().IsEmpty())
      return;
    persistent().ClearWeak();
    persistent().Reset();
  }


  template <class T>
  static inline T* Unwrap(v8::Local<v8::Object> handle) {
    assert(!handle.IsEmpty());
    assert(handle->InternalFieldCount() > 0);
    // Cast to ObjectWrap before casting to T.  A direct cast from void
    // to T won't work right when T has more than one base class.
    void* ptr = handle->GetAlignedPointerFromInternalField(0);
    ObjectWrap* wrap = static_cast<ObjectWrap*>(ptr);
    return static_cast<T*>(wrap);
  }


  inline v8::Local<v8::Object> handle() {
    return handle(v8::Isolate::GetCurrent());
  }


  inline v8::Local<v8::Object> handle(v8::Isolate* isolate) {
    return v8::Local<v8::Object>::New(isolate, persistent());
  }


  // NOLINTNEXTLINE(runtime/v8_persistent)
  inline v8::Persistent<v8::Object>& persistent() {
    return handle_;
  }


 ...",1,node_object_wrap.hpp,node.ObjectWrap,,false,31,ObjectWrap,1
209984,TYPE_DECL,,node_options-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_options-inl.hpp,node_options-inl.hpp:<global>,,false,1,<global>,4
210011,TYPE_DECL,,node_options.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_options.cc,node_options.cc:<global>,,false,1,<global>,15
210401,TYPE_DECL,,,,"class DebugOptionsParser : public OptionsParser<DebugOptions> {
 public:
  DebugOptionsParser();
}",1,node_options.cc,node.options_parser.DebugOptionsParser,OptionsParser<DebugOptions>,false,228,DebugOptionsParser,1
210406,TYPE_DECL,,,,"class EnvironmentOptionsParser : public OptionsParser<EnvironmentOptions> {
 public:
  EnvironmentOptionsParser();
  explicit EnvironmentOptionsParser(const DebugOptionsParser& dop)
    : EnvironmentOptionsParser() {
    Insert(dop, &EnvironmentOptions::get_debug_options);
  }
}",1,node_options.cc,node.options_parser.EnvironmentOptionsParser,OptionsParser<EnvironmentOptions>,false,233,EnvironmentOptionsParser,2
210422,TYPE_DECL,,,,"class PerIsolateOptionsParser : public OptionsParser<PerIsolateOptions> {
 public:
  PerIsolateOptionsParser() = delete;
  explicit PerIsolateOptionsParser(const EnvironmentOptionsParser& eop);
}",1,node_options.cc,node.options_parser.PerIsolateOptionsParser,OptionsParser<PerIsolateOptions>,false,242,PerIsolateOptionsParser,3
210432,TYPE_DECL,,,,"class PerProcessOptionsParser : public OptionsParser<PerProcessOptions> {
 public:
  PerProcessOptionsParser() = delete;
  explicit PerProcessOptionsParser(const PerIsolateOptionsParser& iop);
}",1,node_options.cc,node.options_parser.PerProcessOptionsParser,OptionsParser<PerProcessOptions>,false,248,PerProcessOptionsParser,4
213075,TYPE_DECL,,node_options.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_options.hpp,node_options.hpp:<global>,,false,1,<global>,9
213088,TYPE_DECL,,node_os.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_os.cc,node_os.cc:<global>,,false,1,<global>,9
214908,TYPE_DECL,,node_perf.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_perf.cc,node_perf.cc:<global>,,false,1,<global>,12
217261,TYPE_DECL,,node_perf.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_perf.hpp,node_perf.hpp:<global>,,false,1,<global>,9
217282,TYPE_DECL,,node_perf_common.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_perf_common.hpp,node_perf_common.hpp:<global>,,false,1,<global>,9
217298,TYPE_DECL,,,,"class WorkerThreadsTaskRunner::DelayedTaskScheduler {
 public:
  explicit DelayedTaskScheduler(TaskQueue<Task>* tasks)
    : pending_worker_tasks_(tasks) {}

  std::unique_ptr<uv_thread_t> Start() {
    auto start_thread = [](void* data) {
      static_cast<DelayedTaskScheduler*>(data)->Run();
    };
    std::unique_ptr<uv_thread_t> t { new uv_thread_t() };
    uv_sem_init(&ready_, 0);
    CHECK_EQ(0, uv_thread_create(t.get(), start_thread, this));
    uv_sem_wait(&ready_);
    uv_sem_destroy(&ready_);
    return t;
  }

  void PostDelayedTask(std::unique_ptr<Task> task, double delay_in_seconds) {
    tasks_.Push(std::make_unique<ScheduleTask>(this, std::move(task),
                                               delay_in_seconds));
    uv_async_send(&flush_tasks_);
  }

  void Stop() {
    tasks_.Push(std::make_unique<StopTask>(this));
    uv_async_send(&flush_tasks_);
  }

 private:
  void Run() {
    TRACE_EVENT_METADATA1(""__metadata"", ""thread_name"", ""name"",
                      ...",1,node_platform.cc,node.DelayedTaskScheduler,,false,57,DelayedTaskScheduler,2
217305,TYPE_DECL,,,,"class StopTask : public Task {
   public:
    explicit StopTask(DelayedTaskScheduler* scheduler): scheduler_(scheduler) {}

    void Run() override {
      std::vector<uv_timer_t*> timers;
      for (uv_timer_t* timer : scheduler_->timers_)
        timers.push_back(timer);
      for (uv_timer_t* timer : timers)
        scheduler_->TakeTimerTask(timer);
      uv_close(reinterpret_cast<uv_handle_t*>(&scheduler_->flush_tasks_),
               [](uv_handle_t* handle) {});
    }

   private:
     DelayedTaskScheduler* scheduler_;
  }",3,node_platform.cc,node.DelayedTaskScheduler.StopTask,Task,false,106,StopTask,7
217351,TYPE_DECL,,node_platform.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_platform.cc,node_platform.cc:<global>,,false,1,<global>,8
217435,TYPE_DECL,,,,"struct PlatformWorkerData {
  TaskQueue<Task>* task_queue;
  Mutex* platform_workers_mutex;
  ConditionVariable* platform_workers_ready;
  int* pending_platform_workers;
  int id;
}",1,node_platform.cc,node.anonymous_namespace_1.PlatformWorkerData,,false,19,PlatformWorkerData,1
217733,TYPE_DECL,,,,"class ScheduleTask : public Task {
   public:
    ScheduleTask(DelayedTaskScheduler* scheduler,
                 std::unique_ptr<Task> task,
                 double delay_in_seconds)
      : scheduler_(scheduler),
        task_(std::move(task)),
        delay_in_seconds_(delay_in_seconds) {}

    void Run() override {
      uint64_t delay_millis = llround(delay_in_seconds_ * 1000);
      std::unique_ptr<uv_timer_t> timer(new uv_timer_t());
      CHECK_EQ(0, uv_timer_init(&scheduler_->loop_, timer.get()));
      timer->data = task_.release();
      CHECK_EQ(0, uv_timer_start(timer.get(), RunTask, delay_millis, 0));
      scheduler_->timers_.insert(timer.release());
    }

   private:
    DelayedTaskScheduler* scheduler_;
    std::unique_ptr<Task> task_;
    double delay_in_seconds_;
  }",3,node_platform.cc,node.DelayedTaskScheduler.ScheduleTask,Task,false,124,ScheduleTask,8
219190,TYPE_DECL,,node_platform.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_platform.hpp,node_platform.hpp:<global>,,false,1,<global>,9
219207,TYPE_DECL,,node_postmortem_metadata.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_postmortem_metadata.cc,node_postmortem_metadata.cc:<global>,,false,1,<global>,7
219372,TYPE_DECL,,node_process-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_process-inl.hpp,node_process-inl.hpp:<global>,,false,1,<global>,4
219383,TYPE_DECL,,node_process.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_process.hpp,node_process.hpp:<global>,,false,1,<global>,4
219396,TYPE_DECL,,node_process_events.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_process_events.cc,node_process_events.cc:<global>,,false,1,<global>,5
219758,TYPE_DECL,,node_process_methods.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_process_methods.cc,node_process_methods.cc:<global>,,false,1,<global>,24
221766,TYPE_DECL,,node_process_object.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_process_object.cc,node_process_object.cc:<global>,,false,1,<global>,12
222481,TYPE_DECL,,node_realm-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_realm-inl.hpp,node_realm-inl.hpp:<global>,,false,1,<global>,3
222513,TYPE_DECL,,node_realm.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_realm.cc,node_realm.cc:<global>,,false,1,<global>,7
223456,TYPE_DECL,,node_realm.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_realm.hpp,node_realm.hpp:<global>,,false,1,<global>,7
223493,TYPE_DECL,,node_report.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_report.cc,node_report.cc:<global>,,false,1,<global>,21
226754,TYPE_DECL,,node_report.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_report.hpp,node_report.hpp:<global>,,false,1,<global>,9
226787,TYPE_DECL,,node_report_module.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_report_module.cc,node_report_module.cc:<global>,,false,1,<global>,15
227725,TYPE_DECL,,node_report_utils.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_report_utils.cc,node_report_utils.cc:<global>,,false,1,<global>,5
228730,TYPE_DECL,,node_revert.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_revert.hpp,node_revert.hpp:<global>,,false,1,<global>,2
228735,TYPE_DECL,,node_root_certs.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_root_certs.hpp,node_root_certs.hpp:<global>,,false,1,<global>,1
228756,TYPE_DECL,,node_sea.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_sea.cc,node_sea.cc:<global>,,false,1,<global>,14
228866,TYPE_DECL,,,,"class SeaSerializer : public BlobSerializer<SeaSerializer> {
 public:
  SeaSerializer()
      : BlobSerializer<SeaSerializer>(
            per_process::enabled_debug_list.enabled(DebugCategory::SEA)) {}

  template <typename T,
            std::enable_if_t<!std::is_same<T, std::string>::value>* = nullptr,
            std::enable_if_t<!std::is_arithmetic<T>::value>* = nullptr>
  size_t Write(const T& data);
}",1,node_sea.cc,node.sea.anonymous_namespace_4.SeaSerializer,BlobSerializer<SeaSerializer>,false,53,SeaSerializer,4
228954,TYPE_DECL,,,,"class SeaDeserializer : public BlobDeserializer<SeaDeserializer> {
 public:
  explicit SeaDeserializer(std::string_view v)
      : BlobDeserializer<SeaDeserializer>(
            per_process::enabled_debug_list.enabled(DebugCategory::SEA), v) {}

  template <typename T,
            std::enable_if_t<!std::is_same<T, std::string>::value>* = nullptr,
            std::enable_if_t<!std::is_arithmetic<T>::value>* = nullptr>
  T Read();
}",1,node_sea.cc,node.sea.anonymous_namespace_8.SeaDeserializer,BlobDeserializer<SeaDeserializer>,false,84,SeaDeserializer,6
229152,TYPE_DECL,,,,"struct SeaConfig {
  std::string main_path;
  std::string output_path;
  SeaFlags flags = SeaFlags::kDefault;
}",1,node_sea.cc,node.sea.anonymous_namespace_16.SeaConfig,,false,182,SeaConfig,1
229494,TYPE_DECL,,node_sea.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_sea.hpp,node_sea.hpp:<global>,,false,1,<global>,5
229511,TYPE_DECL,,node_serdes.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_serdes.cc,node_serdes.cc:<global>,,false,1,<global>,7
229516,TYPE_DECL,,,,"class SerializerContext : public BaseObject,
                          public ValueSerializer::Delegate {
 public:
  SerializerContext(Environment* env,
                    Local<Object> wrap);

  ~SerializerContext() override = default;

  void ThrowDataCloneError(Local<String> message) override;
  Maybe<bool> WriteHostObject(Isolate* isolate, Local<Object> object) override;
  Maybe<uint32_t> GetSharedArrayBufferId(
      Isolate* isolate, Local<SharedArrayBuffer> shared_array_buffer) override;

  static void SetTreatArrayBufferViewsAsHostObjects(
      const FunctionCallbackInfo<Value>& args);

  static void New(const FunctionCallbackInfo<Value>& args);
  static void WriteHeader(const FunctionCallbackInfo<Value>& args);
  static void WriteValue(const FunctionCallbackInfo<Value>& args);
  static void ReleaseBuffer(const FunctionCallbackInfo<Value>& args);
  static void TransferArrayBuffer(const FunctionCallbackInfo<Value>& args);
  static void WriteUint32(const FunctionCallbackInfo...",1,node_serdes.cc,node.serdes.SerializerContext,BaseObject;ValueSerializer.Delegate,false,32,SerializerContext,1
229595,TYPE_DECL,,,,"class DeserializerContext : public BaseObject,
                            public ValueDeserializer::Delegate {
 public:
  DeserializerContext(Environment* env,
                      Local<Object> wrap,
                      Local<Value> buffer);

  ~DeserializerContext() override = default;

  MaybeLocal<Object> ReadHostObject(Isolate* isolate) override;

  static void New(const FunctionCallbackInfo<Value>& args);
  static void ReadHeader(const FunctionCallbackInfo<Value>& args);
  static void ReadValue(const FunctionCallbackInfo<Value>& args);
  static void TransferArrayBuffer(const FunctionCallbackInfo<Value>& args);
  static void GetWireFormatVersion(const FunctionCallbackInfo<Value>& args);
  static void ReadUint32(const FunctionCallbackInfo<Value>& args);
  static void ReadUint64(const FunctionCallbackInfo<Value>& args);
  static void ReadDouble(const FunctionCallbackInfo<Value>& args);
  static void ReadRawBytes(const FunctionCallbackInfo<Value>& args);

  SET_NO_MEMORY_INFO(...",1,node_serdes.cc,node.serdes.DeserializerContext,BaseObject;ValueDeserializer.Delegate,false,66,DeserializerContext,2
231504,TYPE_DECL,,node_shadow_realm.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_shadow_realm.cc,node_shadow_realm.cc:<global>,,false,1,<global>,4
231516,TYPE_DECL,ANY,,,using TryCatchScope = node::errors::TryCatchScope;,1,node_shadow_realm.cc,TryCatchScope,,false,14,TryCatchScope,1
231759,TYPE_DECL,,node_shadow_realm.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_shadow_realm.hpp,node_shadow_realm.hpp:<global>,,false,1,<global>,3
231776,TYPE_DECL,,node_snapshot_builder.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_snapshot_builder.hpp,node_snapshot_builder.hpp:<global>,,false,1,<global>,7
231783,TYPE_DECL,,node_snapshot_stub.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_snapshot_stub.cc,node_snapshot_stub.cc:<global>,,false,1,<global>,2
231814,TYPE_DECL,,node_snapshotable.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_snapshotable.cc,node_snapshotable.cc:<global>,,false,1,<global>,28
232259,TYPE_DECL,,,,"class SnapshotDeserializer : public BlobDeserializer<SnapshotDeserializer> {
 public:
  explicit SnapshotDeserializer(std::string_view v)
      : BlobDeserializer<SnapshotDeserializer>(
            per_process::enabled_debug_list.enabled(DebugCategory::MKSNAPSHOT),
            v) {}

  template <typename T,
            std::enable_if_t<!std::is_same<T, std::string>::value>* = nullptr,
            std::enable_if_t<!std::is_arithmetic<T>::value>* = nullptr>
  T Read();
}",1,node_snapshotable.cc,node.SnapshotDeserializer,BlobDeserializer<SnapshotDeserializer>,false,145,SnapshotDeserializer,10
232269,TYPE_DECL,,,,"class SnapshotSerializer : public BlobSerializer<SnapshotSerializer> {
 public:
  SnapshotSerializer()
      : BlobSerializer<SnapshotSerializer>(
            per_process::enabled_debug_list.enabled(
                DebugCategory::MKSNAPSHOT)) {
    // Currently the snapshot blob built with an empty script is around 4MB.
    // So use that as the default sink size.
    sink.reserve(4 * 1024 * 1024);
  }

  template <typename T,
            std::enable_if_t<!std::is_same<T, std::string>::value>* = nullptr,
            std::enable_if_t<!std::is_arithmetic<T>::value>* = nullptr>
  size_t Write(const T& data);
}",1,node_snapshotable.cc,node.SnapshotSerializer,BlobSerializer<SnapshotSerializer>,false,158,SnapshotSerializer,11
235562,TYPE_DECL,,node_snapshotable.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_snapshotable.hpp,node_snapshotable.hpp:<global>,,false,1,<global>,4
235581,TYPE_DECL,,node_sockaddr-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_sockaddr-inl.hpp,node_sockaddr-inl.hpp:<global>,,false,1,<global>,8
235606,TYPE_DECL,,node_sockaddr.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_sockaddr.cc,node_sockaddr.cc:<global>,,false,1,<global>,11
238694,TYPE_DECL,,node_sockaddr.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_sockaddr.hpp,node_sockaddr.hpp:<global>,,false,1,<global>,12
238719,TYPE_DECL,,node_stat_watcher.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_stat_watcher.cc,node_stat_watcher.cc:<global>,,false,1,<global>,11
239045,TYPE_DECL,,node_stat_watcher.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_stat_watcher.hpp,node_stat_watcher.hpp:<global>,,false,1,<global>,5
239056,TYPE_DECL,,node_symbols.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_symbols.cc,node_symbols.cc:<global>,,false,1,<global>,4
239102,TYPE_DECL,,node_task_queue.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_task_queue.cc,node_task_queue.cc:<global>,,false,1,<global>,11
240265,TYPE_DECL,,node_threadsafe_cow-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_threadsafe_cow-inl.hpp,node_threadsafe_cow-inl.hpp:<global>,,false,1,<global>,1
240278,TYPE_DECL,,node_threadsafe_cow.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_threadsafe_cow.hpp,node_threadsafe_cow.hpp:<global>,,false,1,<global>,5
240305,TYPE_DECL,,node_trace_events.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_trace_events.cc,node_trace_events.cc:<global>,,false,1,<global>,12
240309,TYPE_DECL,,,,class ExternalReferenceRegistry,1,node_trace_events.cc,node.ExternalReferenceRegistry,,false,16,ExternalReferenceRegistry,1
240310,TYPE_DECL,,,,"class NodeCategorySet : public BaseObject {
 public:
  static void Initialize(Local<Object> target,
                  Local<Value> unused,
                  Local<Context> context,
                  void* priv);
  static void RegisterExternalReferences(ExternalReferenceRegistry* registry);
  static void New(const FunctionCallbackInfo<Value>& args);
  static void Enable(const FunctionCallbackInfo<Value>& args);
  static void Disable(const FunctionCallbackInfo<Value>& args);

  const std::set<std::string>& GetCategories() const { return categories_; }

  void MemoryInfo(MemoryTracker* tracker) const override {
    tracker->TrackField(""categories"", categories_);
  }

  SET_MEMORY_INFO_NAME(NodeCategorySet)
  SET_SELF_SIZE(NodeCategorySet)

 private:
  NodeCategorySet(Environment* env,
                  Local<Object> wrap,
                  std::set<std::string>&& categories) :
        BaseObject(env, wrap), categories_(std::move(categories)) {
    MakeWeak();
  }

  bool enabled_ = fal...",1,node_trace_events.cc,node.NodeCategorySet,BaseObject,false,30,NodeCategorySet,2
240853,TYPE_DECL,,node_types.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_types.cc,node_types.cc:<global>,,false,1,<global>,4
241673,TYPE_DECL,,node_union_bytes.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_union_bytes.hpp,node_union_bytes.hpp:<global>,,false,1,<global>,2
241702,TYPE_DECL,,node_url.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_url.cc,node_url.cc:<global>,,false,1,<global>,13
243275,TYPE_DECL,,node_url.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_url.hpp,node_url.hpp:<global>,,false,1,<global>,10
243292,TYPE_DECL,,node_util.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_util.cc,node_util.cc:<global>,,false,1,<global>,7
245091,TYPE_DECL,,node_util.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_util.hpp,node_util.hpp:<global>,,false,1,<global>,4
245114,TYPE_DECL,,node_v8.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_v8.cc,node_v8.cc:<global>,,false,1,<global>,10
247400,TYPE_DECL,,node_v8.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_v8.hpp,node_v8.hpp:<global>,,false,1,<global>,8
247427,TYPE_DECL,,node_v8_platform-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_v8_platform-inl.hpp,node_v8_platform-inl.hpp:<global>,,false,1,<global>,12
247432,TYPE_DECL,,node_version.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_version.hpp,node_version.hpp:<global>,,false,1,<global>,1
247459,TYPE_DECL,,node_wasi.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_wasi.cc,node_wasi.cc:<global>,,false,1,<global>,12
252601,TYPE_DECL,,node_wasi.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_wasi.hpp,node_wasi.hpp:<global>,,false,1,<global>,5
252614,TYPE_DECL,,node_wasm_web_api.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_wasm_web_api.cc,node_wasm_web_api.cc:<global>,,false,1,<global>,5
253271,TYPE_DECL,,node_wasm_web_api.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_wasm_web_api.hpp,node_wasm_web_api.hpp:<global>,,false,1,<global>,3
253295,TYPE_DECL,,node_watchdog.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_watchdog.cc,node_watchdog.cc:<global>,,false,1,<global>,9
254154,TYPE_DECL,,node_watchdog.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_watchdog.hpp,node_watchdog.hpp:<global>,,false,1,<global>,8
254170,TYPE_DECL,,,,"class WorkerThreadData {
 public:
  explicit WorkerThreadData(Worker* w)
    : w_(w) {
    int ret = uv_loop_init(&loop_);
    if (ret != 0) {
      char err_buf[128];
      uv_err_name_r(ret, err_buf, sizeof(err_buf));
      // TODO(joyeecheung): maybe this should be kBootstrapFailure instead?
      w->Exit(ExitCode::kGenericUserError, ""ERR_WORKER_INIT_FAILED"", err_buf);
      return;
    }
    loop_init_failed_ = false;
    uv_loop_configure(&loop_, UV_METRICS_IDLE_TIME);

    std::shared_ptr<ArrayBufferAllocator> allocator =
        ArrayBufferAllocator::Create();
    Isolate::CreateParams params;
    SetIsolateCreateParamsForNode(&params);
    w->UpdateResourceConstraints(&params.constraints);
    params.array_buffer_allocator_shared = allocator;
    Isolate* isolate =
        NewIsolate(&params, &loop_, w->platform_, w->snapshot_data());
    if (isolate == nullptr) {
      // TODO(joyeecheung): maybe this should be kBootstrapFailure instead?
      w->Exit(ExitCode::kGenericUser...",1,node_worker.cc,node.worker.WorkerThreadData,,false,141,WorkerThreadData,6
254206,TYPE_DECL,,node_worker.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_worker.cc,node_worker.cc:<global>,,false,1,<global>,17
254996,TYPE_DECL,,,,friend class Worker,3,node_worker.cc,node.worker.WorkerThreadData.Worker,,false,251,Worker,9
256850,TYPE_DECL,,,,"class WorkerHeapSnapshotTaker : public AsyncWrap {
 public:
  WorkerHeapSnapshotTaker(Environment* env, Local<Object> obj)
    : AsyncWrap(env, obj, AsyncWrap::PROVIDER_WORKERHEAPSNAPSHOT) {}

  SET_NO_MEMORY_INFO()
  SET_MEMORY_INFO_NAME(WorkerHeapSnapshotTaker)
  SET_SELF_SIZE(WorkerHeapSnapshotTaker)
}",1,node_worker.cc,node.worker.WorkerHeapSnapshotTaker,AsyncWrap,false,792,WorkerHeapSnapshotTaker,22
258058,TYPE_DECL,,node_worker.hpp:<global>,NAMESPACE_BLOCK,<global>,1,node_worker.hpp,node_worker.hpp:<global>,,false,1,<global>,6
258068,TYPE_DECL,node.anonymous_namespace_48.CompressionStream<CompressionContext>,,,"class CompressionStream : public AsyncWrap, public ThreadPoolWork {
 public:
  enum InternalFields {
    kCompressionStreamBaseField = AsyncWrap::kInternalFieldCount,
    kWriteJSCallback,
    kInternalFieldCount
  };

  CompressionStream(Environment* env, Local<Object> wrap)
      : AsyncWrap(env, wrap, AsyncWrap::PROVIDER_ZLIB),
        ThreadPoolWork(env, ""zlib""),
        write_result_(nullptr) {
    MakeWeak();
  }

  ~CompressionStream() override {
    CHECK(!write_in_progress_);
    Close();
    CHECK_EQ(zlib_memory_, 0);
    CHECK_EQ(unreported_allocations_, 0);
  }

  void Close() {
    if (write_in_progress_) {
      pending_close_ = true;
      return;
    }

    pending_close_ = false;
    closed_ = true;
    CHECK(init_done_ && ""close before init"");

    AllocScope alloc_scope(this);
    ctx_.Close();
  }


  static void Close(const FunctionCallbackInfo<Value>& args) {
    CompressionStream* ctx;
    ASSIGN_OR_RETURN_UNWRAP(&ctx, args.Holder());
    ctx->Close();
  }


 ...",1,node_zlib.cc,node.anonymous_namespace_48.CompressionStream,AsyncWrap;ThreadPoolWork,false,252,CompressionStream,12
258104,TYPE_DECL,,node_zlib.cc:<global>,NAMESPACE_BLOCK,<global>,1,node_zlib.cc,node_zlib.cc:<global>,,false,1,<global>,18
258181,TYPE_DECL,,,,"enum node_zlib_mode {
  NONE,
  DEFLATE,
  INFLATE,
  GZIP,
  GUNZIP,
  DEFLATERAW,
  INFLATERAW,
  UNZIP,
  BROTLI_DECODE,
  BROTLI_ENCODE
}",1,node_zlib.cc,node.anonymous_namespace_2.node_zlib_mode,,false,97,node_zlib_mode,2
258200,TYPE_DECL,,,,"struct CompressionError {
  CompressionError(const char* message, const char* code, int err)
      : message(message),
        code(code),
        err(err) {
    CHECK_NOT_NULL(message);
  }

  CompressionError() = default;

  const char* message = nullptr;
  const char* code = nullptr;
  int err = 0;

  inline bool IsError() const { return code != nullptr; }
}",1,node_zlib.cc,node.anonymous_namespace_3.CompressionError,,false,113,CompressionError,7
258238,TYPE_DECL,,,,"class ZlibContext final : public MemoryRetainer {
 public:
  ZlibContext() = default;

  // Streaming-related, should be available for all compression libraries:
  void Close();
  void DoThreadPoolWork();
  void SetBuffers(const char* in, uint32_t in_len, char* out, uint32_t out_len);
  void SetFlush(int flush);
  void GetAfterWriteOffsets(uint32_t* avail_in, uint32_t* avail_out) const;
  CompressionError GetErrorInfo() const;
  inline void SetMode(node_zlib_mode mode) { mode_ = mode; }
  CompressionError ResetStream();

  // Zlib-specific:
  void Init(int level, int window_bits, int mem_level, int strategy,
            std::vector<unsigned char>&& dictionary);
  void SetAllocationFunctions(alloc_func alloc, free_func free, void* opaque);
  CompressionError SetParams(int level, int strategy);

  SET_MEMORY_INFO_NAME(ZlibContext)
  SET_SELF_SIZE(ZlibContext)

  void MemoryInfo(MemoryTracker* tracker) const override {
    tracker->TrackField(""dictionary"", dictionary_);
  }

  ZlibCont...",1,node_zlib.cc,node.anonymous_namespace_7.ZlibContext,MemoryRetainer,false,130,ZlibContext,8
258389,TYPE_DECL,,,,"class BrotliContext : public MemoryRetainer {
 public:
  BrotliContext() = default;

  void SetBuffers(const char* in, uint32_t in_len, char* out, uint32_t out_len);
  void SetFlush(int flush);
  void GetAfterWriteOffsets(uint32_t* avail_in, uint32_t* avail_out) const;
  inline void SetMode(node_zlib_mode mode) { mode_ = mode; }

  BrotliContext(const BrotliContext&) = delete;
  BrotliContext& operator=(const BrotliContext&) = delete;

 protected:
  node_zlib_mode mode_ = NONE;
  const uint8_t* next_in_ = nullptr;
  uint8_t* next_out_ = nullptr;
  size_t avail_in_ = 0;
  size_t avail_out_ = 0;
  BrotliEncoderOperation flush_ = BROTLI_OPERATION_PROCESS;
  // TODO(addaleax): These should not need to be stored here.
  // This is currently only done this way to make implementing ResetStream()
  // easier.
  brotli_alloc_func alloc_ = nullptr;
  brotli_free_func free_ = nullptr;
  void* alloc_opaque_ = nullptr;
}",1,node_zlib.cc,node.anonymous_namespace_26.BrotliContext,MemoryRetainer,false,182,BrotliContext,9
258471,TYPE_DECL,,,,"class BrotliEncoderContext final : public BrotliContext {
 public:
  void Close();
  void DoThreadPoolWork();
  CompressionError Init(brotli_alloc_func alloc,
                        brotli_free_func free,
                        void* opaque);
  CompressionError ResetStream();
  CompressionError SetParams(int key, uint32_t value);
  CompressionError GetErrorInfo() const;

  SET_MEMORY_INFO_NAME(BrotliEncoderContext)
  SET_SELF_SIZE(BrotliEncoderContext)
  SET_NO_MEMORY_INFO()  // state_ is covered through allocation tracking.

 private:
  bool last_result_ = false;
  DeleteFnPtr<BrotliEncoderState, BrotliEncoderDestroyInstance> state_;
}",1,node_zlib.cc,node.anonymous_namespace_34.BrotliEncoderContext,BrotliContext,false,209,BrotliEncoderContext,10
258507,TYPE_DECL,,,,"class BrotliDecoderContext final : public BrotliContext {
 public:
  void Close();
  void DoThreadPoolWork();
  CompressionError Init(brotli_alloc_func alloc,
                        brotli_free_func free,
                        void* opaque);
  CompressionError ResetStream();
  CompressionError SetParams(int key, uint32_t value);
  CompressionError GetErrorInfo() const;

  SET_MEMORY_INFO_NAME(BrotliDecoderContext)
  SET_SELF_SIZE(BrotliDecoderContext)
  SET_NO_MEMORY_INFO()  // state_ is covered through allocation tracking.

 private:
  BrotliDecoderResult last_result_ = BROTLI_DECODER_RESULT_SUCCESS;
  BrotliDecoderErrorCode error_ = BROTLI_DECODER_NO_ERROR;
  std::string error_string_;
  DeleteFnPtr<BrotliDecoderState, BrotliDecoderDestroyInstance> state_;
}",1,node_zlib.cc,node.anonymous_namespace_41.BrotliDecoderContext,BrotliContext,false,229,BrotliDecoderContext,11
258552,TYPE_DECL,,,,"enum InternalFields {
    kCompressionStreamBaseField = AsyncWrap::kInternalFieldCount,
    kWriteJSCallback,
    kInternalFieldCount
  }",3,node_zlib.cc,node.anonymous_namespace_49.CompressionStream.InternalFields,,false,254,InternalFields,1
259411,TYPE_DECL,,,,"struct AllocScope {
    explicit AllocScope(CompressionStream* stream) : stream(stream) {}
    ~AllocScope() { stream->AdjustAmountOfExternalAllocatedMemory(); }
    CompressionStream* stream;
  }",3,node_zlib.cc,node.anonymous_namespace_91.CompressionStream.AllocScope,,false,523,AllocScope,21
259489,TYPE_DECL,,,,"class ZlibStream final : public CompressionStream<ZlibContext> {
 public:
  ZlibStream(Environment* env, Local<Object> wrap, node_zlib_mode mode)
    : CompressionStream(env, wrap) {
    context()->SetMode(mode);
  }

  static void New(const FunctionCallbackInfo<Value>& args) {
    Environment* env = Environment::GetCurrent(args);
    CHECK(args[0]->IsInt32());
    node_zlib_mode mode =
        static_cast<node_zlib_mode>(args[0].As<Int32>()->Value());
    new ZlibStream(env, args.This(), mode);
  }

  // just pull the ints out of the args and call the other Init
  static void Init(const FunctionCallbackInfo<Value>& args) {
    // Refs: https://github.com/nodejs/node/issues/16649
    // Refs: https://github.com/nodejs/node/issues/14161
    if (args.Length() == 5) {
      fprintf(stderr,
          ""WARNING: You are likely using a version of node-tar or npm that ""
          ""is incompatible with this version of Node.js.\nPlease use ""
          ""either the version of npm that is bundle...",1,node_zlib.cc,node.anonymous_namespace_96.ZlibStream,CompressionStream<ZlibContext>,false,555,ZlibStream,13
259889,TYPE_DECL,node.anonymous_namespace_101.BrotliCompressionStream<CompressionContext>,,,"class BrotliCompressionStream final :
  public CompressionStream<CompressionContext> {
 public:
  BrotliCompressionStream(Environment* env,
                          Local<Object> wrap,
                          node_zlib_mode mode)
    : CompressionStream<CompressionContext>(env, wrap) {
    context()->SetMode(mode);
  }

  inline CompressionContext* context() {
    return this->CompressionStream<CompressionContext>::context();
  }
  typedef typename CompressionStream<CompressionContext>::AllocScope AllocScope;

  static void New(const FunctionCallbackInfo<Value>& args) {
    Environment* env = Environment::GetCurrent(args);
    CHECK(args[0]->IsInt32());
    node_zlib_mode mode =
        static_cast<node_zlib_mode>(args[0].As<Int32>()->Value());
    new BrotliCompressionStream(env, args.This(), mode);
  }

  static void Init(const FunctionCallbackInfo<Value>& args) {
    BrotliCompressionStream* wrap;
    ASSIGN_OR_RETURN_UNWRAP(&wrap, args.Holder());
    CHECK(args.Length() == 3 ...",1,node_zlib.cc,node.anonymous_namespace_101.BrotliCompressionStream,CompressionStream<CompressionContext>,false,653,BrotliCompressionStream,14
259911,TYPE_DECL,ANY,,,typedef typename CompressionStream<CompressionContext>::AllocScope AllocScope;,70,node_zlib.cc,AllocScope,,false,666,AllocScope,3
260170,TYPE_DECL,BrotliCompressionStream<BrotliEncoderContext>,,,using BrotliEncoderStream = BrotliCompressionStream<BrotliEncoderContext>;,1,node_zlib.cc,BrotliEncoderStream,,false,729,BrotliEncoderStream,15
260171,TYPE_DECL,BrotliCompressionStream<BrotliDecoderContext>,,,using BrotliDecoderStream = BrotliCompressionStream<BrotliDecoderContext>;,1,node_zlib.cc,BrotliDecoderStream,,false,730,BrotliDecoderStream,16
261396,TYPE_DECL,node.anonymous_namespace_149.MakeClass<Stream>,,,"struct MakeClass {
  static void Make(Environment* env, Local<Object> target, const char* name) {
    Isolate* isolate = env->isolate();
    Local<FunctionTemplate> z = NewFunctionTemplate(isolate, Stream::New);

    z->InstanceTemplate()->SetInternalFieldCount(
        Stream::kInternalFieldCount);
    z->Inherit(AsyncWrap::GetConstructorTemplate(env));

    SetProtoMethod(isolate, z, ""write"", Stream::template Write<true>);
    SetProtoMethod(isolate, z, ""writeSync"", Stream::template Write<false>);
    SetProtoMethod(isolate, z, ""close"", Stream::Close);

    SetProtoMethod(isolate, z, ""init"", Stream::Init);
    SetProtoMethod(isolate, z, ""params"", Stream::Params);
    SetProtoMethod(isolate, z, ""reset"", Stream::Reset);

    SetConstructorFunction(env->context(), target, name, z);
  }

  static void Make(ExternalReferenceRegistry* registry) {
    registry->Register(Stream::New);
    registry->Register(Stream::template Write<true>);
    registry->Register(Stream::template Write<false...",1,node_zlib.cc,node.anonymous_namespace_149.MakeClass,,false,1257,MakeClass,45
272228,TYPE_DECL,,permission\child_process_permission.cc:<global>,NAMESPACE_BLOCK,<global>,1,permission\child_process_permission.cc,permission\child_process_permission.cc:<global>,,false,1,<global>,4
272258,TYPE_DECL,,permission\child_process_permission.hpp:<global>,NAMESPACE_BLOCK,<global>,1,permission\child_process_permission.hpp,permission\child_process_permission.hpp:<global>,,false,1,<global>,3
272289,TYPE_DECL,,permission\fs_permission.cc:<global>,NAMESPACE_BLOCK,<global>,1,permission\fs_permission.cc,permission\fs_permission.cc:<global>,,false,1,<global>,14
272916,TYPE_DECL,,permission\fs_permission.hpp:<global>,NAMESPACE_BLOCK,<global>,1,permission\fs_permission.hpp,permission\fs_permission.hpp:<global>,,false,1,<global>,5
272925,TYPE_DECL,,permission\inspector_permission.cc:<global>,NAMESPACE_BLOCK,<global>,1,permission\inspector_permission.cc,permission\inspector_permission.cc:<global>,,false,1,<global>,3
272955,TYPE_DECL,,permission\inspector_permission.hpp:<global>,NAMESPACE_BLOCK,<global>,1,permission\inspector_permission.hpp,permission\inspector_permission.hpp:<global>,,false,1,<global>,3
272982,TYPE_DECL,,permission\permission.cc:<global>,NAMESPACE_BLOCK,<global>,1,permission\permission.cc,permission\permission.cc:<global>,,false,1,<global>,12
273417,TYPE_DECL,,permission\permission.hpp:<global>,NAMESPACE_BLOCK,<global>,1,permission\permission.hpp,permission\permission.hpp:<global>,,false,1,<global>,11
273430,TYPE_DECL,,permission\permission_base.hpp:<global>,NAMESPACE_BLOCK,<global>,1,permission\permission_base.hpp,permission\permission_base.hpp:<global>,,false,1,<global>,5
273441,TYPE_DECL,,permission\worker_permission.cc:<global>,NAMESPACE_BLOCK,<global>,1,permission\worker_permission.cc,permission\worker_permission.cc:<global>,,false,1,<global>,4
273471,TYPE_DECL,,permission\worker_permission.hpp:<global>,NAMESPACE_BLOCK,<global>,1,permission\worker_permission.hpp,permission\worker_permission.hpp:<global>,,false,1,<global>,3
273500,TYPE_DECL,,pipe_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,pipe_wrap.cc,pipe_wrap.cc:<global>,,false,1,<global>,13
274679,TYPE_DECL,,pipe_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,pipe_wrap.hpp,pipe_wrap.hpp:<global>,,false,1,<global>,3
274700,TYPE_DECL,,process_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,process_wrap.cc,process_wrap.cc:<global>,,false,1,<global>,9
274705,TYPE_DECL,,,,"class ProcessWrap : public HandleWrap {
 public:
  static void Initialize(Local<Object> target,
                         Local<Value> unused,
                         Local<Context> context,
                         void* priv) {
    Environment* env = Environment::GetCurrent(context);
    Isolate* isolate = env->isolate();
    Local<FunctionTemplate> constructor = NewFunctionTemplate(isolate, New);
    constructor->InstanceTemplate()->SetInternalFieldCount(
        ProcessWrap::kInternalFieldCount);

    constructor->Inherit(HandleWrap::GetConstructorTemplate(env));

    SetProtoMethod(isolate, constructor, ""spawn"", Spawn);
    SetProtoMethod(isolate, constructor, ""kill"", Kill);

    SetConstructorFunction(context, target, ""Process"", constructor);
  }

  SET_NO_MEMORY_INFO()
  SET_MEMORY_INFO_NAME(ProcessWrap)
  SET_SELF_SIZE(ProcessWrap)

 private:
  static void New(const FunctionCallbackInfo<Value>& args) {
    // This constructor should not be exposed to public javascript.
    /...",1,process_wrap.cc,node.anonymous_namespace_1.ProcessWrap,HandleWrap,false,50,ProcessWrap,1
276005,TYPE_DECL,,quic\bindingdata.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\bindingdata.cc,quic\bindingdata.cc:<global>,,false,1,<global>,13
276030,TYPE_DECL,,quic\bindingdata.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\bindingdata.hpp,quic\bindingdata.hpp:<global>,,false,1,<global>,11
276045,TYPE_DECL,,quic\cid.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\cid.cc,quic\cid.cc:<global>,,false,1,<global>,6
276056,TYPE_DECL,,quic\cid.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\cid.hpp,quic\cid.hpp:<global>,,false,1,<global>,4
276075,TYPE_DECL,,quic\data.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\data.cc,quic\data.cc:<global>,,false,1,<global>,8
276094,TYPE_DECL,,quic\data.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\data.hpp,quic\data.hpp:<global>,,false,1,<global>,8
276109,TYPE_DECL,,quic\defs.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\defs.hpp,quic\defs.hpp:<global>,,false,1,<global>,6
276417,TYPE_DECL,,quic\logstream.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\logstream.cc,quic\logstream.cc:<global>,,false,1,<global>,11
276432,TYPE_DECL,,quic\logstream.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\logstream.hpp,quic\logstream.hpp:<global>,,false,1,<global>,6
276465,TYPE_DECL,,quic\packet.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\packet.cc,quic\packet.cc:<global>,,false,1,<global>,15
276496,TYPE_DECL,,quic\packet.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\packet.hpp,quic\packet.hpp:<global>,,false,1,<global>,14
276517,TYPE_DECL,,quic\preferredaddress.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\preferredaddress.cc,quic\preferredaddress.cc:<global>,,false,1,<global>,9
276532,TYPE_DECL,,quic\preferredaddress.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\preferredaddress.hpp,quic\preferredaddress.hpp:<global>,,false,1,<global>,6
276549,TYPE_DECL,,quic\sessionticket.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\sessionticket.cc,quic\sessionticket.cc:<global>,,false,1,<global>,7
276566,TYPE_DECL,,quic\sessionticket.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\sessionticket.hpp,quic\sessionticket.hpp:<global>,,false,1,<global>,7
276595,TYPE_DECL,,quic\tlscontext.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\tlscontext.cc,quic\tlscontext.cc:<global>,,false,1,<global>,13
276616,TYPE_DECL,,quic\tlscontext.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\tlscontext.hpp,quic\tlscontext.hpp:<global>,,false,1,<global>,9
276635,TYPE_DECL,,quic\tokens.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\tokens.cc,quic\tokens.cc:<global>,,false,1,<global>,8
276650,TYPE_DECL,,quic\tokens.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\tokens.hpp,quic\tokens.hpp:<global>,,false,1,<global>,6
276673,TYPE_DECL,,quic\transportparams.cc:<global>,NAMESPACE_BLOCK,<global>,1,quic\transportparams.cc,quic\transportparams.cc:<global>,,false,1,<global>,10
276694,TYPE_DECL,,quic\transportparams.hpp:<global>,NAMESPACE_BLOCK,<global>,1,quic\transportparams.hpp,quic\transportparams.hpp:<global>,,false,1,<global>,9
276705,TYPE_DECL,,req_wrap-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,req_wrap-inl.hpp,req_wrap-inl.hpp:<global>,,false,1,<global>,4
276716,TYPE_DECL,,req_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,req_wrap.hpp,req_wrap.hpp:<global>,,false,1,<global>,4
276782,TYPE_DECL,,,,"class SignalWrap : public HandleWrap {
 public:
  static void Initialize(Local<Object> target,
                         Local<Value> unused,
                         Local<Context> context,
                         void* priv) {
    Environment* env = Environment::GetCurrent(context);
    Isolate* isolate = env->isolate();
    Local<FunctionTemplate> constructor = NewFunctionTemplate(isolate, New);
    constructor->InstanceTemplate()->SetInternalFieldCount(
        SignalWrap::kInternalFieldCount);
    constructor->Inherit(HandleWrap::GetConstructorTemplate(env));

    SetProtoMethod(isolate, constructor, ""start"", Start);
    SetProtoMethod(isolate, constructor, ""stop"", Stop);

    SetConstructorFunction(context, target, ""Signal"", constructor);
  }

  static void RegisterExternalReferences(ExternalReferenceRegistry* registry) {
    registry->Register(New);
    registry->Register(Start);
    registry->Register(Stop);
  }

  SET_NO_MEMORY_INFO()
  SET_MEMORY_INFO_NAME(SignalWrap)
  SE...",1,signal_wrap.cc,node.anonymous_namespace_1.SignalWrap,HandleWrap,false,49,SignalWrap,3
276798,TYPE_DECL,,signal_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,signal_wrap.cc,signal_wrap.cc:<global>,,false,1,<global>,8
277133,TYPE_DECL,,spawn_sync.cc:<global>,NAMESPACE_BLOCK,<global>,1,spawn_sync.cc,spawn_sync.cc:<global>,,false,1,<global>,8
280239,TYPE_DECL,,spawn_sync.hpp:<global>,NAMESPACE_BLOCK,<global>,1,spawn_sync.hpp,spawn_sync.hpp:<global>,,false,1,<global>,4
280254,TYPE_DECL,,stream_base-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,stream_base-inl.hpp,stream_base-inl.hpp:<global>,,false,1,<global>,6
280285,TYPE_DECL,,stream_base.cc:<global>,NAMESPACE_BLOCK,<global>,1,stream_base.cc,stream_base.cc:<global>,,false,1,<global>,14
283219,TYPE_DECL,,stream_base.hpp:<global>,NAMESPACE_BLOCK,<global>,1,stream_base.hpp,stream_base.hpp:<global>,,false,1,<global>,6
283444,TYPE_DECL,,stream_pipe.cc:<global>,NAMESPACE_BLOCK,<global>,1,stream_pipe.cc,stream_pipe.cc:<global>,,false,1,<global>,5
284451,TYPE_DECL,,stream_pipe.hpp:<global>,NAMESPACE_BLOCK,<global>,1,stream_pipe.hpp,stream_pipe.hpp:<global>,,false,1,<global>,2
284473,TYPE_DECL,,stream_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,stream_wrap.cc,stream_wrap.cc:<global>,,false,1,<global>,15
285745,TYPE_DECL,ANY,,,typedef SimpleShutdownWrap<ReqWrap<uv_shutdown_t>> LibuvShutdownWrap;,52,stream_wrap.cc,LibuvShutdownWrap,,false,324,LibuvShutdownWrap,19
285746,TYPE_DECL,ANY,,,typedef SimpleWriteWrap<ReqWrap<uv_write_t>> LibuvWriteWrap;,46,stream_wrap.cc,LibuvWriteWrap,,false,325,LibuvWriteWrap,20
286004,TYPE_DECL,,stream_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,stream_wrap.hpp,stream_wrap.hpp:<global>,,false,1,<global>,4
286029,TYPE_DECL,,string_bytes.cc:<global>,NAMESPACE_BLOCK,<global>,1,string_bytes.cc,string_bytes.cc:<global>,,false,1,<global>,11
286034,TYPE_DECL,"node.anonymous_namespace_1.ExternString<ResourceType,TypeName>",,,"class ExternString: public ResourceType {
 public:
  ~ExternString() override {
    free(const_cast<TypeName*>(data_));
    isolate()->AdjustAmountOfExternalAllocatedMemory(-byte_length());
  }

  const TypeName* data() const override {
    return data_;
  }

  size_t length() const override {
    return length_;
  }

  int64_t byte_length() const {
    return length() * sizeof(*data());
  }

  static MaybeLocal<Value> NewFromCopy(Isolate* isolate,
                                       const TypeName* data,
                                       size_t length,
                                       Local<Value>* error) {
    if (length == 0)
      return String::Empty(isolate);

    if (length < EXTERN_APEX)
      return NewSimpleFromCopy(isolate, data, length, error);

    TypeName* new_data = node::UncheckedMalloc<TypeName>(length);
    if (new_data == nullptr) {
      *error = node::ERR_MEMORY_ALLOCATION_FAILED(isolate);
      return MaybeLocal<Value>();
    }
    memcpy(new_dat...",1,string_bytes.cc,node.anonymous_namespace_1.ExternString,ResourceType,false,56,ExternString,1
286264,TYPE_DECL,ANY,,,"typedef ExternString<String::ExternalOneByteStringResource,
                     char> ExternOneByteString;",28,string_bytes.cc,ExternOneByteString,,false,148,ExternOneByteString,2
286265,TYPE_DECL,ANY,,,"typedef ExternString<String::ExternalStringResource,
                     uint16_t> ExternTwoByteString;",32,string_bytes.cc,ExternTwoByteString,,false,150,ExternTwoByteString,3
289021,TYPE_DECL,,string_bytes.hpp:<global>,NAMESPACE_BLOCK,<global>,1,string_bytes.hpp,string_bytes.hpp:<global>,,false,1,<global>,4
289028,TYPE_DECL,,string_decoder-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,string_decoder-inl.hpp,string_decoder-inl.hpp:<global>,,false,1,<global>,2
289049,TYPE_DECL,,string_decoder.cc:<global>,NAMESPACE_BLOCK,<global>,1,string_decoder.cc,string_decoder.cc:<global>,,false,1,<global>,9
290229,TYPE_DECL,,string_decoder.hpp:<global>,NAMESPACE_BLOCK,<global>,1,string_decoder.hpp,string_decoder.hpp:<global>,,false,1,<global>,2
290240,TYPE_DECL,,string_search.hpp:<global>,NAMESPACE_BLOCK,<global>,1,string_search.hpp,string_search.hpp:<global>,,false,1,<global>,4
290257,TYPE_DECL,,tcp_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,tcp_wrap.cc,tcp_wrap.cc:<global>,,false,1,<global>,13
292134,TYPE_DECL,,tcp_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,tcp_wrap.hpp,tcp_wrap.hpp:<global>,,false,1,<global>,3
292145,TYPE_DECL,,threadpoolwork-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,threadpoolwork-inl.hpp,threadpoolwork-inl.hpp:<global>,,false,1,<global>,4
292158,TYPE_DECL,,timer_wrap-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,timer_wrap-inl.hpp,timer_wrap-inl.hpp:<global>,,false,1,<global>,5
292173,TYPE_DECL,,timer_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,timer_wrap.cc,timer_wrap.cc:<global>,,false,1,<global>,6
292420,TYPE_DECL,,timer_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,timer_wrap.hpp,timer_wrap.hpp:<global>,,false,1,<global>,5
292437,TYPE_DECL,,timers.cc:<global>,NAMESPACE_BLOCK,<global>,1,timers.cc,timers.cc:<global>,,false,1,<global>,7
293020,TYPE_DECL,,timers.hpp:<global>,NAMESPACE_BLOCK,<global>,1,timers.hpp,timers.hpp:<global>,,false,1,<global>,3
293043,TYPE_DECL,,tracing\agent.cc:<global>,NAMESPACE_BLOCK,<global>,1,tracing\agent.cc,tracing\agent.cc:<global>,,false,1,<global>,7
293079,TYPE_DECL,,,,"class Agent::ScopedSuspendTracing {
 public:
  ScopedSuspendTracing(TracingController* controller, Agent* agent,
                       bool do_suspend = true)
    : controller_(controller), agent_(do_suspend ? agent : nullptr) {
    if (do_suspend) {
      CHECK(agent_->started_);
      controller->StopTracing();
    }
  }

  ~ScopedSuspendTracing() {
    if (agent_ == nullptr) return;
    TraceConfig* config = agent_->CreateTraceConfig();
    if (config != nullptr) {
      controller_->StartTracing(config);
    }
  }

 private:
  TracingController* controller_;
  Agent* agent_;
}",1,tracing\agent.cc,node.tracing.ScopedSuspendTracing,,false,12,ScopedSuspendTracing,1
293790,TYPE_DECL,,tracing\agent.hpp:<global>,NAMESPACE_BLOCK,<global>,1,tracing\agent.hpp,tracing\agent.hpp:<global>,,false,1,<global>,9
293794,TYPE_DECL,,,,class ConvertableToTraceFormat,1,tracing\agent.hpp,v8.ConvertableToTraceFormat,,false,15,ConvertableToTraceFormat,1
293795,TYPE_DECL,,,,class TracingController,1,tracing\agent.hpp,v8.TracingController,,false,16,TracingController,2
293798,TYPE_DECL,,,,class Agent,1,tracing\agent.hpp,node.tracing.Agent,,false,25,Agent,1
293799,TYPE_DECL,,,,"class AsyncTraceWriter {
 public:
  virtual ~AsyncTraceWriter() = default;
  virtual void AppendTraceEvent(TraceObject* trace_event) = 0;
  virtual void Flush(bool blocking) = 0;
  virtual void InitializeOnThread(uv_loop_t* loop) {}
}",1,tracing\agent.hpp,node.tracing.AsyncTraceWriter,,false,27,AsyncTraceWriter,2
293819,TYPE_DECL,,,,"class TracingController : public v8::platform::tracing::TracingController {
 public:
  TracingController() : v8::platform::tracing::TracingController() {}

  int64_t CurrentTimestampMicroseconds() override {
    return uv_hrtime() / 1000;
  }
  void AddMetadataEvent(
      const unsigned char* category_group_enabled,
      const char* name,
      int num_args,
      const char** arg_names,
      const unsigned char* arg_types,
      const uint64_t* arg_values,
      std::unique_ptr<v8::ConvertableToTraceFormat>* convertable_values,
      unsigned int flags);
}",1,tracing\agent.hpp,node.tracing.TracingController,v8.platform.tracing.TracingController,false,35,TracingController,3
293844,TYPE_DECL,,,,"class AgentWriterHandle {
 public:
  inline AgentWriterHandle() = default;
  inline ~AgentWriterHandle() { reset(); }

  inline AgentWriterHandle(AgentWriterHandle&& other);
  inline AgentWriterHandle& operator=(AgentWriterHandle&& other);
  inline bool empty() const { return agent_ == nullptr; }
  inline void reset();

  inline void Enable(const std::set<std::string>& categories);
  inline void Disable(const std::set<std::string>& categories);

  inline bool IsDefaultHandle();

  inline Agent* agent() { return agent_; }

  inline v8::TracingController* GetTracingController();

  AgentWriterHandle(const AgentWriterHandle& other) = delete;
  AgentWriterHandle& operator=(const AgentWriterHandle& other) = delete;

 private:
  inline AgentWriterHandle(Agent* agent, int id) : agent_(agent), id_(id) {}

  Agent* agent_ = nullptr;
  int id_ = 0;

  friend class Agent;
}",1,tracing\agent.hpp,node.tracing.AgentWriterHandle,,false,53,AgentWriterHandle,4
293918,TYPE_DECL,,,,friend class Agent,3,tracing\agent.hpp,node.tracing.AgentWriterHandle.Agent,,false,81,Agent,17
293929,TYPE_DECL,,,,"class Agent {
 public:
  Agent();
  ~Agent();

  TracingController* GetTracingController() {
    TracingController* controller = tracing_controller_.get();
    CHECK_NOT_NULL(controller);
    return controller;
  }

  enum UseDefaultCategoryMode {
    kUseDefaultCategories,
    kIgnoreDefaultCategories
  };

  // Destroying the handle disconnects the client
  AgentWriterHandle AddClient(const std::set<std::string>& categories,
                              std::unique_ptr<AsyncTraceWriter> writer,
                              enum UseDefaultCategoryMode mode);
  // A handle that is only used for managing the default categories
  // (which can then implicitly be used through using `USE_DEFAULT_CATEGORIES`
  // when adding a client later).
  AgentWriterHandle DefaultHandle();

  // Returns a comma-separated list of enabled categories.
  std::string GetEnabledCategories() const;

  // Writes to all writers registered through AddClient().
  void AppendTraceEvent(TraceObject* trace_even...",1,tracing\agent.hpp,node.tracing.Agent,,false,84,Agent,5
293953,TYPE_DECL,,,,"enum UseDefaultCategoryMode {
    kUseDefaultCategories,
    kIgnoreDefaultCategories
  }",3,tracing\agent.hpp,node.tracing.Agent.UseDefaultCategoryMode,,false,95,UseDefaultCategoryMode,4
293990,TYPE_DECL,,,,friend class AgentWriterHandle,3,tracing\agent.hpp,node.tracing.Agent.AgentWriterHandle,,false,122,AgentWriterHandle,12
294023,TYPE_DECL,,,,class ScopedSuspendTracing,3,tracing\agent.hpp,node.tracing.Agent.ScopedSuspendTracing,,false,137,ScopedSuspendTracing,22
294025,TYPE_DECL,,,,enum { kDefaultHandleId = -1 },3,tracing\agent.hpp,node.tracing.Agent.anonymous_enum_0,,false,141,anonymous_enum_0,24
294204,TYPE_DECL,,tracing\node_trace_buffer.cc:<global>,NAMESPACE_BLOCK,<global>,1,tracing\node_trace_buffer.cc,tracing\node_trace_buffer.cc:<global>,,false,1,<global>,4
294809,TYPE_DECL,,tracing\node_trace_buffer.hpp:<global>,NAMESPACE_BLOCK,<global>,1,tracing\node_trace_buffer.hpp,tracing\node_trace_buffer.hpp:<global>,,false,1,<global>,5
294814,TYPE_DECL,,,,class NodeTraceBuffer,1,tracing\node_trace_buffer.hpp,node.tracing.NodeTraceBuffer,,false,18,NodeTraceBuffer,1
294815,TYPE_DECL,,,,"class InternalTraceBuffer {
 public:
  InternalTraceBuffer(size_t max_chunks, uint32_t id, Agent* agent);

  TraceObject* AddTraceEvent(uint64_t* handle);
  TraceObject* GetEventByHandle(uint64_t handle);
  void Flush(bool blocking);
  bool IsFull() const {
    return total_chunks_ == max_chunks_ && chunks_[total_chunks_ - 1]->IsFull();
  }
  bool IsFlushing() const {
    return flushing_;
  }

 private:
  uint64_t MakeHandle(size_t chunk_index, uint32_t chunk_seq,
                      size_t event_index) const;
  void ExtractHandle(uint64_t handle, uint32_t* buffer_id, size_t* chunk_index,
                     uint32_t* chunk_seq, size_t* event_index) const;
  size_t Capacity() const { return max_chunks_ * TraceBufferChunk::kChunkSize; }

  Mutex mutex_;
  bool flushing_;
  size_t max_chunks_;
  Agent* agent_;
  std::vector<std::unique_ptr<TraceBufferChunk>> chunks_;
  size_t total_chunks_ = 0;
  uint32_t current_chunk_seq_ = 1;
  uint32_t id_;
}",1,tracing\node_trace_buffer.hpp,node.tracing.InternalTraceBuffer,,false,20,InternalTraceBuffer,2
294905,TYPE_DECL,,,,"class NodeTraceBuffer : public TraceBuffer {
 public:
  NodeTraceBuffer(size_t max_chunks, Agent* agent, uv_loop_t* tracing_loop);
  ~NodeTraceBuffer() override;

  TraceObject* AddTraceEvent(uint64_t* handle) override;
  TraceObject* GetEventByHandle(uint64_t handle) override;
  bool Flush() override;

  static const size_t kBufferChunks = 1024;

 private:
  bool TryLoadAvailableBuffer();
  static void NonBlockingFlushSignalCb(uv_async_t* signal);
  static void ExitSignalCb(uv_async_t* signal);

  uv_loop_t* tracing_loop_;
  uv_async_t flush_signal_;
  uv_async_t exit_signal_;
  bool exited_ = false;
  // Used exclusively for exit logic.
  Mutex exit_mutex_;
  // Used to wait until async handles have been closed.
  ConditionVariable exit_cond_;
  std::atomic<InternalTraceBuffer*> current_buf_;
  InternalTraceBuffer buffer1_;
  InternalTraceBuffer buffer2_;
}",1,tracing\node_trace_buffer.hpp,node.tracing.NodeTraceBuffer,TraceBuffer,false,51,NodeTraceBuffer,3
294985,TYPE_DECL,,tracing\node_trace_writer.cc:<global>,NAMESPACE_BLOCK,<global>,1,tracing\node_trace_writer.cc,tracing\node_trace_writer.cc:<global>,,false,1,<global>,5
295669,TYPE_DECL,,tracing\node_trace_writer.hpp:<global>,NAMESPACE_BLOCK,<global>,1,tracing\node_trace_writer.hpp,tracing\node_trace_writer.hpp:<global>,,false,1,<global>,6
295674,TYPE_DECL,,,,"class NodeTraceWriter : public AsyncTraceWriter {
 public:
  explicit NodeTraceWriter(const std::string& log_file_pattern);
  ~NodeTraceWriter() override;

  void InitializeOnThread(uv_loop_t* loop) override;
  void AppendTraceEvent(TraceObject* trace_event) override;
  void Flush(bool blocking) override;

  static const int kTracesPerFile = 1 << 19;

 private:
  struct WriteRequest {
    std::string str;
    int highest_request_id;
  };

  void AfterWrite();
  void StartWrite(uv_buf_t buf);
  void OpenNewFileForStreaming();
  void WriteToFile(std::string&& str, int highest_request_id);
  void WriteSuffix();
  void FlushPrivate();
  static void ExitSignalCb(uv_async_t* signal);

  uv_loop_t* tracing_loop_ = nullptr;
  // Triggers callback to initiate writing the contents of stream_ to disk.
  uv_async_t flush_signal_;
  // Triggers callback to close async objects, ending the tracing thread.
  uv_async_t exit_signal_;
  // Prevents concurrent R/W on state related to serialized trace ...",1,tracing\node_trace_writer.hpp,node.tracing.NodeTraceWriter,AsyncTraceWriter,false,17,NodeTraceWriter,1
295700,TYPE_DECL,,,,"struct WriteRequest {
    std::string str;
    int highest_request_id;
  }",3,tracing\node_trace_writer.hpp,node.tracing.NodeTraceWriter.WriteRequest,,false,29,WriteRequest,7
295790,TYPE_DECL,,tracing\trace_event.cc:<global>,NAMESPACE_BLOCK,<global>,1,tracing\trace_event.cc,tracing\trace_event.cc:<global>,,false,1,<global>,3
295881,TYPE_DECL,,tracing\trace_event.hpp:<global>,NAMESPACE_BLOCK,<global>,1,tracing\trace_event.hpp,tracing\trace_event.hpp:<global>,,false,1,<global>,5
295884,TYPE_DECL,,,,"enum CategoryGroupEnabledFlags {
  // Category group enabled for the recording mode.
  kEnabledForRecording_CategoryGroupEnabledFlags = 1 << 0,
  // Category group enabled by SetEventCallbackEnabled().
  kEnabledForEventCallback_CategoryGroupEnabledFlags = 1 << 2,
  // Category group enabled to export events to ETW.
  kEnabledForETWExport_CategoryGroupEnabledFlags = 1 << 3,
}",1,tracing\trace_event.hpp,CategoryGroupEnabledFlags,,false,23,CategoryGroupEnabledFlags,1
295921,TYPE_DECL,,,,"class TraceEventHelper {
 public:
  static v8::TracingController* GetTracingController();
  static void SetTracingController(v8::TracingController* controller);

  static Agent* GetAgent();
  static void SetAgent(Agent* agent);

  static inline const uint8_t* GetCategoryGroupEnabled(const char* group) {
    v8::TracingController* controller = GetTracingController();
    static const uint8_t disabled = 0;
    if (UNLIKELY(controller == nullptr)) return &disabled;
    return controller->GetCategoryGroupEnabled(group);
  }
}",1,tracing\trace_event.hpp,node.tracing.TraceEventHelper,,false,313,TraceEventHelper,7
295968,TYPE_DECL,,,,"class TraceID {
 public:
  class WithScope {
   public:
    WithScope(const char* scope, uint64_t raw_id)
        : scope_(scope), raw_id_(raw_id) {}
    uint64_t raw_id() const { return raw_id_; }
    const char* scope() const { return scope_; }

   private:
    const char* scope_ = nullptr;
    uint64_t raw_id_;
  };

  class DontMangle {
   public:
    explicit DontMangle(const void* raw_id)
        : raw_id_(static_cast<uint64_t>(reinterpret_cast<uintptr_t>(raw_id))) {}
    explicit DontMangle(uint64_t raw_id) : raw_id_(raw_id) {}
    explicit DontMangle(unsigned int raw_id) : raw_id_(raw_id) {}
    explicit DontMangle(uint16_t raw_id) : raw_id_(raw_id) {}
    explicit DontMangle(unsigned char raw_id) : raw_id_(raw_id) {}
    explicit DontMangle(int64_t raw_id)
        : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit DontMangle(int raw_id) : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit DontMangle(int16_t raw_id)
        : raw_id_(static_cast<uint64_t>(raw_id)) ...",1,tracing\trace_event.hpp,node.tracing.TraceID,,false,332,TraceID,8
295969,TYPE_DECL,,,,"class WithScope {
   public:
    WithScope(const char* scope, uint64_t raw_id)
        : scope_(scope), raw_id_(raw_id) {}
    uint64_t raw_id() const { return raw_id_; }
    const char* scope() const { return scope_; }

   private:
    const char* scope_ = nullptr;
    uint64_t raw_id_;
  }",3,tracing\trace_event.hpp,node.tracing.TraceID.WithScope,,false,334,WithScope,1
295997,TYPE_DECL,,,,"class DontMangle {
   public:
    explicit DontMangle(const void* raw_id)
        : raw_id_(static_cast<uint64_t>(reinterpret_cast<uintptr_t>(raw_id))) {}
    explicit DontMangle(uint64_t raw_id) : raw_id_(raw_id) {}
    explicit DontMangle(unsigned int raw_id) : raw_id_(raw_id) {}
    explicit DontMangle(uint16_t raw_id) : raw_id_(raw_id) {}
    explicit DontMangle(unsigned char raw_id) : raw_id_(raw_id) {}
    explicit DontMangle(int64_t raw_id)
        : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit DontMangle(int raw_id) : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit DontMangle(int16_t raw_id)
        : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit DontMangle(signed char raw_id)
        : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit DontMangle(WithScope scoped_id)
        : scope_(scoped_id.scope()), raw_id_(scoped_id.raw_id()) {}
    const char* scope() const { return scope_; }
    uint64_t raw_id() const { return raw_id_; }

   private:
  ...",3,tracing\trace_event.hpp,node.tracing.TraceID.DontMangle,,false,346,DontMangle,2
296069,TYPE_DECL,,,,"class ForceMangle {
   public:
    explicit ForceMangle(uint64_t raw_id) : raw_id_(raw_id) {}
    explicit ForceMangle(unsigned int raw_id) : raw_id_(raw_id) {}
    explicit ForceMangle(uint16_t raw_id) : raw_id_(raw_id) {}
    explicit ForceMangle(unsigned char raw_id) : raw_id_(raw_id) {}
    explicit ForceMangle(int64_t raw_id)
        : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit ForceMangle(int raw_id) : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit ForceMangle(int16_t raw_id)
        : raw_id_(static_cast<uint64_t>(raw_id)) {}
    explicit ForceMangle(signed char raw_id)
        : raw_id_(static_cast<uint64_t>(raw_id)) {}
    uint64_t raw_id() const { return raw_id_; }

   private:
    uint64_t raw_id_;
  }",3,tracing\trace_event.hpp,node.tracing.TraceID.ForceMangle,,false,371,ForceMangle,3
296254,TYPE_DECL,,,,"union TraceValueUnion {
  bool as_bool;
  uint64_t as_uint;
  int64_t as_int;
  double as_double;
  const void* as_pointer;
  const char* as_string;
}",1,tracing\trace_event.hpp,node.tracing.TraceValueUnion,,false,439,TraceValueUnion,9
296261,TYPE_DECL,,,,"class TraceStringWithCopy {
 public:
  explicit TraceStringWithCopy(const char* str) : str_(str) {}
  operator const char*() const { return str_; }

 private:
  const char* str_;
}",1,tracing\trace_event.hpp,node.tracing.TraceStringWithCopy,,false,449,TraceStringWithCopy,10
296865,TYPE_DECL,,,,"class ScopedTracer {
 public:
  // Note: members of data_ intentionally left uninitialized. See Initialize.
  ScopedTracer() : p_data_(nullptr) {}

  ~ScopedTracer() {
    if (p_data_ && *data_.category_group_enabled)
      TRACE_EVENT_API_UPDATE_TRACE_EVENT_DURATION(
          data_.category_group_enabled, data_.name, data_.event_handle);
  }

  void Initialize(const uint8_t* category_group_enabled, const char* name,
                  uint64_t event_handle) {
    data_.category_group_enabled = category_group_enabled;
    data_.name = name;
    data_.event_handle = event_handle;
    p_data_ = &data_;
  }

 private:
  // This Data struct workaround is to avoid initializing all the members
  // in Data during construction of this object, since this object is always
  // constructed, even when tracing is disabled. If the members of Data were
  // members of this class instead, compiler warnings occur about potential
  // uninitialized accesses.
  struct Data {
    const uint8_t* catego...",1,tracing\trace_event.hpp,node.tracing.ScopedTracer,,false,683,ScopedTracer,36
296937,TYPE_DECL,,,,"struct Data {
    const uint8_t* category_group_enabled;
    const char* name;
    uint64_t event_handle;
  }",3,tracing\trace_event.hpp,node.tracing.ScopedTracer.Data,,false,708,Data,4
296945,TYPE_DECL,,tracing\trace_event_common.hpp:<global>,NAMESPACE_BLOCK,<global>,1,tracing\trace_event_common.hpp,tracing\trace_event_common.hpp:<global>,,false,1,<global>,1
296964,TYPE_DECL,,tracing\traced_value.cc:<global>,NAMESPACE_BLOCK,<global>,1,tracing\traced_value.cc,tracing\traced_value.cc:<global>,,false,1,<global>,8
297399,TYPE_DECL,,tracing\traced_value.hpp:<global>,NAMESPACE_BLOCK,<global>,1,tracing\traced_value.hpp,tracing\traced_value.hpp:<global>,,false,1,<global>,7
297404,TYPE_DECL,,,,"class TracedValue : public v8::ConvertableToTraceFormat {
 public:
  ~TracedValue() override = default;

  static std::unique_ptr<TracedValue> Create();
  static std::unique_ptr<TracedValue> CreateArray();

  void EndDictionary();
  void EndArray();

  // These methods assume that |name| is a long lived ""quoted"" string.
  void SetInteger(const char* name, int value);
  void SetDouble(const char* name, double value);
  void SetBoolean(const char* name, bool value);
  void SetNull(const char* name);
  void SetString(const char* name, const char* value);
  void SetString(const char* name, const std::string& value) {
    SetString(name, value.c_str());
  }
  void BeginDictionary(const char* name);
  void BeginArray(const char* name);

  void AppendInteger(int);
  void AppendDouble(double);
  void AppendBoolean(bool);
  void AppendNull();
  void AppendString(const char*);
  void AppendString(const std::string& value) { AppendString(value.c_str()); }
  void BeginArray();
  void BeginDicti...",1,tracing\traced_value.hpp,node.tracing.TracedValue,v8.ConvertableToTraceFormat,false,19,TracedValue,1
297568,TYPE_DECL,,tty_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,tty_wrap.cc,tty_wrap.cc:<global>,,false,1,<global>,9
298038,TYPE_DECL,,tty_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,tty_wrap.hpp,tty_wrap.hpp:<global>,,false,1,<global>,3
298077,TYPE_DECL,,udp_wrap.cc:<global>,NAMESPACE_BLOCK,<global>,1,udp_wrap.cc,udp_wrap.cc:<global>,,false,1,<global>,9
298179,TYPE_DECL,,,,"class SendWrap : public ReqWrap<uv_udp_send_t> {
 public:
  SendWrap(Environment* env, Local<Object> req_wrap_obj, bool have_callback);
  inline bool have_callback() const;
  size_t msg_size;

  SET_NO_MEMORY_INFO()
  SET_MEMORY_INFO_NAME(SendWrap)
  SET_SELF_SIZE(SendWrap)

 private:
  const bool have_callback_;
}",1,udp_wrap.cc,node.SendWrap,ReqWrap<uv_udp_send_t>,false,74,SendWrap,2
300974,TYPE_DECL,,udp_wrap.hpp:<global>,NAMESPACE_BLOCK,<global>,1,udp_wrap.hpp,udp_wrap.hpp:<global>,,false,1,<global>,6
300979,TYPE_DECL,,undici_version.hpp:<global>,NAMESPACE_BLOCK,<global>,1,undici_version.hpp,undici_version.hpp:<global>,,false,1,<global>,1
300994,TYPE_DECL,,util-inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,util-inl.hpp,util-inl.hpp:<global>,,false,1,<global>,6
301007,TYPE_DECL,,util.cc:<global>,NAMESPACE_BLOCK,<global>,1,util.cc,util.cc:<global>,,false,1,<global>,20
303038,TYPE_DECL,,util.hpp:<global>,NAMESPACE_BLOCK,<global>,1,util.hpp,util.hpp:<global>,,false,1,<global>,19
303053,TYPE_DECL,,uv.cc:<global>,NAMESPACE_BLOCK,<global>,1,uv.cc,uv.cc:<global>,,false,1,<global>,6
303058,TYPE_DECL,,,,"struct UVError {
  int value;
  const char* name;
  const char* message;
}",1,uv.cc,node.per_process.UVError,,false,31,UVError,1
303062,TYPE_DECL,uv_errors_map,,,static const struct UVError,1,uv.cc,node.per_process.UVError,,false,39,UVError,2
305449,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BINDING_NO_CLASS!,,<includes>,!ISemanticProblem.BINDING_NO_CLASS!,,true,,BINDING_NO_CLASS!,-1
305450,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ACCESS_DESCRIPTION*,,<includes>,ACCESS_DESCRIPTION*,,true,,ACCESS_DESCRIPTION*,-1
305451,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ACHHandle,,<includes>,ACHHandle,,true,,ACHHandle,-1
305452,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ACHHandle*,,<includes>,ACHHandle*,,true,,ACHHandle*,-1
305453,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AESCipherConfig,,<includes>,AESCipherConfig,,true,,AESCipherConfig,-1
305454,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AESCipherConfig*,,<includes>,AESCipherConfig*,,true,,AESCipherConfig*,-1
305455,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ANY,,<includes>,ANY,,true,,ANY,-1
305456,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ANY*,,<includes>,ANY*,,true,,ANY*,-1
305457,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ANY[],,<includes>,ANY[],,true,,ANY[],-1
305458,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ARG1_TYPE,,<includes>,ARG1_TYPE,,true,,ARG1_TYPE,-1
305459,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ARG2_TYPE,,<includes>,ARG2_TYPE,,true,,ARG2_TYPE,-1
305460,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ASN1_IA5STRING*,,<includes>,ASN1_IA5STRING*,,true,,ASN1_IA5STRING*,-1
305461,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ASN1_INTEGER*,,<includes>,ASN1_INTEGER*,,true,,ASN1_INTEGER*,-1
305462,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ASN1_OBJECT*,,<includes>,ASN1_OBJECT*,,true,,ASN1_OBJECT*,-1
305463,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ASN1_OCTET_STRING*,,<includes>,ASN1_OCTET_STRING*,,true,,ASN1_OCTET_STRING*,-1
305464,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ASN1_STRING*,,<includes>,ASN1_STRING*,,true,,ASN1_STRING*,-1
305465,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ASN1_UTF8STRING*,,<includes>,ASN1_UTF8STRING*,,true,,ASN1_UTF8STRING*,-1
305466,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AUTHORITY_INFO_ACCESS*,,<includes>,AUTHORITY_INFO_ACCESS*,,true,,AUTHORITY_INFO_ACCESS*,-1
305467,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AccessControl,,<includes>,AccessControl,,true,,AccessControl,-1
305468,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Agent,,<includes>,Agent,,true,,Agent,-1
305469,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Agent*,,<includes>,Agent*,,true,,Agent*,-1
305470,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AgentWorkerInspectorDelegate,,<includes>,AgentWorkerInspectorDelegate,,true,,AgentWorkerInspectorDelegate,-1
305471,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AgentWriterHandle,,<includes>,AgentWriterHandle,,true,,AgentWriterHandle,-1
305472,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AliasedFloat64Array,,<includes>,AliasedFloat64Array,,true,,AliasedFloat64Array,-1
305473,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AliasedUint32Array,,<includes>,AliasedUint32Array,,true,,AliasedUint32Array,-1
305474,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AnotherThreadObjectReference,,<includes>,AnotherThreadObjectReference,,true,,AnotherThreadObjectReference,-1
305475,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AnotherThreadObjectReference<InspectorSessionDelegate>,,<includes>,AnotherThreadObjectReference<InspectorSessionDelegate>,,true,,AnotherThreadObjectReference<InspectorSessionDelegate>,-1
305476,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AnotherThreadObjectReference<MainThreadSessionState>,,<includes>,AnotherThreadObjectReference<MainThreadSessionState>,,true,,AnotherThreadObjectReference<MainThreadSessionState>,-1
305477,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Arg,,<includes>,Arg,,true,,Arg,-1
305478,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Args,,<includes>,Args,,true,,Args,-1
305479,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Argument,,<includes>,Argument,,true,,Argument,-1
305480,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Array,,<includes>,Array,,true,,Array,-1
305481,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArrayBuffer,,<includes>,ArrayBuffer,,true,,ArrayBuffer,-1
305482,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArrayBufferAllocator,,<includes>,ArrayBufferAllocator,,true,,ArrayBufferAllocator,-1
305483,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArrayBufferAllocator*,,<includes>,ArrayBufferAllocator*,,true,,ArrayBufferAllocator*,-1
305484,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArrayBufferOrViewContents<char>,,<includes>,ArrayBufferOrViewContents<char>,,true,,ArrayBufferOrViewContents<char>,-1
305485,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArrayBufferOrViewContents<unsigned char>,,<includes>,ArrayBufferOrViewContents<unsigned char>,,true,,ArrayBufferOrViewContents<unsigned char>,-1
305486,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArrayBufferViewContents<char>,,<includes>,ArrayBufferViewContents<char>,,true,,ArrayBufferViewContents<char>,-1
305487,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArrayBufferViewContents<unsigned char>,,<includes>,ArrayBufferViewContents<unsigned char>,,true,,ArrayBufferViewContents<unsigned char>,-1
305488,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AssertionInfo,,<includes>,AssertionInfo,,true,,AssertionInfo,-1
305489,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsymmetricKeyEncodingConfig*,,<includes>,AsymmetricKeyEncodingConfig*,,true,,AsymmetricKeyEncodingConfig*,-1
305490,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncCleanupHook,,<includes>,AsyncCleanupHook,,true,,AsyncCleanupHook,-1
305491,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncCleanupHookInfo*,,<includes>,AsyncCleanupHookInfo*,,true,,AsyncCleanupHookInfo*,-1
305492,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncContext,,<includes>,AsyncContext,,true,,AsyncContext,-1
305493,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncContext*,,<includes>,AsyncContext*,,true,,AsyncContext*,-1
305494,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncHooks,,<includes>,AsyncHooks,,true,,AsyncHooks,-1
305495,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncHooks*,,<includes>,AsyncHooks*,,true,,AsyncHooks*,-1
305496,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncResource,,<includes>,AsyncResource,,true,,AsyncResource,-1
305497,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncResource*,,<includes>,AsyncResource*,,true,,AsyncResource*,-1
305498,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncTraceWriter,,<includes>,AsyncTraceWriter,,true,,AsyncTraceWriter,-1
305499,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncTraceWriter*,,<includes>,AsyncTraceWriter*,,true,,AsyncTraceWriter*,-1
305500,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncWrap,,<includes>,AsyncWrap,,true,,AsyncWrap,-1
305501,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsyncWrap*,,<includes>,AsyncWrap*,,true,,AsyncWrap*,-1
305502,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AtomicsWaitEvent,,<includes>,AtomicsWaitEvent,,true,,AtomicsWaitEvent,-1
305503,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BIGNUM,,<includes>,BIGNUM,,true,,BIGNUM,-1
305504,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BIGNUM*,,<includes>,BIGNUM*,,true,,BIGNUM*,-1
305505,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BIO*,,<includes>,BIO*,,true,,BIO*,-1
305506,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BIOPointer,,<includes>,BIOPointer,,true,,BIOPointer,-1
305507,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BIO_METHOD,,<includes>,BIO_METHOD,,true,,BIO_METHOD,-1
305508,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BIO_METHOD*,,<includes>,BIO_METHOD*,,true,,BIO_METHOD*,-1
305509,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BIO_new,,<includes>,BIO_new,,true,,BIO_new,-1
305510,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BN_ULONG,,<includes>,BN_ULONG,,true,,BN_ULONG,-1
305511,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BUF_MEM*,,<includes>,BUF_MEM*,,true,,BUF_MEM*,-1
305512,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObject,,<includes>,BaseObject,,true,,BaseObject,-1
305513,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObject*,,<includes>,BaseObject*,,true,,BaseObject*,-1
305514,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<AsyncWrap>,,<includes>,BaseObjectPtr<AsyncWrap>,,true,,BaseObjectPtr<AsyncWrap>,-1
305515,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<BaseObject>,,<includes>,BaseObjectPtr<BaseObject>,,true,,BaseObjectPtr<BaseObject>,-1
305516,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<BindingData>,,<includes>,BaseObjectPtr<BindingData>,,true,,BaseObjectPtr<BindingData>,-1
305517,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Reader>,,<includes>,BaseObjectPtr<Blob.Reader>,,true,,Reader>,-1
305518,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<Blob>,,<includes>,BaseObjectPtr<Blob>,,true,,BaseObjectPtr<Blob>,-1
305519,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<ContextifyContext>,,<includes>,BaseObjectPtr<ContextifyContext>,,true,,BaseObjectPtr<ContextifyContext>,-1
305520,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<HistogramBase>,,<includes>,BaseObjectPtr<HistogramBase>,,true,,BaseObjectPtr<HistogramBase>,-1
305521,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<Http2Ping>,,<includes>,BaseObjectPtr<Http2Ping>,,true,,BaseObjectPtr<Http2Ping>,-1
305522,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<Http2Settings>,,<includes>,BaseObjectPtr<Http2Settings>,,true,,BaseObjectPtr<Http2Settings>,-1
305523,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<Http2Stream>,,<includes>,BaseObjectPtr<Http2Stream>,,true,,BaseObjectPtr<Http2Stream>,-1
305524,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<IntervalHistogram>,,<includes>,BaseObjectPtr<IntervalHistogram>,,true,,BaseObjectPtr<IntervalHistogram>,-1
305525,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<JSBindingsConnection>,,<includes>,BaseObjectPtr<JSBindingsConnection>,,true,,BaseObjectPtr<JSBindingsConnection>,-1
305526,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<SecureContext>,,<includes>,BaseObjectPtr<SecureContext>,,true,,BaseObjectPtr<SecureContext>,-1
305527,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<SocketAddressBase>,,<includes>,BaseObjectPtr<SocketAddressBase>,,true,,BaseObjectPtr<SocketAddressBase>,-1
305528,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseObjectPtr<SocketAddressBlockListWrap>,,<includes>,BaseObjectPtr<SocketAddressBlockListWrap>,,true,,BaseObjectPtr<SocketAddressBlockListWrap>,-1
305529,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BigInt,,<includes>,BigInt,,true,,BigInt,-1
305530,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BigInt64Array,,<includes>,BigInt64Array,,true,,BigInt64Array,-1
305531,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BigUint64Array,,<includes>,BigUint64Array,,true,,BigUint64Array,-1
305532,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BignumCtxPointer,,<includes>,BignumCtxPointer,,true,,BignumCtxPointer,-1
305533,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BignumPointer,,<includes>,BignumPointer,,true,,BignumPointer,-1
305534,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BignumPointer*,,<includes>,BignumPointer*,,true,,BignumPointer*,-1
305535,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Binary,,<includes>,Binary,,true,,Binary,-1
305536,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BindingData,,<includes>,BindingData,,true,,BindingData,-1
305537,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BindingData*,,<includes>,BindingData*,,true,,BindingData*,-1
305538,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Blob,,<includes>,Blob,,true,,Blob,-1
305539,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Blob*,,<includes>,Blob*,,true,,Blob*,-1
305540,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobBindingData,,<includes>,BlobBindingData,,true,,BlobBindingData,-1
305541,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobBindingData*,,<includes>,BlobBindingData*,,true,,BlobBindingData*,-1
305542,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobDeserializer<SeaDeserializer>,,<includes>,BlobDeserializer<SeaDeserializer>,,true,,BlobDeserializer<SeaDeserializer>,-1
305543,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobDeserializer<SnapshotDeserializer>,,<includes>,BlobDeserializer<SnapshotDeserializer>,,true,,BlobDeserializer<SnapshotDeserializer>,-1
305544,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobSerializer<SeaSerializer>,,<includes>,BlobSerializer<SeaSerializer>,,true,,BlobSerializer<SeaSerializer>,-1
305545,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobSerializer<SnapshotSerializer>,,<includes>,BlobSerializer<SnapshotSerializer>,,true,,BlobSerializer<SnapshotSerializer>,-1
305546,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Boolean,,<includes>,Boolean,,true,,Boolean,-1
305547,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliCompressionStream,,<includes>,BrotliCompressionStream,,true,,BrotliCompressionStream,-1
305548,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliCompressionStream<BrotliDecoderContext>,,<includes>,BrotliCompressionStream<BrotliDecoderContext>,,true,,BrotliCompressionStream<BrotliDecoderContext>,-1
305549,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliCompressionStream<BrotliEncoderContext>,,<includes>,BrotliCompressionStream<BrotliEncoderContext>,,true,,BrotliCompressionStream<BrotliEncoderContext>,-1
305550,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliContext,,<includes>,BrotliContext,,true,,BrotliContext,-1
305551,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliDecoderContext,,<includes>,BrotliDecoderContext,,true,,BrotliDecoderContext,-1
305552,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliDecoderErrorCode,,<includes>,BrotliDecoderErrorCode,,true,,BrotliDecoderErrorCode,-1
305553,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliEncoderContext,,<includes>,BrotliEncoderContext,,true,,BrotliEncoderContext,-1
305554,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliEncoderOperation,,<includes>,BrotliEncoderOperation,,true,,BrotliEncoderOperation,-1
305555,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Buffer,,<includes>,Buffer,,true,,Buffer,-1
305556,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Buffer*,,<includes>,Buffer*,,true,,Buffer*,-1
305557,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BufferFinalizer,,<includes>,BufferFinalizer,,true,,BufferFinalizer,-1
305558,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BufferFinalizer*,,<includes>,BufferFinalizer*,,true,,BufferFinalizer*,-1
305559,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BufferValue,,<includes>,BufferValue,,true,,BufferValue,-1
305560,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BuiltinCategories,,<includes>,BuiltinCategories,,true,,BuiltinCategories,-1
305561,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BuiltinCodeCacheData,,<includes>,BuiltinCodeCacheData,,true,,BuiltinCodeCacheData,-1
305562,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BuiltinLoader,,<includes>,BuiltinLoader,,true,,BuiltinLoader,-1
305563,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BuiltinLoader*,,<includes>,BuiltinLoader*,,true,,BuiltinLoader*,-1
305564,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ByteSource,,<includes>,ByteSource,,true,,ByteSource,-1
305565,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ByteSource*,,<includes>,ByteSource*,,true,,ByteSource*,-1
305566,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Bytef*,,<includes>,Bytef*,,true,,Bytef*,-1
305567,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CCharType*,,<includes>,CCharType*,,true,,CCharType*,-1
305568,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CFunction,,<includes>,CFunction,,true,,CFunction,-1
305569,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CHECK,,<includes>,CHECK,,true,,CHECK,-1
305570,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CHECK_NOT_NULL,,<includes>,CHECK_NOT_NULL,,true,,CHECK_NOT_NULL,-1
305571,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CHECK_NULL,,<includes>,CHECK_NULL,,true,,CHECK_NULL,-1
305572,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CHILD_PROCESS_PERMISSIONS,,<includes>,CHILD_PROCESS_PERMISSIONS,,true,,CHILD_PROCESS_PERMISSIONS,-1
305573,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CSPRNGResult,,<includes>,CSPRNGResult,,true,,CSPRNGResult,-1
305574,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CachedData,,<includes>,CachedData,,true,,CachedData,-1
305575,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"CallRequest<T, Fn>",,<includes>,"CallRequest<T, Fn>",,true,,"CallRequest<T, Fn>",-1
305576,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallbackBundle,,<includes>,CallbackBundle,,true,,CallbackBundle,-1
305577,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallbackBundle*,,<includes>,CallbackBundle*,,true,,CallbackBundle*,-1
305578,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallbackInfo,,<includes>,CallbackInfo,,true,,CallbackInfo,-1
305579,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallbackInfo*,,<includes>,CallbackInfo*,,true,,CallbackInfo*,-1
305580,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallbackScope,,<includes>,CallbackScope,,true,,CallbackScope,-1
305581,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallbackScope*,,<includes>,CallbackScope*,,true,,CallbackScope*,-1
305582,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallbackWrapper,,<includes>,CallbackWrapper,,true,,CallbackWrapper,-1
305583,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallbackWrapperBase,,<includes>,CallbackWrapperBase,,true,,CallbackWrapperBase,-1
305584,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CatchMode,,<includes>,CatchMode,,true,,CatchMode,-1
305585,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CertCb,,<includes>,CertCb,,true,,CertCb,-1
305586,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ChannelImpl,,<includes>,ChannelImpl,,true,,ChannelImpl,-1
305587,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ChannelWrap,,<includes>,ChannelWrap,,true,,ChannelWrap,-1
305588,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ChannelWrap*,,<includes>,ChannelWrap*,,true,,ChannelWrap*,-1
305589,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CharType*,,<includes>,CharType*,,true,,CharType*,-1
305590,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CheckPrimeConfig,,<includes>,CheckPrimeConfig,,true,,CheckPrimeConfig,-1
305591,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CheckPrimeConfig*,,<includes>,CheckPrimeConfig*,,true,,CheckPrimeConfig*,-1
305592,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CheckSiblingGroup,,<includes>,CheckSiblingGroup,,true,,CheckSiblingGroup,-1
305593,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CheckedUvLoopClose,,<includes>,CheckedUvLoopClose,,true,,CheckedUvLoopClose,-1
305594,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CipherBase,,<includes>,CipherBase,,true,,CipherBase,-1
305595,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CipherBase*,,<includes>,CipherBase*,,true,,CipherBase*,-1
305596,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CipherCtxPointer,,<includes>,CipherCtxPointer,,true,,CipherCtxPointer,-1
305597,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CipherKind,,<includes>,CipherKind,,true,,CipherKind,-1
305598,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CipherPushContext,,<includes>,CipherPushContext,,true,,CipherPushContext,-1
305599,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CleanupHook,,<includes>,CleanupHook,,true,,CleanupHook,-1
305600,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CleanupHookCallback,,<includes>,CleanupHookCallback,,true,,CleanupHookCallback,-1
305601,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClearErrorOnReturn,,<includes>,ClearErrorOnReturn,,true,,ClearErrorOnReturn,-1
305602,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClearOutgoing,,<includes>,ClearOutgoing,,true,,ClearOutgoing,-1
305603,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClientHello,,<includes>,ClientHello,,true,,ClientHello,-1
305604,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClientTrustLevel,,<includes>,ClientTrustLevel,,true,,ClientTrustLevel,-1
305605,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CloseReq,,<includes>,CloseReq,,true,,CloseReq,-1
305606,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CloseReq*,,<includes>,CloseReq*,,true,,CloseReq*,-1
305607,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CodeCacheInfo,,<includes>,CodeCacheInfo,,true,,CodeCacheInfo,-1
305608,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CommonEnvironmentSetup,,<includes>,CommonEnvironmentSetup,,true,,CommonEnvironmentSetup,-1
305609,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CommonEnvironmentSetup*,,<includes>,CommonEnvironmentSetup*,,true,,CommonEnvironmentSetup*,-1
305610,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompareResult,,<includes>,CompareResult,,true,,CompareResult,-1
305611,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompiledFnEntry,,<includes>,CompiledFnEntry,,true,,CompiledFnEntry,-1
305612,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompiledFnEntry*,,<includes>,CompiledFnEntry*,,true,,CompiledFnEntry*,-1
305613,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompiledWasmModule,,<includes>,CompiledWasmModule,,true,,CompiledWasmModule,-1
305614,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompressionContext,,<includes>,CompressionContext,,true,,CompressionContext,-1
305615,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompressionError,,<includes>,CompressionError,,true,,CompressionError,-1
305616,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompressionStream*,,<includes>,CompressionStream*,,true,,CompressionStream*,-1
305617,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompressionStream<CompressionContext>,,<includes>,CompressionStream<CompressionContext>,,true,,CompressionStream<CompressionContext>,-1
305618,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompressionStream<ZlibContext>,,<includes>,CompressionStream<ZlibContext>,,true,,CompressionStream<ZlibContext>,-1
305619,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConditionVariable,,<includes>,ConditionVariable,,true,,ConditionVariable,-1
305620,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConditionVariable*,,<includes>,ConditionVariable*,,true,,ConditionVariable*,-1
305621,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConnectWrap,,<includes>,ConnectWrap,,true,,ConnectWrap,-1
305622,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConnectWrap*,,<includes>,ConnectWrap*,,true,,ConnectWrap*,-1
305623,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConnectionType,,<includes>,ConnectionType,,true,,ConnectionType,-1
305624,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConnectionWrap,,<includes>,ConnectionWrap,,true,,ConnectionWrap,-1
305625,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConnectionsList,,<includes>,ConnectionsList,,true,,ConnectionsList,-1
305626,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConnectionsList*,,<includes>,ConnectionsList*,,true,,ConnectionsList*,-1
305627,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConstructorBehavior,,<includes>,ConstructorBehavior,,true,,ConstructorBehavior,-1
305628,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContextInfo,,<includes>,ContextInfo,,true,,ContextInfo,-1
305629,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContextOptions,,<includes>,ContextOptions,,true,,ContextOptions,-1
305630,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContextifyContext,,<includes>,ContextifyContext,,true,,ContextifyContext,-1
305631,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContextifyContext*,,<includes>,ContextifyContext*,,true,,ContextifyContext*,-1
305632,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContextifyScript,,<includes>,ContextifyScript,,true,,ContextifyScript,-1
305633,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContextifyScript*,,<includes>,ContextifyScript*,,true,,ContextifyScript*,-1
305634,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CpuProfiler,,<includes>,CpuProfiler,,true,,CpuProfiler,-1
305635,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CreateAPI,,<includes>,CreateAPI,,true,,CreateAPI,-1
305636,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CreateFrontendWrapperRequest,,<includes>,CreateFrontendWrapperRequest,,true,,CreateFrontendWrapperRequest,-1
305637,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CreateObjectRequest<Factory>,,<includes>,CreateObjectRequest<Factory>,,true,,CreateObjectRequest<Factory>,-1
305638,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CrossThreadInspectorSession,,<includes>,CrossThreadInspectorSession,,true,,CrossThreadInspectorSession,-1
305639,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CryptoErrorStore,,<includes>,CryptoErrorStore,,true,,CryptoErrorStore,-1
305640,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CryptoErrorStore*,,<includes>,CryptoErrorStore*,,true,,CryptoErrorStore*,-1
305641,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CryptoJobMode,,<includes>,CryptoJobMode,,true,,CryptoJobMode,-1
305642,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CustomBufferJSListener,,<includes>,CustomBufferJSListener,,true,,CustomBufferJSListener,-1
305643,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DCHECK,,<includes>,DCHECK,,true,,DCHECK,-1
305644,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DCHECK_NULL,,<includes>,DCHECK_NULL,,true,,DCHECK_NULL,-1
305645,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DEBUG_CATEGORY_NAMES,,<includes>,DEBUG_CATEGORY_NAMES,,true,,DEBUG_CATEGORY_NAMES,-1
305646,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DH*,,<includes>,DH*,,true,,DH*,-1
305647,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DHBitsConfig,,<includes>,DHBitsConfig,,true,,DHBitsConfig,-1
305648,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DHBitsConfig*,,<includes>,DHBitsConfig*,,true,,DHBitsConfig*,-1
305649,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DHKeyExportConfig,,<includes>,DHKeyExportConfig,,true,,DHKeyExportConfig,-1
305650,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DHKeyExportConfig*,,<includes>,DHKeyExportConfig*,,true,,DHKeyExportConfig*,-1
305651,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DHPointer,,<includes>,DHPointer,,true,,DHPointer,-1
305652,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DLib*,,<includes>,DLib*,,true,,DLib*,-1
305653,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DSA*,,<includes>,DSA*,,true,,DSA*,-1
305654,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DSAKeyExportConfig,,<includes>,DSAKeyExportConfig,,true,,DSAKeyExportConfig,-1
305655,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DSAKeyExportConfig*,,<includes>,DSAKeyExportConfig*,,true,,DSAKeyExportConfig*,-1
305656,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DSASigEnc,,<includes>,DSASigEnc,,true,,DSASigEnc,-1
305657,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DWORD,,<includes>,DWORD,,true,,DWORD,-1
305658,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DWORD64,,<includes>,DWORD64,,true,,DWORD64,-1
305659,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Data,,<includes>,Data,,true,,Data,-1
305660,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Data*,,<includes>,Data*,,true,,Data*,-1
305661,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataOwnership,,<includes>,DataOwnership,,true,,DataOwnership,-1
305662,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataQueue,,<includes>,DataQueue,,true,,DataQueue,-1
305663,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Entry,,<includes>,DataQueue.Entry,,true,,Entry,-1
305664,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Reader,,<includes>,DataQueue.Reader,,true,,Reader,-1
305665,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataQueueEntry,,<includes>,DataQueueEntry,,true,,DataQueueEntry,-1
305666,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataQueueImpl,,<includes>,DataQueueImpl,,true,,DataQueueImpl,-1
305667,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataView,,<includes>,DataView,,true,,DataView,-1
305668,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Date,,<includes>,Date,,true,,Date,-1
305669,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DebugCategory,,<includes>,DebugCategory,,true,,DebugCategory,-1
305670,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DebugOptions,,<includes>,DebugOptions,,true,,DebugOptions,-1
305671,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DebugOptionsParser,,<includes>,DebugOptionsParser,,true,,DebugOptionsParser,-1
305672,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DebugSealHandleScope,,<includes>,DebugSealHandleScope,,true,,DebugSealHandleScope,-1
305673,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DefineCryptoConstants,,<includes>,DefineCryptoConstants,,true,,DefineCryptoConstants,-1
305674,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DefineDLOpenConstants,,<includes>,DefineDLOpenConstants,,true,,DefineDLOpenConstants,-1
305675,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DefineErrnoConstants,,<includes>,DefineErrnoConstants,,true,,DefineErrnoConstants,-1
305676,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DefinePriorityConstants,,<includes>,DefinePriorityConstants,,true,,DefinePriorityConstants,-1
305677,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DefineSignalConstants,,<includes>,DefineSignalConstants,,true,,DefineSignalConstants,-1
305678,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DefineSystemConstants,,<includes>,DefineSystemConstants,,true,,DefineSystemConstants,-1
305679,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DefineTraceConstants,,<includes>,DefineTraceConstants,,true,,DefineTraceConstants,-1
305680,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DefineZlibConstants,,<includes>,DefineZlibConstants,,true,,DefineZlibConstants,-1
305681,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DelayedTask,,<includes>,DelayedTask,,true,,DelayedTask,-1
305682,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DelayedTask*,,<includes>,DelayedTask*,,true,,DelayedTask*,-1
305683,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DelayedTaskPointer,,<includes>,DelayedTaskPointer,,true,,DelayedTaskPointer,-1
305684,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DelayedTaskScheduler,,<includes>,DelayedTaskScheduler,,true,,DelayedTaskScheduler,-1
305685,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DelayedTaskScheduler*,,<includes>,DelayedTaskScheduler*,,true,,DelayedTaskScheduler*,-1
305686,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Delegate,,<includes>,Delegate,,true,,Delegate,-1
305687,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DelegatePointer,,<includes>,DelegatePointer,,true,,DelegatePointer,-1
305688,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Deletable,,<includes>,Deletable,,true,,Deletable,-1
305689,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Deletable*,,<includes>,Deletable*,,true,,Deletable*,-1
305690,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeletableFrontendWrapper,,<includes>,DeletableFrontendWrapper,,true,,DeletableFrontendWrapper,-1
305691,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeletableFrontendWrapper*,,<includes>,DeletableFrontendWrapper*,,true,,DeletableFrontendWrapper*,-1
305692,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeletableWrapper,,<includes>,DeletableWrapper,,true,,DeletableWrapper,-1
305693,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeletableWrapper<T>,,<includes>,DeletableWrapper<T>,,true,,DeletableWrapper<T>,-1
305694,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"DeleteFnPtr<BrotliDecoderState,BrotliDecoderDestroyInstance>",,<includes>,"DeleteFnPtr<BrotliDecoderState,BrotliDecoderDestroyInstance>",,true,,"DeleteFnPtr<BrotliDecoderState,BrotliDecoderDestroyInstance>",-1
305695,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"DeleteFnPtr<BrotliEncoderState,BrotliEncoderDestroyInstance>",,<includes>,"DeleteFnPtr<BrotliEncoderState,BrotliEncoderDestroyInstance>",,true,,"DeleteFnPtr<BrotliEncoderState,BrotliEncoderDestroyInstance>",-1
305696,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"DeleteFnPtr<Environment,FreeEnvironment>",,<includes>,"DeleteFnPtr<Environment,FreeEnvironment>",,true,,"DeleteFnPtr<Environment,FreeEnvironment>",-1
305697,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"DeleteFnPtr<IsolateData,FreeIsolateData>",,<includes>,"DeleteFnPtr<IsolateData,FreeIsolateData>",,true,,"DeleteFnPtr<IsolateData,FreeIsolateData>",-1
305698,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"DeleteFnPtr<TcpHolder, DisconnectAndDispose>",,<includes>,"DeleteFnPtr<TcpHolder, DisconnectAndDispose>",,true,,"DeleteFnPtr<TcpHolder, DisconnectAndDispose>",-1
305699,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeleteRequest,,<includes>,DeleteRequest,,true,,DeleteRequest,-1
305700,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeserializeRequest,,<includes>,DeserializeRequest,,true,,DeserializeRequest,-1
305701,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeserializeRequestCallback,,<includes>,DeserializeRequestCallback,,true,,DeserializeRequestCallback,-1
305702,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeserializerContext,,<includes>,DeserializerContext,,true,,DeserializerContext,-1
305703,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeserializerContext*,,<includes>,DeserializerContext*,,true,,DeserializerContext*,-1
305704,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeserializerDelegate,,<includes>,DeserializerDelegate,,true,,DeserializerDelegate,-1
305705,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DestroyFrontendWrapperRequest,,<includes>,DestroyFrontendWrapperRequest,,true,,DestroyFrontendWrapperRequest,-1
305706,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DestroyParam,,<includes>,DestroyParam,,true,,DestroyParam,-1
305707,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DestroyParam*,,<includes>,DestroyParam*,,true,,DestroyParam*,-1
305708,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DhKeyPairGenConfig*,,<includes>,DhKeyPairGenConfig*,,true,,DhKeyPairGenConfig*,-1
305709,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DiagnosticFilename,,<includes>,DiagnosticFilename,,true,,DiagnosticFilename,-1
305710,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DiffieHellman,,<includes>,DiffieHellman,,true,,DiffieHellman,-1
305711,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DiffieHellman*,,<includes>,DiffieHellman*,,true,,DiffieHellman*,-1
305712,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DirHandle,,<includes>,DirHandle,,true,,DirHandle,-1
305713,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DirHandle*,,<includes>,DirHandle*,,true,,DirHandle*,-1
305714,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DisallowJavascriptExecutionScope,,<includes>,DisallowJavascriptExecutionScope,,true,,DisallowJavascriptExecutionScope,-1
305715,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DispatchResponse,,<includes>,DispatchResponse,,true,,DispatchResponse,-1
305716,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Dispatcher,,<includes>,Dispatcher,,true,,Dispatcher,-1
305717,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DontMangle,,<includes>,DontMangle,,true,,DontMangle,-1
305718,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DsaKeyPairGenConfig*,,<includes>,DsaKeyPairGenConfig*,,true,,DsaKeyPairGenConfig*,-1
305719,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DumpBacktrace,,<includes>,DumpBacktrace,,true,,DumpBacktrace,-1
305720,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECDH,,<includes>,ECDH,,true,,ECDH,-1
305721,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECDH*,,<includes>,ECDH*,,true,,ECDH*,-1
305722,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECDHBitsConfig,,<includes>,ECDHBitsConfig,,true,,ECDHBitsConfig,-1
305723,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECDHBitsConfig*,,<includes>,ECDHBitsConfig*,,true,,ECDHBitsConfig*,-1
305724,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECDSASigPointer,,<includes>,ECDSASigPointer,,true,,ECDSASigPointer,-1
305725,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECGroupPointer,,<includes>,ECGroupPointer,,true,,ECGroupPointer,-1
305726,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECKeyExportConfig,,<includes>,ECKeyExportConfig,,true,,ECKeyExportConfig,-1
305727,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECKeyExportConfig*,,<includes>,ECKeyExportConfig*,,true,,ECKeyExportConfig*,-1
305728,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECKeyPointer,,<includes>,ECKeyPointer,,true,,ECKeyPointer,-1
305729,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECPointPointer,,<includes>,ECPointPointer,,true,,ECPointPointer,-1
305730,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ECPointer,,<includes>,ECPointer,,true,,ECPointer,-1
305731,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EC_GROUP*,,<includes>,EC_GROUP*,,true,,EC_GROUP*,-1
305732,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EC_KEY*,,<includes>,EC_KEY*,,true,,EC_KEY*,-1
305733,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EC_POINT*,,<includes>,EC_POINT*,,true,,EC_POINT*,-1
305734,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ENGINE*,,<includes>,ENGINE*,,true,,ENGINE*,-1
305735,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVPKeyCtxPointer,,<includes>,EVPKeyCtxPointer,,true,,EVPKeyCtxPointer,-1
305736,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVPKeyPointer,,<includes>,EVPKeyPointer,,true,,EVPKeyPointer,-1
305737,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVPKeyPointer*,,<includes>,EVPKeyPointer*,,true,,EVPKeyPointer*,-1
305738,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVPMDPointer,,<includes>,EVPMDPointer,,true,,EVPMDPointer,-1
305739,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVP_CIPHER*,,<includes>,EVP_CIPHER*,,true,,EVP_CIPHER*,-1
305740,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVP_CIPHER_CTX*,,<includes>,EVP_CIPHER_CTX*,,true,,EVP_CIPHER_CTX*,-1
305741,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVP_MD*,,<includes>,EVP_MD*,,true,,EVP_MD*,-1
305742,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVP_PKEY,,<includes>,EVP_PKEY,,true,,EVP_PKEY,-1
305743,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVP_PKEY*,,<includes>,EVP_PKEY*,,true,,EVP_PKEY*,-1
305744,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EVP_PKEY_CTX*,,<includes>,EVP_PKEY_CTX*,,true,,EVP_PKEY_CTX*,-1
305745,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EXIT_CODE_LIST,,<includes>,EXIT_CODE_LIST,,true,,EXIT_CODE_LIST,-1
305746,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EXTERNAL_REFERENCE_BINDING_LIST,,<includes>,EXTERNAL_REFERENCE_BINDING_LIST,,true,,EXTERNAL_REFERENCE_BINDING_LIST,-1
305747,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EcKeyPairGenConfig*,,<includes>,EcKeyPairGenConfig*,,true,,EcKeyPairGenConfig*,-1
305748,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbedderGraph,,<includes>,EmbedderGraph,,true,,EmbedderGraph,-1
305749,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbedderGraph*,,<includes>,EmbedderGraph*,,true,,EmbedderGraph*,-1
305750,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Node,,<includes>,EmbedderGraph.Node,,true,,Node,-1
305751,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbedderObjectType,,<includes>,EmbedderObjectType,,true,,EmbedderObjectType,-1
305752,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbedderSnapshotData,,<includes>,EmbedderSnapshotData,,true,,EmbedderSnapshotData,-1
305753,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbedderSnapshotData*,,<includes>,EmbedderSnapshotData*,,true,,EmbedderSnapshotData*,-1
305754,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmitRead,,<includes>,EmitRead,,true,,EmitRead,-1
305755,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmitToJSStreamListener,,<includes>,EmitToJSStreamListener,,true,,EmitToJSStreamListener,-1
305756,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmptyEntry,,<includes>,EmptyEntry,,true,,EmptyEntry,-1
305757,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnabledDebugList,,<includes>,EnabledDebugList,,true,,EnabledDebugList,-1
305758,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnginePointer,,<includes>,EnginePointer,,true,,EnginePointer,-1
305759,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnhanceFatalException,,<includes>,EnhanceFatalException,,true,,EnhanceFatalException,-1
305760,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EntryImpl,,<includes>,EntryImpl,,true,,EntryImpl,-1
305761,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnvSerializeInfo,,<includes>,EnvSerializeInfo,,true,,EnvSerializeInfo,-1
305762,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnvSerializeInfo*,,<includes>,EnvSerializeInfo*,,true,,EnvSerializeInfo*,-1
305763,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Environment,,<includes>,Environment,,true,,Environment,-1
305764,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Environment*,,<includes>,Environment*,,true,,Environment*,-1
305765,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Environment**,,<includes>,Environment**,,true,,Environment**,-1
305766,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnvironmentArgs,,<includes>,EnvironmentArgs,,true,,EnvironmentArgs,-1
305767,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnvironmentOptions,,<includes>,EnvironmentOptions,,true,,EnvironmentOptions,-1
305768,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnvironmentOptionsParser,,<includes>,EnvironmentOptionsParser,,true,,EnvironmentOptionsParser,-1
305769,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Error,,<includes>,Error,,true,,Error,-1
305770,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ErrorHandlingMode,,<includes>,ErrorHandlingMode,,true,,ErrorHandlingMode,-1
305771,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EscapableHandleScope,,<includes>,EscapableHandleScope,,true,,EscapableHandleScope,-1
305772,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EscapableHandleScopeWrapper,,<includes>,EscapableHandleScopeWrapper,,true,,EscapableHandleScopeWrapper,-1
305773,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EscapableHandleScopeWrapper*,,<includes>,EscapableHandleScopeWrapper*,,true,,EscapableHandleScopeWrapper*,-1
305774,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Escape,,<includes>,Escape,,true,,Escape,-1
305775,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Exception,,<includes>,Exception,,true,,Exception,-1
305776,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExitCallback,,<includes>,ExitCallback,,true,,ExitCallback,-1
305777,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExitCode,,<includes>,ExitCode,,true,,ExitCode,-1
305778,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExitCode*,,<includes>,ExitCode*,,true,,ExitCode*,-1
305779,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExitInfoField,,<includes>,ExitInfoField,,true,,ExitInfoField,-1
305780,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExternOneByteString*,,<includes>,ExternOneByteString*,,true,,ExternOneByteString*,-1
305781,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExternString*,,<includes>,ExternString*,,true,,ExternString*,-1
305782,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"ExternString<ResourceType,TypeName>",,<includes>,"ExternString<ResourceType,TypeName>",,true,,"ExternString<ResourceType,TypeName>",-1
305783,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExternTwoByteString*,,<includes>,ExternTwoByteString*,,true,,ExternTwoByteString*,-1
305784,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,External,,<includes>,External,,true,,External,-1
305785,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExternalReferenceRegistry*,,<includes>,ExternalReferenceRegistry*,,true,,ExternalReferenceRegistry*,-1
305786,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,F,,<includes>,F,,true,,F,-1
305787,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FILE*,,<includes>,FILE*,,true,,FILE*,-1
305788,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FILESYSTEM_PERMISSIONS,,<includes>,FILESYSTEM_PERMISSIONS,,true,,FILESYSTEM_PERMISSIONS,-1
305789,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FSEventWrap,,<includes>,FSEventWrap,,true,,FSEventWrap,-1
305790,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FSEventWrap*,,<includes>,FSEventWrap*,,true,,FSEventWrap*,-1
305791,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FSPermission,,<includes>,FSPermission,,true,,FSPermission,-1
305792,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FSReqAfterScope,,<includes>,FSReqAfterScope,,true,,FSReqAfterScope,-1
305793,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FSReqBase*,,<includes>,FSReqBase*,,true,,FSReqBase*,-1
305794,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FSReqCallback,,<includes>,FSReqCallback,,true,,FSReqCallback,-1
305795,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FSReqWrapSync,,<includes>,FSReqWrapSync,,true,,FSReqWrapSync,-1
305796,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FSReqWrapSync*,,<includes>,FSReqWrapSync*,,true,,FSReqWrapSync*,-1
305797,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Factory,,<includes>,Factory,,true,,Factory,-1
305798,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FastApiCallbackOptions,,<includes>,FastApiCallbackOptions,,true,,FastApiCallbackOptions,-1
305799,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FastOneByteString,,<includes>,FastOneByteString,,true,,FastOneByteString,-1
305800,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FdEntry,,<includes>,FdEntry,,true,,FdEntry,-1
305801,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FdEntry*,,<includes>,FdEntry*,,true,,FdEntry*,-1
305802,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FileHandle,,<includes>,FileHandle,,true,,FileHandle,-1
305803,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FileHandle*,,<includes>,FileHandle*,,true,,FileHandle*,-1
305804,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FileHandleCloseWrap*,,<includes>,FileHandleCloseWrap*,,true,,FileHandleCloseWrap*,-1
305805,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FileHandleReadWrap*,,<includes>,FileHandleReadWrap*,,true,,FileHandleReadWrap*,-1
305806,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FileOutputStream,,<includes>,FileOutputStream,,true,,FileOutputStream,-1
305807,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FilePathIsFileReturnType,,<includes>,FilePathIsFileReturnType,,true,,FilePathIsFileReturnType,-1
305808,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Finalizer,,<includes>,Finalizer,,true,,Finalizer,-1
305809,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Flags,,<includes>,Flags,,true,,Flags,-1
305810,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Float32Array,,<includes>,Float32Array,,true,,Float32Array,-1
305811,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Float64Array,,<includes>,Float64Array,,true,,Float64Array,-1
305812,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Fn,,<includes>,Fn,,true,,Fn,-1
305813,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ForceMangle,,<includes>,ForceMangle,,true,,ForceMangle,-1
305814,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FreeCallback,,<includes>,FreeCallback,,true,,FreeCallback,-1
305815,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FreeRecursivelyNode,,<includes>,FreeRecursivelyNode,,true,,FreeRecursivelyNode,-1
305816,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Frontend,,<includes>,Frontend,,true,,Frontend,-1
305817,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Function,,<includes>,Function,,true,,Function,-1
305818,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionCallback,,<includes>,FunctionCallback,,true,,FunctionCallback,-1
305819,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionCallbackInfo<Value>,,<includes>,FunctionCallbackInfo<Value>,,true,,FunctionCallbackInfo<Value>,-1
305820,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionCallbackWrapper,,<includes>,FunctionCallbackWrapper,,true,,FunctionCallbackWrapper,-1
305821,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionCodeHandling,,<includes>,FunctionCodeHandling,,true,,FunctionCodeHandling,-1
305822,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionTemplate,,<includes>,FunctionTemplate,,true,,FunctionTemplate,-1
305823,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GCCallbackFlags,,<includes>,GCCallbackFlags,,true,,GCCallbackFlags,-1
305824,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GCPerformanceEntry,,<includes>,GCPerformanceEntry,,true,,GCPerformanceEntry,-1
305825,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GCProfiler,,<includes>,GCProfiler,,true,,GCProfiler,-1
305826,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GCProfiler*,,<includes>,GCProfiler*,,true,,GCProfiler*,-1
305827,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GCProfilerState,,<includes>,GCProfilerState,,true,,GCProfilerState,-1
305828,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GCType,,<includes>,GCType,,true,,GCType,-1
305829,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GENERAL_NAME*,,<includes>,GENERAL_NAME*,,true,,GENERAL_NAME*,-1
305830,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GENERAL_NAMES*,,<includes>,GENERAL_NAMES*,,true,,GENERAL_NAMES*,-1
305831,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GetCurrentEventLoop,,<includes>,GetCurrentEventLoop,,true,,GetCurrentEventLoop,-1
305832,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GetHostByAddrWrap*,,<includes>,GetHostByAddrWrap*,,true,,GetHostByAddrWrap*,-1
305833,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GetPeerCertificateFlag,,<includes>,GetPeerCertificateFlag,,true,,GetPeerCertificateFlag,-1
305834,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GetSessionCb,,<includes>,GetSessionCb,,true,,GetSessionCb,-1
305835,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Global<ArrayBuffer>,,<includes>,Global<ArrayBuffer>,,true,,Global<ArrayBuffer>,-1
305836,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Global<Context>,,<includes>,Global<Context>,,true,,Global<Context>,-1
305837,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Global<Function>,,<includes>,Global<Function>,,true,,Global<Function>,-1
305838,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Global<Object>,,<includes>,Global<Object>,,true,,Global<Object>,-1
305839,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Global<Value>,,<includes>,Global<Value>,,true,,Global<Value>,-1
305840,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HANDLE,,<includes>,HANDLE,,true,,HANDLE,-1
305841,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HKDFConfig,,<includes>,HKDFConfig,,true,,HKDFConfig,-1
305842,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HKDFConfig*,,<includes>,HKDFConfig*,,true,,HKDFConfig*,-1
305843,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HMACCtxPointer,,<includes>,HMACCtxPointer,,true,,HMACCtxPointer,-1
305844,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HMAC_CTX*,,<includes>,HMAC_CTX*,,true,,HMAC_CTX*,-1
305845,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HTTP2_CONSTANTS,,<includes>,HTTP2_CONSTANTS,,true,,HTTP2_CONSTANTS,-1
305846,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HTTP2_HIDDEN_CONSTANTS,,<includes>,HTTP2_HIDDEN_CONSTANTS,,true,,HTTP2_HIDDEN_CONSTANTS,-1
305847,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HTTP2_SETTINGS,,<includes>,HTTP2_SETTINGS,,true,,HTTP2_SETTINGS,-1
305848,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HTTP_KNOWN_HEADERS,,<includes>,HTTP_KNOWN_HEADERS,,true,,HTTP_KNOWN_HEADERS,-1
305849,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HTTP_KNOWN_METHODS,,<includes>,HTTP_KNOWN_METHODS,,true,,HTTP_KNOWN_METHODS,-1
305850,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HTTP_METHOD_MAP,,<includes>,HTTP_METHOD_MAP,,true,,HTTP_METHOD_MAP,-1
305851,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HTTP_STATUS_CODES,,<includes>,HTTP_STATUS_CODES,,true,,HTTP_STATUS_CODES,-1
305852,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HandleCleanup,,<includes>,HandleCleanup,,true,,HandleCleanup,-1
305853,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HandleCleanupCb,,<includes>,HandleCleanupCb,,true,,HandleCleanupCb,-1
305854,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HandleScope,,<includes>,HandleScope,,true,,HandleScope,-1
305855,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HandleScopeWrapper,,<includes>,HandleScopeWrapper,,true,,HandleScopeWrapper,-1
305856,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HandleScopeWrapper*,,<includes>,HandleScopeWrapper*,,true,,HandleScopeWrapper*,-1
305857,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HandleWrap,,<includes>,HandleWrap,,true,,HandleWrap,-1
305858,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HandleWrap*,,<includes>,HandleWrap*,,true,,HandleWrap*,-1
305859,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HandleWrapQueue,,<includes>,HandleWrapQueue,,true,,HandleWrapQueue,-1
305860,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Hash,,<includes>,Hash,,true,,Hash,-1
305861,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Hash*,,<includes>,Hash*,,true,,Hash*,-1
305862,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashConfig,,<includes>,HashConfig,,true,,HashConfig,-1
305863,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashConfig*,,<includes>,HashConfig*,,true,,HashConfig*,-1
305864,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HeapCodeStatistics,,<includes>,HeapCodeStatistics,,true,,HeapCodeStatistics,-1
305865,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HeapSnapshot*,,<includes>,HeapSnapshot*,,true,,HeapSnapshot*,-1
305866,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HeapSnapshotMode,,<includes>,HeapSnapshotMode,,true,,HeapSnapshotMode,-1
305867,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HeapSnapshotOptions,,<includes>,HeapSnapshotOptions,,true,,HeapSnapshotOptions,-1
305868,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HeapSnapshotPointer,,<includes>,HeapSnapshotPointer,,true,,HeapSnapshotPointer,-1
305869,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HeapSnapshotStream,,<includes>,HeapSnapshotStream,,true,,HeapSnapshotStream,-1
305870,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HeapSpaceStatistics,,<includes>,HeapSpaceStatistics,,true,,HeapSpaceStatistics,-1
305871,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HeapStatistics,,<includes>,HeapStatistics,,true,,HeapStatistics,-1
305872,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Histogram,,<includes>,Histogram,,true,,Histogram,-1
305873,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Histogram*,,<includes>,Histogram*,,true,,Histogram*,-1
305874,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HistogramBase,,<includes>,HistogramBase,,true,,HistogramBase,-1
305875,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HistogramBase*,,<includes>,HistogramBase*,,true,,HistogramBase*,-1
305876,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HistogramTransferData,,<includes>,HistogramTransferData,,true,,HistogramTransferData,-1
305877,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Hmac,,<includes>,Hmac,,true,,Hmac,-1
305878,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Hmac*,,<includes>,Hmac*,,true,,Hmac*,-1
305879,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HmacConfig,,<includes>,HmacConfig,,true,,HmacConfig,-1
305880,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HmacConfig*,,<includes>,HmacConfig*,,true,,HmacConfig*,-1
305881,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HostDefinedOptions,,<includes>,HostDefinedOptions,,true,,HostDefinedOptions,-1
305882,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HostEntPointer,,<includes>,HostEntPointer,,true,,HostEntPointer,-1
305883,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HostPort,,<includes>,HostPort,,true,,HostPort,-1
305884,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Header,,<includes>,Http2Header,,true,,Http2Header,-1
305885,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Headers,,<includes>,Http2Headers,,true,,Http2Headers,-1
305886,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Options,,<includes>,Http2Options,,true,,Http2Options,-1
305887,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Priority,,<includes>,Http2Priority,,true,,Http2Priority,-1
305888,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Scope,,<includes>,Http2Scope,,true,,Http2Scope,-1
305889,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Session,,<includes>,Http2Session,,true,,Http2Session,-1
305890,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Session*,,<includes>,Http2Session*,,true,,Http2Session*,-1
305891,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2SessionPerformanceEntry,,<includes>,Http2SessionPerformanceEntry,,true,,Http2SessionPerformanceEntry,-1
305892,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2State*,,<includes>,Http2State*,,true,,Http2State*,-1
305893,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Stream,,<includes>,Http2Stream,,true,,Http2Stream,-1
305894,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2Stream*,,<includes>,Http2Stream*,,true,,Http2Stream*,-1
305895,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2StreamListener,,<includes>,Http2StreamListener,,true,,Http2StreamListener,-1
305896,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Http2StreamPerformanceEntry,,<includes>,Http2StreamPerformanceEntry,,true,,Http2StreamPerformanceEntry,-1
305897,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HttpEvent,,<includes>,HttpEvent,,true,,HttpEvent,-1
305898,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HttpHandler,,<includes>,HttpHandler,,true,,HttpHandler,-1
305899,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HttpHandler*,,<includes>,HttpHandler*,,true,,HttpHandler*,-1
305900,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IMAGEHLP_LINE64,,<includes>,IMAGEHLP_LINE64,,true,,IMAGEHLP_LINE64,-1
305901,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,INSPECTOR_PERMISSIONS,,<includes>,INSPECTOR_PERMISSIONS,,true,,INSPECTOR_PERMISSIONS,-1
305902,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IdempotentDataQueueReader,,<includes>,IdempotentDataQueueReader,,true,,IdempotentDataQueueReader,-1
305903,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Impl,,<includes>,Impl,,true,,Impl,-1
305904,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Impl*,,<includes>,Impl*,,true,,Impl*,-1
305905,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InMemoryEntry,,<includes>,InMemoryEntry,,true,,InMemoryEntry,-1
305906,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InMemoryFunctor,,<includes>,InMemoryFunctor,,true,,InMemoryFunctor,-1
305907,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InMemoryReader,,<includes>,InMemoryReader,,true,,InMemoryReader,-1
305908,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IndexFilter,,<includes>,IndexFilter,,true,,IndexFilter,-1
305909,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IndexedPropertyHandlerConfiguration,,<includes>,IndexedPropertyHandlerConfiguration,,true,,IndexedPropertyHandlerConfiguration,-1
305910,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Info,,<includes>,Info,,true,,Info,-1
305911,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Info*,,<includes>,Info*,,true,,Info*,-1
305912,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InitializationResultImpl*,,<includes>,InitializationResultImpl*,,true,,InitializationResultImpl*,-1
305913,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectPublishUid,,<includes>,InspectPublishUid,,true,,InspectPublishUid,-1
305914,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorIo,,<includes>,InspectorIo,,true,,InspectorIo,-1
305915,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorIoDelegate,,<includes>,InspectorIoDelegate,,true,,InspectorIoDelegate,-1
305916,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorSession,,<includes>,InspectorSession,,true,,InspectorSession,-1
305917,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorSessionDelegate,,<includes>,InspectorSessionDelegate,,true,,InspectorSessionDelegate,-1
305918,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorSessionDelegate*,,<includes>,InspectorSessionDelegate*,,true,,InspectorSessionDelegate*,-1
305919,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorSocket,,<includes>,InspectorSocket,,true,,InspectorSocket,-1
305920,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorSocket*,,<includes>,InspectorSocket*,,true,,InspectorSocket*,-1
305921,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Delegate,,<includes>,InspectorSocket.Delegate,,true,,Delegate,-1
305922,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorSocketServer,,<includes>,InspectorSocketServer,,true,,InspectorSocketServer,-1
305923,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorSocketServer*,,<includes>,InspectorSocketServer*,,true,,InspectorSocketServer*,-1
305924,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorTraceWriter,,<includes>,InspectorTraceWriter,,true,,InspectorTraceWriter,-1
305925,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Int16Array,,<includes>,Int16Array,,true,,Int16Array,-1
305926,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Int32,,<includes>,Int32,,true,,Int32,-1
305927,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Int32Array,,<includes>,Int32Array,,true,,Int32Array,-1
305928,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Int8Array,,<includes>,Int8Array,,true,,Int8Array,-1
305929,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Integer,,<includes>,Integer,,true,,Integer,-1
305930,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IntegrityLevel,,<includes>,IntegrityLevel,,true,,IntegrityLevel,-1
305931,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalCallbackScope,,<includes>,InternalCallbackScope,,true,,InternalCallbackScope,-1
305932,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalCallbackScope*,,<includes>,InternalCallbackScope*,,true,,InternalCallbackScope*,-1
305933,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalFieldInfo*,,<includes>,InternalFieldInfo*,,true,,InternalFieldInfo*,-1
305934,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalFieldInfoBase,,<includes>,InternalFieldInfoBase,,true,,InternalFieldInfoBase,-1
305935,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalFieldInfoBase*,,<includes>,InternalFieldInfoBase*,,true,,InternalFieldInfoBase*,-1
305936,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalFields,,<includes>,InternalFields,,true,,InternalFields,-1
305937,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalTraceBuffer,,<includes>,InternalTraceBuffer,,true,,InternalTraceBuffer,-1
305938,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalTraceBuffer*,,<includes>,InternalTraceBuffer*,,true,,InternalTraceBuffer*,-1
305939,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IntervalHistogram,,<includes>,IntervalHistogram,,true,,IntervalHistogram,-1
305940,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IntervalHistogram*,,<includes>,IntervalHistogram*,,true,,IntervalHistogram*,-1
305941,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IoSessionDelegate,,<includes>,IoSessionDelegate,,true,,IoSessionDelegate,-1
305942,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IsSet,,<includes>,IsSet,,true,,IsSet,-1
305943,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Isolate,,<includes>,Isolate,,true,,Isolate,-1
305944,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Isolate*,,<includes>,Isolate*,,true,,Isolate*,-1
305945,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IsolateData,,<includes>,IsolateData,,true,,IsolateData,-1
305946,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IsolateData*,,<includes>,IsolateData*,,true,,IsolateData*,-1
305947,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IsolateDataSerializeInfo,,<includes>,IsolateDataSerializeInfo,,true,,IsolateDataSerializeInfo,-1
305948,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IsolateDataSerializeInfo*,,<includes>,IsolateDataSerializeInfo*,,true,,IsolateDataSerializeInfo*,-1
305949,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IsolatePlatformDelegate,,<includes>,IsolatePlatformDelegate,,true,,IsolatePlatformDelegate,-1
305950,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IsolatePlatformDelegate*,,<includes>,IsolatePlatformDelegate*,,true,,IsolatePlatformDelegate*,-1
305951,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IsolateSettings,,<includes>,IsolateSettings,,true,,IsolateSettings,-1
305952,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSBindingsConnection,,<includes>,JSBindingsConnection,,true,,JSBindingsConnection,-1
305953,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSBindingsConnection*,,<includes>,JSBindingsConnection*,,true,,JSBindingsConnection*,-1
305954,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSBindingsSessionDelegate,,<includes>,JSBindingsSessionDelegate,,true,,JSBindingsSessionDelegate,-1
305955,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSGraph,,<includes>,JSGraph,,true,,JSGraph,-1
305956,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSGraphJSNode,,<includes>,JSGraphJSNode,,true,,JSGraphJSNode,-1
305957,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSGraphJSNode*,,<includes>,JSGraphJSNode*,,true,,JSGraphJSNode*,-1
305958,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSMethodFunction*,,<includes>,JSMethodFunction*,,true,,JSMethodFunction*,-1
305959,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSON,,<includes>,JSON,,true,,JSON,-1
305960,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSONParser,,<includes>,JSONParser,,true,,JSONParser,-1
305961,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSONWriter,,<includes>,JSONWriter,,true,,JSONWriter,-1
305962,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSONWriter*,,<includes>,JSONWriter*,,true,,JSONWriter*,-1
305963,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSStream,,<includes>,JSStream,,true,,JSStream,-1
305964,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSStream*,,<includes>,JSStream*,,true,,JSStream*,-1
305965,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSTransferable,,<includes>,JSTransferable,,true,,JSTransferable,-1
305966,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSUDPWrap,,<includes>,JSUDPWrap,,true,,JSUDPWrap,-1
305967,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSUDPWrap*,,<includes>,JSUDPWrap*,,true,,JSUDPWrap*,-1
305968,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KVStore,,<includes>,KVStore,,true,,KVStore,-1
305969,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyCollectionMode,,<includes>,KeyCollectionMode,,true,,KeyCollectionMode,-1
305970,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyConversionMode,,<includes>,KeyConversionMode,,true,,KeyConversionMode,-1
305971,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyEncodingContext,,<includes>,KeyEncodingContext,,true,,KeyEncodingContext,-1
305972,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyGenJobStatus,,<includes>,KeyGenJobStatus,,true,,KeyGenJobStatus,-1
305973,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyObjectData,,<includes>,KeyObjectData,,true,,KeyObjectData,-1
305974,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyObjectData*,,<includes>,KeyObjectData*,,true,,KeyObjectData*,-1
305975,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyObjectHandle,,<includes>,KeyObjectHandle,,true,,KeyObjectHandle,-1
305976,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyObjectHandle*,,<includes>,KeyObjectHandle*,,true,,KeyObjectHandle*,-1
305977,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeyType,,<includes>,KeyType,,true,,KeyType,-1
305978,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KeylogCb,,<includes>,KeylogCb,,true,,KeylogCb,-1
305979,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Kind,,<includes>,Kind,,true,,Kind,-1
305980,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LIKELY,,<includes>,LIKELY,,true,,LIKELY,-1
305981,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LibuvShutdownWrap*,,<includes>,LibuvShutdownWrap*,,true,,LibuvShutdownWrap*,-1
305982,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LibuvStreamWrap,,<includes>,LibuvStreamWrap,,true,,LibuvStreamWrap,-1
305983,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LibuvStreamWrap*,,<includes>,LibuvStreamWrap*,,true,,LibuvStreamWrap*,-1
305984,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LibuvWriteWrap*,,<includes>,LibuvWriteWrap*,,true,,LibuvWriteWrap*,-1
305985,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Array>,,<includes>,Local<Array>,,true,,Local<Array>,-1
305986,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<ArrayBuffer>,,<includes>,Local<ArrayBuffer>,,true,,Local<ArrayBuffer>,-1
305987,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<ArrayBufferView>,,<includes>,Local<ArrayBufferView>,,true,,Local<ArrayBufferView>,-1
305988,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Context>,,<includes>,Local<Context>,,true,,Local<Context>,-1
305989,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<FixedArray>,,<includes>,Local<FixedArray>,,true,,Local<FixedArray>,-1
305990,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Float64Array>,,<includes>,Local<Float64Array>,,true,,Local<Float64Array>,-1
305991,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Function>,,<includes>,Local<Function>,,true,,Local<Function>,-1
305992,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<FunctionTemplate>,,<includes>,Local<FunctionTemplate>,,true,,Local<FunctionTemplate>,-1
305993,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Message>,,<includes>,Local<Message>,,true,,Local<Message>,-1
305994,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Module>,,<includes>,Local<Module>,,true,,Local<Module>,-1
305995,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Name>,,<includes>,Local<Name>,,true,,Local<Name>,-1
305996,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Object>,,<includes>,Local<Object>,,true,,Local<Object>,-1
305997,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Object>*,,<includes>,Local<Object>*,,true,,Local<Object>*,-1
305998,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<ObjectTemplate>,,<includes>,Local<ObjectTemplate>,,true,,Local<ObjectTemplate>,-1
305999,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Promise>,,<includes>,Local<Promise>,,true,,Local<Promise>,-1
306000,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<SharedArrayBuffer>,,<includes>,Local<SharedArrayBuffer>,,true,,Local<SharedArrayBuffer>,-1
306001,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Signature>,,<includes>,Local<Signature>,,true,,Local<Signature>,-1
306002,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<StackTrace>,,<includes>,Local<StackTrace>,,true,,Local<StackTrace>,-1
306003,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<String>,,<includes>,Local<String>,,true,,Local<String>,-1
306004,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<T>,,<includes>,Local<T>,,true,,Local<T>,-1
306005,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Template>,,<includes>,Local<Template>,,true,,Local<Template>,-1
306006,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Value>,,<includes>,Local<Value>,,true,,Local<Value>,-1
306007,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Value>*,,<includes>,Local<Value>*,,true,,Local<Value>*,-1
306008,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Value>[1],,<includes>,Local<Value>[1],,true,,Local<Value>[1],-1
306009,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Value>[2],,<includes>,Local<Value>[2],,true,,Local<Value>[2],-1
306010,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Value>[3],,<includes>,Local<Value>[3],,true,,Local<Value>[3],-1
306011,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Value>[4],,<includes>,Local<Value>[4],,true,,Local<Value>[4],-1
306012,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Value>[6],,<includes>,Local<Value>[6],,true,,Local<Value>[6],-1
306013,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<Value>[],,<includes>,Local<Value>[],,true,,Local<Value>[],-1
306014,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Local<WasmModuleObject>,,<includes>,Local<WasmModuleObject>,,true,,Local<WasmModuleObject>,-1
306015,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Context>,,<includes>,Local<v8.Context>,,true,,Context>,-1
306016,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Function>,,<includes>,Local<v8.Function>,,true,,Function>,-1
306017,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionTemplate>,,<includes>,Local<v8.FunctionTemplate>,,true,,FunctionTemplate>,-1
306018,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Object>,,<includes>,Local<v8.Object>,,true,,Object>,-1
306019,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Value>,,<includes>,Local<v8.Value>,,true,,Value>,-1
306020,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Locker,,<includes>,Locker,,true,,Locker,-1
306021,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MEMORY_BASIC_INFORMATION,,<includes>,MEMORY_BASIC_INFORMATION,,true,,MEMORY_BASIC_INFORMATION,-1
306022,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MainThreadHandle,,<includes>,MainThreadHandle,,true,,MainThreadHandle,-1
306023,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MainThreadInterface,,<includes>,MainThreadInterface,,true,,MainThreadInterface,-1
306024,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MainThreadInterface*,,<includes>,MainThreadInterface*,,true,,MainThreadInterface*,-1
306025,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MainThreadSessionState,,<includes>,MainThreadSessionState,,true,,MainThreadSessionState,-1
306026,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MakeClass,,<includes>,MakeClass,,true,,MakeClass,-1
306027,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MallocedBuffer<char>,,<includes>,MallocedBuffer<char>,,true,,MallocedBuffer<char>,-1
306028,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ManagedEVPPKey,,<includes>,ManagedEVPPKey,,true,,ManagedEVPPKey,-1
306029,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ManagedX509,,<includes>,ManagedX509,,true,,ManagedX509,-1
306030,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MapKVStore,,<includes>,MapKVStore,,true,,MapKVStore,-1
306031,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MarkPopErrorOnReturn,,<includes>,MarkPopErrorOnReturn,,true,,MarkPopErrorOnReturn,-1
306032,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<BaseObjectList>,,<includes>,Maybe<BaseObjectList>,,true,,Maybe<BaseObjectList>,-1
306033,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<ExitCode>,,<includes>,Maybe<ExitCode>,,true,,Maybe<ExitCode>,-1
306034,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<StreamPipe*>,,<includes>,Maybe<StreamPipe*>,,true,,Maybe<StreamPipe*>,-1
306035,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<bool>,,<includes>,Maybe<bool>,,true,,Maybe<bool>,-1
306036,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<double>,,<includes>,Maybe<double>,,true,,Maybe<double>,-1
306037,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<int>,,<includes>,Maybe<int>,,true,,Maybe<int>,-1
306038,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<size_t>,,<includes>,Maybe<size_t>,,true,,Maybe<size_t>,-1
306039,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string>,,<includes>,Maybe<std.string>,,true,,string>,-1
306040,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<uint32_t>,,<includes>,Maybe<uint32_t>,,true,,Maybe<uint32_t>,-1
306041,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<unsigned int>,,<includes>,Maybe<unsigned int>,,true,,Maybe<unsigned int>,-1
306042,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Maybe<void>,,<includes>,Maybe<void>,,true,,Maybe<void>,-1
306043,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<Array>,,<includes>,MaybeLocal<Array>,,true,,MaybeLocal<Array>,-1
306044,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<ArrayBufferView>,,<includes>,MaybeLocal<ArrayBufferView>,,true,,MaybeLocal<ArrayBufferView>,-1
306045,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<Context>,,<includes>,MaybeLocal<Context>,,true,,MaybeLocal<Context>,-1
306046,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<Function>,,<includes>,MaybeLocal<Function>,,true,,MaybeLocal<Function>,-1
306047,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<Module>,,<includes>,MaybeLocal<Module>,,true,,MaybeLocal<Module>,-1
306048,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<Object>,,<includes>,MaybeLocal<Object>,,true,,MaybeLocal<Object>,-1
306049,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<Promise>,,<includes>,MaybeLocal<Promise>,,true,,MaybeLocal<Promise>,-1
306050,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<SharedArrayBuffer>,,<includes>,MaybeLocal<SharedArrayBuffer>,,true,,MaybeLocal<SharedArrayBuffer>,-1
306051,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<String>,,<includes>,MaybeLocal<String>,,true,,MaybeLocal<String>,-1
306052,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<T>,,<includes>,MaybeLocal<T>,,true,,MaybeLocal<T>,-1
306053,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<Uint8Array>,,<includes>,MaybeLocal<Uint8Array>,,true,,MaybeLocal<Uint8Array>,-1
306054,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<Value>,,<includes>,MaybeLocal<Value>,,true,,MaybeLocal<Value>,-1
306055,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeLocal<WasmModuleObject>,,<includes>,MaybeLocal<WasmModuleObject>,,true,,MaybeLocal<WasmModuleObject>,-1
306056,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,String>,,<includes>,MaybeLocal<v8.String>,,true,,String>,-1
306057,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Value>,,<includes>,MaybeLocal<v8.Value>,,true,,Value>,-1
306058,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"MaybeStackBuffer<Local<Value>,16>",,<includes>,"MaybeStackBuffer<Local<Value>,16>",,true,,"MaybeStackBuffer<Local<Value>,16>",-1
306059,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"MaybeStackBuffer<Local<Value>,256>",,<includes>,"MaybeStackBuffer<Local<Value>,256>",,true,,"MaybeStackBuffer<Local<Value>,256>",-1
306060,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"MaybeStackBuffer<Local<Value>,32>",,<includes>,"MaybeStackBuffer<Local<Value>,32>",,true,,"MaybeStackBuffer<Local<Value>,32>",-1
306061,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"MaybeStackBuffer<Local<Value>,64>",,<includes>,"MaybeStackBuffer<Local<Value>,64>",,true,,"MaybeStackBuffer<Local<Value>,64>",-1
306062,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"MaybeStackBuffer<Local<Value>,8>",,<includes>,"MaybeStackBuffer<Local<Value>,8>",,true,,"MaybeStackBuffer<Local<Value>,8>",-1
306063,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeStackBuffer<T>*,,<includes>,MaybeStackBuffer<T>*,,true,,MaybeStackBuffer<T>*,-1
306064,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"MaybeStackBuffer<char,256>",,<includes>,"MaybeStackBuffer<char,256>",,true,,"MaybeStackBuffer<char,256>",-1
306065,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeStackBuffer<char16_t>,,<includes>,MaybeStackBuffer<char16_t>,,true,,MaybeStackBuffer<char16_t>,-1
306066,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaybeStackBuffer<char>,,<includes>,MaybeStackBuffer<char>,,true,,MaybeStackBuffer<char>,-1
306067,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MeasureMemoryDelegate,,<includes>,MeasureMemoryDelegate,,true,,MeasureMemoryDelegate,-1
306068,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MeasureMemoryExecution,,<includes>,MeasureMemoryExecution,,true,,MeasureMemoryExecution,-1
306069,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MeasureMemoryMode,,<includes>,MeasureMemoryMode,,true,,MeasureMemoryMode,-1
306070,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MemoryRetainer,,<includes>,MemoryRetainer,,true,,MemoryRetainer,-1
306071,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MemoryTracker,,<includes>,MemoryTracker,,true,,MemoryTracker,-1
306072,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MemoryTracker*,,<includes>,MemoryTracker*,,true,,MemoryTracker*,-1
306073,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Message,,<includes>,Message,,true,,Message,-1
306074,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Message*,,<includes>,Message*,,true,,Message*,-1
306075,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MessageErrorLevel,,<includes>,MessageErrorLevel,,true,,MessageErrorLevel,-1
306076,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MessagePort,,<includes>,MessagePort,,true,,MessagePort,-1
306077,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MessagePort*,,<includes>,MessagePort*,,true,,MessagePort*,-1
306078,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MessagePortData,,<includes>,MessagePortData,,true,,MessagePortData,-1
306079,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MessagePortData*,,<includes>,MessagePortData*,,true,,MessagePortData*,-1
306080,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MessageProcessingMode,,<includes>,MessageProcessingMode,,true,,MessageProcessingMode,-1
306081,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata,,<includes>,Metadata,,true,,Metadata,-1
306082,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MicrotaskQueue*,,<includes>,MicrotaskQueue*,,true,,MicrotaskQueue*,-1
306083,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MicrotaskQueueWrap,,<includes>,MicrotaskQueueWrap,,true,,MicrotaskQueueWrap,-1
306084,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MicrotasksPolicy,,<includes>,MicrotasksPolicy,,true,,MicrotasksPolicy,-1
306085,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ModifyCodeGenerationFromStringsResult,,<includes>,ModifyCodeGenerationFromStringsResult,,true,,ModifyCodeGenerationFromStringsResult,-1
306086,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Module,,<includes>,Module,,true,,Module,-1
306087,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ModuleWrap,,<includes>,ModuleWrap,,true,,ModuleWrap,-1
306088,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ModuleWrap*,,<includes>,ModuleWrap*,,true,,ModuleWrap*,-1
306089,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MultiIsolatePlatform,,<includes>,MultiIsolatePlatform,,true,,MultiIsolatePlatform,-1
306090,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MultiIsolatePlatform*,,<includes>,MultiIsolatePlatform*,,true,,MultiIsolatePlatform*,-1
306091,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Mutex,,<includes>,Mutex,,true,,Mutex,-1
306092,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Mutex*,,<includes>,Mutex*,,true,,Mutex*,-1
306093,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NODE_ASYNC_PROVIDER_TYPES,,<includes>,NODE_ASYNC_PROVIDER_TYPES,,true,,NODE_ASYNC_PROVIDER_TYPES,-1
306094,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NODE_BINDINGS_WITH_PER_ISOLATE_INIT,,<includes>,NODE_BINDINGS_WITH_PER_ISOLATE_INIT,,true,,NODE_BINDINGS_WITH_PER_ISOLATE_INIT,-1
306095,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NODE_BUILTIN_ICU_BINDINGS,,<includes>,NODE_BUILTIN_ICU_BINDINGS,,true,,NODE_BUILTIN_ICU_BINDINGS,-1
306096,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NODE_PERFORMANCE_ENTRY_TYPES,,<includes>,NODE_PERFORMANCE_ENTRY_TYPES,,true,,NODE_PERFORMANCE_ENTRY_TYPES,-1
306097,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NODE_PERFORMANCE_MILESTONES,,<includes>,NODE_PERFORMANCE_MILESTONES,,true,,NODE_PERFORMANCE_MILESTONES,-1
306098,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NODE_VERSIONS_KEYS,,<includes>,NODE_VERSIONS_KEYS,,true,,NODE_VERSIONS_KEYS,-1
306099,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NamedPropertyHandlerConfiguration,,<includes>,NamedPropertyHandlerConfiguration,,true,,NamedPropertyHandlerConfiguration,-1
306100,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NativeImmediateQueue,,<includes>,NativeImmediateQueue,,true,,NativeImmediateQueue,-1
306101,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NativeImmediateQueue*,,<includes>,NativeImmediateQueue*,,true,,NativeImmediateQueue*,-1
306102,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NativeKeyObject,,<includes>,NativeKeyObject,,true,,NativeKeyObject,-1
306103,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NativeSymbolDebuggingContext,,<includes>,NativeSymbolDebuggingContext,,true,,NativeSymbolDebuggingContext,-1
306104,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NativeSymbolDebuggingContext*,,<includes>,NativeSymbolDebuggingContext*,,true,,NativeSymbolDebuggingContext*,-1
306105,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetscapeSPKIPointer,,<includes>,NetscapeSPKIPointer,,true,,NetscapeSPKIPointer,-1
306106,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NewSessionCb,,<includes>,NewSessionCb,,true,,NewSessionCb,-1
306107,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NewStringType,,<includes>,NewStringType,,true,,NewStringType,-1
306108,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Next<T>,,<includes>,Next<T>,,true,,Next<T>,-1
306109,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NgHeader<T>,,<includes>,NgHeader<T>,,true,,NgHeader<T>,-1
306110,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NgHeaders,,<includes>,NgHeaders,,true,,NgHeaders,-1
306111,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NgHttp2StreamWrite,,<includes>,NgHttp2StreamWrite,,true,,NgHttp2StreamWrite,-1
306112,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NidKeyPairGenConfig*,,<includes>,NidKeyPairGenConfig*,,true,,NidKeyPairGenConfig*,-1
306113,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NoArrayBufferZeroFillScope,,<includes>,NoArrayBufferZeroFillScope,,true,,NoArrayBufferZeroFillScope,-1
306114,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NoCacheReason,,<includes>,NoCacheReason,,true,,NoCacheReason,-1
306115,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Node,,<includes>,Node,,true,,Node,-1
306116,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Node*,,<includes>,Node*,,true,,Node*,-1
306117,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeAresTask,,<includes>,NodeAresTask,,true,,NodeAresTask,-1
306118,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeAresTask*,,<includes>,NodeAresTask*,,true,,NodeAresTask*,-1
306119,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeArrayBufferAllocator*,,<includes>,NodeArrayBufferAllocator*,,true,,NodeArrayBufferAllocator*,-1
306120,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeBIO,,<includes>,NodeBIO,,true,,NodeBIO,-1
306121,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeBIO*,,<includes>,NodeBIO*,,true,,NodeBIO*,-1
306122,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeCategorySet,,<includes>,NodeCategorySet,,true,,NodeCategorySet,-1
306123,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeCategorySet*,,<includes>,NodeCategorySet*,,true,,NodeCategorySet*,-1
306124,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeInspectorClient,,<includes>,NodeInspectorClient,,true,,NodeInspectorClient,-1
306125,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeMainInstance,,<includes>,NodeMainInstance,,true,,NodeMainInstance,-1
306126,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodePlatform,,<includes>,NodePlatform,,true,,NodePlatform,-1
306127,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Backend,,<includes>,NodeRuntime.Backend,,true,,Backend,-1
306128,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeTraceBuffer,,<includes>,NodeTraceBuffer,,true,,NodeTraceBuffer,-1
306129,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeTraceBuffer*,,<includes>,NodeTraceBuffer*,,true,,NodeTraceBuffer*,-1
306130,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeTraceWriter,,<includes>,NodeTraceWriter,,true,,NodeTraceWriter,-1
306131,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeTraceWriter*,,<includes>,NodeTraceWriter*,,true,,NodeTraceWriter*,-1
306132,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Backend,,<includes>,NodeTracing.Backend,,true,,Backend,-1
306133,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Backend,,<includes>,NodeWorker.Backend,,true,,Backend,-1
306134,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeWorkers,,<includes>,NodeWorkers,,true,,NodeWorkers,-1
306135,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonCopyableMaybe<PrivateKeyEncodingConfig>,,<includes>,NonCopyableMaybe<PrivateKeyEncodingConfig>,,true,,NonCopyableMaybe<PrivateKeyEncodingConfig>,-1
306136,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonIdempotentDataQueueReader,,<includes>,NonIdempotentDataQueueReader,,true,,NonIdempotentDataQueueReader,-1
306137,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NotifyClusterWorkersDebugEnabled,,<includes>,NotifyClusterWorkersDebugEnabled,,true,,NotifyClusterWorkersDebugEnabled,-1
306138,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Number,,<includes>,Number,,true,,Number,-1
306139,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NumericsMode,,<includes>,NumericsMode,,true,,NumericsMode,-1
306140,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OPENSSL_INIT_SETTINGS*,,<includes>,OPENSSL_INIT_SETTINGS*,,true,,OPENSSL_INIT_SETTINGS*,-1
306141,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Object,,<includes>,Object,,true,,Object,-1
306142,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ObjectWrap,,<includes>,ObjectWrap,,true,,ObjectWrap,-1
306143,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ObjectWrap*,,<includes>,ObjectWrap*,,true,,ObjectWrap*,-1
306144,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Opt*,,<includes>,Opt*,,true,,Opt*,-1
306145,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OptionEnvvarSettings,,<includes>,OptionEnvvarSettings,,true,,OptionEnvvarSettings,-1
306146,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Options,,<includes>,Options,,true,,Options,-1
306147,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OptionsParser<DebugOptions>,,<includes>,OptionsParser<DebugOptions>,,true,,OptionsParser<DebugOptions>,-1
306148,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OptionsParser<EnvironmentOptions>,,<includes>,OptionsParser<EnvironmentOptions>,,true,,OptionsParser<EnvironmentOptions>,-1
306149,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OptionsParser<PerIsolateOptions>,,<includes>,OptionsParser<PerIsolateOptions>,,true,,OptionsParser<PerIsolateOptions>,-1
306150,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OptionsParser<PerProcessOptions>,,<includes>,OptionsParser<PerProcessOptions>,,true,,OptionsParser<PerProcessOptions>,-1
306151,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Origins,,<includes>,Origins,,true,,Origins,-1
306152,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ownership,,<includes>,Ownership,,true,,Ownership,-1
306153,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PBKDF2Config,,<includes>,PBKDF2Config,,true,,PBKDF2Config,-1
306154,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PBKDF2Config*,,<includes>,PBKDF2Config*,,true,,PBKDF2Config*,-1
306155,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PERMISSIONS,,<includes>,PERMISSIONS,,true,,PERMISSIONS,-1
306156,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PER_ISOLATE_PRIVATE_SYMBOL_PROPERTIES,,<includes>,PER_ISOLATE_PRIVATE_SYMBOL_PROPERTIES,,true,,PER_ISOLATE_PRIVATE_SYMBOL_PROPERTIES,-1
306157,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PER_ISOLATE_STRING_PROPERTIES,,<includes>,PER_ISOLATE_STRING_PROPERTIES,,true,,PER_ISOLATE_STRING_PROPERTIES,-1
306158,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PER_ISOLATE_SYMBOL_PROPERTIES,,<includes>,PER_ISOLATE_SYMBOL_PROPERTIES,,true,,PER_ISOLATE_SYMBOL_PROPERTIES,-1
306159,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PER_ISOLATE_TEMPLATE_PROPERTIES,,<includes>,PER_ISOLATE_TEMPLATE_PROPERTIES,,true,,PER_ISOLATE_TEMPLATE_PROPERTIES,-1
306160,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PER_REALM_STRONG_PERSISTENT_VALUES,,<includes>,PER_REALM_STRONG_PERSISTENT_VALUES,,true,,PER_REALM_STRONG_PERSISTENT_VALUES,-1
306161,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PKCS12*,,<includes>,PKCS12*,,true,,PKCS12*,-1
306162,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PKCS8Pointer,,<includes>,PKCS8Pointer,,true,,PKCS8Pointer,-1
306163,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PKEncodingType,,<includes>,PKEncodingType,,true,,PKEncodingType,-1
306164,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PKFormatType,,<includes>,PKFormatType,,true,,PKFormatType,-1
306165,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PaddingStrategy,,<includes>,PaddingStrategy,,true,,PaddingStrategy,-1
306166,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PageAllocator,,<includes>,PageAllocator,,true,,PageAllocator,-1
306167,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParentInspectorHandle,,<includes>,ParentInspectorHandle,,true,,ParentInspectorHandle,-1
306168,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParentInspectorSessionDelegate,,<includes>,ParentInspectorSessionDelegate,,true,,ParentInspectorSessionDelegate,-1
306169,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParseEncoding,,<includes>,ParseEncoding,,true,,ParseEncoding,-1
306170,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParseKeyResult,,<includes>,ParseKeyResult,,true,,ParseKeyResult,-1
306171,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Parser,,<includes>,Parser,,true,,Parser,-1
306172,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Parser*,,<includes>,Parser*,,true,,Parser*,-1
306173,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PendingPull,,<includes>,PendingPull,,true,,PendingPull,-1
306174,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerIsolateOptions,,<includes>,PerIsolateOptions,,true,,PerIsolateOptions,-1
306175,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerIsolateOptions*,,<includes>,PerIsolateOptions*,,true,,PerIsolateOptions*,-1
306176,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerIsolateOptionsParser,,<includes>,PerIsolateOptionsParser,,true,,PerIsolateOptionsParser,-1
306177,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerIsolatePlatformData,,<includes>,PerIsolatePlatformData,,true,,PerIsolatePlatformData,-1
306178,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerIsolatePlatformData*,,<includes>,PerIsolatePlatformData*,,true,,PerIsolatePlatformData*,-1
306179,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerProcessOptions,,<includes>,PerProcessOptions,,true,,PerProcessOptions,-1
306180,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerProcessOptions*,,<includes>,PerProcessOptions*,,true,,PerProcessOptions*,-1
306181,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerProcessOptionsParser,,<includes>,PerProcessOptionsParser,,true,,PerProcessOptionsParser,-1
306182,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerformanceEntryType,,<includes>,PerformanceEntryType,,true,,PerformanceEntryType,-1
306183,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerformanceMilestone,,<includes>,PerformanceMilestone,,true,,PerformanceMilestone,-1
306184,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PerformanceState*,,<includes>,PerformanceState*,,true,,PerformanceState*,-1
306185,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Permission,,<includes>,Permission,,true,,Permission,-1
306186,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PermissionScope,,<includes>,PermissionScope,,true,,PermissionScope,-1
306187,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Object>,,<includes>,Persistent<v8.Object>,,true,,Object>,-1
306188,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Value>,,<includes>,Persistent<v8.Value>,,true,,Value>,-1
306189,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PipeWrap,,<includes>,PipeWrap,,true,,PipeWrap,-1
306190,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PipeWrap*,,<includes>,PipeWrap*,,true,,PipeWrap*,-1
306191,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PlatformWorkerData,,<includes>,PlatformWorkerData,,true,,PlatformWorkerData,-1
306192,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PlatformWorkerData*,,<includes>,PlatformWorkerData*,,true,,PlatformWorkerData*,-1
306193,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PointerData,,<includes>,PointerData,,true,,PointerData,-1
306194,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PointerData*,,<includes>,PointerData*,,true,,PointerData*,-1
306195,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PrintTree,,<includes>,PrintTree,,true,,PrintTree,-1
306196,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PrinterTryCatch,,<includes>,PrinterTryCatch,,true,,PrinterTryCatch,-1
306197,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PrivateKeyEncodingConfig,,<includes>,PrivateKeyEncodingConfig,,true,,PrivateKeyEncodingConfig,-1
306198,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProcessWrap,,<includes>,ProcessWrap,,true,,ProcessWrap,-1
306199,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProcessWrap*,,<includes>,ProcessWrap*,,true,,ProcessWrap*,-1
306200,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Promise,,<includes>,Promise,,true,,Promise,-1
306201,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PromiseRejectEvent,,<includes>,PromiseRejectEvent,,true,,PromiseRejectEvent,-1
306202,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PromiseRejectMessage,,<includes>,PromiseRejectMessage,,true,,PromiseRejectMessage,-1
306203,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PromiseState,,<includes>,PromiseState,,true,,PromiseState,-1
306204,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropInfo,,<includes>,PropInfo,,true,,PropInfo,-1
306205,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyAttribute,,<includes>,PropertyAttribute,,true,,PropertyAttribute,-1
306206,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyCallbackInfo<Array>,,<includes>,PropertyCallbackInfo<Array>,,true,,PropertyCallbackInfo<Array>,-1
306207,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyCallbackInfo<Boolean>,,<includes>,PropertyCallbackInfo<Boolean>,,true,,PropertyCallbackInfo<Boolean>,-1
306208,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyCallbackInfo<Integer>,,<includes>,PropertyCallbackInfo<Integer>,,true,,PropertyCallbackInfo<Integer>,-1
306209,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyCallbackInfo<T>,,<includes>,PropertyCallbackInfo<T>,,true,,PropertyCallbackInfo<T>,-1
306210,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyCallbackInfo<Value>,,<includes>,PropertyCallbackInfo<Value>,,true,,PropertyCallbackInfo<Value>,-1
306211,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyCallbackInfo<void>,,<includes>,PropertyCallbackInfo<void>,,true,,PropertyCallbackInfo<void>,-1
306212,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyDescriptor,,<includes>,PropertyDescriptor,,true,,PropertyDescriptor,-1
306213,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyDescriptor*,,<includes>,PropertyDescriptor*,,true,,PropertyDescriptor*,-1
306214,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyFilter,,<includes>,PropertyFilter,,true,,PropertyFilter,-1
306215,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PropertyHandlerFlags,,<includes>,PropertyHandlerFlags,,true,,PropertyHandlerFlags,-1
306216,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProtocolHandler,,<includes>,ProtocolHandler,,true,,ProtocolHandler,-1
306217,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProtocolHandler*,,<includes>,ProtocolHandler*,,true,,ProtocolHandler*,-1
306218,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Provider,,<includes>,Provider,,true,,Provider,-1
306219,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProviderType,,<includes>,ProviderType,,true,,ProviderType,-1
306220,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PublicKeyCipher,,<includes>,PublicKeyCipher,,true,,PublicKeyCipher,-1
306221,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PublicKeyEncodingConfig,,<includes>,PublicKeyEncodingConfig,,true,,PublicKeyEncodingConfig,-1
306222,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PushStreamListener,,<includes>,PushStreamListener,,true,,PushStreamListener,-1
306223,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryAWrap*,,<includes>,QueryAWrap*,,true,,QueryAWrap*,-1
306224,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryAaaaWrap*,,<includes>,QueryAaaaWrap*,,true,,QueryAaaaWrap*,-1
306225,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryAnyWrap*,,<includes>,QueryAnyWrap*,,true,,QueryAnyWrap*,-1
306226,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryCaaWrap*,,<includes>,QueryCaaWrap*,,true,,QueryCaaWrap*,-1
306227,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryCnameWrap*,,<includes>,QueryCnameWrap*,,true,,QueryCnameWrap*,-1
306228,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryMxWrap*,,<includes>,QueryMxWrap*,,true,,QueryMxWrap*,-1
306229,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryNaptrWrap*,,<includes>,QueryNaptrWrap*,,true,,QueryNaptrWrap*,-1
306230,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryNsWrap*,,<includes>,QueryNsWrap*,,true,,QueryNsWrap*,-1
306231,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryPtrWrap*,,<includes>,QueryPtrWrap*,,true,,QueryPtrWrap*,-1
306232,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuerySoaWrap*,,<includes>,QuerySoaWrap*,,true,,QuerySoaWrap*,-1
306233,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuerySrvWrap*,,<includes>,QuerySrvWrap*,,true,,QuerySrvWrap*,-1
306234,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryTxtWrap*,,<includes>,QueryTxtWrap*,,true,,QueryTxtWrap*,-1
306235,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<ATraits>*,,<includes>,QueryWrap<ATraits>*,,true,,QueryWrap<ATraits>*,-1
306236,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<AaaaTraits>*,,<includes>,QueryWrap<AaaaTraits>*,,true,,QueryWrap<AaaaTraits>*,-1
306237,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<AnyTraits>*,,<includes>,QueryWrap<AnyTraits>*,,true,,QueryWrap<AnyTraits>*,-1
306238,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<CaaTraits>*,,<includes>,QueryWrap<CaaTraits>*,,true,,QueryWrap<CaaTraits>*,-1
306239,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<CnameTraits>*,,<includes>,QueryWrap<CnameTraits>*,,true,,QueryWrap<CnameTraits>*,-1
306240,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<MxTraits>*,,<includes>,QueryWrap<MxTraits>*,,true,,QueryWrap<MxTraits>*,-1
306241,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<NaptrTraits>*,,<includes>,QueryWrap<NaptrTraits>*,,true,,QueryWrap<NaptrTraits>*,-1
306242,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<NsTraits>*,,<includes>,QueryWrap<NsTraits>*,,true,,QueryWrap<NsTraits>*,-1
306243,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<PtrTraits>*,,<includes>,QueryWrap<PtrTraits>*,,true,,QueryWrap<PtrTraits>*,-1
306244,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<SoaTraits>*,,<includes>,QueryWrap<SoaTraits>*,,true,,QueryWrap<SoaTraits>*,-1
306245,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<SrvTraits>*,,<includes>,QueryWrap<SrvTraits>*,,true,,QueryWrap<SrvTraits>*,-1
306246,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QueryWrap<TxtTraits>*,,<includes>,QueryWrap<TxtTraits>*,,true,,QueryWrap<TxtTraits>*,-1
306247,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,R,,<includes>,R,,true,,R,-1
306248,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RSA*,,<includes>,RSA*,,true,,RSA*,-1
306249,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RSACipherConfig,,<includes>,RSACipherConfig,,true,,RSACipherConfig,-1
306250,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RSACipherConfig*,,<includes>,RSACipherConfig*,,true,,RSACipherConfig*,-1
306251,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RSAKeyExportConfig,,<includes>,RSAKeyExportConfig,,true,,RSAKeyExportConfig,-1
306252,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RSAKeyExportConfig*,,<includes>,RSAKeyExportConfig*,,true,,RSAKeyExportConfig*,-1
306253,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RSAKeyVariant,,<includes>,RSAKeyVariant,,true,,RSAKeyVariant,-1
306254,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RSAPointer,,<includes>,RSAPointer,,true,,RSAPointer,-1
306255,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RSA_PSS_PARAMS*,,<includes>,RSA_PSS_PARAMS*,,true,,RSA_PSS_PARAMS*,-1
306256,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RadixTree,,<includes>,RadixTree,,true,,RadixTree,-1
306257,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RandomBytesConfig,,<includes>,RandomBytesConfig,,true,,RandomBytesConfig,-1
306258,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RandomBytesConfig*,,<includes>,RandomBytesConfig*,,true,,RandomBytesConfig*,-1
306259,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RandomPrimeConfig,,<includes>,RandomPrimeConfig,,true,,RandomPrimeConfig,-1
306260,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RandomPrimeConfig*,,<includes>,RandomPrimeConfig*,,true,,RandomPrimeConfig*,-1
306261,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReadableListener,,<includes>,ReadableListener,,true,,ReadableListener,-1
306262,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Reader,,<includes>,Reader,,true,,Reader,-1
306263,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReaderImpl,,<includes>,ReaderImpl,,true,,ReaderImpl,-1
306264,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Realm,,<includes>,Realm,,true,,Realm,-1
306265,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Realm*,,<includes>,Realm*,,true,,Realm*,-1
306266,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RealmSerializeInfo,,<includes>,RealmSerializeInfo,,true,,RealmSerializeInfo,-1
306267,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RealmSerializeInfo*,,<includes>,RealmSerializeInfo*,,true,,RealmSerializeInfo*,-1
306268,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RefBase,,<includes>,RefBase,,true,,RefBase,-1
306269,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RefBase*,,<includes>,RefBase*,,true,,RefBase*,-1
306270,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RefList*,,<includes>,RefList*,,true,,RefList*,-1
306271,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RefTracker,,<includes>,RefTracker,,true,,RefTracker,-1
306272,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Reference,,<includes>,Reference,,true,,Reference,-1
306273,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Reference*,,<includes>,Reference*,,true,,Reference*,-1
306274,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RegisterState,,<includes>,RegisterState,,true,,RegisterState,-1
306275,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Reject,,<includes>,Reject,,true,,Reject,-1
306276,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RemoveStreamListener,,<includes>,RemoveStreamListener,,true,,RemoveStreamListener,-1
306277,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReqWrap<uv_udp_send_t>,,<includes>,ReqWrap<uv_udp_send_t>,,true,,ReqWrap<uv_udp_send_t>,-1
306278,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReqWrap<uv_udp_send_t>*,,<includes>,ReqWrap<uv_udp_send_t>*,,true,,ReqWrap<uv_udp_send_t>*,-1
306279,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReqWrapBase*,,<includes>,ReqWrapBase*,,true,,ReqWrapBase*,-1
306280,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReqWrapQueue,,<includes>,ReqWrapQueue,,true,,ReqWrapQueue,-1
306281,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RequestQueue,,<includes>,RequestQueue,,true,,RequestQueue,-1
306282,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RequestQueueData,,<includes>,RequestQueueData,,true,,RequestQueueData,-1
306283,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RequestQueueData*,,<includes>,RequestQueueData*,,true,,RequestQueueData*,-1
306284,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResetContextSettingsBeforeSnapshot,,<includes>,ResetContextSettingsBeforeSnapshot,,true,,ResetContextSettingsBeforeSnapshot,-1
306285,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Resolver,,<includes>,Resolver,,true,,Resolver,-1
306286,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResourceConstraints*,,<includes>,ResourceConstraints*,,true,,ResourceConstraints*,-1
306287,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResourceType,,<includes>,ResourceType,,true,,ResourceType,-1
306288,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Result,,<includes>,Result,,true,,Result,-1
306289,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReverseTraits,,<includes>,ReverseTraits,,true,,ReverseTraits,-1
306290,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RsaKeyPairGenConfig*,,<includes>,RsaKeyPairGenConfig*,,true,,RsaKeyPairGenConfig*,-1
306291,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RsaPointer,,<includes>,RsaPointer,,true,,RsaPointer,-1
306292,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RuntimeAgent,,<includes>,RuntimeAgent,,true,,RuntimeAgent,-1
306293,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SECURITY_REVERSIONS,,<includes>,SECURITY_REVERSIONS,,true,,SECURITY_REVERSIONS,-1
306294,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SERIALIZABLE_OBJECT_TYPES,,<includes>,SERIALIZABLE_OBJECT_TYPES,,true,,SERIALIZABLE_OBJECT_TYPES,-1
306295,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SET_BINDING_ID,,<includes>,SET_BINDING_ID,,true,,SET_BINDING_ID,-1
306296,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SET_MEMORY_INFO_NAME,,<includes>,SET_MEMORY_INFO_NAME,,true,,SET_MEMORY_INFO_NAME,-1
306297,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SET_SELF_SIZE,,<includes>,SET_SELF_SIZE,,true,,SET_SELF_SIZE,-1
306298,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSL*,,<includes>,SSL*,,true,,SSL*,-1
306299,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSLCtxPointer,,<includes>,SSLCtxPointer,,true,,SSLCtxPointer,-1
306300,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSLPointer,,<includes>,SSLPointer,,true,,SSLPointer,-1
306301,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSLSessionPointer,,<includes>,SSLSessionPointer,,true,,SSLSessionPointer,-1
306302,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSL_CIPHER*,,<includes>,SSL_CIPHER*,,true,,SSL_CIPHER*,-1
306303,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSL_CTX*,,<includes>,SSL_CTX*,,true,,SSL_CTX*,-1
306304,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSL_CTX_new,,<includes>,SSL_CTX_new,,true,,SSL_CTX_new,-1
306305,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSL_METHOD*,,<includes>,SSL_METHOD*,,true,,SSL_METHOD*,-1
306306,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSL_SESSION,,<includes>,SSL_SESSION,,true,,SSL_SESSION,-1
306307,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SSL_SESSION*,,<includes>,SSL_SESSION*,,true,,SSL_SESSION*,-1
306308,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,STRINGIFY,,<includes>,STRINGIFY,,true,,STRINGIFY,-1
306309,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SYMBOL_INFO,,<includes>,SYMBOL_INFO,,true,,SYMBOL_INFO,-1
306310,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SameThreadInspectorSession,,<includes>,SameThreadInspectorSession,,true,,SameThreadInspectorSession,-1
306311,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SampleInfo,,<includes>,SampleInfo,,true,,SampleInfo,-1
306312,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScheduleTask,,<includes>,ScheduleTask,,true,,ScheduleTask,-1
306313,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScopedSuspendTracing,,<includes>,ScopedSuspendTracing,,true,,ScopedSuspendTracing,-1
306314,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScopedTracer,,<includes>,ScopedTracer,,true,,ScopedTracer,-1
306315,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Script,,<includes>,Script,,true,,Script,-1
306316,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScriptCompiler,,<includes>,ScriptCompiler,,true,,ScriptCompiler,-1
306317,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScriptOrigin,,<includes>,ScriptOrigin,,true,,ScriptOrigin,-1
306318,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScriptType,,<includes>,ScriptType,,true,,ScriptType,-1
306319,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScryptConfig,,<includes>,ScryptConfig,,true,,ScryptConfig,-1
306320,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScryptConfig*,,<includes>,ScryptConfig*,,true,,ScryptConfig*,-1
306321,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SeaConfig,,<includes>,SeaConfig,,true,,SeaConfig,-1
306322,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SeaDeserializer,,<includes>,SeaDeserializer,,true,,SeaDeserializer,-1
306323,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SeaFlags,,<includes>,SeaFlags,,true,,SeaFlags,-1
306324,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SeaResource,,<includes>,SeaResource,,true,,SeaResource,-1
306325,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SeaSerializer,,<includes>,SeaSerializer,,true,,SeaSerializer,-1
306326,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SealHandleScope,,<includes>,SealHandleScope,,true,,SealHandleScope,-1
306327,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SecretKeyGenConfig*,,<includes>,SecretKeyGenConfig*,,true,,SecretKeyGenConfig*,-1
306328,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SecretKeyGenTraits,,<includes>,SecretKeyGenTraits,,true,,SecretKeyGenTraits,-1
306329,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SecureContext,,<includes>,SecureContext,,true,,SecureContext,-1
306330,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SecureContext*,,<includes>,SecureContext*,,true,,SecureContext*,-1
306331,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SelectSNIContextCb,,<includes>,SelectSNIContextCb,,true,,SelectSNIContextCb,-1
306332,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SendMessageRequest,,<includes>,SendMessageRequest,,true,,SendMessageRequest,-1
306333,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SendWrap,,<includes>,SendWrap,,true,,SendWrap,-1
306334,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SendWrap*,,<includes>,SendWrap*,,true,,SendWrap*,-1
306335,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SerializeInfo,,<includes>,SerializeInfo,,true,,SerializeInfo,-1
306336,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SerializeInfo*,,<includes>,SerializeInfo*,,true,,SerializeInfo*,-1
306337,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SerializerContext,,<includes>,SerializerContext,,true,,SerializerContext,-1
306338,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SerializerContext*,,<includes>,SerializerContext*,,true,,SerializerContext*,-1
306339,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SerializerDelegate,,<includes>,SerializerDelegate,,true,,SerializerDelegate,-1
306340,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ServerSocket,,<includes>,ServerSocket,,true,,ServerSocket,-1
306341,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ServerSocket*,,<includes>,ServerSocket*,,true,,ServerSocket*,-1
306342,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SessionType,,<includes>,SessionType,,true,,SessionType,-1
306343,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SetConstructorFunctionFlag,,<includes>,SetConstructorFunctionFlag,,true,,SetConstructorFunctionFlag,-1
306344,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SetError,,<includes>,SetError,,true,,SetError,-1
306345,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SetTracingController,,<includes>,SetTracingController,,true,,SetTracingController,-1
306346,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShadowRealm,,<includes>,ShadowRealm,,true,,ShadowRealm,-1
306347,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShadowRealm*,,<includes>,ShadowRealm*,,true,,ShadowRealm*,-1
306348,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SharedValueConveyor,,<includes>,SharedValueConveyor,,true,,SharedValueConveyor,-1
306349,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShouldNotAbortOnUncaughtScope,,<includes>,ShouldNotAbortOnUncaughtScope,,true,,ShouldNotAbortOnUncaughtScope,-1
306350,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShutdownWrap,,<includes>,ShutdownWrap,,true,,ShutdownWrap,-1
306351,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShutdownWrap*,,<includes>,ShutdownWrap*,,true,,ShutdownWrap*,-1
306352,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SiblingGroup,,<includes>,SiblingGroup,,true,,SiblingGroup,-1
306353,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SideEffectType,,<includes>,SideEffectType,,true,,SideEffectType,-1
306354,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigintWatchdog,,<includes>,SigintWatchdog,,true,,SigintWatchdog,-1
306355,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigintWatchdogBase*,,<includes>,SigintWatchdogBase*,,true,,SigintWatchdogBase*,-1
306356,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigintWatchdogHelper,,<includes>,SigintWatchdogHelper,,true,,SigintWatchdogHelper,-1
306357,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Sign,,<includes>,Sign,,true,,Sign,-1
306358,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Sign*,,<includes>,Sign*,,true,,Sign*,-1
306359,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignConfiguration,,<includes>,SignConfiguration,,true,,SignConfiguration,-1
306360,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignConfiguration*,,<includes>,SignConfiguration*,,true,,SignConfiguration*,-1
306361,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignResult,,<includes>,SignResult,,true,,SignResult,-1
306362,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignTraits,,<includes>,SignTraits,,true,,SignTraits,-1
306363,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignalPropagation,,<includes>,SignalPropagation,,true,,SignalPropagation,-1
306364,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignalWrap,,<includes>,SignalWrap,,true,,SignalWrap,-1
306365,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignalWrap*,,<includes>,SignalWrap*,,true,,SignalWrap*,-1
306366,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Signature,,<includes>,Signature,,true,,Signature,-1
306367,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SimpleShutdownWrap<AsyncWrap>,,<includes>,SimpleShutdownWrap<AsyncWrap>,,true,,SimpleShutdownWrap<AsyncWrap>,-1
306368,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SimpleWriteWrap<AsyncWrap>,,<includes>,SimpleWriteWrap<AsyncWrap>,,true,,SimpleWriteWrap<AsyncWrap>,-1
306369,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SlicedArguments,,<includes>,SlicedArguments,,true,,SlicedArguments,-1
306370,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotBuilder,,<includes>,SnapshotBuilder,,true,,SnapshotBuilder,-1
306371,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotCreator,,<includes>,SnapshotCreator,,true,,SnapshotCreator,-1
306372,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotCreator*,,<includes>,SnapshotCreator*,,true,,SnapshotCreator*,-1
306373,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotData,,<includes>,SnapshotData,,true,,SnapshotData,-1
306374,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotData*,,<includes>,SnapshotData*,,true,,SnapshotData*,-1
306375,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotData**,,<includes>,SnapshotData**,,true,,SnapshotData**,-1
306376,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotDeserializer,,<includes>,SnapshotDeserializer,,true,,SnapshotDeserializer,-1
306377,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotIndex,,<includes>,SnapshotIndex,,true,,SnapshotIndex,-1
306378,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotMetadata,,<includes>,SnapshotMetadata,,true,,SnapshotMetadata,-1
306379,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotSerializer,,<includes>,SnapshotSerializer,,true,,SnapshotSerializer,-1
306380,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotableObject*,,<includes>,SnapshotableObject*,,true,,SnapshotableObject*,-1
306381,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketAddress,,<includes>,SocketAddress,,true,,SocketAddress,-1
306382,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketAddress*,,<includes>,SocketAddress*,,true,,SocketAddress*,-1
306383,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketAddressBase,,<includes>,SocketAddressBase,,true,,SocketAddressBase,-1
306384,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketAddressBase*,,<includes>,SocketAddressBase*,,true,,SocketAddressBase*,-1
306385,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketAddressBlockListWrap,,<includes>,SocketAddressBlockListWrap,,true,,SocketAddressBlockListWrap,-1
306386,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketAddressBlockListWrap*,,<includes>,SocketAddressBlockListWrap*,,true,,SocketAddressBlockListWrap*,-1
306387,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketSession,,<includes>,SocketSession,,true,,SocketSession,-1
306388,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketSession*,,<includes>,SocketSession*,,true,,SocketSession*,-1
306389,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Source<T>,,<includes>,Source<T>,,true,,Source<T>,-1
306390,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StackOfX509,,<includes>,StackOfX509,,true,,StackOfX509,-1
306391,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StackTrace,,<includes>,StackTrace,,true,,StackTrace,-1
306392,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StackTraceOptions,,<includes>,StackTraceOptions,,true,,StackTraceOptions,-1
306393,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StackTracePrinter,,<includes>,StackTracePrinter,,true,,StackTracePrinter,-1
306394,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StandardizedGroupInstantiator,,<includes>,StandardizedGroupInstantiator,,true,,StandardizedGroupInstantiator,-1
306395,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StartExecutionCallbackInfo,,<includes>,StartExecutionCallbackInfo,,true,,StartExecutionCallbackInfo,-1
306396,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StartFlags,,<includes>,StartFlags,,true,,StartFlags,-1
306397,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StartupData,,<includes>,StartupData,,true,,StartupData,-1
306398,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StatWatcher,,<includes>,StatWatcher,,true,,StatWatcher,-1
306399,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StatWatcher*,,<includes>,StatWatcher*,,true,,StatWatcher*,-1
306400,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StaticExternalTwoByteResource*,,<includes>,StaticExternalTwoByteResource*,,true,,StaticExternalTwoByteResource*,-1
306401,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Stats*,,<includes>,Stats*,,true,,Stats*,-1
306402,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Status,,<includes>,Status,,true,,Status,-1
306403,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Stop,,<includes>,Stop,,true,,Stop,-1
306404,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StopTask,,<includes>,StopTask,,true,,StopTask,-1
306405,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StoredDataObject,,<includes>,StoredDataObject,,true,,StoredDataObject,-1
306406,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Stream,,<includes>,Stream,,true,,Stream,-1
306407,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamBase,,<includes>,StreamBase,,true,,StreamBase,-1
306408,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamBase*,,<includes>,StreamBase*,,true,,StreamBase*,-1
306409,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamBaseJSChecks,,<includes>,StreamBaseJSChecks,,true,,StreamBaseJSChecks,-1
306410,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamListener,,<includes>,StreamListener,,true,,StreamListener,-1
306411,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamListener*,,<includes>,StreamListener*,,true,,StreamListener*,-1
306412,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamPipe,,<includes>,StreamPipe,,true,,StreamPipe,-1
306413,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamPipe*,,<includes>,StreamPipe*,,true,,StreamPipe*,-1
306414,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamReq*,,<includes>,StreamReq*,,true,,StreamReq*,-1
306415,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StreamWriteResult,,<includes>,StreamWriteResult,,true,,StreamWriteResult,-1
306416,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringBytes,,<includes>,StringBytes,,true,,StringBytes,-1
306417,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringDecoder,,<includes>,StringDecoder,,true,,StringDecoder,-1
306418,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringDecoder*,,<includes>,StringDecoder*,,true,,StringDecoder*,-1
306419,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringLogMode,,<includes>,StringLogMode,,true,,StringLogMode,-1
306420,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringMaker,,<includes>,StringMaker,,true,,StringMaker,-1
306421,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringPtr,,<includes>,StringPtr,,true,,StringPtr,-1
306422,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringUtil,,<includes>,StringUtil,,true,,StringUtil,-1
306423,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringVector*,,<includes>,StringVector*,,true,,StringVector*,-1
306424,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringView,,<includes>,StringView,,true,,StringView,-1
306425,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SymSetOptions,,<includes>,SymSetOptions,,true,,SymSetOptions,-1
306426,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Symbol,,<includes>,Symbol,,true,,Symbol,-1
306427,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SymbolInfo,,<includes>,SymbolInfo,,true,,SymbolInfo,-1
306428,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SyncProcessOutputBuffer,,<includes>,SyncProcessOutputBuffer,,true,,SyncProcessOutputBuffer,-1
306429,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SyncProcessOutputBuffer*,,<includes>,SyncProcessOutputBuffer*,,true,,SyncProcessOutputBuffer*,-1
306430,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SyncProcessRunner,,<includes>,SyncProcessRunner,,true,,SyncProcessRunner,-1
306431,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SyncProcessRunner*,,<includes>,SyncProcessRunner*,,true,,SyncProcessRunner*,-1
306432,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SyncProcessStdioPipe,,<includes>,SyncProcessStdioPipe,,true,,SyncProcessStdioPipe,-1
306433,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SyncProcessStdioPipe*,,<includes>,SyncProcessStdioPipe*,,true,,SyncProcessStdioPipe*,-1
306434,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,T,,<includes>,T,,true,,T,-1
306435,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,T*,,<includes>,T*,,true,,T*,-1
306436,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TCPWrap,,<includes>,TCPWrap,,true,,TCPWrap,-1
306437,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TCPWrap*,,<includes>,TCPWrap*,,true,,TCPWrap*,-1
306438,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,THROW_ERR_CRYPTO_INVALID_IV,,<includes>,THROW_ERR_CRYPTO_INVALID_IV,,true,,THROW_ERR_CRYPTO_INVALID_IV,-1
306439,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,THROW_ERR_CRYPTO_INVALID_MESSAGELEN,,<includes>,THROW_ERR_CRYPTO_INVALID_MESSAGELEN,,true,,THROW_ERR_CRYPTO_INVALID_MESSAGELEN,-1
306440,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TIME_TYPE,,<includes>,TIME_TYPE,,true,,TIME_TYPE,-1
306441,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TIME_TYPE*,,<includes>,TIME_TYPE*,,true,,TIME_TYPE*,-1
306442,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TLSWrap,,<includes>,TLSWrap,,true,,TLSWrap,-1
306443,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TLSWrap*,,<includes>,TLSWrap*,,true,,TLSWrap*,-1
306444,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TTYWrap,,<includes>,TTYWrap,,true,,TTYWrap,-1
306445,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TTYWrap*,,<includes>,TTYWrap*,,true,,TTYWrap*,-1
306446,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Task,,<includes>,Task,,true,,Task,-1
306447,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TaskQueue<Task>,,<includes>,TaskQueue<Task>,,true,,TaskQueue<Task>,-1
306448,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TaskQueue<Task>*,,<includes>,TaskQueue<Task>*,,true,,TaskQueue<Task>*,-1
306449,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TcpHolder,,<includes>,TcpHolder,,true,,TcpHolder,-1
306450,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TcpHolder*,,<includes>,TcpHolder*,,true,,TcpHolder*,-1
306451,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThreadId,,<includes>,ThreadId,,true,,ThreadId,-1
306452,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThreadPoolWork,,<includes>,ThreadPoolWork,,true,,ThreadPoolWork,-1
306453,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThreadSafeDelegate,,<includes>,ThreadSafeDelegate,,true,,ThreadSafeDelegate,-1
306454,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThreadSafeFunction,,<includes>,ThreadSafeFunction,,true,,ThreadSafeFunction,-1
306455,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThreadSafeFunction*,,<includes>,ThreadSafeFunction*,,true,,ThreadSafeFunction*,-1
306456,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThrowUninitializedInspectorError,,<includes>,ThrowUninitializedInspectorError,,true,,ThrowUninitializedInspectorError,-1
306457,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TickInfo*,,<includes>,TickInfo*,,true,,TickInfo*,-1
306458,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TimeZoneDetection,,<includes>,TimeZoneDetection,,true,,TimeZoneDetection,-1
306459,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TimerCallback,,<includes>,TimerCallback,,true,,TimerCallback,-1
306460,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TimerWrap,,<includes>,TimerWrap,,true,,TimerWrap,-1
306461,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TimerWrap*,,<includes>,TimerWrap*,,true,,TimerWrap*,-1
306462,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceBuffer,,<includes>,TraceBuffer,,true,,TraceBuffer,-1
306463,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceConfig,,<includes>,TraceConfig,,true,,TraceConfig,-1
306464,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceConfig*,,<includes>,TraceConfig*,,true,,TraceConfig*,-1
306465,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceEventHelper,,<includes>,TraceEventHelper,,true,,TraceEventHelper,-1
306466,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceObject,,<includes>,TraceObject,,true,,TraceObject,-1
306467,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceObject*,,<includes>,TraceObject*,,true,,TraceObject*,-1
306468,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceSigintWatchdog,,<includes>,TraceSigintWatchdog,,true,,TraceSigintWatchdog,-1
306469,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceSigintWatchdog*,,<includes>,TraceSigintWatchdog*,,true,,TraceSigintWatchdog*,-1
306470,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceStringWithCopy,,<includes>,TraceStringWithCopy,,true,,TraceStringWithCopy,-1
306471,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TraceValueUnion,,<includes>,TraceValueUnion,,true,,TraceValueUnion,-1
306472,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TracedValue,,<includes>,TracedValue,,true,,TracedValue,-1
306473,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TracingAgent,,<includes>,TracingAgent,,true,,TracingAgent,-1
306474,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TracingController,,<includes>,TracingController,,true,,TracingController,-1
306475,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TracingController*,,<includes>,TracingController*,,true,,TracingController*,-1
306476,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TrackedStringResource,,<includes>,TrackedStringResource,,true,,TrackedStringResource,-1
306477,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransferData,,<includes>,TransferData,,true,,TransferData,-1
306478,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransferData*,,<includes>,TransferData*,,true,,TransferData*,-1
306479,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransferList,,<includes>,TransferList,,true,,TransferList,-1
306480,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransferMode,,<includes>,TransferMode,,true,,TransferMode,-1
306481,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransportAction,,<includes>,TransportAction,,true,,TransportAction,-1
306482,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TryCatch,,<includes>,TryCatch,,true,,TryCatch,-1
306483,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ts,,<includes>,Ts,,true,,Ts,-1
306484,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TwoByteValue,,<includes>,TwoByteValue,,true,,TwoByteValue,-1
306485,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Type,,<includes>,Type,,true,,Type,-1
306486,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeName,,<includes>,TypeName,,true,,TypeName,-1
306487,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeName*,,<includes>,TypeName*,,true,,TypeName*,-1
306488,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypedArray,,<includes>,TypedArray,,true,,TypedArray,-1
306489,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,U,,<includes>,U,,true,,U,-1
306490,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UDPListener,,<includes>,UDPListener,,true,,UDPListener,-1
306491,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UDPListener*,,<includes>,UDPListener*,,true,,UDPListener*,-1
306492,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UDPWrap,,<includes>,UDPWrap,,true,,UDPWrap,-1
306493,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UDPWrap*,,<includes>,UDPWrap*,,true,,UDPWrap*,-1
306494,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UDPWrapBase,,<includes>,UDPWrapBase,,true,,UDPWrapBase,-1
306495,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UDPWrapBase*,,<includes>,UDPWrapBase*,,true,,UDPWrapBase*,-1
306496,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UNLIKELY,,<includes>,UNLIKELY,,true,,UNLIKELY,-1
306497,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,USE,,<includes>,USE,,true,,USE,-1
306498,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UberDispatcher*,,<includes>,UberDispatcher*,,true,,UberDispatcher*,-1
306499,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint16Array,,<includes>,Uint16Array,,true,,Uint16Array,-1
306500,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint32,,<includes>,Uint32,,true,,Uint32,-1
306501,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint32Array,,<includes>,Uint32Array,,true,,Uint32Array,-1
306502,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint8Array,,<includes>,Uint8Array,,true,,Uint8Array,-1
306503,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint8ClampedArray,,<includes>,Uint8ClampedArray,,true,,Uint8ClampedArray,-1
306504,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnionBytes,,<includes>,UnionBytes,,true,,UnionBytes,-1
306505,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnwrapAction,,<includes>,UnwrapAction,,true,,UnwrapAction,-1
306506,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UpdateResult,,<includes>,UpdateResult,,true,,UpdateResult,-1
306507,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UseDefaultCategoryMode,,<includes>,UseDefaultCategoryMode,,true,,UseDefaultCategoryMode,-1
306508,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Utf8Value,,<includes>,Utf8Value,,true,,Utf8Value,-1
306509,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UvHandle*,,<includes>,UvHandle*,,true,,UvHandle*,-1
306510,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8,,<includes>,V8,,true,,V8,-1
306511,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8CoverageConnection,,<includes>,V8CoverageConnection,,true,,V8CoverageConnection,-1
306512,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8CoverageConnection*,,<includes>,V8CoverageConnection*,,true,,V8CoverageConnection*,-1
306513,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8CpuProfilerConnection,,<includes>,V8CpuProfilerConnection,,true,,V8CpuProfilerConnection,-1
306514,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8HeapProfilerConnection,,<includes>,V8HeapProfilerConnection,,true,,V8HeapProfilerConnection,-1
306515,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8InspectorClient,,<includes>,V8InspectorClient,,true,,V8InspectorClient,-1
306516,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8Platform,,<includes>,V8Platform,,true,,V8Platform,-1
306517,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8ProfilerConnection,,<includes>,V8ProfilerConnection,,true,,V8ProfilerConnection,-1
306518,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8ProfilerConnection*,,<includes>,V8ProfilerConnection*,,true,,V8ProfilerConnection*,-1
306519,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V8ProfilerSessionDelegate,,<includes>,V8ProfilerSessionDelegate,,true,,V8ProfilerSessionDelegate,-1
306520,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VARIANTS,,<includes>,VARIANTS,,true,,VARIANTS,-1
306521,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VT,,<includes>,VT,,true,,VT,-1
306522,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueDeserializer,,<includes>,ValueDeserializer,,true,,ValueDeserializer,-1
306523,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueDeserializer*,,<includes>,ValueDeserializer*,,true,,ValueDeserializer*,-1
306524,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Delegate,,<includes>,ValueDeserializer.Delegate,,true,,Delegate,-1
306525,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueSerializer,,<includes>,ValueSerializer,,true,,ValueSerializer,-1
306526,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueSerializer*,,<includes>,ValueSerializer*,,true,,ValueSerializer*,-1
306527,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Delegate,,<includes>,ValueSerializer.Delegate,,true,,Delegate,-1
306528,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Verify,,<includes>,Verify,,true,,Verify,-1
306529,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Verify*,,<includes>,Verify*,,true,,Verify*,-1
306530,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WASI,,<includes>,WASI,,true,,WASI,-1
306531,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WASI*,,<includes>,WASI*,,true,,WASI*,-1
306532,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WINAPI,,<includes>,WINAPI,,true,,WINAPI,-1
306533,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WORKER_THREADS_PERMISSIONS,,<includes>,WORKER_THREADS_PERMISSIONS,,true,,WORKER_THREADS_PERMISSIONS,-1
306534,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WasiFunction,,<includes>,WasiFunction,,true,,WasiFunction,-1
306535,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WasmMemory,,<includes>,WasmMemory,,true,,WasmMemory,-1
306536,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WasmStreamingObject,,<includes>,WasmStreamingObject,,true,,WasmStreamingObject,-1
306537,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WasmStreamingObject*,,<includes>,WasmStreamingObject*,,true,,WasmStreamingObject*,-1
306538,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Watchdog,,<includes>,Watchdog,,true,,Watchdog,-1
306539,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Watchdog*,,<includes>,Watchdog*,,true,,Watchdog*,-1
306540,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WeakCallbackInfo<BaseObject>,,<includes>,WeakCallbackInfo<BaseObject>,,true,,WeakCallbackInfo<BaseObject>,-1
306541,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WeakCallbackInfo<CompiledFnEntry>,,<includes>,WeakCallbackInfo<CompiledFnEntry>,,true,,WeakCallbackInfo<CompiledFnEntry>,-1
306542,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WeakCallbackInfo<ContextifyContext>,,<includes>,WeakCallbackInfo<ContextifyContext>,,true,,WeakCallbackInfo<ContextifyContext>,-1
306543,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WeakCallbackInfo<DestroyParam>,,<includes>,WeakCallbackInfo<DestroyParam>,,true,,WeakCallbackInfo<DestroyParam>,-1
306544,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WeakCallbackType,,<includes>,WeakCallbackType,,true,,WeakCallbackType,-1
306545,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WeakReference,,<includes>,WeakReference,,true,,WeakReference,-1
306546,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WeakReference*,,<includes>,WeakReference*,,true,,WeakReference*,-1
306547,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WebCryptoCipherMode,,<includes>,WebCryptoCipherMode,,true,,WebCryptoCipherMode,-1
306548,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WebCryptoCipherStatus,,<includes>,WebCryptoCipherStatus,,true,,WebCryptoCipherStatus,-1
306549,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WebCryptoKeyExportStatus,,<includes>,WebCryptoKeyExportStatus,,true,,WebCryptoKeyExportStatus,-1
306550,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WebCryptoKeyFormat,,<includes>,WebCryptoKeyFormat,,true,,WebCryptoKeyFormat,-1
306551,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Win32SymbolDebuggingContext,,<includes>,Win32SymbolDebuggingContext,,true,,Win32SymbolDebuggingContext,-1
306552,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WithScope,,<includes>,WithScope,,true,,WithScope,-1
306553,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Work,,<includes>,Work,,true,,Work,-1
306554,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Work*,,<includes>,Work*,,true,,Work*,-1
306555,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Worker,,<includes>,Worker,,true,,Worker,-1
306556,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Worker*,,<includes>,Worker*,,true,,Worker*,-1
306557,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerAgent,,<includes>,WorkerAgent,,true,,WorkerAgent,-1
306558,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerDelegate,,<includes>,WorkerDelegate,,true,,WorkerDelegate,-1
306559,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerFinishedRequest,,<includes>,WorkerFinishedRequest,,true,,WorkerFinishedRequest,-1
306560,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerInfo,,<includes>,WorkerInfo,,true,,WorkerInfo,-1
306561,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerManager,,<includes>,WorkerManager,,true,,WorkerManager,-1
306562,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerManagerEventHandle,,<includes>,WorkerManagerEventHandle,,true,,WorkerManagerEventHandle,-1
306563,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerStartedRequest,,<includes>,WorkerStartedRequest,,true,,WorkerStartedRequest,-1
306564,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerThreadData,,<includes>,WorkerThreadData,,true,,WorkerThreadData,-1
306565,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Wrap*,,<includes>,Wrap*,,true,,Wrap*,-1
306566,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WrapType,,<includes>,WrapType,,true,,WrapType,-1
306567,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WrapType*,,<includes>,WrapType*,,true,,WrapType*,-1
306568,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WritableListener,,<includes>,WritableListener,,true,,WritableListener,-1
306569,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WriteRequest,,<includes>,WriteRequest,,true,,WriteRequest,-1
306570,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WriteRequest*,,<includes>,WriteRequest*,,true,,WriteRequest*,-1
306571,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WriteResult,,<includes>,WriteResult,,true,,WriteResult,-1
306572,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WriteWrap,,<includes>,WriteWrap,,true,,WriteWrap,-1
306573,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WriteWrap*,,<includes>,WriteWrap*,,true,,WriteWrap*,-1
306574,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WsHandler,,<includes>,WsHandler,,true,,WsHandler,-1
306575,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WsHandler*,,<includes>,WsHandler*,,true,,WsHandler*,-1
306576,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509*,,<includes>,X509*,,true,,X509*,-1
306577,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509Certificate,,<includes>,X509Certificate,,true,,X509Certificate,-1
306578,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509Certificate*,,<includes>,X509Certificate*,,true,,X509Certificate*,-1
306579,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509Pointer,,<includes>,X509Pointer,,true,,X509Pointer,-1
306580,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509Pointer*,,<includes>,X509Pointer*,,true,,X509Pointer*,-1
306581,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509V3_EXT_METHOD*,,<includes>,X509V3_EXT_METHOD*,,true,,X509V3_EXT_METHOD*,-1
306582,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509_EXTENSION*,,<includes>,X509_EXTENSION*,,true,,X509_EXTENSION*,-1
306583,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509_NAME*,,<includes>,X509_NAME*,,true,,X509_NAME*,-1
306584,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509_NAME_ENTRY*,,<includes>,X509_NAME_ENTRY*,,true,,X509_NAME_ENTRY*,-1
306585,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509_STORE,,<includes>,X509_STORE,,true,,X509_STORE,-1
306586,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509_STORE*,,<includes>,X509_STORE*,,true,,X509_STORE*,-1
306587,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,X509_STORE_CTX*,,<includes>,X509_STORE_CTX*,,true,,X509_STORE_CTX*,-1
306588,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ZlibContext,,<includes>,ZlibContext,,true,,ZlibContext,-1
306589,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ZlibStream,,<includes>,ZlibStream,,true,,ZlibStream,-1
306590,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ZlibStream*,,<includes>,ZlibStream*,,true,,ZlibStream*,-1
306591,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,addon_context_register_func,,<includes>,addon_context_register_func,,true,,addon_context_register_func,-1
306592,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,addrinfo,,<includes>,addrinfo,,true,,addrinfo,-1
306593,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,addrinfo*,,<includes>,addrinfo*,,true,,addrinfo*,-1
306594,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,alloc_func,,<includes>,alloc_func,,true,,alloc_func,-1
306595,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_64,,<includes>,anonymous_type_64,,true,,anonymous_type_64,-1
306596,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_65,,<includes>,anonymous_type_65,,true,,anonymous_type_65,-1
306597,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_66,,<includes>,anonymous_type_66,,true,,anonymous_type_66,-1
306598,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_67,,<includes>,anonymous_type_67,,true,,anonymous_type_67,-1
306599,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_68,,<includes>,anonymous_type_68,,true,,anonymous_type_68,-1
306600,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_69,,<includes>,anonymous_type_69,,true,,anonymous_type_69,-1
306601,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_70,,<includes>,anonymous_type_70,,true,,anonymous_type_70,-1
306602,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_71,,<includes>,anonymous_type_71,,true,,anonymous_type_71,-1
306603,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_72,,<includes>,anonymous_type_72,,true,,anonymous_type_72,-1
306604,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_73,,<includes>,anonymous_type_73,,true,,anonymous_type_73,-1
306605,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_74,,<includes>,anonymous_type_74,,true,,anonymous_type_74,-1
306606,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_75,,<includes>,anonymous_type_75,,true,,anonymous_type_75,-1
306607,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_76,,<includes>,anonymous_type_76,,true,,anonymous_type_76,-1
306608,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_77,,<includes>,anonymous_type_77,,true,,anonymous_type_77,-1
306609,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_78,,<includes>,anonymous_type_78,,true,,anonymous_type_78,-1
306610,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_79,,<includes>,anonymous_type_79,,true,,anonymous_type_79,-1
306611,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_80,,<includes>,anonymous_type_80,,true,,anonymous_type_80,-1
306612,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_81,,<includes>,anonymous_type_81,,true,,anonymous_type_81,-1
306613,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_82,,<includes>,anonymous_type_82,,true,,anonymous_type_82,-1
306614,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_83,,<includes>,anonymous_type_83,,true,,anonymous_type_83,-1
306615,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"anonymous_type_84(napi_env__,napi_value__,void,void()(napi_env__,void,void),void,napi_ref__)",,<includes>,"anonymous_type_84(napi_env__,napi_value__,void,void()(napi_env__,void,void),void,napi_ref__)",,true,,"anonymous_type_84(napi_env__,napi_value__,void,void()(napi_env__,void,void),void,napi_ref__)",-1
306616,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_85,,<includes>,anonymous_type_85,,true,,anonymous_type_85,-1
306617,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_86,,<includes>,anonymous_type_86,,true,,anonymous_type_86,-1
306618,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_87,,<includes>,anonymous_type_87,,true,,anonymous_type_87,-1
306619,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,anonymous_type_87(int),,<includes>,anonymous_type_87(int),,true,,anonymous_type_87(int),-1
306620,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"anonymous_type_88(napi_env__,napi_deferred__,napi_value__,bool)",,<includes>,"anonymous_type_88(napi_env__,napi_deferred__,napi_value__,bool)",,true,,"anonymous_type_88(napi_env__,napi_deferred__,napi_value__,bool)",-1
306621,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"anonymous_type_89(napi_env__,napi_deferred__,napi_value__,bool)",,<includes>,"anonymous_type_89(napi_env__,napi_deferred__,napi_value__,bool)",,true,,"anonymous_type_89(napi_env__,napi_deferred__,napi_value__,bool)",-1
306622,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_addr6ttl[256],,<includes>,ares_addr6ttl[256],,true,,ares_addr6ttl[256],-1
306623,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_addr_port_node*,,<includes>,ares_addr_port_node*,,true,,ares_addr_port_node*,-1
306624,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_addrttl[256],,<includes>,ares_addrttl[256],,true,,ares_addrttl[256],-1
306625,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_caa_reply*,,<includes>,ares_caa_reply*,,true,,ares_caa_reply*,-1
306626,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_destroy,,<includes>,ares_destroy,,true,,ares_destroy,-1
306627,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_mx_reply*,,<includes>,ares_mx_reply*,,true,,ares_mx_reply*,-1
306628,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_naptr_reply*,,<includes>,ares_naptr_reply*,,true,,ares_naptr_reply*,-1
306629,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_options,,<includes>,ares_options,,true,,ares_options,-1
306630,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_soa_reply*,,<includes>,ares_soa_reply*,,true,,ares_soa_reply*,-1
306631,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_socket_t,,<includes>,ares_socket_t,,true,,ares_socket_t,-1
306632,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_srv_reply*,,<includes>,ares_srv_reply*,,true,,ares_srv_reply*,-1
306633,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ares_txt_ext*,,<includes>,ares_txt_ext*,,true,,ares_txt_ext*,-1
306634,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,async_context,,<includes>,async_context,,true,,async_context,-1
306635,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,async_hooks_,,<includes>,async_hooks_,,true,,async_hooks_,-1
306636,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,atexit,,<includes>,atexit,,true,,atexit,-1
306637,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,auth_tag_,,<includes>,auth_tag_,,true,,auth_tag_,-1
306638,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,auto,,<includes>,auto,,true,,auto,-1
306639,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,auto*,,<includes>,auto*,,true,,auto*,-1
306640,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,binding,,<includes>,binding,,true,,binding,-1
306641,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,bob,,<includes>,bob,,true,,bob,-1
306642,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,bool,,<includes>,bool,,true,,bool,-1
306643,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,bool*,,<includes>,bool*,,true,,bool*,-1
306644,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,brotli_alloc_func,,<includes>,brotli_alloc_func,,true,,brotli_alloc_func,-1
306645,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,brotli_free_func,,<includes>,brotli_free_func,,true,,brotli_free_func,-1
306646,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,callback_struct_saved,,<includes>,callback_struct_saved,,true,,callback_struct_saved,-1
306647,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char,,<includes>,char,,true,,char,-1
306648,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char*,,<includes>,char*,,true,,char*,-1
306649,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char**,,<includes>,char**,,true,,char**,-1
306650,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char*[2],,<includes>,char*[2],,true,,char*[2],-1
306651,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char*[],,<includes>,char*[],,true,,char*[],-1
306652,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char16_t,,<includes>,char16_t,,true,,char16_t,-1
306653,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char16_t*,,<includes>,char16_t*,,true,,char16_t*,-1
306654,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[0],,<includes>,char[0],,true,,char[0],-1
306655,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[1024],,<includes>,char[1024],,true,,char[1024],-1
306656,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[102],,<includes>,char[102],,true,,char[102],-1
306657,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[103],,<includes>,char[103],,true,,char[103],-1
306658,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[106],,<includes>,char[106],,true,,char[106],-1
306659,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[108],,<includes>,char[108],,true,,char[108],-1
306660,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[10],,<includes>,char[10],,true,,char[10],-1
306661,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[111036273265210391000497],,<includes>,char[111036273265210391000497],,true,,char[111036273265210391000497],-1
306662,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[111039100049710362733653],,<includes>,char[111039100049710362733653],,true,,char[111039100049710362733653],-1
306663,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[112],,<includes>,char[112],,true,,char[112],-1
306664,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[116],,<includes>,char[116],,true,,char[116],-1
306665,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[11],,<includes>,char[11],,true,,char[11],-1
306666,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[120],,<includes>,char[120],,true,,char[120],-1
306667,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[124],,<includes>,char[124],,true,,char[124],-1
306668,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[128],,<includes>,char[128],,true,,char[128],-1
306669,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[12],,<includes>,char[12],,true,,char[12],-1
306670,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[130],,<includes>,char[130],,true,,char[130],-1
306671,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[132],,<includes>,char[132],,true,,char[132],-1
306672,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[134],,<includes>,char[134],,true,,char[134],-1
306673,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[138],,<includes>,char[138],,true,,char[138],-1
306674,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[13],,<includes>,char[13],,true,,char[13],-1
306675,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[141039100049710391000497],,<includes>,char[141039100049710391000497],,true,,char[141039100049710391000497],-1
306676,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[1410391000497111039100049710391000497],,<includes>,char[1410391000497111039100049710391000497],,true,,char[1410391000497111039100049710391000497],-1
306677,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[14],,<includes>,char[14],,true,,char[14],-1
306678,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[152],,<includes>,char[152],,true,,char[152],-1
306679,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[157],,<includes>,char[157],,true,,char[157],-1
306680,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[15],,<includes>,char[15],,true,,char[15],-1
306681,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[16384],,<includes>,char[16384],,true,,char[16384],-1
306682,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[16],,<includes>,char[16],,true,,char[16],-1
306683,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[171],,<includes>,char[171],,true,,char[171],-1
306684,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[173],,<includes>,char[173],,true,,char[173],-1
306685,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[17],,<includes>,char[17],,true,,char[17],-1
306686,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[185],,<includes>,char[185],,true,,char[185],-1
306687,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[186],,<includes>,char[186],,true,,char[186],-1
306688,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[187],,<includes>,char[187],,true,,char[187],-1
306689,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[18],,<includes>,char[18],,true,,char[18],-1
306690,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[196],,<includes>,char[196],,true,,char[196],-1
306691,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[19],,<includes>,char[19],,true,,char[19],-1
306692,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[1],,<includes>,char[1],,true,,char[1],-1
306693,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[204],,<includes>,char[204],,true,,char[204],-1
306694,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[20],,<includes>,char[20],,true,,char[20],-1
306695,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[21],,<includes>,char[21],,true,,char[21],-1
306696,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[22],,<includes>,char[22],,true,,char[22],-1
306697,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[23],,<includes>,char[23],,true,,char[23],-1
306698,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[241],,<includes>,char[241],,true,,char[241],-1
306699,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[24],,<includes>,char[24],,true,,char[24],-1
306700,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[256],,<includes>,char[256],,true,,char[256],-1
306701,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[258],,<includes>,char[258],,true,,char[258],-1
306702,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[25],,<includes>,char[25],,true,,char[25],-1
306703,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[26],,<includes>,char[26],,true,,char[26],-1
306704,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[27],,<includes>,char[27],,true,,char[27],-1
306705,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[286],,<includes>,char[286],,true,,char[286],-1
306706,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[28],,<includes>,char[28],,true,,char[28],-1
306707,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[29],,<includes>,char[29],,true,,char[29],-1
306708,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[2],,<includes>,char[2],,true,,char[2],-1
306709,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[3*EVP_MAX_MD_SIZE],,<includes>,char[3*EVP_MAX_MD_SIZE],,true,,char[3*EVP_MAX_MD_SIZE],-1
306710,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[30],,<includes>,char[30],,true,,char[30],-1
306711,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[318],,<includes>,char[318],,true,,char[318],-1
306712,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[31],,<includes>,char[31],,true,,char[31],-1
306713,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[32],,<includes>,char[32],,true,,char[32],-1
306714,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[33],,<includes>,char[33],,true,,char[33],-1
306715,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[34],,<includes>,char[34],,true,,char[34],-1
306716,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[35],,<includes>,char[35],,true,,char[35],-1
306717,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[36],,<includes>,char[36],,true,,char[36],-1
306718,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[37],,<includes>,char[37],,true,,char[37],-1
306719,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[38],,<includes>,char[38],,true,,char[38],-1
306720,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[39],,<includes>,char[39],,true,,char[39],-1
306721,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[3],,<includes>,char[3],,true,,char[3],-1
306722,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[4096],,<includes>,char[4096],,true,,char[4096],-1
306723,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[40],,<includes>,char[40],,true,,char[40],-1
306724,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[41],,<includes>,char[41],,true,,char[41],-1
306725,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[42],,<includes>,char[42],,true,,char[42],-1
306726,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[43],,<includes>,char[43],,true,,char[43],-1
306727,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[44],,<includes>,char[44],,true,,char[44],-1
306728,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[45],,<includes>,char[45],,true,,char[45],-1
306729,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[46],,<includes>,char[46],,true,,char[46],-1
306730,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[47],,<includes>,char[47],,true,,char[47],-1
306731,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[48],,<includes>,char[48],,true,,char[48],-1
306732,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[49],,<includes>,char[49],,true,,char[49],-1
306733,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[4],,<includes>,char[4],,true,,char[4],-1
306734,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[50],,<includes>,char[50],,true,,char[50],-1
306735,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[51],,<includes>,char[51],,true,,char[51],-1
306736,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[52],,<includes>,char[52],,true,,char[52],-1
306737,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[53],,<includes>,char[53],,true,,char[53],-1
306738,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[54],,<includes>,char[54],,true,,char[54],-1
306739,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[55],,<includes>,char[55],,true,,char[55],-1
306740,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[56],,<includes>,char[56],,true,,char[56],-1
306741,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[57],,<includes>,char[57],,true,,char[57],-1
306742,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[58],,<includes>,char[58],,true,,char[58],-1
306743,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[59],,<includes>,char[59],,true,,char[59],-1
306744,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[5],,<includes>,char[5],,true,,char[5],-1
306745,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[60],,<includes>,char[60],,true,,char[60],-1
306746,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[61],,<includes>,char[61],,true,,char[61],-1
306747,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[62],,<includes>,char[62],,true,,char[62],-1
306748,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[63],,<includes>,char[63],,true,,char[63],-1
306749,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[64],,<includes>,char[64],,true,,char[64],-1
306750,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[65],,<includes>,char[65],,true,,char[65],-1
306751,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[66],,<includes>,char[66],,true,,char[66],-1
306752,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[68],,<includes>,char[68],,true,,char[68],-1
306753,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[69],,<includes>,char[69],,true,,char[69],-1
306754,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[6],,<includes>,char[6],,true,,char[6],-1
306755,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[70],,<includes>,char[70],,true,,char[70],-1
306756,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[71],,<includes>,char[71],,true,,char[71],-1
306757,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[72],,<includes>,char[72],,true,,char[72],-1
306758,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[75],,<includes>,char[75],,true,,char[75],-1
306759,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[76],,<includes>,char[76],,true,,char[76],-1
306760,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[77],,<includes>,char[77],,true,,char[77],-1
306761,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[7],,<includes>,char[7],,true,,char[7],-1
306762,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[80],,<includes>,char[80],,true,,char[80],-1
306763,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[8192],,<includes>,char[8192],,true,,char[8192],-1
306764,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[84],,<includes>,char[84],,true,,char[84],-1
306765,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[89],,<includes>,char[89],,true,,char[89],-1
306766,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[8],,<includes>,char[8],,true,,char[8],-1
306767,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[94],,<includes>,char[94],,true,,char[94],-1
306768,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[96],,<includes>,char[96],,true,,char[96],-1
306769,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[98],,<includes>,char[98],,true,,char[98],-1
306770,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[99],,<includes>,char[99],,true,,char[99],-1
306771,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[9],,<includes>,char[9],,true,,char[9],-1
306772,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[ACCEPT_KEY_LENGTH],,<includes>,char[ACCEPT_KEY_LENGTH],,true,,char[ACCEPT_KEY_LENGTH],-1
306773,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[],,<includes>,char[],,true,,char[],-1
306774,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[]*,,<includes>,char[]*,,true,,char[]*,-1
306775,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cleanup_queue_,,<includes>,cleanup_queue_,,true,,cleanup_queue_,-1
306776,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,const char*,,<includes>,const char*,,true,,const char*,-1
306777,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,crypto,,<includes>,crypto,,true,,crypto,-1
306778,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype,,<includes>,decltype,,true,,decltype,-1
306779,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(AllocForBrotli),,<includes>,decltype(AllocForBrotli),,true,,decltype(AllocForBrotli),-1
306780,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(Close),,<includes>,decltype(Close),,true,,decltype(Close),-1
306781,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(FreeForZlib),,<includes>,decltype(FreeForZlib),,true,,decltype(FreeForZlib),-1
306782,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(Init),,<includes>,decltype(Init),,true,,decltype(Init),-1
306783,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(New),,<includes>,decltype(New),,true,,decltype(New),-1
306784,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(Params),,<includes>,decltype(Params),,true,,decltype(Params),-1
306785,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(Reset),,<includes>,decltype(Reset),,true,,decltype(Reset),-1
306786,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(Write),,<includes>,decltype(Write),,true,,decltype(Write),-1
306787,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(kInternalFieldCount),,<includes>,decltype(kInternalFieldCount),,true,,decltype(kInternalFieldCount),-1
306788,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,double,,<includes>,double,,true,,double,-1
306789,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,double*,,<includes>,double*,,true,,double*,-1
306790,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,encoding,,<includes>,encoding,,true,,encoding,-1
306791,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,encoding_,,<includes>,encoding_,,true,,encoding_,-1
306792,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enum,,<includes>,enum,,true,,enum,-1
306793,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enum encoding,,<includes>,enum encoding,,true,,enum encoding,-1
306794,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,err_detail,,<includes>,err_detail,,true,,err_detail,-1
306795,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,errors,,<includes>,errors,,true,,errors,-1
306796,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,established_,,<includes>,established_,,true,,established_,-1
306797,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,event_loop,,<includes>,event_loop,,true,,event_loop,-1
306798,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,explicit,,<includes>,explicit,,true,,explicit,-1
306799,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,export_fn,,<includes>,export_fn,,true,,export_fn,-1
306800,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,fflush,,<includes>,fflush,,true,,fflush,-1
306801,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,free_func,,<includes>,free_func,,true,,free_func,-1
306802,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,fs,,<includes>,fs,,true,,fs,-1
306803,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,get_setting,,<includes>,get_setting,,true,,get_setting,-1
306804,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,global_handle_map,,<includes>,global_handle_map,,true,,global_handle_map,-1
306805,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,global_handle_map_t,,<includes>,global_handle_map_t,,true,,global_handle_map_t,-1
306806,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,hdr_histogram*,,<includes>,hdr_histogram*,,true,,hdr_histogram*,-1
306807,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,hostent*,,<includes>,hostent*,,true,,hostent*,-1
306808,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,idna,,<includes>,idna,,true,,idna,-1
306809,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,immediate_info_,,<includes>,immediate_info_,,true,,immediate_info_,-1
306810,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,in6_addr,,<includes>,in6_addr,,true,,in6_addr,-1
306811,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,in_addr,,<includes>,in_addr,,true,,in_addr,-1
306812,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,inline,,<includes>,inline,,true,,inline,-1
306813,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int,,<includes>,int,,true,,int,-1
306814,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"int(int,char**)",,<includes>,"int(int,char**)",,true,,"int(int,char**)",-1
306815,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int*,,<includes>,int*,,true,,int*,-1
306816,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int16_t,,<includes>,int16_t,,true,,int16_t,-1
306817,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int32_t,,<includes>,int32_t,,true,,int32_t,-1
306818,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int32_t*,,<includes>,int32_t*,,true,,int32_t*,-1
306819,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int64_t,,<includes>,int64_t,,true,,int64_t,-1
306820,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int64_t*,,<includes>,int64_t*,,true,,int64_t*,-1
306821,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,intptr_t,,<includes>,intptr_t,,true,,intptr_t,-1
306822,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ios,,<includes>,ios,,true,,ios,-1
306823,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,is_base_of,,<includes>,is_base_of,,true,,is_base_of,-1
306824,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,kNoFlags,,<includes>,kNoFlags,,true,,kNoFlags,-1
306825,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,llhttp_errno_t,,<includes>,llhttp_errno_t,,true,,llhttp_errno_t,-1
306826,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,llhttp_settings_t,,<includes>,llhttp_settings_t,,true,,llhttp_settings_t,-1
306827,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,llhttp_t,,<includes>,llhttp_t,,true,,llhttp_t,-1
306828,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,llhttp_t*,,<includes>,llhttp_t*,,true,,llhttp_t*,-1
306829,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,llhttp_type_t,,<includes>,llhttp_type_t,,true,,llhttp_type_t,-1
306830,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,locale,,<includes>,locale,,true,,locale,-1
306831,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,long,,<includes>,long,,true,,long,-1
306832,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,long int,,<includes>,long int,,true,,long int,-1
306833,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,long unsigned,,<includes>,long unsigned,,true,,long unsigned,-1
306834,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_addon_register_func,,<includes>,napi_addon_register_func,,true,,napi_addon_register_func,-1
306835,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_cleanup_hook,,<includes>,napi_async_cleanup_hook,,true,,napi_async_cleanup_hook,-1
306836,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_cleanup_hook_handle,,<includes>,napi_async_cleanup_hook_handle,,true,,napi_async_cleanup_hook_handle,-1
306837,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_cleanup_hook_handle*,,<includes>,napi_async_cleanup_hook_handle*,,true,,napi_async_cleanup_hook_handle*,-1
306838,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_cleanup_hook_handle__*,,<includes>,napi_async_cleanup_hook_handle__*,,true,,napi_async_cleanup_hook_handle__*,-1
306839,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_complete_callback,,<includes>,napi_async_complete_callback,,true,,napi_async_complete_callback,-1
306840,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_context*,,<includes>,napi_async_context*,,true,,napi_async_context*,-1
306841,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_context__*,,<includes>,napi_async_context__*,,true,,napi_async_context__*,-1
306842,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_execute_callback,,<includes>,napi_async_execute_callback,,true,,napi_async_execute_callback,-1
306843,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_work*,,<includes>,napi_async_work*,,true,,napi_async_work*,-1
306844,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_async_work__*,,<includes>,napi_async_work__*,,true,,napi_async_work__*,-1
306845,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_callback,,<includes>,napi_callback,,true,,napi_callback,-1
306846,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_callback_info__*,,<includes>,napi_callback_info__*,,true,,napi_callback_info__*,-1
306847,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_callback_scope*,,<includes>,napi_callback_scope*,,true,,napi_callback_scope*,-1
306848,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_callback_scope__*,,<includes>,napi_callback_scope__*,,true,,napi_callback_scope__*,-1
306849,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_cleanup_hook,,<includes>,napi_cleanup_hook,,true,,napi_cleanup_hook,-1
306850,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_deferred*,,<includes>,napi_deferred*,,true,,napi_deferred*,-1
306851,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_deferred__*,,<includes>,napi_deferred__*,,true,,napi_deferred__*,-1
306852,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_env__*,,<includes>,napi_env__*,,true,,napi_env__*,-1
306853,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_escapable_handle_scope*,,<includes>,napi_escapable_handle_scope*,,true,,napi_escapable_handle_scope*,-1
306854,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_escapable_handle_scope__*,,<includes>,napi_escapable_handle_scope__*,,true,,napi_escapable_handle_scope__*,-1
306855,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_extended_error_info**,,<includes>,napi_extended_error_info**,,true,,napi_extended_error_info**,-1
306856,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_finalize,,<includes>,napi_finalize,,true,,napi_finalize,-1
306857,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_handle_scope*,,<includes>,napi_handle_scope*,,true,,napi_handle_scope*,-1
306858,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_handle_scope__*,,<includes>,napi_handle_scope__*,,true,,napi_handle_scope__*,-1
306859,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_key_collection_mode,,<includes>,napi_key_collection_mode,,true,,napi_key_collection_mode,-1
306860,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_key_conversion,,<includes>,napi_key_conversion,,true,,napi_key_conversion,-1
306861,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_key_filter,,<includes>,napi_key_filter,,true,,napi_key_filter,-1
306862,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_module*,,<includes>,napi_module*,,true,,napi_module*,-1
306863,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_node_version**,,<includes>,napi_node_version**,,true,,napi_node_version**,-1
306864,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_property_descriptor*,,<includes>,napi_property_descriptor*,,true,,napi_property_descriptor*,-1
306865,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_ref*,,<includes>,napi_ref*,,true,,napi_ref*,-1
306866,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_ref__*,,<includes>,napi_ref__*,,true,,napi_ref__*,-1
306867,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_threadsafe_function,,<includes>,napi_threadsafe_function,,true,,napi_threadsafe_function,-1
306868,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_threadsafe_function*,,<includes>,napi_threadsafe_function*,,true,,napi_threadsafe_function*,-1
306869,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_threadsafe_function_call_js,,<includes>,napi_threadsafe_function_call_js,,true,,napi_threadsafe_function_call_js,-1
306870,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_threadsafe_function_call_mode,,<includes>,napi_threadsafe_function_call_mode,,true,,napi_threadsafe_function_call_mode,-1
306871,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_threadsafe_function_release_mode,,<includes>,napi_threadsafe_function_release_mode,,true,,napi_threadsafe_function_release_mode,-1
306872,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_type_tag,,<includes>,napi_type_tag,,true,,napi_type_tag,-1
306873,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_type_tag*,,<includes>,napi_type_tag*,,true,,napi_type_tag*,-1
306874,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_typedarray_type*,,<includes>,napi_typedarray_type*,,true,,napi_typedarray_type*,-1
306875,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_value*,,<includes>,napi_value*,,true,,napi_value*,-1
306876,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_value__*,,<includes>,napi_value__*,,true,,napi_value__*,-1
306877,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,napi_valuetype*,,<includes>,napi_valuetype*,,true,,napi_valuetype*,-1
306878,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,new_key_fn,,<includes>,new_key_fn,,true,,new_key_fn,-1
306879,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_data_source*,,<includes>,nghttp2_data_source*,,true,,nghttp2_data_source*,-1
306880,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_ext_altsvc*,,<includes>,nghttp2_ext_altsvc*,,true,,nghttp2_ext_altsvc*,-1
306881,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_ext_origin*,,<includes>,nghttp2_ext_origin*,,true,,nghttp2_ext_origin*,-1
306882,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_extension,,<includes>,nghttp2_extension,,true,,nghttp2_extension,-1
306883,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_frame*,,<includes>,nghttp2_frame*,,true,,nghttp2_frame*,-1
306884,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_goaway,,<includes>,nghttp2_goaway,,true,,nghttp2_goaway,-1
306885,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_headers_category,,<includes>,nghttp2_headers_category,,true,,nghttp2_headers_category,-1
306886,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_mem,,<includes>,nghttp2_mem,,true,,nghttp2_mem,-1
306887,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_option*,,<includes>,nghttp2_option*,,true,,nghttp2_option*,-1
306888,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_origin_entry,,<includes>,nghttp2_origin_entry,,true,,nghttp2_origin_entry,-1
306889,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_origin_entry*,,<includes>,nghttp2_origin_entry*,,true,,nghttp2_origin_entry*,-1
306890,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_priority,,<includes>,nghttp2_priority,,true,,nghttp2_priority,-1
306891,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_priority_spec,,<includes>,nghttp2_priority_spec,,true,,nghttp2_priority_spec,-1
306892,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_rcbuf*,,<includes>,nghttp2_rcbuf*,,true,,nghttp2_rcbuf*,-1
306893,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_session*,,<includes>,nghttp2_session*,,true,,nghttp2_session*,-1
306894,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_session_callbacks*,,<includes>,nghttp2_session_callbacks*,,true,,nghttp2_session_callbacks*,-1
306895,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_settings_entry*,,<includes>,nghttp2_settings_entry*,,true,,nghttp2_settings_entry*,-1
306896,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_settings_entry[],,<includes>,nghttp2_settings_entry[],,true,,nghttp2_settings_entry[],-1
306897,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_stream,,<includes>,nghttp2_stream,,true,,nghttp2_stream,-1
306898,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nghttp2_stream*,,<includes>,nghttp2_stream*,,true,,nghttp2_stream*,-1
306899,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nm_link,,<includes>,nm_link,,true,,nm_link,-1
306900,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,node,,<includes>,node,,true,,node,-1
306901,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThreadPoolWork,,<includes>,node.ThreadPoolWork,,true,,ThreadPoolWork,-1
306902,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"ExternString<ResourceType,TypeName>",,<includes>,"node.anonymous_namespace_1.ExternString<ResourceType,TypeName>",,true,,"ExternString<ResourceType,TypeName>",-1
306903,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BrotliCompressionStream<CompressionContext>,,<includes>,node.anonymous_namespace_101.BrotliCompressionStream<CompressionContext>,,true,,BrotliCompressionStream<CompressionContext>,-1
306904,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MakeClass<Stream>,,<includes>,node.anonymous_namespace_149.MakeClass<Stream>,,true,,MakeClass<Stream>,-1
306905,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CompressionStream<CompressionContext>,,<includes>,node.anonymous_namespace_48.CompressionStream<CompressionContext>,,true,,CompressionStream<CompressionContext>,-1
306906,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"Proxy<Parser,Parser>",,<includes>,"node.anonymous_namespace_95.Parser.Proxy<Parser,Parser>",,true,,"Proxy<Parser,Parser>",-1
306907,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,)>,,<includes>,"node.anonymous_namespace_96.Parser.Proxy<int(Parser.*)(Args...),Member><Parser,Args,int(Parser.*)(Args...)>",,true,,)>,-1
306908,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Source<T>,,<includes>,node.bob.Source<T>,,true,,Source<T>,-1
306909,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SourceImpl<T>,,<includes>,node.bob.SourceImpl<T>,,true,,SourceImpl<T>,-1
306910,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SocketServerDelegate,,<includes>,node.inspector.SocketServerDelegate,,true,,SocketServerDelegate,-1
306911,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"CallRequest<Target,Fn>",,<includes>,"node.inspector.anonymous_namespace_15.CallRequest<Target,Fn>",,true,,"CallRequest<Target,Fn>",-1
306912,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AnotherThreadObjectReference<T>,,<includes>,node.inspector.anonymous_namespace_18.AnotherThreadObjectReference<T>,,true,,AnotherThreadObjectReference<T>,-1
306913,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JSBindingsConnection<ConnectionType>,,<includes>,node.inspector.anonymous_namespace_24.JSBindingsConnection<ConnectionType>,,true,,JSBindingsConnection<ConnectionType>,-1
306914,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeletableWrapper<T>,,<includes>,node.inspector.anonymous_namespace_3.DeletableWrapper<T>,,true,,DeletableWrapper<T>,-1
306915,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CreateObjectRequest<Factory>,,<includes>,node.inspector.anonymous_namespace_8.CreateObjectRequest<Factory>,,true,,CreateObjectRequest<Factory>,-1
306916,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,node_api_addon_get_api_version_func,,<includes>,node_api_addon_get_api_version_func,,true,,node_api_addon_get_api_version_func,-1
306917,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,node_module,,<includes>,node_module,,true,,node_module,-1
306918,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,node_module*,,<includes>,node_module*,,true,,node_module*,-1
306919,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,node_napi_env__*,,<includes>,node_napi_env__*,,true,,node_napi_env__*,-1
306920,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,node_zlib_mode,,<includes>,node_zlib_mode,,true,,node_zlib_mode,-1
306921,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,numeric_limits,,<includes>,numeric_limits,,true,,numeric_limits,-1
306922,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nv_t,,<includes>,nv_t,,true,,nv_t,-1
306923,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,nv_t*,,<includes>,nv_t*,,true,,nv_t*,-1
306924,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,optional<SeaConfig>,,<includes>,optional<SeaConfig>,,true,,optional<SeaConfig>,-1
306925,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,optional<bool>,,<includes>,optional<bool>,,true,,optional<bool>,-1
306926,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string>,,<includes>,optional<std.string>,,true,,string>,-1
306927,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,optional<uint64_t>,,<includes>,optional<uint64_t>,,true,,optional<uint64_t>,-1
306928,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ostream,,<includes>,ostream,,true,,ostream,-1
306929,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ostringstream,,<includes>,ostringstream,,true,,ostringstream,-1
306930,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"pair<void *,size_t>",,<includes>,"pair<void *,size_t>",,true,,"pair<void *,size_t>",-1
306931,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,per_process,,<includes>,per_process,,true,,per_process,-1
306932,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,performance,,<includes>,performance,,true,,performance,-1
306933,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,permission,,<includes>,permission,,true,,permission,-1
306934,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,placeholders,,<includes>,placeholders,,true,,placeholders,-1
306935,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,platform,,<includes>,platform,,true,,platform,-1
306936,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,point_conversion_form_t,,<includes>,point_conversion_form_t,,true,,point_conversion_form_t,-1
306937,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,protocol,,<includes>,protocol,,true,,protocol,-1
306938,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FrontendChannel,,<includes>,protocol.FrontendChannel,,true,,FrontendChannel,-1
306939,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<T>>,,<includes>,queue<std.unique_ptr<T>>,,true,,unique_ptr<T>>,-1
306940,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raise,,<includes>,raise,,true,,raise,-1
306941,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,resource_limits_,,<includes>,resource_limits_,,true,,resource_limits_,-1
306942,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,rlimit,,<includes>,rlimit,,true,,rlimit,-1
306943,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,scheme,,<includes>,scheme,,true,,scheme,-1
306944,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string>,,<includes>,set<std.string>,,true,,string>,-1
306945,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,set_binding_data_default_template,,<includes>,set_binding_data_default_template,,true,,set_binding_data_default_template,-1
306946,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,set_process_object,,<includes>,set_process_object,,true,,set_process_object,-1
306947,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<ArrayBufferAllocator>,,<includes>,shared_ptr<ArrayBufferAllocator>,,true,,shared_ptr<ArrayBufferAllocator>,-1
306948,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Reader>,,<includes>,shared_ptr<DataQueue.Reader>,,true,,Reader>,-1
306949,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<DataQueue>,,<includes>,shared_ptr<DataQueue>,,true,,shared_ptr<DataQueue>,-1
306950,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<KVStore>,,<includes>,shared_ptr<KVStore>,,true,,shared_ptr<KVStore>,-1
306951,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<KeyObjectData>,,<includes>,shared_ptr<KeyObjectData>,,true,,shared_ptr<KeyObjectData>,-1
306952,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<MainThreadHandle>,,<includes>,shared_ptr<MainThreadHandle>,,true,,shared_ptr<MainThreadHandle>,-1
306953,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<MicrotaskQueue>,,<includes>,shared_ptr<MicrotaskQueue>,,true,,shared_ptr<MicrotaskQueue>,-1
306954,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<PerIsolatePlatformData>,,<includes>,shared_ptr<PerIsolatePlatformData>,,true,,shared_ptr<PerIsolatePlatformData>,-1
306955,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<ReaderImpl>,,<includes>,shared_ptr<ReaderImpl>,,true,,shared_ptr<ReaderImpl>,-1
306956,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<RequestQueue>,,<includes>,shared_ptr<RequestQueue>,,true,,shared_ptr<RequestQueue>,-1
306957,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<SiblingGroup>,,<includes>,shared_ptr<SiblingGroup>,,true,,shared_ptr<SiblingGroup>,-1
306958,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<WorkerManager>,,<includes>,shared_ptr<WorkerManager>,,true,,shared_ptr<WorkerManager>,-1
306959,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TaskRunner>,,<includes>,shared_ptr<v8.TaskRunner>,,true,,TaskRunner>,-1
306960,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,short unsigned,,<includes>,short unsigned,,true,,short unsigned,-1
306961,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,signed char,,<includes>,signed char,,true,,signed char,-1
306962,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t,,<includes>,size_t,,true,,size_t,-1
306963,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t*,,<includes>,size_t*,,true,,size_t*,-1
306964,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t[],,<includes>,size_t[],,true,,size_t[],-1
306965,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,sk_SSL_COMP_zero,,<includes>,sk_SSL_COMP_zero,,true,,sk_SSL_COMP_zero,-1
306966,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,sockaddr*,,<includes>,sockaddr*,,true,,sockaddr*,-1
306967,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,sockaddr_in*,,<includes>,sockaddr_in*,,true,,sockaddr_in*,-1
306968,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,sockaddr_in6*,,<includes>,sockaddr_in6*,,true,,sockaddr_in6*,-1
306969,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,sockaddr_storage,,<includes>,sockaddr_storage,,true,,sockaddr_storage,-1
306970,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,sockaddr_storage*,,<includes>,sockaddr_storage*,,true,,sockaddr_storage*,-1
306971,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ssize_t,,<includes>,ssize_t,,true,,ssize_t,-1
306972,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,static[10],,<includes>,static[10],,true,,static[10],-1
306973,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,std,,<includes>,std,,true,,std,-1
306974,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<DataQueueImpl>,,<includes>,std.enable_shared_from_this<DataQueueImpl>,,true,,enable_shared_from_this<DataQueueImpl>,-1
306975,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<EmptyReader>,,<includes>,std.enable_shared_from_this<EmptyReader>,,true,,enable_shared_from_this<EmptyReader>,-1
306976,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<IdempotentDataQueueReader>,,<includes>,std.enable_shared_from_this<IdempotentDataQueueReader>,,true,,enable_shared_from_this<IdempotentDataQueueReader>,-1
306977,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<InMemoryReader>,,<includes>,std.enable_shared_from_this<InMemoryReader>,,true,,enable_shared_from_this<InMemoryReader>,-1
306978,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<MainThreadHandle>,,<includes>,std.enable_shared_from_this<MainThreadHandle>,,true,,enable_shared_from_this<MainThreadHandle>,-1
306979,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<MainThreadInterface>,,<includes>,std.enable_shared_from_this<MainThreadInterface>,,true,,enable_shared_from_this<MainThreadInterface>,-1
306980,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<NodeWorkers>,,<includes>,std.enable_shared_from_this<NodeWorkers>,,true,,enable_shared_from_this<NodeWorkers>,-1
306981,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<NonIdempotentDataQueueReader>,,<includes>,std.enable_shared_from_this<NonIdempotentDataQueueReader>,,true,,enable_shared_from_this<NonIdempotentDataQueueReader>,-1
306982,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<ReaderImpl>,,<includes>,std.enable_shared_from_this<ReaderImpl>,,true,,enable_shared_from_this<ReaderImpl>,-1
306983,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enable_shared_from_this<WorkerManager>,,<includes>,std.enable_shared_from_this<WorkerManager>,,true,,enable_shared_from_this<WorkerManager>,-1
306984,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvertableToTraceFormat>[2],,<includes>,std.unique_ptr<v8.ConvertableToTraceFormat>[2],,true,,ConvertableToTraceFormat>[2],-1
306985,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string,,<includes>,string,,true,,string,-1
306986,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string_view,,<includes>,string_view,,true,,string_view,-1
306987,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,stringsearch,,<includes>,stringsearch,,true,,stringsearch,-1
306988,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,struct,,<includes>,struct,,true,,struct,-1
306989,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,struct node_module,,<includes>,struct node_module,,true,,struct node_module,-1
306990,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,syntax_check_only,,<includes>,syntax_check_only,,true,,syntax_check_only,-1
306991,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,tick_info_,,<includes>,tick_info_,,true,,tick_info_,-1
306992,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,timeval,,<includes>,timeval,,true,,timeval,-1
306993,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,tls_min_v1_3,,<includes>,tls_min_v1_3,,true,,tls_min_v1_3,-1
306994,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,tracing,,<includes>,tracing,,true,,tracing,-1
306995,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"tuple<int,char **>",,<includes>,"tuple<int,char **>",,true,,"tuple<int,char **>",-1
306996,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,type,,<includes>,type,,true,,type,-1
306997,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uInt,,<includes>,uInt,,true,,uInt,-1
306998,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint16_t,,<includes>,uint16_t,,true,,uint16_t,-1
306999,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint16_t*,,<includes>,uint16_t*,,true,,uint16_t*,-1
307000,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint16_t[8],,<includes>,uint16_t[8],,true,,uint16_t[8],-1
307001,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint32_t,,<includes>,uint32_t,,true,,uint32_t,-1
307002,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint32_t*,,<includes>,uint32_t*,,true,,uint32_t*,-1
307003,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint64_t,,<includes>,uint64_t,,true,,uint64_t,-1
307004,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint64_t*,,<includes>,uint64_t*,,true,,uint64_t*,-1
307005,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint64_t[2],,<includes>,uint64_t[2],,true,,uint64_t[2],-1
307006,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint8_t,,<includes>,uint8_t,,true,,uint8_t,-1
307007,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint8_t*,,<includes>,uint8_t*,,true,,uint8_t*,-1
307008,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint8_t[16],,<includes>,uint8_t[16],,true,,uint8_t[16],-1
307009,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint8_t[8],,<includes>,uint8_t[8],,true,,uint8_t[8],-1
307010,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uintptr_t,,<includes>,uintptr_t,,true,,uintptr_t,-1
307011,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uintptr_t*,,<includes>,uintptr_t*,,true,,uintptr_t*,-1
307012,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unicode,,<includes>,unicode,,true,,unicode,-1
307013,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<ArrayBufferAllocator>,,<includes>,unique_ptr<ArrayBufferAllocator>,,true,,unique_ptr<ArrayBufferAllocator>,-1
307014,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<BackingStore>,,<includes>,unique_ptr<BackingStore>,,true,,unique_ptr<BackingStore>,-1
307015,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<CommonEnvironmentSetup>,,<includes>,unique_ptr<CommonEnvironmentSetup>,,true,,unique_ptr<CommonEnvironmentSetup>,-1
307016,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Entry>,,<includes>,unique_ptr<DataQueue.Entry>,,true,,Entry>,-1
307017,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<Deletable>,,<includes>,unique_ptr<Deletable>,,true,,unique_ptr<Deletable>,-1
307018,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<Entry>,,<includes>,unique_ptr<Entry>,,true,,unique_ptr<Entry>,-1
307019,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<FdEntry>,,<includes>,unique_ptr<FdEntry>,,true,,unique_ptr<FdEntry>,-1
307020,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<InitializationResult>,,<includes>,unique_ptr<InitializationResult>,,true,,unique_ptr<InitializationResult>,-1
307021,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<InitializationResultImpl>,,<includes>,unique_ptr<InitializationResultImpl>,,true,,unique_ptr<InitializationResultImpl>,-1
307022,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<InspectorIo>,,<includes>,unique_ptr<InspectorIo>,,true,,unique_ptr<InspectorIo>,-1
307023,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<InspectorParentHandle>,,<includes>,unique_ptr<InspectorParentHandle>,,true,,unique_ptr<InspectorParentHandle>,-1
307024,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<InspectorSession>,,<includes>,unique_ptr<InspectorSession>,,true,,unique_ptr<InspectorSession>,-1
307025,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<InspectorSessionDelegate>,,<includes>,unique_ptr<InspectorSessionDelegate>,,true,,unique_ptr<InspectorSessionDelegate>,-1
307026,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<MainThreadSessionState>,,<includes>,unique_ptr<MainThreadSessionState>,,true,,unique_ptr<MainThreadSessionState>,-1
307027,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<MessagePortData>,,<includes>,unique_ptr<MessagePortData>,,true,,unique_ptr<MessagePortData>,-1
307028,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<MultiIsolatePlatform>,,<includes>,unique_ptr<MultiIsolatePlatform>,,true,,unique_ptr<MultiIsolatePlatform>,-1
307029,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<NativeSymbolDebuggingContext>,,<includes>,unique_ptr<NativeSymbolDebuggingContext>,,true,,unique_ptr<NativeSymbolDebuggingContext>,-1
307030,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkerInfo>,,<includes>,unique_ptr<NodeWorker.WorkerInfo>,,true,,WorkerInfo>,-1
307031,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<ParentInspectorHandle>,,<includes>,unique_ptr<ParentInspectorHandle>,,true,,unique_ptr<ParentInspectorHandle>,-1
307032,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<Request>,,<includes>,unique_ptr<Request>,,true,,unique_ptr<Request>,-1
307033,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<StringBuffer>,,<includes>,unique_ptr<StringBuffer>,,true,,unique_ptr<StringBuffer>,-1
307034,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<T>,,<includes>,unique_ptr<T>,,true,,unique_ptr<T>,-1
307035,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<Task>,,<includes>,unique_ptr<Task>,,true,,unique_ptr<Task>,-1
307036,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<TracedValue>,,<includes>,unique_ptr<TracedValue>,,true,,unique_ptr<TracedValue>,-1
307037,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<TransferData>,,<includes>,unique_ptr<TransferData>,,true,,unique_ptr<TransferData>,-1
307038,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<Value>,,<includes>,unique_ptr<Value>,,true,,unique_ptr<Value>,-1
307039,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<WorkerManagerEventHandle>,,<includes>,unique_ptr<WorkerManagerEventHandle>,,true,,unique_ptr<WorkerManagerEventHandle>,-1
307040,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InspectorSession>,,<includes>,unique_ptr<inspector.InspectorSession>,,true,,InspectorSession>,-1
307041,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unique_ptr<uv_thread_t>,,<includes>,unique_ptr<uv_thread_t>,,true,,unique_ptr<uv_thread_t>,-1
307042,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BackingStore>,,<includes>,unique_ptr<v8.BackingStore>,,true,,BackingStore>,-1
307043,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JobHandle>,,<includes>,unique_ptr<v8.JobHandle>,,true,,JobHandle>,-1
307044,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransferData>,,<includes>,unique_ptr<worker.TransferData>,,true,,TransferData>,-1
307045,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned,,<includes>,unsigned,,true,,unsigned,-1
307046,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned char,,<includes>,unsigned char,,true,,unsigned char,-1
307047,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned char*,,<includes>,unsigned char*,,true,,unsigned char*,-1
307048,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned char**,,<includes>,unsigned char**,,true,,unsigned char**,-1
307049,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned char[1],,<includes>,unsigned char[1],,true,,unsigned char[1],-1
307050,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned char[2],,<includes>,unsigned char[2],,true,,unsigned char[2],-1
307051,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned char[],,<includes>,unsigned char[],,true,,unsigned char[],-1
307052,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned int,,<includes>,unsigned int,,true,,unsigned int,-1
307053,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned int*,,<includes>,unsigned int*,,true,,unsigned int*,-1
307054,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned long,,<includes>,unsigned long,,true,,unsigned long,-1
307055,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned longint,,<includes>,unsigned longint,,true,,unsigned longint,-1
307056,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned longlongint,,<includes>,unsigned longlongint,,true,,unsigned longlongint,-1
307057,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,url,,<includes>,url,,true,,url,-1
307058,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,url_update_action,,<includes>,url_update_action,,true,,url_update_action,-1
307059,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_any_handle*,,<includes>,uv_any_handle*,,true,,uv_any_handle*,-1
307060,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_async_send,,<includes>,uv_async_send,,true,,uv_async_send,-1
307061,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_async_t,,<includes>,uv_async_t,,true,,uv_async_t,-1
307062,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_async_t*,,<includes>,uv_async_t*,,true,,uv_async_t*,-1
307063,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_buf_t,,<includes>,uv_buf_t,,true,,uv_buf_t,-1
307064,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_buf_t*,,<includes>,uv_buf_t*,,true,,uv_buf_t*,-1
307065,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_buf_t**,,<includes>,uv_buf_t**,,true,,uv_buf_t**,-1
307066,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_buf_t[],,<includes>,uv_buf_t[],,true,,uv_buf_t[],-1
307067,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_check_t*,,<includes>,uv_check_t*,,true,,uv_check_t*,-1
307068,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_connect_t*,,<includes>,uv_connect_t*,,true,,uv_connect_t*,-1
307069,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_cpu_info_t*,,<includes>,uv_cpu_info_t*,,true,,uv_cpu_info_t*,-1
307070,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_dir_t*,,<includes>,uv_dir_t*,,true,,uv_dir_t*,-1
307071,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_dirent_t,,<includes>,uv_dirent_t,,true,,uv_dirent_t,-1
307072,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_dirent_t*,,<includes>,uv_dirent_t*,,true,,uv_dirent_t*,-1
307073,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_dlclose,,<includes>,uv_dlclose,,true,,uv_dlclose,-1
307074,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_env_item_t*,,<includes>,uv_env_item_t*,,true,,uv_env_item_t*,-1
307075,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_errors_map,,<includes>,uv_errors_map,,true,,uv_errors_map,-1
307076,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_file,,<includes>,uv_file,,true,,uv_file,-1
307077,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_fs_cb,,<includes>,uv_fs_cb,,true,,uv_fs_cb,-1
307078,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_fs_event_t,,<includes>,uv_fs_event_t,,true,,uv_fs_event_t,-1
307079,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_fs_event_t*,,<includes>,uv_fs_event_t*,,true,,uv_fs_event_t*,-1
307080,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_fs_poll_t*,,<includes>,uv_fs_poll_t*,,true,,uv_fs_poll_t*,-1
307081,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_fs_req_cleanup,,<includes>,uv_fs_req_cleanup,,true,,uv_fs_req_cleanup,-1
307082,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_fs_t,,<includes>,uv_fs_t,,true,,uv_fs_t,-1
307083,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_fs_t*,,<includes>,uv_fs_t*,,true,,uv_fs_t*,-1
307084,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_fs_type,,<includes>,uv_fs_type,,true,,uv_fs_type,-1
307085,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_getaddrinfo_t,,<includes>,uv_getaddrinfo_t,,true,,uv_getaddrinfo_t,-1
307086,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_getaddrinfo_t*,,<includes>,uv_getaddrinfo_t*,,true,,uv_getaddrinfo_t*,-1
307087,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_getnameinfo_t,,<includes>,uv_getnameinfo_t,,true,,uv_getnameinfo_t,-1
307088,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_getnameinfo_t*,,<includes>,uv_getnameinfo_t*,,true,,uv_getnameinfo_t*,-1
307089,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_gid_t,,<includes>,uv_gid_t,,true,,uv_gid_t,-1
307090,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_handle_t,,<includes>,uv_handle_t,,true,,uv_handle_t,-1
307091,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_handle_t*,,<includes>,uv_handle_t*,,true,,uv_handle_t*,-1
307092,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_handle_type,,<includes>,uv_handle_type,,true,,uv_handle_type,-1
307093,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_idle_stop,,<includes>,uv_idle_stop,,true,,uv_idle_stop,-1
307094,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_idle_t*,,<includes>,uv_idle_t*,,true,,uv_idle_t*,-1
307095,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_interface_address_t*,,<includes>,uv_interface_address_t*,,true,,uv_interface_address_t*,-1
307096,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_loop_s*,,<includes>,uv_loop_s*,,true,,uv_loop_s*,-1
307097,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_loop_s**,,<includes>,uv_loop_s**,,true,,uv_loop_s**,-1
307098,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_loop_t,,<includes>,uv_loop_t,,true,,uv_loop_t,-1
307099,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_loop_t*,,<includes>,uv_loop_t*,,true,,uv_loop_t*,-1
307100,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_loop_t**,,<includes>,uv_loop_t**,,true,,uv_loop_t**,-1
307101,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_membership,,<includes>,uv_membership,,true,,uv_membership,-1
307102,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_once_t,,<includes>,uv_once_t,,true,,uv_once_t,-1
307103,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_os_fd_t,,<includes>,uv_os_fd_t,,true,,uv_os_fd_t,-1
307104,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_passwd_t,,<includes>,uv_passwd_t,,true,,uv_passwd_t,-1
307105,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_pid_t,,<includes>,uv_pid_t,,true,,uv_pid_t,-1
307106,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_pipe_t,,<includes>,uv_pipe_t,,true,,uv_pipe_t,-1
307107,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_poll_t*,,<includes>,uv_poll_t*,,true,,uv_poll_t*,-1
307108,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_prepare_t*,,<includes>,uv_prepare_t*,,true,,uv_prepare_t*,-1
307109,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_process_options_t,,<includes>,uv_process_options_t,,true,,uv_process_options_t,-1
307110,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_process_options_t*,,<includes>,uv_process_options_t*,,true,,uv_process_options_t*,-1
307111,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_process_t,,<includes>,uv_process_t,,true,,uv_process_t,-1
307112,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_process_t*,,<includes>,uv_process_t*,,true,,uv_process_t*,-1
307113,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_read_stop,,<includes>,uv_read_stop,,true,,uv_read_stop,-1
307114,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_rusage_t,,<includes>,uv_rusage_t,,true,,uv_rusage_t,-1
307115,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_sem_t,,<includes>,uv_sem_t,,true,,uv_sem_t,-1
307116,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_shutdown_t*,,<includes>,uv_shutdown_t*,,true,,uv_shutdown_t*,-1
307117,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_signal_t,,<includes>,uv_signal_t,,true,,uv_signal_t,-1
307118,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_signal_t*,,<includes>,uv_signal_t*,,true,,uv_signal_t*,-1
307119,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_stat_t,,<includes>,uv_stat_t,,true,,uv_stat_t,-1
307120,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_stat_t*,,<includes>,uv_stat_t*,,true,,uv_stat_t*,-1
307121,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_statfs_t*,,<includes>,uv_statfs_t*,,true,,uv_statfs_t*,-1
307122,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_stdio_container_t,,<includes>,uv_stdio_container_t,,true,,uv_stdio_container_t,-1
307123,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_stdio_flags,,<includes>,uv_stdio_flags,,true,,uv_stdio_flags,-1
307124,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_stream_t,,<includes>,uv_stream_t,,true,,uv_stream_t,-1
307125,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_stream_t*,,<includes>,uv_stream_t*,,true,,uv_stream_t*,-1
307126,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_tcp_t,,<includes>,uv_tcp_t,,true,,uv_tcp_t,-1
307127,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_tcp_t*,,<includes>,uv_tcp_t*,,true,,uv_tcp_t*,-1
307128,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_thread_join,,<includes>,uv_thread_join,,true,,uv_thread_join,-1
307129,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_thread_options_t,,<includes>,uv_thread_options_t,,true,,uv_thread_options_t,-1
307130,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_thread_t,,<includes>,uv_thread_t,,true,,uv_thread_t,-1
307131,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_thread_t*,,<includes>,uv_thread_t*,,true,,uv_thread_t*,-1
307132,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_timer_stop,,<includes>,uv_timer_stop,,true,,uv_timer_stop,-1
307133,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_timer_t,,<includes>,uv_timer_t,,true,,uv_timer_t,-1
307134,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_timer_t*,,<includes>,uv_timer_t*,,true,,uv_timer_t*,-1
307135,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_timeval64_t,,<includes>,uv_timeval64_t,,true,,uv_timeval64_t,-1
307136,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_udp_send_t*,,<includes>,uv_udp_send_t*,,true,,uv_udp_send_t*,-1
307137,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_udp_t,,<includes>,uv_udp_t,,true,,uv_udp_t,-1
307138,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_udp_t*,,<includes>,uv_udp_t*,,true,,uv_udp_t*,-1
307139,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_uid_t,,<includes>,uv_uid_t,,true,,uv_uid_t,-1
307140,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_update_time,,<includes>,uv_update_time,,true,,uv_update_time,-1
307141,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_utsname_t,,<includes>,uv_utsname_t,,true,,uv_utsname_t,-1
307142,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_write_cb,,<includes>,uv_write_cb,,true,,uv_write_cb,-1
307143,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_write_t,,<includes>,uv_write_t,,true,,uv_write_t,-1
307144,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uv_write_t*,,<includes>,uv_write_t*,,true,,uv_write_t*,-1
307145,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_destroy,,<includes>,uvwasi_destroy,,true,,uvwasi_destroy,-1
307146,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_errno_t,,<includes>,uvwasi_errno_t,,true,,uvwasi_errno_t,-1
307147,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_fd_t,,<includes>,uvwasi_fd_t,,true,,uvwasi_fd_t,-1
307148,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_fdstat_t,,<includes>,uvwasi_fdstat_t,,true,,uvwasi_fdstat_t,-1
307149,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_filesize_t,,<includes>,uvwasi_filesize_t,,true,,uvwasi_filesize_t,-1
307150,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_filestat_t,,<includes>,uvwasi_filestat_t,,true,,uvwasi_filestat_t,-1
307151,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_options_t,,<includes>,uvwasi_options_t,,true,,uvwasi_options_t,-1
307152,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_options_t*,,<includes>,uvwasi_options_t*,,true,,uvwasi_options_t*,-1
307153,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_prestat_t,,<includes>,uvwasi_prestat_t,,true,,uvwasi_prestat_t,-1
307154,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_roflags_t,,<includes>,uvwasi_roflags_t,,true,,uvwasi_roflags_t,-1
307155,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_size_t,,<includes>,uvwasi_size_t,,true,,uvwasi_size_t,-1
307156,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uvwasi_timestamp_t,,<includes>,uvwasi_timestamp_t,,true,,uvwasi_timestamp_t,-1
307157,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,v8,,<includes>,v8,,true,,v8,-1
307158,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Allocator,,<includes>,v8.ArrayBuffer.Allocator,,true,,Allocator,-1
307159,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OutputStream,,<includes>,v8.OutputStream,,true,,OutputStream,-1
307160,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Platform,,<includes>,v8.Platform,,true,,Platform,-1
307161,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExternalOneByteStringResource,,<includes>,v8.String.ExternalOneByteStringResource,,true,,ExternalOneByteStringResource,-1
307162,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExternalStringResource,,<includes>,v8.String.ExternalStringResource,,true,,ExternalStringResource,-1
307163,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TryCatch,,<includes>,v8.TryCatch,,true,,TryCatch,-1
307164,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TracingController,,<includes>,v8.platform.tracing.TracingController,,true,,TracingController,-1
307165,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,v8_inspector,,<includes>,v8_inspector,,true,,v8_inspector,-1
307166,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Channel,,<includes>,v8_inspector.V8Inspector.Channel,,true,,Channel,-1
307167,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,v8_platform,,<includes>,v8_platform,,true,,v8_platform,-1
307168,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,v8impl,,<includes>,v8impl,,true,,v8impl,-1
307169,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CleanupHookCallback>,,<includes>,vector<CleanupQueue.CleanupHookCallback>,,true,,CleanupHookCallback>,-1
307170,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<char>,,<includes>,vector<char>,,true,,vector<char>,-1
307171,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<intptr_t>,,<includes>,vector<intptr_t>,,true,,vector<intptr_t>,-1
307172,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string>,,<includes>,vector<std.string>,,true,,string>,-1
307173,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string_view>,,<includes>,vector<std.string_view>,,true,,string_view>,-1
307174,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<unsigned char>,,<includes>,vector<unsigned char>,,true,,vector<unsigned char>,-1
307175,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,virtual,,<includes>,virtual,,true,,virtual,-1
307176,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void,,<includes>,void,,true,,void,-1
307177,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void (),,<includes>,void (),,true,,void (),-1
307178,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void(*)(),,<includes>,void(*)(),,true,,void(*)(),-1
307179,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"void(*)(Local<Object>,Local<Value>,Local<Context>)",,<includes>,"void(*)(Local<Object>,Local<Value>,Local<Context>)",,true,,"void(*)(Local<Object>,Local<Value>,Local<Context>)",-1
307180,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"void(*)(napi_async_cleanup_hook_handle__*,void*)",,<includes>,"void(*)(napi_async_cleanup_hook_handle__*,void*)",,true,,"void(*)(napi_async_cleanup_hook_handle__*,void*)",-1
307181,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void(*)(void*),,<includes>,void(*)(void*),,true,,void(*)(void*),-1
307182,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"void(node_napi_env__*,napi_callback_scope__*)",,<includes>,"void(node_napi_env__*,napi_callback_scope__*)",,true,,"void(node_napi_env__*,napi_callback_scope__*)",-1
307183,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void*,,<includes>,void*,,true,,void*,-1
307184,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void**,,<includes>,void**,,true,,void**,-1
307185,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void*[10],,<includes>,void*[10],,true,,void*[10],-1
307186,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void*[256],,<includes>,void*[256],,true,,void*[256],-1
307187,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void*[4],,<includes>,void*[4],,true,,void*[4],-1
307188,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ws_decode_result,,<includes>,ws_decode_result,,true,,ws_decode_result,-1
307189,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,z_stream,,<includes>,z_stream,,true,,z_stream,-1
