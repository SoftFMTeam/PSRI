88,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            callback, argc, argv,
                            async_context_);",3,32,1
109,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            method, argc, argv,
                            async_context_);",3,40,1
130,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            symbol, argc, argv,
                            async_context_);",3,48,1
148,RETURN,-1,,return resource_.Get(env_->isolate());,3,54,1
161,RETURN,-1,,return async_context_.async_id;,3,58,1
169,RETURN,-1,,return async_context_.trigger_async_id;,3,62,1
296,RETURN,-1,,return;,5,61,2
389,RETURN,1,,return;,16,97,1
404,RETURN,1,,return;,28,111,1
453,RETURN,1,,return;,16,123,1
464,RETURN,-1,,return;,5,126,1
479,RETURN,1,,return;,34,131,1
549,RETURN,-1,,return;,5,150,1
570,RETURN,1,,return;,34,156,1
702,RETURN,-1,,return MaybeLocal<Value>();,5,199,1
813,RETURN,-1,,return MaybeLocal<Value>();,5,220,2
825,RETURN,-1,,return MaybeLocal<Value>();,5,225,1
827,RETURN,-1,,return ret;,3,228,19
854,RETURN,-1,,"return MakeCallback(isolate, recv, method_string, argc, argv, asyncContext);",3,241,2
895,RETURN,1,,return Local<Value>();,33,254,1
919,RETURN,1,,return Local<Value>();,5,258,1
928,RETURN,-1,,return Undefined(isolate);,5,262,1
941,RETURN,-1,,"return MakeCallback(isolate, recv, callback, argc, argv, asyncContext);",3,265,9
1008,RETURN,-1,,return Undefined(isolate);,5,290,1
1011,RETURN,-1,,return ret;,3,292,8
1045,RETURN,1,,return Local<Value>();,33,307,1
1066,RETURN,-1,,"return callback->Call(context, recv, argc, argv);",5,314,1
1095,RETURN,-1,,return ret;,3,322,10
1109,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, method, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,333,3
1139,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, symbol, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,344,3
1169,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, callback, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,355,3
1228,RETURN,-1,,"return CreateEnvironment(
            setup->isolate_data(),
            setup->context(),
            args,
            exec_args,
            static_cast<EnvironmentFlags::Flags>(env_flags));",9,193,1
1310,RETURN,1,,return Nothing<ExitCode>();,27,32,1
1436,RETURN,1,,return Nothing<ExitCode>();,27,66,1
1457,RETURN,-1,,return EmitProcessExitInternal(env);,3,76,21
1526,RETURN,-1,,return;,5,108,2
1693,RETURN,-1,,return;,7,153,3
1721,RETURN,-1,,return;,7,160,2
1782,RETURN,-1,,return ret;,3,201,6
1938,RETURN,1,,return {};,42,247,1
1939,RETURN,-1,,return result;,3,249,9
1960,RETURN,-1,,return Nothing<int>();,5,255,1
1962,RETURN,-1,,return Just(static_cast<int>(result.FromJust()));,3,257,3
1974,RETURN,-1,,return &impl_->loop;,3,261,1
1983,RETURN,-1,,return impl_->allocator;,3,266,1
1991,RETURN,-1,,return impl_->isolate;,3,270,1
1999,RETURN,-1,,return impl_->isolate_data.get();,3,274,1
2010,RETURN,-1,,return impl_->env.get();,3,278,1
2021,RETURN,-1,,return impl_->main_context.Get(impl_->isolate);,3,282,1
2035,RETURN,-1,,return impl_->snapshot_creator ? &impl_->snapshot_creator.value() : nullptr;,3,286,1
2087,RETURN,-1,,"return EmbedderSnapshotData::Pointer{new EmbedderSnapshotData(
      SnapshotBuilder::GetEmbeddedSnapshotData(), false)};",3,300,1
2133,RETURN,-1,,return {};,5,311,1
2134,RETURN,-1,,return result;,3,313,7
2141,RETURN,-1,,return FromBlob(ReadFileSync(in));,3,317,1
2149,RETURN,-1,,return impl_->ToBlob();,3,321,1
2174,RETURN,-1,,return true;,3,336,1
2244,RETURN,1,,return UTF8;,11,27,1
2256,RETURN,1,,return UCS2;,11,29,1
2299,RETURN,1,,return UCS2;,11,34,1
2306,RETURN,1,,return UTF8;,9,37,1
2313,RETURN,1,,return UTF8;,9,39,1
2320,RETURN,1,,return UCS2;,9,41,1
2327,RETURN,1,,return UCS2;,9,43,1
2334,RETURN,1,,return UCS2;,9,45,1
2341,RETURN,1,,return UCS2;,9,47,1
2365,RETURN,1,,return LATIN1;,11,55,1
2372,RETURN,1,,return LATIN1;,9,58,1
2396,RETURN,1,,return LATIN1;,11,66,1
2417,RETURN,1,,return BUFFER;,11,70,1
2438,RETURN,1,,return BASE64;,11,74,1
2450,RETURN,1,,return BASE64URL;,11,76,1
2457,RETURN,1,,return LATIN1;,9,79,1
2464,RETURN,1,,return BUFFER;,9,81,1
2471,RETURN,1,,return BASE64;,9,83,1
2478,RETURN,1,,return BASE64URL;,9,85,1
2502,RETURN,1,,return ASCII;,11,93,1
2509,RETURN,1,,return ASCII;,9,96,1
2536,RETURN,1,,return HEX;,11,104,1
2543,RETURN,1,,return HEX;,9,106,1
2546,RETURN,-1,,return default_encoding;,3,109,2
2568,RETURN,1,,return default_encoding;,5,119,1
2574,RETURN,-1,,"return ParseEncoding(*encoding, default_encoding);",3,123,5
2595,RETURN,-1,,"return StringBytes::Encode(isolate, buf, len, encoding, &error)
      .ToLocalChecked();",3,132,3
2621,RETURN,-1,,"return StringBytes::Encode(isolate, buf, len, &error)
      .ToLocalChecked();",3,138,2
2644,RETURN,-1,,"return StringBytes::Size(isolate, val, encoding).FromMaybe(-1);",3,148,3
2666,RETURN,-1,,"return StringBytes::Write(isolate, buf, buflen, val, encoding);",3,157,1
2697,RETURN,-1,,"return info.run_cjs->Call(
            env->context(), Null(env->isolate()), 1, &main_script);",9,559,2
2790,RETURN,-1,,return wasm_code_gen->IsUndefined() || wasm_code_gen->IsTrue();,3,51,2
2816,RETURN,-1,,"return env != nullptr &&
         (env->is_main_thread() || !env->is_stopping()) &&
         env->abort_on_uncaught_exception() &&
         env->should_abort_on_uncaught_toggle()[0] &&
         !env->inside_should_not_abort_on_uncaught_scope();",3,57,5
2869,RETURN,-1,,return exception->ToString(context).FromMaybe(Local<Value>());,5,69,1
2920,RETURN,-1,,return exception->ToString(context).FromMaybe(Local<Value>());,5,84,1
2978,RETURN,-1,,return result;,3,101,15
3025,RETURN,-1,,return ret;,3,112,4
3054,RETURN,-1,,return ret;,3,119,4
3094,RETURN,-1,,return ret;,3,127,4
3144,RETURN,-1,,return data;,3,143,6
3165,RETURN,-1,,return data;,3,150,6
3218,RETURN,-1,,return nullptr;,5,171,2
3247,RETURN,-1,,return ret;,3,181,8
3296,RETURN,1,,return;,24,198,1
3337,RETURN,1,,return;,24,211,1
3364,RETURN,1,,return std::make_unique<DebuggingArrayBufferAllocator>();,5,218,1
3371,RETURN,1,,return std::make_unique<NodeArrayBufferAllocator>();,5,220,1
3380,RETURN,-1,,return ArrayBufferAllocator::Create().release();,3,224,1
3727,RETURN,1,,return nullptr;,27,333,1
3768,RETURN,-1,,return isolate;,3,365,9
3790,RETURN,-1,,"return NewIsolate(&params,
                    event_loop,
                    platform,
                    SnapshotData::FromEmbedderWrapper(snapshot_data),
                    settings);",3,375,3
3820,RETURN,-1,,"return NewIsolate(&params,
                    event_loop,
                    platform,
                    SnapshotData::FromEmbedderWrapper(snapshot_data),
                    settings);",3,389,3
3849,RETURN,-1,,"return new IsolateData(isolate, loop, platform, allocator, snapshot_data);",3,404,3
3968,RETURN,-1,,return nullptr;,7,464,2
3999,RETURN,-1,,return nullptr;,5,486,2
4001,RETURN,-1,,return env;,3,489,18
4085,RETURN,-1,,"return GetInspectorParentHandle(env, thread_id, url, """");",3,524,1
4124,RETURN,-1,,return nullptr;,5,533,1
4126,RETURN,-1,,return {};,3,539,5
4141,RETURN,-1,,"return StartExecution(env, cb);",3,549,3
4154,RETURN,-1,,"return LoadEnvironment(
      env, [&](const StartExecutionCallbackInfo& info) -> MaybeLocal<Value> {
        Local<Value> main_script =
            ToV8Value(env->context(), main_script_source_utf8).ToLocalChecked();
        return info.run_cjs->Call(
            env->context(), Null(env->isolate()), 1, &main_script);
      });",3,555,2
4163,RETURN,-1,,return Environment::GetCurrent(context);,3,565,1
4174,RETURN,-1,,return env->isolate_data();,3,569,1
4184,RETURN,-1,,return isolate_data->node_allocator();,3,573,1
4194,RETURN,-1,,return env->context();,3,577,1
4204,RETURN,-1,,return GetMultiIsolatePlatform(env->isolate_data());,3,581,1
4215,RETURN,-1,,return env->platform();,3,585,1
4226,RETURN,-1,,"return CreatePlatform(
      thread_pool_size,
      static_cast<v8::TracingController*>(tracing_controller));",3,591,1
4238,RETURN,-1,,"return MultiIsolatePlatform::Create(thread_pool_size,
                                      tracing_controller)
      .release();",3,599,1
4262,RETURN,-1,,"return std::make_unique<NodePlatform>(thread_pool_size,
                                        tracing_controller,
                                        page_allocator);",3,612,1
4332,RETURN,1,,return MaybeLocal<Object>();,5,627,1
4340,RETURN,1,,return handle_scope.Escape(existing_value.As<Object>());,5,629,1
4381,RETURN,1,,return MaybeLocal<Object>();,5,634,1
4383,RETURN,-1,,return handle_scope.Escape(exports);,3,635,12
4411,RETURN,1,,return context;,26,644,1
4420,RETURN,-1,,return Local<Context>();,5,647,1
4422,RETURN,-1,,return context;,3,650,5
4483,RETURN,-1,,return Just(true);,5,677,1
4532,RETURN,-1,,return Nothing<bool>();,7,693,1
4556,RETURN,-1,,return Nothing<bool>();,7,700,1
4593,RETURN,-1,,return Nothing<bool>();,7,713,1
4625,RETURN,-1,,return Nothing<bool>();,7,719,1
4653,RETURN,-1,,return Nothing<bool>();,7,728,1
4669,RETURN,-1,,return Just(true);,3,735,14
4731,RETURN,-1,,return Nothing<bool>();,7,752,1
4752,RETURN,-1,,return Nothing<bool>();,7,757,1
4754,RETURN,-1,,return Just(true);,3,760,6
4797,RETURN,-1,,return Nothing<bool>();,5,774,1
4799,RETURN,-1,,return InitializePrimordials(context);,3,776,8
4874,RETURN,-1,,return Nothing<bool>();,5,793,1
4920,RETURN,-1,,return Nothing<bool>();,7,814,1
4922,RETURN,-1,,return Just(true);,3,818,13
4937,RETURN,-1,,return Nothing<bool>();,5,824,1
4939,RETURN,-1,,return InitializeContextRuntime(context);,3,827,2
4966,RETURN,1,,return nullptr;,26,833,1
4981,RETURN,1,,return nullptr;,23,835,1
4983,RETURN,-1,,return env->event_loop();,3,836,8
5119,RETURN,-1,,return ThreadId { next_thread_id++ };,3,894,1
5478,RETURN,-1,,return e;,3,72,20
5486,RETURN,-1,,"return String::NewFromUtf8(isolate, path).ToLocalChecked();",3,87,1
5804,RETURN,-1,,return e;,3,151,23
5932,RETURN,-1,,return Nothing<bool>();,5,43,1
5954,RETURN,-1,,"return ProcessEmit(env, ""beforeExit"", exit_code).IsEmpty() ?
      Nothing<bool>() : Just(true);",3,49,11
5971,RETURN,-1,,return EmitProcessExitInternal(env).FromMaybe(ExitCode::kGenericUserError);,3,54,1
5985,RETURN,-1,,return static_cast<int>(EmitExitInternal(env));,3,58,1
6023,RETURN,-1,,return Nothing<ExitCode>();,5,70,1
6054,RETURN,-1,,return Nothing<ExitCode>();,5,77,1
6056,RETURN,-1,,return Just(env->exit_code(ExitCode::kNoFailure));,3,80,11
6084,RETURN,-1,,return Nothing<int>();,5,86,1
6086,RETURN,-1,,return Just(static_cast<int>(result.FromJust()));,3,88,3
6287,RETURN,-1,,return new ACHHandle { info };,3,161,11
6302,RETURN,1,,return;,30,166,1
6354,RETURN,1,,return -1;,23,183,1
6357,RETURN,-1,,return env->execution_async_id();,3,184,4
6380,RETURN,1,,return -1;,23,189,1
6383,RETURN,-1,,return env->trigger_async_id();,3,190,4
6417,RETURN,-1,,"return EmitAsyncInit(isolate, resource, type, trigger_async_id);",3,202,4
6478,RETURN,-1,,return context;,3,226,10
6529,RETURN,-1,,SIGNO_CASE(SIGTERM),5,74,3
6532,RETURN,-1,,"return """";",7,165,5
6649,RETURN,1,,return;,35,75,1
6703,RETURN,1,,return;,9,85,1
6743,RETURN,1,,return;,5,95,1
7280,RETURN,-1,,return;,5,221,1
7587,RETURN,1,,return;,57,277,1
7883,RETURN,-1,,return tmpl;,3,352,3
8609,RETURN,-1,,return init_hook_ran_;,3,529,1
8655,RETURN,-1,,return;,5,555,1
8780,RETURN,1,,return;,15,628,1
8834,RETURN,-1,,return;,5,646,1
8933,RETURN,-1,,return ret;,3,678,8
8939,RETURN,-1,,return provider_names[provider_type()];,3,682,1
8949,RETURN,-1,,return buf;,3,693,3
8955,RETURN,-1,,"return GetOwner(env(), object());",3,697,1
9014,RETURN,-1,,return handle_scope.Escape(obj);,7,710,1
9217,RETURN,-1,,return;,5,38,1
9252,RETURN,1,,return;,47,50,1
9298,RETURN,-1,,return MakeLazilyInitializedJSTemplate(env->isolate_data());,3,85,1
9331,RETURN,-1,,return t;,3,93,3
9363,RETURN,-1,,return pointer_data_;,3,104,3
9463,RETURN,-1,,return self->Detach();,5,130,1
9474,RETURN,-1,,return true;,3,136,1
9480,RETURN,-1,,return object();,3,140,1
9486,RETURN,-1,,return !persistent_handle_.IsWeak();,3,144,1
9496,RETURN,-1,,return IsWeakOrDetached();,3,148,1
9691,RETURN,1,,return Nothing<bool>();,11,1474,1
9695,RETURN,-1,,return Just(true);,7,1477,2
9759,RETURN,-1,,return static_cast<uint32_t>(p[0] << 8U) | (static_cast<uint32_t>(p[1]));,3,82,1
9816,RETURN,-1,,return;,5,96,2
9930,RETURN,-1,,return;,9,133,1
10065,RETURN,-1,,return scope.Escape(ret);,3,171,6
10125,RETURN,-1,,return names;,3,186,4
10165,RETURN,-1,,"return Array::New(env->isolate(), ttls.out(), naddrttls);",3,198,4
10265,RETURN,1,,return status;,5,241,1
10320,RETURN,-1,,return ARES_SUCCESS;,5,257,3
10466,RETURN,-1,,return ARES_SUCCESS;,3,281,13
10497,RETURN,1,,return status;,5,295,1
10630,RETURN,-1,,return ARES_SUCCESS;,3,316,13
10661,RETURN,1,,return status;,5,330,1
10798,RETURN,-1,,return ARES_SUCCESS;,3,352,13
10829,RETURN,1,,return status;,5,367,1
11101,RETURN,-1,,return ARES_SUCCESS;,3,415,18
11132,RETURN,1,,return status;,5,430,1
11317,RETURN,-1,,return ARES_SUCCESS;,3,457,13
11348,RETURN,1,,return status;,5,473,1
11576,RETURN,-1,,return ARES_SUCCESS;,3,510,13
11627,RETURN,-1,,return status == ARES_EBADNAME ? ARES_EBADRESP : status;,5,535,1
11648,RETURN,-1,,return ARES_EBADRESP;,5,541,1
11688,RETURN,1,,return status2 == ARES_EBADNAME ? ARES_EBADRESP : status2;,7,551,1
11710,RETURN,-1,,return ARES_EBADRESP;,7,557,1
11753,RETURN,-1,,return status3 == ARES_EBADNAME ? ARES_EBADRESP : status3;,9,573,1
11787,RETURN,-1,,return status4 == ARES_EBADNAME ? ARES_EBADRESP : status4;,9,584,1
11811,RETURN,-1,,return ARES_EBADRESP;,9,590,1
12071,RETURN,-1,,return ARES_SUCCESS;,3,634,19
12277,RETURN,-1,,return nullptr;,5,705,2
12279,RETURN,-1,,return task;,3,708,6
12334,RETURN,1,,return env()->ThrowError(ToErrorCodeString(r));,7,727,1
12368,RETURN,-1,,return env()->ThrowError(ToErrorCodeString(r));,5,739,4
12412,RETURN,-1,,return;,5,751,1
12451,RETURN,1,,return;,5,761,1
12495,RETURN,-1,,return;,5,796,1
12509,RETURN,1,,return;,27,804,1
12522,RETURN,-1,,return;,5,808,3
12566,RETURN,-1,,return;,5,818,3
12588,RETURN,-1,,return 0;,3,833,2
12603,RETURN,-1,,return 0;,3,838,2
12618,RETURN,-1,,return 0;,3,843,2
12635,RETURN,-1,,return 0;,3,848,2
12650,RETURN,-1,,return 0;,3,853,2
12665,RETURN,-1,,return 0;,3,858,2
12680,RETURN,-1,,return 0;,3,863,2
12695,RETURN,-1,,return 0;,3,868,2
12710,RETURN,-1,,return 0;,3,873,2
12725,RETURN,-1,,return 0;,3,878,2
12740,RETURN,-1,,return 0;,3,883,2
12755,RETURN,-1,,return 0;,3,888,2
12769,RETURN,1,,return ARES_EBADRESP;,5,895,1
12860,RETURN,1,,return status;,5,921,1
13111,RETURN,1,,return status;,5,966,1
13261,RETURN,1,,return status;,5,988,1
13290,RETURN,1,,return status;,5,995,1
13397,RETURN,1,,return status;,5,1011,1
13416,RETURN,1,,return status;,5,1016,1
13445,RETURN,1,,return status;,5,1023,1
13552,RETURN,1,,return status;,5,1038,1
13578,RETURN,1,,return status;,5,1044,1
13620,RETURN,1,,return status;,5,1052,1
13627,RETURN,-1,,return 0;,3,1055,61
13641,RETURN,1,,return ARES_EBADRESP;,5,1062,1
13720,RETURN,1,,return status;,5,1084,1
13743,RETURN,-1,,return 0;,3,1089,23
13757,RETURN,1,,return ARES_EBADRESP;,5,1096,1
13836,RETURN,1,,return status;,5,1118,1
13859,RETURN,-1,,return 0;,3,1123,23
13873,RETURN,1,,return ARES_EBADRESP;,5,1130,1
13937,RETURN,1,,return status;,5,1142,1
13944,RETURN,-1,,return 0;,3,1145,17
13958,RETURN,1,,return ARES_EBADRESP;,5,1152,1
14028,RETURN,1,,return status;,5,1165,1
14035,RETURN,-1,,return 0;,3,1168,19
14049,RETURN,1,,return ARES_EBADRESP;,5,1175,1
14113,RETURN,1,,return status;,5,1188,1
14120,RETURN,-1,,return 0;,3,1191,17
14134,RETURN,1,,return ARES_EBADRESP;,5,1198,1
14204,RETURN,1,,return status;,5,1211,1
14211,RETURN,-1,,return 0;,3,1214,19
14225,RETURN,1,,return ARES_EBADRESP;,5,1221,1
14289,RETURN,1,,return status;,5,1233,1
14296,RETURN,-1,,return 0;,3,1236,17
14310,RETURN,1,,return ARES_EBADRESP;,5,1243,1
14374,RETURN,1,,return status;,5,1255,1
14381,RETURN,-1,,return 0;,3,1258,17
14395,RETURN,1,,return ARES_EBADRESP;,5,1265,1
14465,RETURN,1,,return status;,5,1279,1
14472,RETURN,-1,,return 0;,3,1282,19
14486,RETURN,1,,return ARES_EBADRESP;,5,1289,1
14550,RETURN,1,,return status;,5,1301,1
14557,RETURN,-1,,return 0;,3,1304,17
14571,RETURN,1,,return ARES_EBADRESP;,5,1311,1
14622,RETURN,1,,return status;,5,1324,1
14821,RETURN,-1,,return 0;,3,1355,26
14868,RETURN,-1,,return UV_EINVAL;,5,1369,1
14904,RETURN,-1,,return 0;,3,1384,7
14919,RETURN,1,,return ARES_EBADRESP;,5,1391,1
14956,RETURN,-1,,return 0;,3,1399,11
15200,RETURN,1,,return;,7,1481,1
15214,RETURN,1,,return;,9,1484,1
15429,RETURN,1,,return;,5,1546,1
15994,RETURN,-1,,return;,7,1679,1
16030,RETURN,-1,,return args.GetReturnValue().Set(DNS_ESETSRVPENDING);,5,1693,1
16079,RETURN,-1,,return args.GetReturnValue().Set(rv);,5,1704,3
16498,RETURN,-1,,return;,5,1796,2
16539,RETURN,-1,,return;,9,1806,2
16569,RETURN,-1,,return;,9,1813,2
16583,RETURN,-1,,return;,7,1819,2
17341,RETURN,-1,,return a.insertion_order_counter_ > b.insertion_order_counter_;,15,21,1
17395,RETURN,-1,,return callbacks;,3,24,3
17441,RETURN,-1,,return std::hash<void*>()(cb.arg_);,3,44,1
17456,RETURN,-1,,return a.fn_ == b.fn_ && a.arg_ == b.arg_;,3,49,1
17627,RETURN,1,,return;,7,54,1
17647,RETURN,1,,return;,7,64,1
17923,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,61,1
17947,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,69,1
17985,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,82,1
18030,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,11,96,1
18099,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,124,1
18141,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,144,1
18174,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,152,1
18206,RETURN,1,,return WebCryptoCipherStatus::FAILED;,7,163,1
18225,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,170,33
18235,RETURN,-1,,return a == 0 ? 0 : 1 + (a - 1) / b;,3,179,1
18283,RETURN,-1,,"return BignumPointer(BN_bin2bn(
        data + params.iv.size() - byte_length,
        byte_length,
        nullptr));",5,188,3
18336,RETURN,-1,,"return BignumPointer(BN_bin2bn(counter.data(), counter.size(), nullptr));",3,202,11
18420,RETURN,-1,,return new_counter_block;,3,220,13
18461,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,241,1
18492,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,252,1
18509,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,256,1
18526,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,260,1
18530,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,262,14
18559,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,274,1
18585,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,281,1
18602,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,286,1
18625,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,292,1
18684,RETURN,-1,,return status;,5,309,4
18733,RETURN,1,,return status;,5,325,1
18790,RETURN,-1,,return status;,3,342,27
18814,RETURN,-1,,return false;,5,353,2
18832,RETURN,-1,,return true;,3,358,5
18881,RETURN,-1,,return false;,5,371,2
18883,RETURN,-1,,return true;,3,373,4
18907,RETURN,-1,,return false;,9,386,2
18923,RETURN,-1,,return false;,9,391,2
18954,RETURN,-1,,return false;,9,401,2
18976,RETURN,-1,,return false;,9,406,2
18981,RETURN,-1,,return true;,3,413,2
19009,RETURN,-1,,return false;,7,426,2
19027,RETURN,-1,,return true;,3,432,2
19061,RETURN,1,,return *this;,23,450,1
19068,RETURN,-1,,return *new (this) AESCipherConfig(std::move(other));,3,452,3
19189,RETURN,-1,,return Nothing<bool>();,9,485,1
19219,RETURN,-1,,return Nothing<bool>();,9,492,1
19249,RETURN,-1,,return Nothing<bool>();,9,499,1
19269,RETURN,1,,return Nothing<bool>();,9,505,1
19289,RETURN,1,,return Nothing<bool>();,9,510,1
19309,RETURN,1,,return Nothing<bool>();,9,515,1
19376,RETURN,-1,,return Nothing<bool>();,9,534,1
19419,RETURN,-1,,return Nothing<bool>();,9,542,1
19462,RETURN,-1,,return Nothing<bool>();,9,550,1
19485,RETURN,-1,,return Nothing<bool>();,5,561,2
19504,RETURN,-1,,return Nothing<bool>();,5,567,2
19506,RETURN,-1,,return Just(true);,3,570,11
19599,RETURN,-1,,return method;,5,233,10
19651,RETURN,-1,,return bio;,3,39,3
19694,RETURN,-1,,return BIOPointer();,5,50,1
19696,RETURN,-1,,return bio;,3,53,4
19710,RETURN,-1,,return 1;,3,61,3
19722,RETURN,1,,return 0;,5,67,1
19743,RETURN,-1,,return 1;,3,76,3
19786,RETURN,-1,,return bytes;,3,93,7
19803,RETURN,-1,,return read_head_->data_ + read_head_->read_pos_;,3,99,2
19900,RETURN,-1,,return total;,3,126,10
19918,RETURN,-1,,return len;,3,135,3
19926,RETURN,-1,,"return Write(bio, str, strlen(str));",3,140,1
19952,RETURN,1,,return 0;,5,148,1
20001,RETURN,-1,,return i;,3,165,10
20122,RETURN,-1,,return ret;,3,218,6
20133,RETURN,-1,,return method;,3,236,3
20270,RETURN,-1,,return bytes_read;,3,289,13
20281,RETURN,1,,return;,5,295,1
20297,RETURN,1,,return;,5,298,1
20313,RETURN,1,,return;,5,301,1
20445,RETURN,-1,,return bytes_read;,7,342,1
20466,RETURN,-1,,return max;,3,352,11
20607,RETURN,-1,,return write_head_->data_ + write_head_->write_pos_;,3,405,5
20766,RETURN,1,,return;,5,461,1
20823,RETURN,1,,return;,5,479,1
20858,RETURN,-1,,return static_cast<NodeBIO*>(BIO_get_data(bio));,3,495,2
20906,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,854,1
20935,RETURN,-1,,return;,7,863,2
21019,RETURN,-1,,return true;,5,36,7
21023,RETURN,-1,,return EVP_CIPHER_nid(cipher) == NID_chacha20_poly1305;,5,38,10
21029,RETURN,-1,,return false;,5,40,12
21041,RETURN,-1,,return IsSupportedAuthenticatedMode(cipher);,3,46,3
21049,RETURN,-1,,return tag_len == 4 || tag_len == 8 || (tag_len >= 12 && tag_len <= 16);,3,50,1
21157,RETURN,1,,return;,5,71,1
21282,RETURN,1,,return;,7,103,1
21312,RETURN,1,,return;,9,108,1
21350,RETURN,1,,return;,13,121,1
21367,RETURN,-1,,return;,13,131,1
21375,RETURN,1,,return;,13,136,1
21408,RETURN,-1,,return;,5,147,1
21434,RETURN,-1,,return;,5,158,1
21464,RETURN,-1,,return;,5,165,1
21497,RETURN,-1,,return;,5,174,1
21530,RETURN,-1,,return;,5,183,1
21559,RETURN,-1,,return;,5,190,1
21590,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_new"");",5,202,1
21606,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_new"");",5,207,1
22295,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error(),
                            ""Failed to initialize cipher"");",5,381,1
22314,RETURN,1,,return;,7,388,1
22328,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_KEYLEN(env());,5,393,2
22345,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error(),
                            ""Failed to initialize cipher"");",5,397,1
22367,RETURN,-1,,"return THROW_ERR_CRYPTO_UNSUPPORTED_OPERATION(env(),
        ""crypto.createCipher() is not supported in FIPS mode."");",5,412,1
22381,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_CIPHER(env());,5,418,1
22490,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""password is too large"");",5,458,1
22572,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_CIPHER(env());,5,482,1
22602,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,5,490,1
22620,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,5,498,1
22639,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,7,507,1
22717,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,535,1
22743,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""iv is too big"");",5,541,1
22822,RETURN,-1,,return false;,5,568,2
22851,RETURN,-1,,return false;,9,579,2
22881,RETURN,-1,,return false;,9,596,2
22897,RETURN,-1,,return false;,7,610,2
22914,RETURN,-1,,return false;,7,618,2
22951,RETURN,-1,,return true;,3,633,7
22973,RETURN,-1,,return false;,5,642,2
22975,RETURN,-1,,return true;,3,645,4
22982,RETURN,-1,,return IsSupportedAuthenticatedMode(ctx_.get());,3,651,2
23026,RETURN,-1,,return;,5,663,1
23094,RETURN,-1,,return args.GetReturnValue().Set(false);,5,680,1
23116,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,685,1
23185,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_AUTH_TAG(
      env, ""Invalid authentication tag length: %u"", tag_len);",5,705,1
23257,RETURN,-1,,return false;,7,725,1
23262,RETURN,-1,,return true;,3,729,2
23277,RETURN,1,,return false;,5,736,1
23302,RETURN,-1,,return false;,7,748,2
23309,RETURN,1,,return false;,7,752,1
23320,RETURN,1,,return false;,9,756,1
23335,RETURN,1,,return false;,7,761,1
23337,RETURN,-1,,"return 1 == EVP_CipherUpdate(ctx_.get(),
                               nullptr,
                               &outlen,
                               data.data(),
                               data.size());",3,764,7
23415,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,782,1
23447,RETURN,1,,return kErrorState;,5,791,1
23467,RETURN,1,,return kErrorMessageSize;,5,797,1
23495,RETURN,1,,return kErrorState;,35,806,1
23527,RETURN,-1,,return kErrorState;,5,817,1
23630,RETURN,-1,,return kSuccess;,5,841,2
23632,RETURN,-1,,return r == 1 ? kSuccess : kErrorState;,3,843,20
23660,RETURN,1,,return false;,5,874,1
23663,RETURN,-1,,"return EVP_CIPHER_CTX_set_padding(ctx_.get(), auto_padding);",3,876,3
23720,RETURN,1,,return false;,5,889,1
23788,RETURN,-1,,return false;,5,907,1
23930,RETURN,-1,,return ok;,3,946,10
23960,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_STATE(env);,5,955,1
23997,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), msg);",5,968,3
24066,RETURN,1,,return false;,5,989,1
24077,RETURN,1,,return false;,5,991,1
24089,RETURN,1,,return false;,5,993,1
24106,RETURN,1,,return false;,7,997,1
24117,RETURN,1,,return false;,57,1000,1
24143,RETURN,-1,,return false;,5,1009,1
24190,RETURN,-1,,return false;,5,1023,1
24236,RETURN,-1,,return true;,3,1032,15
24270,RETURN,1,,return;,5,1046,1
24284,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too long"");",5,1050,1
24309,RETURN,1,,return;,68,1053,1
24345,RETURN,1,,return THROW_ERR_OSSL_EVP_INVALID_DIGEST(env);,7,1060,1
24374,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""oaepLabel is too big"");",5,1066,1
24397,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error());",5,1071,1
24523,RETURN,1,,return false;,5,50,1
24570,RETURN,-1,,return false;,5,61,2
24578,RETURN,-1,,return false;,5,68,2
24580,RETURN,-1,,return true;,3,71,4
24594,RETURN,1,,return End();,23,81,1
24603,RETURN,1,,return;,5,85,1
24629,RETURN,-1,,return End();,5,98,1
24649,RETURN,1,,return End();,9,104,1
24653,RETURN,-1,,return End();,7,107,1
24672,RETURN,-1,,return End();,7,114,1
24731,RETURN,1,,return;,11,138,1
24751,RETURN,1,,return;,11,141,1
24771,RETURN,1,,return;,13,144,1
24783,RETURN,1,,return;,13,147,1
24810,RETURN,1,,return;,13,151,1
24860,RETURN,1,,return false;,5,176,1
24891,RETURN,1,,return false;,5,186,1
24920,RETURN,1,,return false;,5,194,1
24941,RETURN,1,,return false;,5,201,1
24948,RETURN,1,,return true;,5,205,1
24968,RETURN,1,,return false;,7,213,1
25010,RETURN,1,,return false;,7,221,1
25026,RETURN,1,,return false;,5,232,1
25028,RETURN,-1,,return true;,3,234,26
25172,RETURN,-1,,return result;,3,65,7
25211,RETURN,-1,,return;,5,81,1
25269,RETURN,1,,return default_value;,5,99,1
25300,RETURN,1,,return MaybeLocal<Value>();,5,106,1
25302,RETURN,-1,,return ret;,3,108,8
25310,RETURN,-1,,"return session != nullptr && SSL_set_session(ssl.get(), session.get()) == 1;",3,114,1
25332,RETURN,-1,,"return SSLSessionPointer(d2i_SSL_SESSION(nullptr, &buf, length));",3,118,1
25404,RETURN,-1,,return X509_V_OK;,7,137,1
25406,RETURN,-1,,return err;,3,140,4
25488,RETURN,-1,,return err == 1;,3,154,13
25517,RETURN,-1,,return nullptr;,5,168,1
25537,RETURN,1,,return nullptr;,23,172,1
25539,RETURN,-1,,return reinterpret_cast<const char*>(buf + 3);,3,173,7
25570,RETURN,-1,,return nullptr;,5,186,1
25590,RETURN,1,,return nullptr;,5,191,1
25607,RETURN,1,,return nullptr;,60,194,1
25616,RETURN,1,,return nullptr;,5,197,1
25638,RETURN,1,,return nullptr;,5,200,1
25640,RETURN,-1,,return reinterpret_cast<const char*>(buf + 5);,3,201,13
25651,RETURN,-1,,"return SSL_get_servername(ssl, TLSEXT_NAMETYPE_host_name);",3,205,1
25661,RETURN,-1,,"return SSL_CTX_set1_groups_list(sc->ctx().get(), groups) == 1;",3,209,1
25909,RETURN,-1,,return code;,3,248,4
25922,RETURN,1,,return Undefined(env->isolate());,5,253,1
25933,RETURN,-1,,"return OneByteString(env->isolate(), reason);",3,255,4
25951,RETURN,1,,return Undefined(env->isolate());,5,260,1
25957,RETURN,-1,,"return OneByteString(env->isolate(), X509ErrorCode(err));",3,261,2
25985,RETURN,1,,return Undefined(env->isolate());,5,268,1
26000,RETURN,-1,,return maybe_cert.FromMaybe<Value>(Local<Value>());,3,271,6
26052,RETURN,-1,,return ret.FromMaybe(Local<Value>());,3,284,5
26081,RETURN,1,,return false;,5,296,1
26089,RETURN,1,,return true;,5,300,1
26091,RETURN,-1,,"return !target->Set(context, name, value).IsNothing();",3,302,4
26114,RETURN,1,,return Undefined(env->isolate());,5,308,1
26120,RETURN,-1,,"return OneByteString(env->isolate(), getstr(cipher));",3,310,2
26234,RETURN,1,,return MaybeLocal<Object>();,9,350,1
26247,RETURN,1,,return MaybeLocal<Object>();,9,353,1
26273,RETURN,-1,,return MaybeLocal<Object>(object);,3,366,4
26356,RETURN,1,,return MaybeLocal<Object>();,7,383,1
26369,RETURN,1,,return MaybeLocal<Object>();,7,386,1
26394,RETURN,-1,,return MaybeLocal<Object>(issuer_chain);,3,398,3
26487,RETURN,-1,,"return name != nullptr ?
      MaybeLocal<Value>(OneByteString(env->isolate(), name)) :
      MaybeLocal<Value>(Undefined(env->isolate()));",3,421,3
26531,RETURN,1,,return Undefined(env->isolate());,5,432,1
26537,RETURN,-1,,"return ECPointToBuffer(
      env,
      group,
      pubkey,
      EC_KEY_get_conv_form(ec.get()),
      nullptr).FromMaybe(Local<Object>());",3,434,4
26564,RETURN,1,,return Undefined(env->isolate());,5,447,1
26580,RETURN,1,,return Undefined(env->isolate());,5,451,1
26586,RETURN,-1,,"return Integer::New(env->isolate(), bits);",3,453,5
26676,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,470,10
26707,RETURN,-1,,"return ToV8Value(env, bio);",3,479,4
26717,RETURN,-1,,"return Integer::New(env->isolate(), BN_num_bits(n));",3,483,1
26741,RETURN,-1,,"return ToV8Value(env, bio);",3,491,2
26816,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,508,9
26875,RETURN,1,,"return OneByteString(env->isolate(), buf.data<unsigned char>());",16,517,1
26885,RETURN,-1,,return Undefined(env->isolate());,3,521,2
26957,RETURN,-1,,"return Array::New(env->isolate(), ext_key_usage.out(), count);",5,541,9
26971,RETURN,-1,,return Undefined(env->isolate());,3,544,5
26983,RETURN,-1,,"return GetCipherName(env, SSL_get_current_cipher(ssl.get()));",3,549,1
26997,RETURN,-1,,"return GetCipherVersion(env, SSL_get_current_cipher(ssl.get()));",3,554,1
27027,RETURN,-1,,"return OneByteString(env->isolate(), fingerprint);",5,567,2
27034,RETURN,-1,,return Undefined(env->isolate());,3,569,5
27054,RETURN,-1,,"return ToV8Value(env, bio);",3,577,2
27072,RETURN,-1,,"return ToV8Value(env, bio);",3,585,2
27112,RETURN,-1,,return false;,7,604,9
27129,RETURN,-1,,return false;,11,611,1
27142,RETURN,-1,,return false;,11,618,1
27144,RETURN,-1,,return true;,3,623,2
27478,RETURN,-1,,return false;,7,726,1
27779,RETURN,-1,,return true;,3,814,2
27809,RETURN,1,,return false;,5,823,1
27858,RETURN,-1,,return ok;,3,839,11
27888,RETURN,1,,return false;,5,849,1
27961,RETURN,-1,,return ok;,3,872,12
27983,RETURN,1,,return Undefined(env->isolate());,5,880,1
28010,RETURN,-1,,return v8::Null(env->isolate());,5,887,2
28019,RETURN,-1,,"return ToV8Value(env, bio);",3,890,8
28043,RETURN,1,,return Undefined(env->isolate());,5,898,1
28070,RETURN,-1,,return v8::Null(env->isolate());,5,905,2
28079,RETURN,-1,,"return ToV8Value(env, bio);",3,908,8
28114,RETURN,-1,,return Undefined(env->isolate());,5,921,2
28120,RETURN,-1,,"return ToV8Value(env, bio);",3,924,4
28151,RETURN,-1,,return Undefined(env->isolate());,5,936,2
28157,RETURN,-1,,"return ToV8Value(env, bio);",3,939,2
28210,RETURN,-1,,return MaybeLocal<Value>();,5,953,1
28293,RETURN,-1,,return MaybeLocal<Value>();,7,982,1
28307,RETURN,-1,,return Undefined(env->isolate());,7,993,1
28346,RETURN,-1,,return MaybeLocal<Value>();,7,1003,1
28366,RETURN,-1,,return MaybeLocal<Value>();,7,1013,1
28395,RETURN,-1,,return MaybeLocal<Value>();,9,1017,1
28432,RETURN,-1,,return MaybeLocal<Value>();,11,1022,1
28462,RETURN,-1,,return MaybeLocal<Value>();,9,1027,1
28481,RETURN,-1,,return MaybeLocal<Value>();,7,1030,1
28483,RETURN,-1,,return result;,3,1034,10
28491,RETURN,-1,,"return Get(env, SSL_get_current_cipher(ssl.get()));",3,1040,1
28620,RETURN,-1,,return MaybeLocal<Array>();,7,1068,1
28647,RETURN,-1,,return scope.Escape(ret);,3,1073,14
28668,RETURN,1,,return MaybeLocal<Object>();,5,1079,1
28736,RETURN,-1,,return MaybeLocal<Object>();,5,1095,1
28738,RETURN,-1,,return scope.Escape(info);,3,1098,6
28788,RETURN,1,,return scope.Escape(info);,5,1108,1
28860,RETURN,-1,,return MaybeLocal<Object>();,9,1122,1
28949,RETURN,-1,,return MaybeLocal<Object>();,11,1149,1
28952,RETURN,-1,,return scope.Escape(info);,3,1155,15
28991,RETURN,-1,,return MaybeLocal<Object>();,5,1166,2
29049,RETURN,-1,,return MaybeLocal<Object>();,5,1183,2
29070,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,1187,9
29138,RETURN,1,,return Undefined(env->isolate());,5,1204,1
29160,RETURN,-1,,return maybe_cert.ToLocal(&result) ? result : MaybeLocal<Value>();,5,1210,2
29185,RETURN,1,,return Undefined(env->isolate());,5,1215,1
29218,RETURN,1,,return MaybeLocal<Value>();,5,1222,1
29251,RETURN,1,,return MaybeLocal<Value>();,5,1234,1
29274,RETURN,1,,return MaybeLocal<Value>();,5,1245,1
29302,RETURN,-1,,return MaybeLocal<Value>();,5,1253,1
29304,RETURN,-1,,return result;,3,1256,25
29425,RETURN,-1,,return MaybeLocal<Object>();,5,1288,1
29533,RETURN,-1,,return MaybeLocal<Object>();,7,1322,1
29575,RETURN,-1,,return MaybeLocal<Object>();,7,1335,1
29612,RETURN,-1,,return MaybeLocal<Object>();,9,1350,1
29655,RETURN,-1,,return MaybeLocal<Object>();,5,1371,1
29737,RETURN,-1,,return MaybeLocal<Object>();,5,1397,1
29739,RETURN,-1,,return scope.Escape(info);,3,1400,22
29821,RETURN,-1,,return store;,3,59,3
29849,RETURN,1,,return nullptr;,15,67,1
29868,RETURN,1,,return nullptr;,32,69,1
29891,RETURN,1,,return nullptr;,22,71,1
29903,RETURN,1,,return nullptr;,54,72,1
29905,RETURN,-1,,return bio;,5,73,10
29907,RETURN,-1,,return nullptr;,3,75,2
29934,RETURN,1,,return 0;,5,160,1
29947,RETURN,1,,return 0;,5,166,1
29967,RETURN,-1,,return 0;,5,177,2
29986,RETURN,-1,,return 0;,5,187,1
29988,RETURN,-1,,"return SSL_CTX_use_certificate_chain(ctx,
                                       std::move(x),
                                       extra_certs.get(),
                                       cert,
                                       issuer);",3,190,13
30109,RETURN,-1,,return store;,3,238,12
30168,RETURN,-1,,return;,7,250,1
30193,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,259,1
30514,RETURN,-1,,return tmpl;,3,328,3
30741,RETURN,-1,,return nullptr;,5,393,1
30743,RETURN,-1,,"return new SecureContext(env, obj);",3,396,3
30927,RETURN,-1,,return;,7,450,2
30946,RETURN,-1,,return;,7,455,2
31170,RETURN,-1,,return;,7,511,2
31185,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_new"");",5,517,1
31289,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Error generating ticket keys"");",5,552,1
31305,RETURN,-1,,return SSLPointer(SSL_new(ctx_.get()));,3,559,1
31374,RETURN,-1,,return Nothing<bool>();,5,582,2
31396,RETURN,-1,,return Nothing<bool>();,5,588,2
31398,RETURN,-1,,return Just(true);,3,591,4
31439,RETURN,1,,return;,5,604,1
31482,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""PEM_read_bio_PrivateKey"");",5,621,1
31501,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_use_PrivateKey"");",5,624,1
31561,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,639,1
31602,RETURN,-1,,"return THROW_ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED(
        env,
        ""Programmatic selection of OpenSSL engines is unsupported while the ""
        ""experimental permission model is enabled"");",5,652,1
31653,RETURN,-1,,return;,5,665,3
31662,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Failure to initialize engine"");",5,669,1
31695,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""ENGINE_load_private_key"");",5,680,1
31714,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_use_PrivateKey"");",5,683,1
31739,RETURN,1,,return Just(false);,13,691,1
31772,RETURN,-1,,return Nothing<bool>();,5,701,2
31774,RETURN,-1,,return Just(true);,3,703,6
31832,RETURN,1,,return;,13,720,1
31926,RETURN,1,,return Just(false);,13,747,1
31951,RETURN,-1,,return Nothing<bool>();,5,754,2
31990,RETURN,-1,,return Just(true);,3,767,10
32123,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""Failed to set ciphers"");",5,810,1
32199,RETURN,-1,,return;,7,832,1
32200,RETURN,-1,,"return ThrowCryptoError(env, err, ""Failed to set ciphers"");",5,834,4
32263,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to set ECDH curve"");",5,849,1
32311,RETURN,-1,,return;,5,866,2
32325,RETURN,1,,return;,7,873,1
32342,RETURN,1,,return;,5,881,1
32363,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(
        env, ""DH parameter is less than 1024 bits"");",5,887,1
32401,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Error setting temp DH parameter"");",5,895,1
32707,RETURN,1,,return;,5,975,1
32868,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(env, ""PFX certificate argument is mandatory"");",5,1022,1
32883,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Unable to load PFX certificate"");",5,1027,1
33157,RETURN,-1,,return env->ThrowError(str);,5,1089,6
33213,RETURN,-1,,"return THROW_ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED(
        env,
        ""Programmatic selection of OpenSSL engines is unsupported while the ""
        ""experimental permission model is enabled"");",5,1113,1
33264,RETURN,-1,,return;,5,1126,3
33279,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,1131,1
33323,RETURN,1,,return;,5,1142,1
33551,RETURN,-1,,return -1;,5,1203,1
33610,RETURN,-1,,return -1;,5,1217,1
33651,RETURN,-1,,return -1;,5,1224,1
33669,RETURN,1,,return r;,5,1229,1
33722,RETURN,-1,,return -1;,5,1237,1
33787,RETURN,-1,,return -1;,7,1247,1
33852,RETURN,-1,,return r;,3,1276,32
33917,RETURN,-1,,return -1;,7,1298,1
33920,RETURN,-1,,return 1;,5,1300,3
33935,RETURN,-1,,return 0;,5,1305,1
33963,RETURN,-1,,return -1;,5,1312,1
33966,RETURN,-1,,return 1;,3,1314,6
34056,RETURN,1,,return args.GetReturnValue().SetNull();,5,1336,1
34089,RETURN,1,,return;,5,1341,1
34130,RETURN,1,,return ERR_get_error();,5,1358,1
34155,RETURN,-1,,return 0;,5,1369,1
34157,RETURN,-1,,return err;,3,1372,10
34170,RETURN,1,,return;,21,1378,1
34212,RETURN,-1,,return args.GetReturnValue().Set(extra_root_certs_loaded);,3,1396,1
34379,RETURN,-1,,return p;,5,358,3
34394,RETURN,-1,,return g;,5,366,3
34408,RETURN,-1,,return pub_key;,5,374,3
34422,RETURN,-1,,return priv_key;,5,382,3
34431,RETURN,-1,,"return DH_set0_key(dh, num, nullptr);",36,461,1
34443,RETURN,-1,,"return DH_set0_key(dh, nullptr, num);",36,467,1
34686,RETURN,1,,return false;,5,136,1
34688,RETURN,-1,,return VerifyContext();,3,137,3
34721,RETURN,-1,,"return bn_g && BN_set_word(bn_g.get(), g) &&
         DH_set0_pqg(dh_.get(), bn_p.release(), nullptr, bn_g.release()) &&
         VerifyContext();",3,148,5
34774,RETURN,-1,,return false;,5,158,2
34791,RETURN,-1,,return false;,5,163,2
34826,RETURN,-1,,return false;,5,172,3
34828,RETURN,-1,,return VerifyContext();,3,174,9
34858,RETURN,-1,,return false;,5,182,2
34875,RETURN,-1,,return false;,5,187,2
34905,RETURN,-1,,return false;,5,195,3
34931,RETURN,-1,,return false;,5,202,3
34933,RETURN,-1,,return VerifyContext();,3,204,10
34943,RETURN,-1,,return BignumPointer(p(nullptr));,3,211,1
34964,RETURN,1,,"V(""modp1"", BN_get_rfc2409_prime_768);",3,221,1
34974,RETURN,1,,"V(""modp2"", BN_get_rfc2409_prime_1024);",3,222,1
34984,RETURN,1,,"V(""modp5"", BN_get_rfc3526_prime_1536);",3,223,1
34994,RETURN,1,,"V(""modp14"", BN_get_rfc3526_prime_2048);",3,224,1
35004,RETURN,1,,"V(""modp15"", BN_get_rfc3526_prime_3072);",3,225,1
35014,RETURN,1,,"V(""modp16"", BN_get_rfc3526_prime_4096);",3,226,1
35024,RETURN,1,,"V(""modp17"", BN_get_rfc3526_prime_6144);",3,227,1
35034,RETURN,1,,"V(""modp18"", BN_get_rfc3526_prime_8192);",3,228,1
35036,RETURN,-1,,return nullptr;,3,230,9
35097,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_DH_GROUP(env);,5,246,1
35204,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""prime is too big"");",9,269,1
35254,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""generator is too big"");",11,277,1
35284,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Initialization failed"");",5,285,1
35320,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Key generation failed"");",5,297,1
35431,RETURN,1,,return;,68,318,1
35478,RETURN,1,,"return THROW_ERR_CRYPTO_INVALID_STATE(env, err_if_null);",5,333,1
35577,RETURN,1,,return;,68,350,1
35663,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""secret is too big"");",5,397,1
35757,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Invalid Key"");",7,420,1
35772,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYLEN(env,
            ""Supplied key is too small"");",9,423,1
35783,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYLEN(env,
            ""Supplied key is too large"");",9,426,1
35787,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_KEYTYPE(env);,5,431,5
35848,RETURN,1,,return;,68,441,1
35899,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buf is too big"");",5,453,1
35990,RETURN,1,,return false;,5,483,1
35995,RETURN,-1,,return true;,3,485,4
36045,RETURN,-1,,return Nothing<bool>();,7,514,2
36097,RETURN,-1,,return Nothing<bool>();,9,525,2
36125,RETURN,-1,,return Nothing<bool>();,9,532,2
36176,RETURN,-1,,return Just(true);,3,543,4
36210,RETURN,1,,return EVPKeyCtxPointer();,7,552,1
36248,RETURN,-1,,return EVPKeyCtxPointer();,7,558,1
36347,RETURN,-1,,return EVPKeyCtxPointer();,7,579,1
36376,RETURN,1,,return EVPKeyCtxPointer();,5,589,1
36378,RETURN,-1,,return ctx;,3,591,6
36387,RETURN,-1,,return Just(true);,3,598,1
36417,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,611,1
36421,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,612,4
36438,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,615,1
36442,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,616,8
36502,RETURN,1,,return ByteSource();,5,633,1
36522,RETURN,-1,,return ByteSource();,5,637,1
36534,RETURN,-1,,return std::move(out).release();,3,641,9
36648,RETURN,1,,return;,31,662,1
36658,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""diffieHellman failed"");",5,665,1
36744,RETURN,-1,,return Nothing<bool>();,5,689,2
36762,RETURN,-1,,return Just(true);,3,695,12
36781,RETURN,-1,,return Just(!result->IsEmpty());,3,704,2
36811,RETURN,-1,,return true;,3,714,2
36834,RETURN,-1,,return Just(true);,3,723,4
36924,RETURN,-1,,return EVPKeyCtxPointer();,5,49,1
36965,RETURN,-1,,return EVPKeyCtxPointer();,7,55,1
36978,RETURN,1,,return EVPKeyCtxPointer();,5,60,1
37003,RETURN,1,,return EVPKeyCtxPointer();,5,66,1
37005,RETURN,-1,,return key_ctx;,3,68,13
37079,RETURN,-1,,return Just(true);,3,95,7
37089,RETURN,-1,,return Just(true);,3,102,1
37111,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,7,115,3
37125,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,118,1
37129,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,119,7
37146,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,122,1
37150,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,123,11
37276,RETURN,-1,,return Nothing<bool>();,5,161,1
37278,RETURN,-1,,return Just(true);,3,164,19
37338,RETURN,-1,,"return OneByteString(env->isolate(), OBJ_nid2sn(curve.nid));",5,116,1
37405,RETURN,-1,,return nid;,3,45,4
37464,RETURN,-1,,return nid;,3,61,3
37994,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_CURVE(env);,5,146,1
38005,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
      ""Failed to create key using named curve"");",5,150,1
38052,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to generate key"");",5,163,1
38075,RETURN,-1,,return pub;,5,175,2
38091,RETURN,-1,,return ECPointPointer();,5,181,2
38114,RETURN,1,,return ECPointPointer();,5,190,1
38116,RETURN,-1,,return pub;,3,192,10
38152,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_KEYPAIR(env);,5,206,1
38185,RETURN,-1,,return;,5,216,2
38249,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to compute ECDH key"");",5,230,1
38296,RETURN,1,,return;,68,234,1
38357,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to get ECDH public key"");",5,250,1
38407,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, error);",5,260,1
38455,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to get ECDH private key"");",5,272,1
38547,RETURN,1,,return;,68,286,1
38590,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,298,1
38610,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to BN"");",5,303,1
38622,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYTYPE(env,
        ""Private key is not valid for specified curve."");",5,308,1
38657,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert BN to a private key"");",5,319,1
38698,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to generate ECDH public key"");",5,334,1
38714,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to set generated public key"");",5,339,1
38782,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to EC_POINT"");",5,361,1
38804,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to set EC_POINT as the public key"");",5,367,1
38826,RETURN,-1,,return false;,5,378,1
38833,RETURN,-1,,"return EC_GROUP_get_order(group_, order.get(), nullptr) &&
         BN_cmp(private_key.get(), order.get()) < 0;",3,382,7
38861,RETURN,-1,,return 1 == EC_KEY_check_key(key_.get());,3,389,3
38907,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,402,1
38919,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,404,1
38947,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_CURVE(env);,5,410,1
38959,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to get EC_GROUP"");",5,415,1
38982,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to EC_POINT"");",5,423,1
39038,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, error);",5,434,1
39083,RETURN,-1,,return Just(!result->IsEmpty());,3,449,2
39183,RETURN,-1,,return Nothing<bool>();,5,474,2
39208,RETURN,-1,,return Just(true);,3,481,16
39304,RETURN,-1,,return false;,9,505,1
39324,RETURN,-1,,return false;,9,511,1
39382,RETURN,1,,return false;,9,530,1
39429,RETURN,-1,,return false;,9,542,1
39442,RETURN,-1,,return true;,3,549,8
39536,RETURN,-1,,return EVPKeyCtxPointer();,9,574,1
39566,RETURN,-1,,return key_ctx;,3,584,4
39632,RETURN,-1,,return Nothing<bool>();,5,610,2
39672,RETURN,-1,,return Nothing<bool>();,5,617,2
39678,RETURN,-1,,return Just(true);,3,622,12
39768,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,654,1
39790,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,657,1
39816,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,661,1
39848,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,7,669,1
39873,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,7,674,1
39891,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,680,11
39902,RETURN,-1,,return Just(true);,3,688,1
39924,RETURN,-1,,"return EC_Raw_Export(key_data.get(), params, out);",7,700,3
39942,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,703,1
39946,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,704,7
39964,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,707,1
39984,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",9,711,1
40037,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,24,725,1
40062,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,24,729,1
40142,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,11,745,1
40154,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,9,747,33
40252,RETURN,-1,,return Nothing<void>();,5,779,2
40275,RETURN,-1,,return Nothing<void>();,5,786,1
40310,RETURN,-1,,return Nothing<void>();,5,801,1
40376,RETURN,-1,,return Nothing<void>();,7,822,2
40396,RETURN,-1,,return Nothing<void>();,5,829,1
40411,RETURN,-1,,"return SetEncodedValue(
      env,
      target,
      env->jwk_d_string(),
      pvt,
      degree_bytes).IsJust() ? JustVoid() : Nothing<void>();",5,834,3
40427,RETURN,-1,,return JustVoid();,3,842,30
40510,RETURN,-1,,return Nothing<bool>();,5,873,1
40537,RETURN,1,,return Nothing<bool>();,5,881,1
40620,RETURN,-1,,return Nothing<bool>();,7,894,2
40692,RETURN,-1,,return Nothing<bool>();,5,906,2
40715,RETURN,-1,,return Nothing<bool>();,5,913,1
40717,RETURN,-1,,return Just(true);,3,916,19
40760,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,930,2
40838,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,940,1
40871,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,947,2
40897,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,955,2
40951,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,966,2
40991,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,973,2
41010,RETURN,-1,,"return KeyObjectData::CreateAsymmetric(type, ManagedEVPPKey(std::move(pkey)));",3,980,26
41070,RETURN,-1,,"return target->Set(
      env->context(),
      env->named_curve_string(),
      OneByteString(env->isolate(), OBJ_nid2sn(nid)));",3,997,13
41121,RETURN,-1,,return BN_num_bytes(order.get());,3,1014,9
41173,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,145,1
41498,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(),
                            ""Digest method not supported"");",5,103,1
41524,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Digest copy error"");",5,109,1
41558,RETURN,-1,,return false;,5,117,2
41588,RETURN,-1,,return false;,7,126,2
41596,RETURN,-1,,return true;,3,131,5
41608,RETURN,1,,return false;,5,136,1
41610,RETURN,-1,,"return EVP_DigestUpdate(mdctx_.get(), data, len) == 1;",3,137,2
41752,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",7,191,1
41817,RETURN,-1,,return;,5,202,3
41846,RETURN,1,,return *this;,23,214,1
41853,RETURN,-1,,return *new (this) HashConfig(std::move(other));,3,216,3
41898,RETURN,-1,,return Just(!result->IsEmpty());,3,231,2
41962,RETURN,-1,,return Nothing<bool>();,5,248,2
41982,RETURN,-1,,return Nothing<bool>();,5,254,2
42062,RETURN,-1,,return Nothing<bool>();,9,270,2
42064,RETURN,-1,,return Just(true);,3,275,17
42114,RETURN,-1,,return false;,5,288,1
42175,RETURN,1,,return false;,7,303,1
42188,RETURN,-1,,return true;,3,308,5
42246,RETURN,1,,return *this;,23,29,1
42253,RETURN,-1,,return *new (this) HKDFConfig(std::move(other));,3,31,3
42279,RETURN,-1,,return Just(!result->IsEmpty());,3,40,2
42374,RETURN,-1,,return Nothing<bool>();,5,62,2
42419,RETURN,-1,,return Nothing<bool>();,5,74,2
42432,RETURN,-1,,return Nothing<bool>();,5,78,2
42503,RETURN,-1,,return Nothing<bool>();,5,97,2
42505,RETURN,-1,,return Just(true);,3,100,30
42562,RETURN,-1,,return false;,5,113,1
42625,RETURN,-1,,return false;,5,141,1
42645,RETURN,-1,,return false;,5,145,1
42671,RETURN,1,,return false;,5,151,1
42684,RETURN,-1,,return true;,3,154,17
42758,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,107,1
42966,RETURN,1,,"return THROW_ERR_CRYPTO_INVALID_DIGEST(
        env(), ""Invalid digest: %s"", hash_type);",5,74,1
43003,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error());",5,82,2
43067,RETURN,-1,,"return ctx_ && HMAC_Update(ctx_.get(),
                             reinterpret_cast<const unsigned char*>(data),
                             len) == 1;",3,97,1
43170,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Failed to finalize HMAC"");",7,131,1
43221,RETURN,-1,,return;,5,145,3
43250,RETURN,1,,return *this;,23,159,1
43257,RETURN,-1,,return *new (this) HmacConfig(std::move(other));,3,161,3
43395,RETURN,-1,,return Nothing<bool>();,5,193,2
43433,RETURN,-1,,return Nothing<bool>();,5,203,2
43480,RETURN,-1,,return Nothing<bool>();,7,213,2
43498,RETURN,-1,,return Just(true);,3,220,20
43538,RETURN,-1,,return false;,5,236,1
43560,RETURN,-1,,return false;,5,243,1
43580,RETURN,-1,,return false;,5,250,1
43594,RETURN,-1,,return true;,3,255,10
43676,RETURN,-1,,return Just(!result->IsEmpty());,3,276,2
43763,RETURN,-1,,return Just(true);,3,43,4
43794,RETURN,1,,return EVPKeyCtxPointer();,5,50,1
43796,RETURN,-1,,return ctx;,3,52,4
43852,RETURN,-1,,return Just(true);,3,68,6
43879,RETURN,1,,return KeyGenJobStatus::FAILED;,5,75,1
43895,RETURN,-1,,return KeyGenJobStatus::OK;,3,77,5
43925,RETURN,-1,,"return Just(KeyObjectHandle::Create(env, data).ToLocal(result));",3,85,2
43997,RETURN,-1,,"return d2i_PUBKEY(nullptr, p, l);",9,116,1
44010,RETURN,-1,,"return d2i_PublicKey(EVP_PKEY_RSA, nullptr, p, l);",9,125,1
44029,RETURN,-1,,return x509 ? X509_get_pubkey(x509.get()) : nullptr;,9,135,3
44248,RETURN,1,,return ParseKeyResult::kParseKeyNotRecognized;,7,92,1
44267,RETURN,-1,,"return *pkey ? ParseKeyResult::kParseKeyOk :
                 ParseKeyResult::kParseKeyFailed;",3,100,8
44295,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,5,109,1
44314,RETURN,1,,return ret;,5,119,1
44336,RETURN,1,,return ret;,5,128,1
44344,RETURN,-1,,"return TryParsePublicKey(pkey, bp, ""CERTIFICATE"",
      [](const unsigned char** p, long l) {  // NOLINT(runtime/int)
        X509Pointer x509(d2i_X509(nullptr, p, l));
        return x509 ? X509_get_pubkey(x509.get()) : nullptr;
      });",3,132,11
44365,RETURN,-1,,"return ParsePublicKeyPEM(pkey, key, key_len);",5,144,1
44422,RETURN,-1,,"return *pkey ? ParseKeyResult::kParseKeyOk :
                   ParseKeyResult::kParseKeyFailed;",5,156,5
44451,RETURN,1,,return false;,5,164,1
44481,RETURN,1,,return false;,7,170,1
44551,RETURN,-1,,return true;,3,182,3
44571,RETURN,1,,return false;,5,189,1
44573,RETURN,-1,,"return len >= 3 &&
         data[offset] == 2 &&
         data[offset + 1] == 1 &&
         !(data[offset + 2] & 0xfe);",3,196,4
44618,RETURN,1,,return false;,5,206,1
44620,RETURN,-1,,"return len >= 1 &&
         data[offset] != 2;",3,210,4
44663,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,7,223,1
44734,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,9,238,1
44823,RETURN,1,,return ParseKeyResult::kParseKeyOk;,5,264,1
44846,RETURN,1,,return ParseKeyResult::kParseKeyNeedPassphrase;,7,268,1
44850,RETURN,-1,,return ParseKeyResult::kParseKeyFailed;,3,270,9
44871,RETURN,-1,,"return String::NewFromUtf8(env->isolate(), bptr->data,
                               NewStringType::kNormal,
                               bptr->length).FromMaybe(Local<Value>());",5,281,1
44898,RETURN,-1,,"return Buffer::Copy(env, bptr->data, bptr->length)
        .FromMaybe(Local<Value>());",5,287,2
45185,RETURN,-1,,return MaybeLocal<Value>();,5,389,2
45187,RETURN,-1,,"return BIOToStringOrBuffer(env, bio.get(), config.format_);",3,391,14
45229,RETURN,-1,,"return PEM_write_bio_RSAPublicKey(bio.get(), rsa.get()) == 1;",7,403,1
45248,RETURN,-1,,"return i2d_RSAPublicKey_bio(bio.get(), rsa.get()) == 1;",7,407,2
45277,RETURN,-1,,"return PEM_write_bio_PUBKEY(bio.get(), pkey) == 1;",7,413,1
45293,RETURN,-1,,"return i2d_PUBKEY_bio(bio.get(), pkey) == 1;",7,417,2
45327,RETURN,-1,,return MaybeLocal<Value>();,5,430,2
45329,RETURN,-1,,"return BIOToStringOrBuffer(env, bio.get(), config.format_);",3,432,4
45407,RETURN,-1,,return Nothing<bool>();,5,453,3
45418,RETURN,1,,return Nothing<bool>();,5,456,1
45458,RETURN,-1,,return Nothing<bool>();,5,466,1
45460,RETURN,-1,,return Just(true);,3,469,8
45503,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,479,2
45526,RETURN,-1,,return KeyObjectData::CreateSecret(std::move(key_data));,3,484,6
45560,RETURN,1,,"return ExportJWKRsaKey(env, key, target);",25,494,1
45568,RETURN,-1,,"return ExportJWKRsaKey(env, key, target);",24,497,6
45575,RETURN,-1,,"return ExportJWKEcKey(env, key, target).IsJust() ?
                               Just(true) : Nothing<bool>();",23,498,9
45595,RETURN,-1,,"return ExportJWKEdKey(env, key, target);",25,506,18
45602,RETURN,-1,,return Just(false);,3,509,3
45621,RETURN,-1,,"return ImportJWKRsaKey(env, jwk, args, offset);",5,519,1
45636,RETURN,-1,,"return ImportJWKEcKey(env, jwk, args, offset);",5,521,1
45646,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,3,525,3
45667,RETURN,-1,,"return target->Set(env->context(),
                     env->length_string(),
                     Number::New(env->isolate(), static_cast<double>(length)));",3,536,3
45712,RETURN,-1,,"return GetRsaKeyDetail(env, key, target);",28,548,5
45719,RETURN,-1,,"return GetDsaKeyDetail(env, key, target);",24,549,8
45726,RETURN,-1,,"return GetEcKeyDetail(env, key, target);",23,550,11
45733,RETURN,-1,,"return GetDhKeyDetail(env, key, target);",23,551,14
45740,RETURN,-1,,return Nothing<bool>();,3,554,3
45788,RETURN,-1,,return *this;,3,575,6
45795,RETURN,-1,,return !!pkey_;,3,579,1
45803,RETURN,-1,,return pkey_.get();,3,583,1
45812,RETURN,-1,,return mutex_.get();,3,587,1
45844,RETURN,-1,,"return (pkey_ && EVP_PKEY_get_raw_private_key(
      pkey_.get(), nullptr, &len) == 1) ? len : 0;",3,599,3
45868,RETURN,-1,,"return (pkey_ && EVP_PKEY_get_raw_public_key(
      pkey_.get(), nullptr, &len) == 1) ? len : 0;",3,605,3
45889,RETURN,-1,,return b ? Just(true) : Nothing<bool>();,3,611,1
45911,RETURN,-1,,"return ExportJWKSecretKey(env, key, result.As<Object>());",7,620,3
45923,RETURN,-1,,"return ExportJWKAsymmetricKey(
        env, key, result.As<Object>(), handleRsaPss);",7,624,8
45946,RETURN,1,,return Nothing<bool>();,15,635,1
45968,RETURN,-1,,"return Tristate(KeyObjectHandle::Create(env, data).ToLocal(out));",5,641,2
46015,RETURN,-1,,"return ExportJWKInner(env, data, *out, false);",5,646,3
46022,RETURN,-1,,"return Tristate(WritePublicKey(env, get(), config).ToLocal(out));",3,649,3
46044,RETURN,1,,return Nothing<bool>();,15,656,1
46066,RETURN,-1,,"return Tristate(KeyObjectHandle::Create(env, data).ToLocal(out));",5,660,2
46113,RETURN,-1,,"return ExportJWKInner(env, data, *out, false);",5,665,3
46120,RETURN,-1,,"return Tristate(WritePrivateKey(env, get(), config).ToLocal(out));",3,668,3
46211,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>();,11,692,2
46267,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>();,9,707,2
46297,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>(std::move(result));,3,717,7
46321,RETURN,-1,,return result;,3,726,3
46382,RETURN,1,,return ManagedEVPPKey();,7,739,1
46403,RETURN,-1,,"return GetParsedKey(env, std::move(pkey), ret,
                        ""Failed to read private key"");",5,744,10
46450,RETURN,-1,,return key->Data()->GetAsymmetricKey();,5,752,6
46497,RETURN,-1,,return ManagedEVPPKey();,7,764,2
46515,RETURN,1,,return ManagedEVPPKey();,7,769,1
46645,RETURN,-1,,"return ManagedEVPPKey::GetParsedKey(
        env, std::move(pkey), ret, ""Failed to read asymmetric key"");",5,808,13
46697,RETURN,-1,,return key->Data()->GetAsymmetricKey();,5,816,7
46736,RETURN,-1,,return ManagedEVPPKey(std::move(pkey));,3,836,2
46792,RETURN,-1,,return std::shared_ptr<KeyObjectData>(new KeyObjectData(std::move(key)));,3,863,1
46814,RETURN,-1,,"return std::shared_ptr<KeyObjectData>(new KeyObjectData(key_type, pkey));",3,870,2
46829,RETURN,-1,,return key_type_;,3,874,1
46838,RETURN,-1,,return asymmetric_key_;,3,879,2
46847,RETURN,-1,,return symmetric_key_.data<char>();,3,884,2
46859,RETURN,-1,,return symmetric_key_.size();,3,889,2
46880,RETURN,-1,,return !t.IsEmpty() && t->HasInstance(value);,3,894,2
46990,RETURN,-1,,return templ->GetFunction(env->context()).ToLocalChecked();,3,920,3
47111,RETURN,1,,return MaybeLocal<Object>();,5,945,1
47128,RETURN,-1,,return obj;,3,950,9
47134,RETURN,-1,,return data_;,3,954,1
47260,RETURN,1,,return;,7,993,1
47298,RETURN,1,,return;,7,1003,1
47384,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_JWK(env);,5,1028,1
47415,RETURN,-1,,return;,7,1038,1
47435,RETURN,-1,,return;,7,1044,1
47501,RETURN,1,,return args.GetReturnValue().Set(false);,5,1064,1
47547,RETURN,-1,,return args.GetReturnValue().Set(false);,5,1072,1
47715,RETURN,1,,return args.GetReturnValue().Set(false);,9,1116,1
47901,RETURN,-1,,return THROW_ERR_CRYPTO_UNSUPPORTED_OPERATION(env);,9,1167,3
47983,RETURN,1,,return;,9,1191,1
48003,RETURN,1,,return;,9,1197,1
48037,RETURN,-1,,return env()->crypto_rsa_string();,5,1210,3
48044,RETURN,-1,,return env()->crypto_rsa_pss_string();,5,1212,6
48051,RETURN,-1,,return env()->crypto_dsa_string();,5,1214,9
48058,RETURN,-1,,return env()->crypto_dh_string();,5,1216,12
48065,RETURN,-1,,return env()->crypto_ec_string();,5,1218,15
48072,RETURN,-1,,return env()->crypto_ed25519_string();,5,1220,18
48079,RETURN,-1,,return env()->crypto_ed448_string();,5,1222,21
48086,RETURN,-1,,return env()->crypto_x25519_string();,5,1224,24
48093,RETURN,-1,,return env()->crypto_x448_string();,5,1226,27
48099,RETURN,-1,,return Undefined(env()->isolate());,5,1228,29
48263,RETURN,1,,return;,7,1271,1
48319,RETURN,-1,,"return Buffer::Copy(env(), buf, len).FromMaybe(Local<Value>());",3,1283,5
48336,RETURN,-1,,"return WritePublicKey(env(), data_->GetAsymmetricKey().get(), config);",3,1288,1
48352,RETURN,-1,,"return WritePrivateKey(env(), data_->GetAsymmetricKey().get(), config);",3,1293,1
48590,RETURN,1,,return;,5,1347,1
48630,RETURN,-1,,return;,5,1353,1
48658,RETURN,1,,return;,52,1356,1
48684,RETURN,1,,return;,52,1358,1
48710,RETURN,1,,return;,52,1360,1
48744,RETURN,-1,,return {};,5,1371,2
48764,RETURN,1,,return {};,5,1376,1
48803,RETURN,-1,,return {};,5,1384,1
48860,RETURN,1,,return {};,5,1402,1
48861,RETURN,-1,,return BaseObjectPtr<BaseObject>(Unwrap<KeyObjectHandle>(key.As<Object>()));,3,1404,10
48878,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,1408,1
48888,RETURN,-1,,return std::make_unique<KeyObjectTransferData>(handle_data_);,3,1413,1
48941,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,5,1425,1
48953,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,1428,10
49009,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,5,1442,1
49021,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,1445,12
51108,RETURN,1,,return *this;,23,29,1
51115,RETURN,-1,,return *new (this) PBKDF2Config(std::move(other));,3,31,3
51169,RETURN,-1,,return Just(!result->IsEmpty());,3,48,2
51220,RETURN,-1,,return Nothing<bool>();,5,72,2
51233,RETURN,-1,,return Nothing<bool>();,5,77,2
51320,RETURN,-1,,return Nothing<bool>();,5,95,2
51348,RETURN,-1,,return Nothing<bool>();,5,101,2
51380,RETURN,-1,,return Nothing<bool>();,5,108,2
51382,RETURN,-1,,return Just(true);,3,111,23
51439,RETURN,-1,,return false;,5,132,1
51452,RETURN,-1,,return true;,3,135,5
51513,RETURN,-1,,return Just(!result->IsEmpty());,3,34,2
51612,RETURN,-1,,return Just(true);,3,56,14
51622,RETURN,-1,,"return CSPRNG(params.buffer, params.size).is_ok();",3,63,1
51710,RETURN,-1,,return Just(true);,3,83,6
51812,RETURN,-1,,return Nothing<bool>();,7,104,2
51857,RETURN,-1,,return Nothing<bool>();,7,113,2
51887,RETURN,-1,,return Nothing<bool>();,7,128,2
51914,RETURN,-1,,return Nothing<bool>();,9,136,2
51942,RETURN,-1,,return Nothing<bool>();,5,146,2
51944,RETURN,-1,,return Just(true);,3,149,20
51994,RETURN,-1,,return false;,5,166,1
51996,RETURN,-1,,return true;,3,169,3
52073,RETURN,-1,,return Just(true);,3,194,7
52109,RETURN,1,,return false;,16,209,1
52133,RETURN,-1,,return true;,3,213,10
52162,RETURN,-1,,return Just(true);,3,222,2
52286,RETURN,1,,return EVPKeyCtxPointer();,5,41,1
52302,RETURN,-1,,return EVPKeyCtxPointer();,5,46,1
52345,RETURN,1,,return EVPKeyCtxPointer();,7,56,1
52382,RETURN,-1,,return EVPKeyCtxPointer();,7,64,1
52426,RETURN,-1,,return EVPKeyCtxPointer();,7,80,1
52471,RETURN,-1,,return EVPKeyCtxPointer();,7,92,1
52473,RETURN,-1,,return ctx;,3,96,7
52665,RETURN,-1,,return Nothing<bool>();,9,157,2
52724,RETURN,-1,,return Nothing<bool>();,9,168,2
52778,RETURN,-1,,return Nothing<bool>();,9,179,2
52784,RETURN,-1,,return Just(true);,3,186,13
52795,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,3,194,1
52848,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,212,1
52864,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,215,1
52897,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,221,1
52909,RETURN,1,,return WebCryptoCipherStatus::FAILED;,44,224,1
52937,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,233,1
52967,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,243,1
52983,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,247,19
53016,RETURN,-1,,return Just(true);,3,258,3
53038,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,7,271,3
53044,RETURN,-1,,"return RSA_JWK_Export(key_data.get(), params, out);",7,273,6
53062,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,276,1
53066,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,277,10
53083,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,280,1
53087,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,281,14
53213,RETURN,-1,,return Nothing<bool>();,9,321,2
53241,RETURN,-1,,return Nothing<bool>();,11,328,2
53255,RETURN,-1,,return Nothing<bool>();,7,336,6
53257,RETURN,-1,,return Just(true);,3,339,9
53281,RETURN,-1,,"return RSA_Cipher<EVP_PKEY_encrypt_init, EVP_PKEY_encrypt>(
          env, key_data.get(), params, in, out);",7,352,4
53299,RETURN,-1,,"return RSA_Cipher<EVP_PKEY_decrypt_init, EVP_PKEY_decrypt>(
          env, key_data.get(), params, in, out);",7,356,8
53309,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,3,359,2
53413,RETURN,-1,,return Nothing<bool>();,5,395,1
53440,RETURN,-1,,return Nothing<bool>();,5,400,1
53537,RETURN,-1,,return Nothing<bool>();,7,412,1
53539,RETURN,-1,,return Just(true);,3,416,23
53638,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,434,2
53659,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,439,2
53727,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,455,2
53861,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,471,2
53900,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,480,2
54046,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,498,2
54065,RETURN,-1,,"return KeyObjectData::CreateAsymmetric(type, ManagedEVPPKey(std::move(pkey)));",3,505,19
54182,RETURN,-1,,return Nothing<bool>();,5,540,1
54259,RETURN,-1,,return Nothing<bool>();,5,559,1
54331,RETURN,-1,,return Nothing<bool>();,9,589,1
54390,RETURN,-1,,return Nothing<bool>();,11,608,1
54413,RETURN,-1,,return Nothing<bool>();,11,615,2
54443,RETURN,-1,,return Nothing<bool>();,9,625,1
54445,RETURN,-1,,return Just<bool>(true);,3,630,22
54560,RETURN,1,,return *this;,23,34,1
54567,RETURN,-1,,return *new (this) ScryptConfig(std::move(other));,3,36,3
54621,RETURN,-1,,return Just(!result->IsEmpty());,3,52,2
54672,RETURN,-1,,return Nothing<bool>();,5,69,2
54685,RETURN,-1,,return Nothing<bool>();,5,74,2
54853,RETURN,-1,,return Nothing<bool>();,5,108,2
54875,RETURN,-1,,return Just(true);,3,114,24
54937,RETURN,-1,,return false;,5,135,1
54950,RETURN,-1,,return true;,3,138,5
54988,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,380,1
55035,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,497,1
55127,RETURN,-1,,"return (L == 1024 && N == 160) ||
           (L == 2048 && N == 224) ||
           (L == 2048 && N == 256) ||
           (L == 3072 && N == 256);",5,48,11
55159,RETURN,-1,,return true;,3,54,2
55201,RETURN,1,,return false;,7,65,1
55223,RETURN,1,,return false;,9,68,1
55225,RETURN,-1,,return true;,3,72,2
55249,RETURN,1,,return nullptr;,5,84,1
55386,RETURN,-1,,return sig;,5,106,3
55388,RETURN,-1,,return nullptr;,3,109,14
55395,RETURN,-1,,"return EVP_PKEY_id(m_pkey.get()) == EVP_PKEY_RSA_PSS ? RSA_PKCS1_PSS_PADDING :
                                                         RSA_PKCS1_PADDING;",3,113,1
55464,RETURN,-1,,return kNoDsaSignature;,5,129,1
55466,RETURN,-1,,return (bits + 7) / 8;,3,132,5
55491,RETURN,1,,return false;,5,142,1
55509,RETURN,-1,,"return BN_bn2binpad(pr, out, n) > 0 && BN_bn2binpad(ps, out + n, n) > 0;",3,147,8
55542,RETURN,1,,return std::move(signature);,5,155,1
55596,RETURN,1,,return std::move(signature);,5,165,1
55602,RETURN,-1,,return buf;,3,167,7
55621,RETURN,1,,return ByteSource();,5,177,1
55658,RETURN,1,,return ByteSource();,5,185,1
55660,RETURN,-1,,return std::move(out).release();,3,187,10
55685,RETURN,1,,return std::move(out);,5,195,1
55708,RETURN,1,,return ByteSource();,5,200,1
55769,RETURN,1,,return ByteSource();,5,216,1
55773,RETURN,-1,,"return ByteSource::Allocated(data, len);",3,220,25
55801,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_DIGEST(env);,7,228,3
55810,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_STATE(env, ""Not initialised"");",7,231,6
55820,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Malformed signature"");",7,234,9
55856,RETURN,1,,"return ThrowCryptoError(env, err);",11,243,1
55869,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""EVP_SignInit_ex failed"");",13,246,3
55879,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""EVP_SignUpdate failed"");",13,249,6
55889,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""PEM_read_bio_PrivateKey failed"");",13,252,9
55899,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""PEM_read_bio_PUBKEY failed"");",13,255,12
55911,RETURN,-1,,return;,7,263,21
55928,RETURN,-1,,return true;,7,271,5
55931,RETURN,-1,,return false;,7,273,7
55950,RETURN,-1,,return dsa_encoding == kSigEncP1363;,7,282,5
55955,RETURN,-1,,return false;,7,284,7
55989,RETURN,1,,return kSignUnknownDigest;,5,299,1
56013,RETURN,-1,,return kSignInit;,5,304,2
56015,RETURN,-1,,return kSignOk;,3,307,8
56028,RETURN,1,,return kSignNotInitialised;,5,312,1
56040,RETURN,1,,return kSignUpdate;,5,314,1
56042,RETURN,-1,,return kSignOk;,3,315,3
56274,RETURN,1,,return SignResult(kSignNotInitialised);,5,392,1
56293,RETURN,1,,return SignResult(kSignPrivateKey);,5,397,1
56345,RETURN,-1,,"return SignResult(error, std::move(buffer));",3,406,9
56394,RETURN,1,,return;,5,419,1
56508,RETURN,1,,"return crypto::CheckThrow(env, ret.error);",5,444,1
56733,RETURN,1,,return kSignNotInitialised;,5,509,1
56760,RETURN,1,,return kSignPublicKey;,5,517,1
56831,RETURN,-1,,return kSignOk;,3,530,11
56873,RETURN,1,,return;,5,544,1
56887,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,548,1
57020,RETURN,1,,"return crypto::CheckThrow(env, Error::kSignMalformedSignature);",7,570,1
57048,RETURN,1,,"return crypto::CheckThrow(env, err);",5,577,1
57079,RETURN,1,,return *this;,23,595,1
57086,RETURN,-1,,return *new (this) SignConfiguration(std::move(other));,3,597,3
57215,RETURN,1,,return Nothing<bool>();,5,631,1
57240,RETURN,-1,,return Nothing<bool>();,5,637,2
57298,RETURN,-1,,return Nothing<bool>();,7,648,2
57407,RETURN,-1,,return Nothing<bool>();,7,667,2
57436,RETURN,-1,,return Nothing<bool>();,7,675,2
57486,RETURN,-1,,return Just(true);,3,691,22
57543,RETURN,-1,,return false;,9,711,2
57580,RETURN,-1,,return false;,9,722,2
57637,RETURN,-1,,return false;,5,740,2
57689,RETURN,-1,,return false;,11,754,2
57730,RETURN,-1,,return false;,11,763,2
57787,RETURN,-1,,return false;,11,774,2
57816,RETURN,-1,,return false;,11,780,2
57926,RETURN,-1,,return true;,3,807,13
57980,RETURN,-1,,return Just(!result->IsEmpty());,3,825,2
58048,RETURN,1,,return false;,5,30,1
58062,RETURN,1,,return false;,5,34,1
58064,RETURN,-1,,"return NETSCAPE_SPKI_verify(spki.get(), pkey.get()) > 0;",3,36,9
58102,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,43,1
58118,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,46,1
58146,RETURN,1,,return ByteSource();,13,54,1
58167,RETURN,1,,return ByteSource();,14,65,1
58180,RETURN,1,,return ByteSource();,14,68,1
58195,RETURN,1,,return ByteSource();,57,70,1
58197,RETURN,-1,,return ByteSource::FromBIO(bio);,3,72,12
58229,RETURN,1,,return args.GetReturnValue().SetEmptyString();,26,79,1
58245,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,82,1
58259,RETURN,1,,return args.GetReturnValue().SetEmptyString();,14,85,1
58307,RETURN,1,,return ByteSource();,5,101,1
58324,RETURN,-1,,"return (buf_size >= 0) ? ByteSource::Allocated(buf, buf_size) : ByteSource();",3,105,10
58362,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,113,1
58378,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,116,1
58391,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,120,1
58534,RETURN,-1,,return;,5,28,2
58545,RETURN,-1,,return;,5,34,2
58569,RETURN,-1,,return;,5,42,2
58570,RETURN,-1,,"return args.GetReturnValue().Set(
      CRYPTO_memcmp(buf1.data(), buf2.data(), buf1.size()) == 0);",3,45,10
58642,RETURN,-1,,return 0;,9,349,2
58668,RETURN,-1,,return c == ' ' ? '_' : ToUpper(c);,39,807,1
58762,RETURN,-1,,return w->ReleaseSession();,3,74,4
58939,RETURN,-1,,return;,5,107,1
59019,RETURN,1,,return;,5,124,1
59083,RETURN,1,,return 0;,5,138,1
59099,RETURN,1,,return 0;,5,143,1
59124,RETURN,1,,return 0;,5,148,1
59176,RETURN,1,,return 0;,5,164,1
59206,RETURN,-1,,return 0;,3,178,27
59234,RETURN,1,,return 1;,5,185,1
59242,RETURN,1,,return -1;,5,190,1
59366,RETURN,-1,,return 1;,5,210,1
59384,RETURN,-1,,return w->is_cert_cb_running() ? -1 : 1;,3,216,21
59469,RETURN,-1,,return SSL_TLSEXT_ERR_ALERT_FATAL;,7,241,1
59487,RETURN,-1,,return SSL_TLSEXT_ERR_ALERT_FATAL;,7,250,1
59519,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,5,262,15
59533,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,28,267,1
59553,RETURN,-1,,"return status == OPENSSL_NPN_NEGOTIATED ? SSL_TLSEXT_ERR_OK
                                          : SSL_TLSEXT_ERR_ALERT_FATAL;",3,281,9
59623,RETURN,-1,,return 1;,5,300,3
59646,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,307,1
59679,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,3,320,17
59718,RETURN,1,,return ignore_null;,5,336,1
59720,RETURN,-1,,"return !target->Set(
      env->context(),
      name,
      OneByteString(env->isolate(), value))
          .IsNothing();",3,337,2
59751,RETURN,-1,,return ret;,3,352,3
59814,RETURN,1,,return MaybeLocal<ArrayBufferView>();,5,389,1
59816,RETURN,-1,,"return PersistentToLocal::Default(env()->isolate(), ocsp_response_);",3,390,2
59838,RETURN,-1,,return next_sess_.release();,3,398,1
59858,RETURN,1,,return;,5,404,1
60112,RETURN,-1,,return;,5,490,1
60285,RETURN,1,,return;,5,538,1
60461,RETURN,-1,,return;,5,584,2
60470,RETURN,-1,,return;,5,590,2
60477,RETURN,-1,,return;,5,596,2
60496,RETURN,-1,,return;,5,607,2
60543,RETURN,-1,,return;,5,634,3
60624,RETURN,-1,,return;,5,652,2
60696,RETURN,-1,,return;,5,676,7
60717,RETURN,-1,,return;,7,688,2
60720,RETURN,-1,,return;,5,693,3
60753,RETURN,-1,,return;,5,712,2
60760,RETURN,-1,,return;,5,718,2
60769,RETURN,-1,,return;,5,723,2
60845,RETURN,-1,,return;,9,752,2
60890,RETURN,-1,,return;,9,776,4
60920,RETURN,1,,return;,44,784,1
60951,RETURN,1,,return;,44,788,1
60966,RETURN,1,,return;,42,790,1
60986,RETURN,1,,return;,66,792,1
61034,RETURN,1,,return;,68,799,1
61071,RETURN,1,,return;,72,809,1
61074,RETURN,-1,,return;,9,814,12
61111,RETURN,-1,,return;,5,832,2
61120,RETURN,-1,,return;,5,837,2
61135,RETURN,-1,,return;,5,843,2
61209,RETURN,-1,,return;,5,857,2
61241,RETURN,-1,,return;,5,868,4
61277,RETURN,-1,,return name;,3,881,5
61283,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,885,1
61291,RETURN,-1,,return underlying_stream()->IsIPCPipe();,3,889,1
61300,RETURN,-1,,return underlying_stream()->GetFD();,3,893,1
61309,RETURN,-1,,"return ssl_ &&
      underlying_stream() != nullptr &&
      underlying_stream()->IsAlive();",3,897,1
61324,RETURN,-1,,return underlying_stream()->IsClosing();,3,903,1
61344,RETURN,1,,return underlying_stream()->ReadStart();,5,909,1
61349,RETURN,-1,,return 0;,3,910,3
61358,RETURN,-1,,return underlying_stream() != nullptr ? underlying_stream()->ReadStop() : 0;,3,915,2
61372,RETURN,-1,,return error_.empty() ? nullptr : error_.c_str();,3,919,1
61413,RETURN,-1,,return UV_EPROTO;,5,938,3
61518,RETURN,-1,,return 0;,7,978,7
61537,RETURN,-1,,return 0;,5,989,2
61751,RETURN,-1,,return UV_EPROTO;,7,1042,3
61780,RETURN,-1,,return 0;,3,1058,27
61805,RETURN,-1,,"return uv_buf_init(base, size);",3,1066,6
61822,RETURN,1,,return;,5,1074,1
61839,RETURN,-1,,return;,5,1086,4
61887,RETURN,-1,,"return hello_parser_.Parse(data, avail);",5,1108,7
61900,RETURN,-1,,return underlying_stream()->CreateShutdownWrap(req_wrap_object);,3,1116,1
61935,RETURN,-1,,return underlying_stream()->DoShutdown(req_wrap);,3,1128,6
62062,RETURN,1,,return;,5,1171,1
62185,RETURN,1,,return;,5,1228,1
62490,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,1315,1
62530,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,1321,1
62568,RETURN,-1,,return SSL_TLSEXT_ERR_NOACK;,5,1327,3
62621,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,3,1338,22
62649,RETURN,1,,return err;,5,1345,1
62671,RETURN,-1,,return 1;,3,1352,6
62841,RETURN,1,,return 0;,5,1396,1
62855,RETURN,1,,return 0;,34,1400,1
62905,RETURN,1,,return 0;,5,1411,1
62918,RETURN,1,,return 0;,5,1416,1
62930,RETURN,-1,,return psk_buf.length();,3,1419,20
63023,RETURN,1,,return 0;,7,1444,1
63064,RETURN,1,,return 0;,5,1453,1
63111,RETURN,1,,return 0;,5,1460,1
63124,RETURN,1,,return 0;,5,1464,1
63161,RETURN,1,,return 0;,5,1469,1
63178,RETURN,1,,return 0;,5,1474,1
63198,RETURN,-1,,return psk_buf.length();,3,1479,25
63222,RETURN,1,,return info.GetReturnValue().Set(0);,5,1489,1
63377,RETURN,1,,return;,5,1518,1
63437,RETURN,-1,,"return ThrowCryptoError(env, err, ""CertCbDone"");",7,1531,3
63475,RETURN,-1,,return;,5,1537,3
63542,RETURN,1,,"return env->ThrowTypeError(""Must give a Buffer as first argument"");",5,1558,1
63881,RETURN,1,,return;,5,1634,1
63970,RETURN,1,,return;,68,1647,1
64019,RETURN,1,,return;,5,1665,1
64108,RETURN,1,,return;,68,1678,1
64153,RETURN,1,,return;,5,1690,1
64165,RETURN,1,,return;,5,1694,1
64249,RETURN,1,,return;,68,1707,1
64287,RETURN,1,,"return THROW_ERR_MISSING_ARGS(env, ""Session argument is mandatory"");",5,1718,1
64319,RETURN,1,,return;,5,1724,1
64328,RETURN,1,,"return env->ThrowError(""SSL_set_session error"");",5,1727,1
64399,RETURN,1,,return args.GetReturnValue().SetNull();,5,1751,1
64908,RETURN,-1,,"return ThrowCryptoError(
         env,
         ERR_get_error(),
         ""SSL_export_keying_material"");",5,1899,1
64956,RETURN,1,,return;,68,1907,1
65009,RETURN,1,,"return ThrowCryptoError(w->env(), ERR_get_error());",5,1922,1
65051,RETURN,1,,return;,5,1932,1
65135,RETURN,1,,"return THROW_ERR_MISSING_ARGS(env, ""OCSP response argument is mandatory"");",5,1958,1
65213,RETURN,1,,return args.GetReturnValue().SetNull();,5,1981,1
65409,RETURN,1,,return;,5,2027,1
66166,RETURN,-1,,return 1;,3,60,1
66218,RETURN,1,,return {true};,9,75,1
66222,RETURN,-1,,return {false};,3,94,4
66261,RETURN,1,,return -1;,7,103,1
66271,RETURN,-1,,return len;,5,105,7
66273,RETURN,-1,,return -1;,3,108,4
66284,RETURN,-1,,return 0;,3,117,1
66308,RETURN,1,,return FIPS_mode_set(1);,27,133,1
66311,RETURN,-1,,return true;,3,137,2
66347,RETURN,-1,,return false;,5,146,2
66349,RETURN,-1,,return true;,3,148,7
66520,RETURN,1,,return;,5,240,1
66530,RETURN,-1,,"return ThrowCryptoError(env, err);",5,248,3
66598,RETURN,-1,,return errors_.empty();,3,285,1
66673,RETURN,-1,,return MaybeLocal<Value>();,7,306,1
66681,RETURN,-1,,"return copy.ToException(env, exception_string);",5,309,9
66760,RETURN,-1,,return MaybeLocal<Value>();,7,322,1
66762,RETURN,-1,,return exception_v;,3,326,5
66815,RETURN,-1,,return *this;,3,348,2
66855,RETURN,-1,,return ptr;,3,365,7
66871,RETURN,-1,,"return ArrayBuffer::New(env->isolate(), std::move(store));",3,370,2
66898,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength());",3,375,2
66941,RETURN,-1,,return std::move(out).release();,3,384,7
67015,RETURN,-1,,return out;,3,400,5
67023,RETURN,-1,,"return IsAnyByteSource(value) ? FromBuffer(value)
                                : FromString(env, value.As<String>());",3,405,1
67100,RETURN,-1,,return std::move(out).release();,3,418,12
67118,RETURN,-1,,return ntc ? buf.ToNullTerminatedCopy() : buf.ToByteSource();,3,423,3
67135,RETURN,-1,,"return value->IsString() || IsAnyByteSource(value) ?
           ByteSource::FromStringOrBuffer(env, value) :
           ByteSource::FromSymmetricKeyObjectHandle(value);",3,432,1
67161,RETURN,-1,,"return Buffer::HasInstance(value) ? FromBuffer(value, true)
                                    : FromString(env, value.As<String>(), true);",3,439,1
67201,RETURN,-1,,"return Foreign(key->Data()->GetSymmetricKey(),
                 key->Data()->GetSymmetricKeySize());",3,447,5
67223,RETURN,-1,,"return ByteSource(data, data, size);",3,452,1
67234,RETURN,-1,,"return ByteSource(data, nullptr, size);",3,456,1
67252,RETURN,1,,return Just(true);,17,462,1
67309,RETURN,-1,,return Nothing<bool>();,7,474,1
67333,RETURN,-1,,return Nothing<bool>();,7,480,1
67357,RETURN,-1,,return Nothing<bool>();,7,486,1
67666,RETURN,1,,return Nothing<bool>();,7,559,1
67668,RETURN,-1,,return Just(true);,3,562,14
67738,RETURN,1,,return;,5,581,1
67784,RETURN,-1,,return;,5,587,1
67867,RETURN,-1,,return engine;,3,615,6
67887,RETURN,1,,return false;,5,622,1
67907,RETURN,-1,,return false;,5,627,2
67909,RETURN,-1,,return true;,3,630,6
67957,RETURN,1,,return;,57,637,1
67977,RETURN,-1,,"return THROW_ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED(
        env,
        ""Programmatic selection of OpenSSL engines is unsupported while the ""
        ""experimental permission model is enabled"");",5,642,1
68017,RETURN,-1,,"return StringBytes::Encode(
      env->isolate(),
      reinterpret_cast<const char*>(buf.data()),
      buf.size(),
      BASE64URL,
      error);",3,659,3
68097,RETURN,-1,,return Nothing<bool>();,5,681,2
68099,RETURN,-1,,"return target->Set(env->context(), name, value);",3,683,6
68160,RETURN,-1,,return false;,7,695,2
68162,RETURN,-1,,return true;,3,698,2
68187,RETURN,-1,,return static_cast<CryptoJobMode>(mode);,3,705,5
68232,RETURN,-1,,return;,5,722,1
68713,RETURN,-1,,return *this;,3,45,3
68958,RETURN,-1,,return tmpl;,3,101,3
68966,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(object);,3,105,1
68995,RETURN,1,,return MaybeLocal<Object>();,5,139,1
69001,RETURN,-1,,"return New(env, std::move(ptr));",3,142,7
69067,RETURN,1,,return MaybeLocal<Object>();,5,158,1
69092,RETURN,-1,,"return sk_X509_num(ssl_certs)
      ? New(env, std::move(cert), ssl_certs)
      : New(env, std::move(cert));",3,167,11
69165,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,183,1
69200,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",7,195,1
69222,RETURN,1,,return;,7,198,1
69243,RETURN,-1,,return;,5,200,1
69476,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",14,273,1
69704,RETURN,-1,,return args.GetReturnValue().Set(ret);,7,324,3
69715,RETURN,-1,,return;,7,327,6
69719,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid name"");",7,329,9
69724,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,331,11
69799,RETURN,-1,,return args.GetReturnValue().Set(args[0]);,7,352,3
69812,RETURN,-1,,return;,7,354,6
69816,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid name"");",7,356,9
69821,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,358,11
69892,RETURN,-1,,return args.GetReturnValue().Set(args[0]);,7,375,3
69905,RETURN,-1,,return;,7,377,6
69909,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid IP"");",7,379,9
69914,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,381,11
70213,RETURN,-1,,return {};,5,485,2
70233,RETURN,1,,return {};,5,490,1
70234,RETURN,-1,,"return BaseObjectPtr<BaseObject>(
      Unwrap<X509Certificate>(handle.As<Object>()));",3,492,4
70251,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,498,1
70261,RETURN,-1,,return std::make_unique<X509CertificateTransferData>(cert_);,3,503,1
70569,RETURN,-1,,return;,13,273,6
70720,RETURN,-1,,return;,13,433,6
70770,RETURN,-1,,return std::make_unique<EmptyEntry>();,9,640,1
70775,RETURN,-1,,"return std::make_unique<InMemoryEntry>(backing_store_, start, len);",7,643,2
70886,RETURN,-1,,return true;,7,1039,1
70908,RETURN,-1,,return true;,7,1050,1
70910,RETURN,-1,,return false;,5,1053,3
71013,RETURN,1,,return nullptr;,45,68,1
71141,RETURN,-1,,"return std::make_shared<DataQueueImpl>(std::move(slices), len);",5,103,14
71160,RETURN,-1,,return size_;,51,106,1
71166,RETURN,-1,,return idempotent_;,41,108,1
71172,RETURN,-1,,return capped_size_.has_value();,37,110,1
71185,RETURN,1,,return std::nullopt;,22,113,1
71193,RETURN,1,,return false;,17,114,1
71241,RETURN,-1,,return false;,9,125,1
71264,RETURN,-1,,return true;,5,135,5
71274,RETURN,1,,return;,26,139,1
71292,RETURN,-1,,return;,7,144,2
71325,RETURN,-1,,return capped_size > size ? capped_size - size : 0UL;,7,155,5
71334,RETURN,-1,,return std::nullopt;,5,157,2
71448,RETURN,-1,,return bob::Status::STATUS_EOS;,7,212,2
71486,RETURN,-1,,return bob::Status::STATUS_EOS;,9,225,3
71514,RETURN,-1,,return UV_EINVAL;,7,241,2
71541,RETURN,1,,return bob::Status::STATUS_CONTINUE;,20,286,1
71547,RETURN,-1,,return status;,5,305,12
71591,RETURN,-1,,return current_reader_.get();,5,318,4
71685,RETURN,-1,,return bob::Status::STATUS_EOS;,7,365,2
71720,RETURN,-1,,return bob::STATUS_BLOCK;,9,378,2
71763,RETURN,-1,,return bob::STATUS_BLOCK;,11,391,2
71787,RETURN,-1,,return bob::STATUS_EOS;,7,404,6
71810,RETURN,-1,,return UV_EINVAL;,7,410,2
71837,RETURN,1,,return bob::Status::STATUS_CONTINUE;,20,447,1
71843,RETURN,-1,,return status;,5,466,12
71883,RETURN,-1,,return current_reader_.get();,5,476,4
71912,RETURN,-1,,return std::make_shared<IdempotentDataQueueReader>(shared_from_this());,5,492,1
71923,RETURN,1,,return nullptr;,26,495,1
71928,RETURN,-1,,return std::make_shared<NonIdempotentDataQueueReader>(shared_from_this());,3,498,4
71967,RETURN,-1,,return bob::Status::STATUS_EOS;,9,517,2
71990,RETURN,-1,,return bob::Status::STATUS_CONTINUE;,7,523,6
72025,RETURN,-1,,return std::make_shared<EmptyReader>();,5,543,1
72041,RETURN,1,,return nullptr;,21,549,1
72043,RETURN,-1,,return std::make_unique<EmptyEntry>();,5,550,2
72052,RETURN,-1,,return 0;,51,553,1
72058,RETURN,-1,,return true;,41,555,1
72106,RETURN,-1,,return bob::Status::STATUS_EOS;,9,587,2
72153,RETURN,-1,,return bob::Status::STATUS_CONTINUE;,7,601,8
72207,RETURN,-1,,return std::make_shared<InMemoryReader>(*this);,5,631,1
72268,RETURN,-1,,"return makeEntry(start, end - start);",7,657,4
72274,RETURN,-1,,"return makeEntry(start, byte_length_ - start);",5,662,6
72284,RETURN,-1,,return byte_length_;,51,665,1
72290,RETURN,-1,,return true;,41,667,1
72344,RETURN,-1,,return std::make_shared<ReaderImpl>(data_queue_->get_reader());,5,702,1
72379,RETURN,1,,return nullptr;,18,708,1
72381,RETURN,-1,,return std::make_unique<DataQueueEntry>(std::move(sliced));,5,710,3
72397,RETURN,-1,,return data_queue_->size();,51,719,1
72406,RETURN,-1,,return data_queue_->is_idempotent();,41,727,1
72427,RETURN,-1,,return *data_queue_;,31,734,1
72454,RETURN,-1,,"return inner_->Pull(
          std::move(next), options, data, count, max_count_hint);",7,754,3
72512,RETURN,1,,return nullptr;,61,794,1
72514,RETURN,-1,,"return std::make_unique<FdEntry>(
        env, std::move(buf), req.statbuf, 0, req.statbuf.st_size);",5,796,8
72551,RETURN,-1,,return ReaderImpl::Create(this);,5,812,1
72598,RETURN,-1,,"return std::make_unique<FdEntry>(env_, path_, stat_, new_start, new_end);",5,826,8
72616,RETURN,-1,,return end_ - start_;,51,829,1
72624,RETURN,-1,,return true;,41,831,1
72630,RETURN,-1,,return env_;,30,833,1
72642,RETURN,-1,,"return other.st_size != stat_.st_size ||
           other.st_mtim.tv_nsec != stat_.st_mtim.tv_nsec;",5,847,1
72686,RETURN,1,,return true;,54,860,1
72688,RETURN,-1,,return entry->is_modified(req.statbuf);,5,861,6
72740,RETURN,-1,,return nullptr;,9,875,2
72752,RETURN,-1,,"return std::make_shared<ReaderImpl>(
          BaseObjectPtr<fs::FileHandle>(fs::FileHandle::New(
              realm->GetBindingData<fs::BindingData>(realm->context()),
              file,
              Local<Object>(),
              entry->start_,
              entry->end_ - entry->start_)),
          entry);",7,878,9
72842,RETURN,-1,,return env_->allocate_managed_buffer(suggested_size);,7,901,1
72877,RETURN,-1,,return;,9,912,2
72905,RETURN,-1,,return;,9,922,3
72944,RETURN,-1,,return DrainAndClose();,9,932,2
73028,RETURN,-1,,return bob::STATUS_EOS;,9,954,2
73054,RETURN,-1,,return UV_EINVAL;,9,960,3
73077,RETURN,-1,,return bob::STATUS_WAIT;,7,968,5
73110,RETURN,1,,return;,19,996,1
73175,RETURN,-1,,return std::move(pending_pulls_.front());,7,1019,4
73233,RETURN,-1,,return nullptr;,5,1057,1
73235,RETURN,-1,,"return std::make_shared<DataQueueImpl>(std::move(list), size);",3,1060,6
73255,RETURN,-1,,return std::make_shared<DataQueueImpl>(capped);,3,1064,1
73278,RETURN,-1,,return nullptr;,5,1075,1
73313,RETURN,-1,,"return CreateInMemoryEntryFromBackingStore(std::move(store), offset, length);",3,1081,9
73341,RETURN,-1,,return nullptr;,5,1089,1
73343,RETURN,-1,,"return std::make_unique<InMemoryEntry>(std::move(store), offset, length);",3,1091,3
73364,RETURN,-1,,return std::make_unique<DataQueueEntry>(std::move(data_queue));,3,1096,1
73382,RETURN,-1,,"return FdEntry::Create(env, path);",3,1101,1
73763,RETURN,-1,,"return NameAndDisplacement(pSymbol->Name, dwDisplacement);",7,180,1
73775,RETURN,-1,,return NameAndDisplacement();,5,190,9
73824,RETURN,-1,,return sym;,5,225,8
73840,RETURN,-1,,return szUndName;,7,238,1
73848,RETURN,-1,,return nullptr;,5,246,3
73899,RETURN,-1,,return ret;,5,256,7
73918,RETURN,1,,return false;,7,263,1
73920,RETURN,-1,,return info.State == MEM_COMMIT && info.Protect != 0;,5,265,3
73938,RETURN,-1,,"return CaptureStackBackTrace(0, count, frames, nullptr);",5,269,1
73969,RETURN,-1,,"return std::unique_ptr<NativeSymbolDebuggingContext>(
      new Win32SymbolDebuggingContext());",3,285,1
74020,RETURN,-1,,return oss.str();,3,303,6
74098,RETURN,1,,return;,33,318,1
74150,RETURN,-1,,return list;,3,473,2
74170,RETURN,-1,,return;,5,484,2
74313,RETURN,-1,,return true;,3,61,4
74332,RETURN,-1,,return info;,3,68,5
74695,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        env->isolate(),
        ""The \""list\"" argument must be an instance of SharedArrayBuffer, ""
        ""ArrayBuffer or ArrayBufferView."");",5,152,1
74759,RETURN,-1,,"return node::THROW_ERR_ENCODING_INVALID_ENCODED_DATA(
          env->isolate(), ""The encoded data was not valid for encoding utf-8"");",7,170,1
74796,RETURN,1,,return args.GetReturnValue().SetEmptyString();,20,182,1
74856,RETURN,-1,,return;,5,192,3
75154,RETURN,-1,,return el.IsEmpty();,51,216,1
75356,RETURN,-1,,return true;,9,1176,2
75358,RETURN,-1,,return false;,5,1179,6
75386,RETURN,-1,,return;,7,1229,1
75701,RETURN,1,,return false;,45,131,1
75835,RETURN,-1,,return fields_[kStackLength] > 0;,3,169,10
76194,RETURN,-1,,return output;,3,266,4
76227,RETURN,-1,,return output;,3,279,2
76289,RETURN,-1,,return output;,3,294,2
76348,RETURN,-1,,return info;,3,341,21
76602,RETURN,-1,,return;,5,548,1
76611,RETURN,-1,,return;,5,552,1
76647,RETURN,1,,return;,5,562,1
76833,RETURN,-1,,return cwd;,5,626,2
76839,RETURN,-1,,"return exec_path.substr(0, exec_path.find_last_of(kPathSeparator));",3,632,9
76930,RETURN,-1,,return buf;,3,650,7
76983,RETURN,-1,,return bs;,3,662,3
77028,RETURN,-1,,return exec_path;,3,688,6
77869,RETURN,1,,return;,24,1060,1
77905,RETURN,-1,,"return handle_scope.EscapeMaybe(snapshot_serialize_callback()->Call(
        context(), v8::Undefined(isolate()), 0, nullptr));",5,1075,3
77922,RETURN,-1,,return handle_scope.Escape(Undefined(isolate()));,3,1078,4
77946,RETURN,-1,,"return handle_scope.EscapeMaybe(snapshot_deserialize_main()->Call(
        context(), v8::Undefined(isolate()), 0, nullptr));",5,1085,3
77963,RETURN,-1,,return handle_scope.Escape(Undefined(isolate()));,3,1088,4
78221,RETURN,-1,,return;,5,1219,2
78236,RETURN,1,,return;,25,1237,1
78250,RETURN,1,,return;,25,1242,1
78288,RETURN,1,,return;,5,1256,1
78382,RETURN,1,,return;,5,1282,1
78502,RETURN,1,,return;,5,1322,1
78562,RETURN,1,,return;,25,1338,1
78588,RETURN,-1,,return now;,3,1353,6
78603,RETURN,1,,"return Integer::NewFromUnsigned(isolate(), static_cast<uint32_t>(now));",5,1359,1
78614,RETURN,1,,"return Number::New(isolate(), static_cast<double>(now));",5,1361,1
78837,RETURN,1,,return;,5,1411,1
78892,RETURN,-1,,"return {fields_.Serialize(context, creator)};",3,1429,1
78918,RETURN,-1,,return output;,3,1439,2
78937,RETURN,-1,,"return {fields_.Serialize(context, creator)};",3,1448,1
78963,RETURN,-1,,return output;,3,1458,2
79195,RETURN,-1,,return output;,3,1540,2
79345,RETURN,-1,,return info;,3,1575,12
79544,RETURN,1,,return nullptr;,36,1644,1
79546,RETURN,-1,,return worker_context()->env();,3,1645,2
79560,RETURN,1,,return;,32,1649,1
79588,RETURN,1,,return;,32,1658,1
79739,RETURN,-1,,return info;,3,1692,14
79947,RETURN,-1,,return free_in_system;,5,1745,1
79959,RETURN,-1,,return free_in_system;,5,1750,1
79966,RETURN,-1,,return free_in_system;,5,1754,1
79968,RETURN,-1,,return allowed - rss;,3,1757,11
80113,RETURN,-1,,return new_limit;,5,1838,2
80131,RETURN,-1,,return new_limit;,5,1851,3
80256,RETURN,-1,,return new_limit;,3,1895,43
80284,RETURN,-1,,return size;,3,1908,7
80834,RETURN,-1,,return args.GetReturnValue().Set(err);,5,161,1
80868,RETURN,-1,,return args.GetReturnValue().Set(err);,5,169,2
81216,RETURN,1,,return;,5,74,1
81277,RETURN,-1,,"return IsWeakOrDetached() ||
         !HandleWrap::HasRef(this) ||
         !uv_is_active(GetHandle());",3,103,1
81456,RETURN,-1,,return GetConstructorTemplate(env->isolate_data());,3,158,1
81547,RETURN,-1,,return tmpl;,3,176,3
81624,RETURN,-1,,"return ""<JS Node>"";",33,49,1
81630,RETURN,-1,,return 0;,35,50,1
81636,RETURN,-1,,return false;,36,51,1
81642,RETURN,-1,,return PersistentToLocal::Strong(persistent_);,28,52,1
81665,RETURN,1,,return v.As<Object>()->GetIdentityHash();,24,56,1
81679,RETURN,1,,return v.As<v8::Name>()->GetIdentityHash();,22,57,1
81693,RETURN,1,,return v.As<v8::Int32>()->Value();,23,58,1
81701,RETURN,-1,,return 0;,5,59,5
81721,RETURN,-1,,return static_cast<size_t>(n->IdentityHash());,7,69,1
81735,RETURN,-1,,return a->JSValue()->SameValue(b->JSValue());,7,75,1
81786,RETURN,1,,return *it;,7,91,1
81797,RETURN,-1,,return AddNode(std::unique_ptr<Node>(n.release()));,5,93,7
81830,RETURN,-1,,return n;,5,99,4
82121,RETURN,-1,,return MaybeLocal<Array>();,11,151,1
82136,RETURN,1,,return MaybeLocal<Array>();,11,154,1
82168,RETURN,1,,return MaybeLocal<Array>();,13,158,1
82220,RETURN,1,,return MaybeLocal<Array>();,9,169,1
82259,RETURN,-1,,return MaybeLocal<Array>();,9,177,1
82327,RETURN,-1,,return MaybeLocal<Array>();,13,190,1
82380,RETURN,-1,,return MaybeLocal<Array>();,11,198,1
82382,RETURN,-1,,return handle_scope.Escape(nodes);,5,203,19
82458,RETURN,-1,,return 65536;,5,229,1
82515,RETURN,-1,,return kAbort;,9,249,2
82530,RETURN,-1,,return kContinue;,5,255,6
82536,RETURN,-1,,return status_;,24,258,1
82566,RETURN,-1,,return 65536;,5,284,1
82632,RETURN,-1,,return kContinue;,5,304,4
82649,RETURN,-1,,return 0;,5,310,3
82655,RETURN,-1,,return 0;,5,314,1
82676,RETURN,-1,,return snapshot_ != nullptr;,29,328,1
82684,RETURN,-1,,return snapshot_ == nullptr;,31,329,1
82692,RETURN,-1,,return this;,40,330,1
82792,RETURN,-1,,return Nothing<void>();,5,371,2
82822,RETURN,-1,,return Nothing<void>();,5,378,2
82848,RETURN,-1,,return Nothing<void>();,5,385,2
82850,RETURN,-1,,return JustVoid();,3,388,14
82969,RETURN,-1,,return {};,5,415,1
82970,RETURN,-1,,"return MakeBaseObject<HeapSnapshotStream>(env, std::move(snapshot), obj);",3,417,6
83058,RETURN,-1,,return result;,3,433,8
83204,RETURN,1,,return;,57,460,1
83227,RETURN,-1,,return;,5,464,6
83256,RETURN,1,,return;,55,471,1
83257,RETURN,-1,,return args.GetReturnValue().Set(filename_v);,3,472,15
84207,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""value is out of range"");",5,206,1
84320,RETURN,-1,,return BaseObjectPtr<HistogramBase>();,5,233,1
84322,RETURN,-1,,"return MakeBaseObject<HistogramBase>(env, obj, options);",3,236,3
84366,RETURN,-1,,return BaseObjectPtr<HistogramBase>();,5,247,1
84368,RETURN,-1,,"return MakeBaseObject<HistogramBase>(env, obj, std::move(histogram));",3,249,3
84713,RETURN,-1,,return tmpl;,3,317,3
84840,RETURN,-1,,"return Create(env, std::move(histogram_));",3,356,1
84852,RETURN,-1,,return std::make_unique<HistogramTransferData>(this);,3,360,1
85020,RETURN,-1,,return tmpl;,3,400,3
85163,RETURN,-1,,return BaseObjectPtr<IntervalHistogram>();,5,452,1
85165,RETURN,-1,,"return MakeBaseObject<IntervalHistogram>(
      env,
      obj,
      AsyncWrap::PROVIDER_ELDHISTOGRAM,
      interval,
      std::move(on_interval),
      options);",3,455,3
85235,RETURN,1,,return;,38,478,1
85271,RETURN,1,,return;,39,487,1
85889,RETURN,-1,,return std::make_unique<HistogramBase::HistogramTransferData>(histogram());,3,634,1
85998,RETURN,-1,,"return
        static_cast<DeletableWrapper<T>*>(thread->GetObject(id))->object_.get();",5,25,1
86017,RETURN,-1,,"return std::unique_ptr<DeletableWrapper<T>>(
      new DeletableWrapper<T>(std::move(object)));",3,35,1
86061,RETURN,-1,,"return std::unique_ptr<Request>(
      new CreateObjectRequest<Factory>(object_id, std::move(factory)));",3,56,1
86236,RETURN,-1,,"return std::make_unique<MainThreadSessionState>(thread, prevent_shutdown);",5,139,1
86439,RETURN,-1,,return true;,3,230,3
86448,RETURN,1,,return;,5,235,1
86536,RETURN,-1,,return handle_;,3,259,2
86579,RETURN,-1,,return pointer;,3,277,4
86602,RETURN,-1,,return nullptr;,5,283,1
86604,RETURN,-1,,return iterator->second.get();,3,285,4
86662,RETURN,-1,,return StringBuffer::create(view);,3,295,9
86674,RETURN,-1,,"return std::unique_ptr<InspectorSession>(
      new CrossThreadInspectorSession(++next_session_id_,
                                      shared_from_this(),
                                      std::move(delegate),
                                      prevent_shutdown));",3,301,1
86704,RETURN,1,,return false;,5,311,1
86715,RETURN,-1,,return true;,3,313,5
86747,RETURN,-1,,"return std::unique_ptr<InspectorSessionDelegate>(
      new ThreadSafeDelegate(shared_from_this(), id));",3,326,4
86765,RETURN,-1,,return main_thread_ == nullptr;,3,332,3
86838,RETURN,-1,,return ++next_object_id_;,5,54,1
86906,RETURN,-1,,return agent_;,5,83,1
87060,RETURN,1,,return nullptr;,5,39,1
87104,RETURN,1,,return nullptr;,26,48,1
87109,RETURN,-1,,"return parseJSONCharacters(reinterpret_cast<const uint16_t*>(buffer.out()),
                             utf16_length);",3,50,10
87131,RETURN,1,,return nullptr;,5,56,1
87139,RETURN,1,,"return parseJSONCharacters(string.characters8(), string.length());",5,58,1
87149,RETURN,-1,,"return parseJSONCharacters(string.characters16(), string.length());",3,59,3
87172,RETURN,1,,"return """";",5,64,1
87180,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(view.characters8()),
                       view.length());",5,66,1
87243,RETURN,-1,,"return String(buffer.out(), utf8_length);",3,82,12
87269,RETURN,-1,,return stream.str();,3,89,4
87311,RETURN,-1,,return d;,3,98,7
87322,RETURN,-1,,"return Value::parseBinary(
        reinterpret_cast<const uint8_t*>(message.data()),
        message.length());",5,104,1
87337,RETURN,-1,,return parseJSON(message);,3,108,2
87345,RETURN,-1,,return message;,3,112,1
87352,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(message.data()),
                     message.size());",3,116,1
87373,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(data), length);",3,121,1
87427,RETURN,-1,,"return String(buffer.out(), utf8_length);",3,137,10
87439,RETURN,-1,,return reinterpret_cast<const uint8_t*>(s.data());,3,141,1
87451,RETURN,-1,,"return simdutf::utf32_length_from_utf8(s.data(), s.length());",3,149,1
87547,RETURN,-1,,"return string.substr(start, count);",3,50,1
87559,RETURN,-1,,return std::to_string(n);,3,53,1
87570,RETURN,-1,,return builder.str();,3,56,1
87581,RETURN,-1,,return string.find(substring);,3,59,1
87658,RETURN,-1,,return nullptr;,3,82,1
87665,RETURN,-1,,return nullptr;,3,85,1
87751,RETURN,-1,,return DispatchResponse::OK();,3,20,2
87767,RETURN,-1,,return true;,5,26,2
87769,RETURN,-1,,return false;,3,28,2
87838,RETURN,-1,,return frontend_.lock().get();,34,25,1
87924,RETURN,1,,return;,38,70,1
87984,RETURN,1,,return;,7,97,1
88116,RETURN,-1,,"return DispatchResponse::Error(
        ""Call NodeTracing::end to stop tracing before updating the config"");",5,139,1
88129,RETURN,-1,,"return DispatchResponse::Error(
        ""Tracing properties can only be changed through main thread sessions"");",5,143,1
88188,RETURN,1,,"return DispatchResponse::Error(""At least one category should be enabled"");",5,154,1
88228,RETURN,-1,,return DispatchResponse::OK();,3,164,10
88245,RETURN,-1,,return DispatchResponse::OK();,3,170,3
88379,RETURN,-1,,return DispatchResponse::OK();,3,198,23
88571,RETURN,-1,,"return NodeWorker::WorkerInfo::create()
      .setWorkerId(id)
      .setTitle(title)
      .setUrl(url)
      .setType(""worker"").build();",3,72,1
88661,RETURN,-1,,return DispatchResponse::OK();,3,96,2
88682,RETURN,-1,,return DispatchResponse::OK();,5,102,1
88712,RETURN,-1,,return DispatchResponse::OK();,3,110,6
88725,RETURN,-1,,return DispatchResponse::OK();,3,115,2
88740,RETURN,-1,,return DispatchResponse::OK();,3,120,2
88764,RETURN,1,,return;,5,129,1
88884,RETURN,1,,return;,5,152,1
89008,RETURN,-1,,"return ""[worker "" + std::to_string(id) + ""]"" +
           (name == """" ? """" : "" "" + name);",5,29,1
89135,RETURN,-1,,"return parent_thread_->Connect(std::move(delegate), prevent_shutdown);",3,85,1
89171,RETURN,1,,return;,5,96,1
89203,RETURN,-1,,"return std::make_unique<ParentInspectorHandle>(
      thread_id, url, thread_, wait, name);",3,106,3
89267,RETURN,-1,,"return std::make_unique<WorkerManagerEventHandle>(shared_from_this(), id);",3,124,7
89401,RETURN,-1,,"return std::make_unique<ParentInspectorHandle>(
        thread_id, url, parent_thread_, wait_, name);",5,64,1
89425,RETURN,-1,,return wait_;,5,70,1
89431,RETURN,-1,,return url_;,36,72,1
89489,RETURN,-1,,return thread_;,5,99,1
89665,RETURN,-1,,"return StringBuffer::create(StringView(*buffer, buffer.length()));",3,69,3
89710,RETURN,-1,,return result.str();,3,209,3
89960,RETURN,-1,,return prevent_shutdown_;,5,276,1
89972,RETURN,-1,,return retaining_context_;,5,281,2
89978,RETURN,-1,,return retaining_context_;,5,285,1
90172,RETURN,-1,,return !path.empty() && path[0] == '/';,3,383,1
90299,RETURN,-1,,return;,7,431,1
90448,RETURN,-1,,return session_id;,5,482,4
90471,RETURN,1,,return;,7,488,1
90501,RETURN,1,,return;,11,494,1
90534,RETURN,-1,,return env_->context();,5,507,1
90852,RETURN,1,,return true;,9,594,1
90854,RETURN,-1,,return false;,5,596,2
90879,RETURN,-1,,return retaining_context;,5,605,4
90901,RETURN,-1,,return interface_->GetHandle();,5,613,2
90914,RETURN,-1,,return nullptr;,7,618,1
90930,RETURN,-1,,return worker_manager_;,5,624,3
90936,RETURN,-1,,return !channels_.empty();,5,628,1
90949,RETURN,1,,return true;,7,634,1
90956,RETURN,-1,,return hasConnectedSessions();,7,636,1
90958,RETURN,-1,,return false;,5,638,3
90967,RETURN,1,,return;,7,643,1
90992,RETURN,-1,,return env_->isolate_data()->platform()->CurrentClockTimeMillis();,5,655,1
91023,RETURN,1,,return nullptr;,7,663,1
91035,RETURN,-1,,return Utf8ToStringView(url);,5,666,6
91197,RETURN,-1,,return false;,5,741,1
91226,RETURN,-1,,return true;,3,752,12
91237,RETURN,1,,return true;,5,757,1
91259,RETURN,-1,,return false;,5,765,2
91282,RETURN,-1,,return false;,5,775,1
91285,RETURN,-1,,return true;,3,778,8
91322,RETURN,-1,,return std::unique_ptr<InspectorSession>{};,5,794,2
91339,RETURN,-1,,"return std::unique_ptr<InspectorSession>(
      new SameThreadInspectorSession(session_id, client_));",3,801,6
91377,RETURN,-1,,return std::unique_ptr<InspectorSession>{};,5,814,2
91397,RETURN,-1,,"return parent_handle_->Connect(std::move(thread_safe_delegate),
                                 prevent_shutdown);",3,821,7
91431,RETURN,-1,,return;,5,831,2
91503,RETURN,1,,return;,5,855,1
91671,RETURN,1,,return;,41,911,1
91787,RETURN,-1,,return;,5,951,1
91811,RETURN,1,,return;,5,965,1
91827,RETURN,1,,return false;,5,971,1
91829,RETURN,-1,,return io_ != nullptr || client_->IsActive();,3,972,2
91878,RETURN,-1,,return std::unique_ptr<ParentInspectorHandle>{};,5,988,2
91886,RETURN,-1,,"return client_->getWorkerManager()->NewParentHandle(thread_id, url, name);",5,993,1
91899,RETURN,-1,,"return parent_handle_->NewParentInspectorHandle(thread_id, url, name);",5,995,1
91930,RETURN,-1,,return;,5,1004,2
91961,RETURN,-1,,return std::unique_ptr<WorkerManager>{};,5,1018,2
91965,RETURN,-1,,return client_->getWorkerManager();,3,1022,4
91979,RETURN,1,,"return """";",5,1027,1
91981,RETURN,-1,,return io_->GetWsUrl();,3,1028,2
92183,RETURN,-1,,return script_path;,3,42,3
92239,RETURN,-1,,return uuid;,3,61,5
92390,RETURN,-1,,return handle_;,5,135,1
92409,RETURN,-1,,return messages;,5,145,5
92420,RETURN,1,,return;,7,150,1
92492,RETURN,-1,,return data_ == nullptr;,5,184,3
92617,RETURN,-1,,return nullptr;,5,249,1
92619,RETURN,-1,,return io;,3,251,4
92830,RETURN,-1,,"return FormatWsAddress(host_port->host(), host_port->port(), id_, true);",3,324,3
92940,RETURN,-1,,return { target_id_ };,3,360,1
92946,RETURN,-1,,return script_name_.empty() ? GetHumanReadableProcessName() : script_name_;,3,364,1
92959,RETURN,-1,,"return ""file://"" + script_path_;",3,368,1
93041,RETURN,-1,,"return StringBuffer::create(StringView(*buffer, buffer.length()));",3,38,3
93060,RETURN,-1,,"return inspector->Connect(std::move(delegate), false);",5,44,1
93076,RETURN,-1,,"return FIXED_ONE_BYTE_STRING(env->isolate(), ""Connection"");",5,48,1
93090,RETURN,-1,,"return inspector->ConnectToMainThread(std::move(delegate), true);",5,55,1
93106,RETURN,-1,,"return FIXED_ONE_BYTE_STRING(env->isolate(), ""MainThreadConnection"");",5,59,1
93171,RETURN,1,,return;,73,82,1
93447,RETURN,-1,,return true;,5,161,1
93463,RETURN,-1,,return agent->IsActive();,3,171,3
93701,RETURN,1,,return;,9,215,1
93742,RETURN,-1,,return reinterpret_cast<void*>(asyncId << 1);,3,236,1
94174,RETURN,-1,,return;,5,313,1
94615,RETURN,-1,,return id;,3,65,16
94650,RETURN,-1,,return;,5,76,4
94733,RETURN,-1,,return;,5,99,2
94772,RETURN,-1,,return;,5,111,2
94819,RETURN,-1,,return;,5,122,4
94850,RETURN,-1,,return;,5,129,4
94879,RETURN,-1,,return;,5,142,2
94891,RETURN,-1,,return;,5,148,2
94951,RETURN,-1,,return false;,5,167,4
94953,RETURN,-1,,return true;,3,169,5
94967,RETURN,-1,,"return SPrintF(""coverage-%s-%s-%s.json"",
      uv_os_getpid(),
      timestamp,
      env()->thread_id());",3,175,3
95006,RETURN,-1,,return;,5,187,1
95032,RETURN,-1,,return;,5,193,2
95049,RETURN,-1,,return;,5,200,1
95112,RETURN,-1,,return;,5,223,1
95128,RETURN,-1,,return;,5,229,1
95169,RETURN,-1,,return;,9,242,1
95230,RETURN,-1,,return;,5,258,2
95247,RETURN,-1,,return;,5,265,1
95278,RETURN,-1,,return result;,3,276,1
95284,RETURN,-1,,return env()->coverage_directory();,3,280,1
95326,RETURN,-1,,return;,5,302,1
95335,RETURN,-1,,return env()->cpu_prof_dir();,3,309,1
95344,RETURN,-1,,return env()->cpu_prof_name();,3,313,1
95384,RETURN,-1,,return MaybeLocal<Object>();,5,323,2
95396,RETURN,-1,,return MaybeLocal<Object>();,5,327,2
95398,RETURN,-1,,return profile_v.As<Object>();,3,329,4
95448,RETURN,-1,,return;,5,346,1
95460,RETURN,-1,,return env()->heap_prof_dir();,3,353,1
95469,RETURN,-1,,return env()->heap_prof_name();,3,357,1
95509,RETURN,-1,,return MaybeLocal<Object>();,5,367,2
95521,RETURN,-1,,return MaybeLocal<Object>();,5,371,2
95523,RETURN,-1,,return profile_v.As<Object>();,3,373,4
95571,RETURN,-1,,return;,5,389,1
96140,RETURN,-1,,return b == 0;,61,204,1
96195,RETURN,-1,,return &tcp_;,5,31,1
96207,RETURN,-1,,"return node::ContainerOf(&TcpHolder::tcp_,
                             reinterpret_cast<uv_tcp_t*>(handle));",5,37,1
96288,RETURN,-1,,return inspector_;,5,67,1
96323,RETURN,-1,,"return node::ContainerOf(&WriteRequest::req, req);",5,117,1
96459,RETURN,1,,return host;,5,159,1
96482,RETURN,1,,"return host.substr(0, last_colon_pos);",5,162,1
96489,RETURN,-1,,return host;,3,163,7
96509,RETURN,1,,return false;,45,174,1
96543,RETURN,1,,return false;,48,182,1
96558,RETURN,1,,return false;,46,186,1
96595,RETURN,1,,return false;,54,193,1
96609,RETURN,-1,,return false;,7,205,1
96611,RETURN,-1,,return true;,5,210,9
96625,RETURN,1,,return false;,55,219,1
96634,RETURN,1,,return false;,21,226,1
96636,RETURN,-1,,return true;,3,229,6
96838,RETURN,-1,,return frame;,3,281,9
96861,RETURN,1,,return FRAME_INCOMPLETE;,5,291,1
96940,RETURN,1,,return FRAME_ERROR;,5,306,1
96967,RETURN,-1,,return FRAME_ERROR;,7,320,17
96975,RETURN,-1,,return FRAME_ERROR;,5,325,1
97009,RETURN,-1,,return FRAME_ERROR;,7,336,1
97021,RETURN,1,,return FRAME_INCOMPLETE;,7,339,1
97067,RETURN,-1,,return FRAME_ERROR;,5,352,1
97085,RETURN,1,,return FRAME_INCOMPLETE;,5,357,1
97142,RETURN,-1,,return closed ? FRAME_CLOSE : FRAME_OK;,3,367,46
97373,RETURN,-1,,return bytes_consumed;,5,459,9
97604,RETURN,-1,,return;,9,550,2
97634,RETURN,-1,,return;,9,555,2
97725,RETURN,-1,,return 0;,5,582,5
97763,RETURN,-1,,return 0;,5,592,5
97785,RETURN,-1,,return 0;,5,598,4
97792,RETURN,-1,,"return node::ContainerOf(&HttpHandler::parser_, parser);",5,602,1
97860,RETURN,-1,,return 0;,5,617,8
97899,RETURN,1,,"return """";",11,627,1
97909,RETURN,-1,,return value;,5,632,5
97921,RETURN,-1,,"return host.empty() || IsIPAddress(host)
           || node::StringEqualNoCase(host.data(), ""localhost"");",5,637,3
97965,RETURN,-1,,"return tcp_->WriteRaw(buffer, write_cb);",3,662,1
97976,RETURN,-1,,return tcp_->delegate();,3,666,1
98011,RETURN,1,,"return """";",5,677,1
98055,RETURN,1,,"return """";",5,686,1
98057,RETURN,-1,,return ip;,3,687,10
98126,RETURN,-1,,return TcpHolder::Pointer(result);,5,710,1
98136,RETURN,-1,,return nullptr;,5,713,2
98188,RETURN,-1,,return err < 0;,3,734,8
98196,RETURN,-1,,return delegate_.get();,3,738,1
98354,RETURN,-1,,return InspectorSocket::Pointer(inspector);,5,792,4
98362,RETURN,-1,,return InspectorSocket::Pointer(nullptr);,5,794,1
98390,RETURN,-1,,return protocol_handler_->GetHost();,3,807,1
98543,RETURN,-1,,return url.str();,3,45,8
98569,RETURN,-1,,return url.str();,3,55,4
98620,RETURN,-1,,return json.str();,3,70,7
98659,RETURN,-1,,return json.str();,3,85,7
98688,RETURN,1,,return path + len + 1;,27,91,1
98701,RETURN,1,,return path + len;,28,92,1
98705,RETURN,-1,,return nullptr;,3,94,4
98903,RETURN,-1,,"return FormatAddress(FormatHostPort(host, port), target_id, include_protocol);",3,151,1
98947,RETURN,-1,,return id_;,20,164,1
98953,RETURN,-1,,return server_port_;,5,166,1
98959,RETURN,-1,,return ws_socket_.get();,5,169,1
99020,RETURN,-1,,return server_->Session(session_id_);,7,192,1
99057,RETURN,-1,,return port_;,22,213,1
99064,RETURN,-1,,"return node::ContainerOf(&ServerSocket::tcp_socket_,
                             reinterpret_cast<uv_tcp_t*>(socket));",5,218,1
99127,RETURN,-1,,return;,5,241,1
99194,RETURN,-1,,return it == connected_sessions_.end() ? nullptr : it->second.second.get();,3,274,3
99232,RETURN,-1,,return;,5,283,2
99262,RETURN,-1,,return;,5,292,1
99357,RETURN,-1,,return true;,5,322,2
99373,RETURN,1,,return false;,5,326,1
99390,RETURN,-1,,return true;,5,330,2
99401,RETURN,-1,,return true;,5,333,2
99412,RETURN,-1,,return true;,5,336,2
99414,RETURN,-1,,return false;,3,338,10
99579,RETURN,-1,,return frontend_url.str();,3,383,6
99669,RETURN,-1,,return false;,5,405,2
99745,RETURN,-1,,return false;,5,424,2
99769,RETURN,-1,,return true;,3,434,21
99782,RETURN,1,,return;,5,439,1
99847,RETURN,-1,,return found != target_ids.end();,3,455,5
99865,RETURN,-1,,return server_sockets_[0]->port();,5,460,1
99872,RETURN,-1,,return port_;,3,462,2
100100,RETURN,1,,return err;,5,527,1
100132,RETURN,-1,,return err;,3,534,10
100180,RETURN,-1,,return err;,3,549,8
101274,RETURN,-1,,return;,29,445,1
101289,RETURN,-1,,"return v8::String::NewFromOneByte(isolate,
                                      reinterpret_cast<const uint8_t*>(str),
                                      v8::NewStringType::kNormal,
                                      length);",5,1531,1
101315,RETURN,-1,,"return v8::String::NewFromUtf8(
        isolate, str, v8::NewStringType::kNormal, static_cast<int>(length));",5,1543,1
101340,RETURN,-1,,"return v8::String::NewFromTwoByte(isolate,
                                      reinterpret_cast<const uint16_t*>(str),
                                      v8::NewStringType::kNormal,
                                      length);",5,1553,1
101392,RETURN,-1,,"return v8::String::NewExternalOneByte(isolate, resource);",9,1583,4
101439,RETURN,-1,,"return v8::String::NewExternalTwoByte(isolate, resource);",9,1610,4
101492,RETURN,-1,,CHECK_ENV(env),3,70,1
101512,RETURN,-1,,"CHECK_ARG(env, str)",19,71,1
101529,RETURN,-1,,"CHECK_ARG(env, result)",3,72,1
101550,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, (length == NAPI_AUTO_LENGTH) || length <= INT_MAX, napi_invalid_arg)",3,73,1
101581,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, str_maybe, napi_generic_failure)",3,78,1
101597,RETURN,-1,,return napi_clear_last_error(env);,3,80,11
101635,RETURN,-1,,return status;,3,111,4
101676,RETURN,1,,return;,40,137,1
101710,RETURN,-1,,return string_;,39,163,1
101716,RETURN,-1,,return length_;,36,164,1
101734,RETURN,-1,,return string_;,43,183,1
101740,RETURN,-1,,return length_;,36,184,1
101789,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,196,1
101804,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,196,1
101842,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,196,1
101891,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, property_value->IsName(), napi_name_expected)",5,201,1
101903,RETURN,-1,,return napi_ok;,3,205,2
101978,RETURN,-1,,return static_cast<v8::PropertyAttribute>(attribute_flags);,3,227,6
101987,RETURN,-1,,return reinterpret_cast<napi_deferred>(local);,3,232,1
101996,RETURN,-1,,return reinterpret_cast<v8impl::Persistent<v8::Value>*>(local);,3,237,1
102017,RETURN,-1,,return escape_called_;,32,257,1
102027,RETURN,-1,,return scope.Escape(handle);,5,261,2
102040,RETURN,-1,,return reinterpret_cast<napi_handle_scope>(s);,3,270,1
102049,RETURN,-1,,return reinterpret_cast<HandleScopeWrapper*>(s);,3,274,1
102058,RETURN,-1,,return reinterpret_cast<napi_escapable_handle_scope>(s);,3,280,1
102067,RETURN,-1,,return reinterpret_cast<EscapableHandleScopeWrapper*>(s);,3,286,1
102089,RETURN,-1,,NAPI_PREAMBLE(env),3,293,1
102103,RETURN,-1,,NAPI_PREAMBLE(env),3,293,1
102117,RETURN,-1,,NAPI_PREAMBLE(env),3,293,1
102146,RETURN,-1,,"CHECK_ARG(env, result)",3,294,1
102250,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, success.FromMaybe(false), napi_generic_failure)",3,312,1
102255,RETURN,-1,,return GET_RETURN_STATUS(env);,3,314,18
102290,RETURN,-1,,NAPI_PREAMBLE(env),3,323,1
102304,RETURN,-1,,NAPI_PREAMBLE(env),3,323,1
102318,RETURN,-1,,NAPI_PREAMBLE(env),3,323,1
102347,RETURN,-1,,"CHECK_ARG(env, js_object)",3,324,1
102369,RETURN,-1,,"CHECK_ARG(env, result)",5,326,1
102420,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsObject(), napi_invalid_arg)",3,332,1
102480,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsExternal(), napi_invalid_arg)",3,337,1
102552,RETURN,-1,,return GET_RETURN_STATUS(env);,3,356,20
102627,RETURN,-1,,return cbdata;,5,382,8
102674,RETURN,-1,,return _this;,23,406,1
102680,RETURN,-1,,return _args_length;,25,408,1
102686,RETURN,-1,,return _data;,18,410,1
102824,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure)",5,471,1
102866,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_function, napi_generic_failure)",5,475,1
102878,RETURN,-1,,return napi_clear_last_error(env);,5,478,6
102928,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure)",5,488,1
102948,RETURN,-1,,return napi_clear_last_error(env);,5,491,4
102966,RETURN,-1,,return v8impl::JsValueFromV8LocalValue(_cbinfo.NewTarget());,7,500,1
102977,RETURN,-1,,return nullptr;,7,502,1
103100,RETURN,-1,,NAPI_PREAMBLE(env),3,537,1
103114,RETURN,-1,,NAPI_PREAMBLE(env),3,537,1
103128,RETURN,-1,,NAPI_PREAMBLE(env),3,537,1
103157,RETURN,-1,,"CHECK_ARG(env, js_object)",3,538,1
103208,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsObject(), napi_invalid_arg)",3,543,1
103255,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env,
      !obj->HasPrivate(context, NAPI_PRIVATE_KEY(context, wrapper)).FromJust(),
      napi_invalid_arg)",3,547,1
103281,RETURN,-1,,"CHECK_ARG(env, finalize_cb)",5,558,1
103369,RETURN,-1,,return GET_RETURN_STATUS(env);,3,584,17
103388,RETURN,-1,,return value->IsObject() || value->IsSymbol();,3,596,1
103454,RETURN,-1,,"return new RefBase(env,
                     initial_refcount,
                     ownership,
                     finalize_callback,
                     finalize_data,
                     finalize_hint);",3,635,1
103467,RETURN,-1,,return finalize_data_;,3,644,1
103473,RETURN,-1,,return ++refcount_;,3,648,1
103485,RETURN,-1,,return 0;,5,653,1
103487,RETURN,-1,,return --refcount_;,3,655,2
103494,RETURN,-1,,return refcount_;,3,659,1
103571,RETURN,-1,,"return new Reference(env,
                       value,
                       initial_refcount,
                       ownership,
                       finalize_callback,
                       finalize_data,
                       finalize_hint);",3,712,1
103591,RETURN,-1,,return 0;,5,725,1
103611,RETURN,-1,,return refcount;,3,731,5
103623,RETURN,-1,,return 0;,5,738,1
103646,RETURN,-1,,return refcount;,3,745,7
103658,RETURN,-1,,return v8::Local<v8::Value>();,5,750,1
103665,RETURN,-1,,"return v8::Local<v8::Value>::New(env_->isolate, persistent_);",5,752,1
103787,RETURN,-1,,CHECK_ENV(env),3,817,1
103802,RETURN,-1,,"CHECK_ARG(env, result)",3,818,1
103863,RETURN,-1,,return napi_ok;,3,837,10
103885,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
103899,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
103913,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
103942,RETURN,-1,,"CHECK_ARG(env, result)",3,847,1
103959,RETURN,-1,,"CHECK_ARG(env, cb)",3,848,1
104011,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
      env, cb, callback_data, &fn))",3,853,1
104064,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,859,1
104077,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,859,1
104113,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,859,1
104138,RETURN,-1,,return GET_RETURN_STATUS(env);,3,865,17
104174,RETURN,-1,,NAPI_PREAMBLE(env),3,877,1
104188,RETURN,-1,,NAPI_PREAMBLE(env),3,877,1
104202,RETURN,-1,,NAPI_PREAMBLE(env),3,877,1
104231,RETURN,-1,,"CHECK_ARG(env, result)",3,878,1
104248,RETURN,-1,,"CHECK_ARG(env, constructor)",3,879,1
104270,RETURN,-1,,"CHECK_ARG(env, properties)",5,882,1
104317,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
      env, constructor, callback_data, &tpl))",3,889,1
104358,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,893,1
104371,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,893,1
104407,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,893,1
104488,RETURN,1,,"STATUS_CALL(v8impl::V8NameFromPropertyDescriptor(env, p, &property_name))",5,907,1
104565,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
            env, p->getter, p->data, &getter_tpl))",9,920,1
104603,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
            env, p->setter, p->data, &setter_tpl))",9,924,1
104676,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
          env, p->method, p->data, &t, v8::Signature::New(isolate, tpl)))",7,935,1
104820,RETURN,1,,"STATUS_CALL(napi_define_properties(
        env, *result, static_descriptors.size(), static_descriptors.data()))",5,960,1
104823,RETURN,-1,,return GET_RETURN_STATUS(env);,3,964,25
104844,RETURN,-1,,"return napi_get_all_property_names(
      env,
      object,
      napi_key_include_prototypes,
      static_cast<napi_key_filter>(napi_key_enumerable | napi_key_skip_symbols),
      napi_key_numbers_to_strings,
      result);",3,970,1
104876,RETURN,-1,,NAPI_PREAMBLE(env),3,986,1
104890,RETURN,-1,,NAPI_PREAMBLE(env),3,986,1
104904,RETURN,-1,,NAPI_PREAMBLE(env),3,986,1
104933,RETURN,-1,,"CHECK_ARG(env, result)",3,987,1
104978,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,991,1
105005,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,991,1
105131,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,1025,10
105159,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,1036,10
105201,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(
      env, maybe_all_propertynames, napi_generic_failure)",3,1046,1
105223,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1051,25
105255,RETURN,-1,,NAPI_PREAMBLE(env),3,1058,1
105269,RETURN,-1,,NAPI_PREAMBLE(env),3,1058,1
105283,RETURN,-1,,NAPI_PREAMBLE(env),3,1058,1
105312,RETURN,-1,,"CHECK_ARG(env, key)",3,1059,1
105329,RETURN,-1,,"CHECK_ARG(env, value)",3,1060,1
105374,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1065,1
105401,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1065,1
105472,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1072,1
105477,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1073,17
105509,RETURN,-1,,NAPI_PREAMBLE(env),3,1080,1
105523,RETURN,-1,,NAPI_PREAMBLE(env),3,1080,1
105537,RETURN,-1,,NAPI_PREAMBLE(env),3,1080,1
105566,RETURN,-1,,"CHECK_ARG(env, result)",3,1081,1
105583,RETURN,-1,,"CHECK_ARG(env, key)",3,1082,1
105628,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1087,1
105655,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1087,1
105706,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1092,1
105719,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1095,17
105751,RETURN,-1,,NAPI_PREAMBLE(env),3,1102,1
105765,RETURN,-1,,NAPI_PREAMBLE(env),3,1102,1
105779,RETURN,-1,,NAPI_PREAMBLE(env),3,1102,1
105808,RETURN,-1,,"CHECK_ARG(env, key)",3,1103,1
105825,RETURN,-1,,"CHECK_ARG(env, result)",3,1104,1
105885,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1110,1
105912,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1110,1
105948,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1114,1
105975,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1118,18
106007,RETURN,-1,,NAPI_PREAMBLE(env),3,1125,1
106021,RETURN,-1,,NAPI_PREAMBLE(env),3,1125,1
106035,RETURN,-1,,NAPI_PREAMBLE(env),3,1125,1
106064,RETURN,-1,,"CHECK_ARG(env, key)",3,1126,1
106124,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1132,1
106151,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1132,1
106187,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, delete_maybe, napi_generic_failure)",3,1134,1
106205,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1138,16
106237,RETURN,-1,,NAPI_PREAMBLE(env),3,1145,1
106251,RETURN,-1,,NAPI_PREAMBLE(env),3,1145,1
106265,RETURN,-1,,NAPI_PREAMBLE(env),3,1145,1
106294,RETURN,-1,,"CHECK_ARG(env, key)",3,1146,1
106311,RETURN,-1,,"CHECK_ARG(env, result)",3,1147,1
106356,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1152,1
106383,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1152,1
106427,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, k->IsName(), napi_name_expected)",3,1154,1
106459,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1156,1
106472,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1159,18
106504,RETURN,-1,,NAPI_PREAMBLE(env),3,1166,1
106518,RETURN,-1,,NAPI_PREAMBLE(env),3,1166,1
106532,RETURN,-1,,NAPI_PREAMBLE(env),3,1166,1
106561,RETURN,-1,,"CHECK_ARG(env, value)",3,1167,1
106606,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1172,1
106633,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1172,1
106682,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1175,1
106695,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1175,1
106731,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1175,1
106787,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1181,1
106792,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1182,17
106824,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
106838,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
106852,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
106881,RETURN,-1,,"CHECK_ARG(env, result)",3,1190,1
106926,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1195,1
106953,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1195,1
107002,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1198,1
107015,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1198,1
107051,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1198,1
107087,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1202,1
107100,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1205,17
107132,RETURN,-1,,NAPI_PREAMBLE(env),3,1212,1
107146,RETURN,-1,,NAPI_PREAMBLE(env),3,1212,1
107160,RETURN,-1,,NAPI_PREAMBLE(env),3,1212,1
107189,RETURN,-1,,"CHECK_ARG(env, result)",3,1213,1
107245,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1218,1
107258,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1218,1
107294,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1218,1
107332,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1222,1
107359,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1222,1
107395,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1226,1
107422,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1230,18
107454,RETURN,-1,,NAPI_PREAMBLE(env),3,1237,1
107468,RETURN,-1,,NAPI_PREAMBLE(env),3,1237,1
107482,RETURN,-1,,NAPI_PREAMBLE(env),3,1237,1
107511,RETURN,-1,,"CHECK_ARG(env, value)",3,1238,1
107556,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1243,1
107583,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1243,1
107639,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1248,1
107644,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1250,15
107676,RETURN,-1,,NAPI_PREAMBLE(env),3,1257,1
107690,RETURN,-1,,NAPI_PREAMBLE(env),3,1257,1
107704,RETURN,-1,,NAPI_PREAMBLE(env),3,1257,1
107733,RETURN,-1,,"CHECK_ARG(env, result)",3,1258,1
107778,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1263,1
107805,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1263,1
107841,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1267,1
107854,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1270,15
107886,RETURN,-1,,NAPI_PREAMBLE(env),3,1277,1
107900,RETURN,-1,,NAPI_PREAMBLE(env),3,1277,1
107914,RETURN,-1,,NAPI_PREAMBLE(env),3,1277,1
107943,RETURN,-1,,"CHECK_ARG(env, result)",3,1278,1
107988,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1283,1
108015,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1283,1
108051,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1287,1
108067,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1290,15
108099,RETURN,-1,,NAPI_PREAMBLE(env),3,1297,1
108113,RETURN,-1,,NAPI_PREAMBLE(env),3,1297,1
108127,RETURN,-1,,NAPI_PREAMBLE(env),3,1297,1
108184,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1302,1
108211,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1302,1
108247,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, delete_maybe, napi_generic_failure)",3,1304,1
108265,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1308,14
108297,RETURN,-1,,NAPI_PREAMBLE(env),3,1316,1
108311,RETURN,-1,,NAPI_PREAMBLE(env),3,1316,1
108325,RETURN,-1,,NAPI_PREAMBLE(env),3,1316,1
108359,RETURN,-1,,"CHECK_ARG(env, properties)",5,1318,1
108404,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1324,1
108431,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1324,1
108492,RETURN,1,,"STATUS_CALL(v8impl::V8NameFromPropertyDescriptor(env, p, &property_name))",5,1330,1
108561,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
            env, p->getter, p->data, &local_getter))",9,1337,1
108599,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
            env, p->setter, p->data, &local_setter))",9,1341,1
108646,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",9,1353,1
108696,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
          env, p->method, p->data, &method))",7,1357,1
108749,RETURN,-1,,"return napi_set_last_error(env, napi_generic_failure);",9,1368,1
108867,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",9,1393,1
108871,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1398,12
108901,RETURN,-1,,NAPI_PREAMBLE(env),3,1402,1
108915,RETURN,-1,,NAPI_PREAMBLE(env),3,1402,1
108929,RETURN,-1,,NAPI_PREAMBLE(env),3,1402,1
108986,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1407,1
109013,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1407,1
109057,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, set_frozen.FromMaybe(false), napi_generic_failure)",3,1412,1
109068,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1415,13
109098,RETURN,-1,,NAPI_PREAMBLE(env),3,1419,1
109112,RETURN,-1,,NAPI_PREAMBLE(env),3,1419,1
109126,RETURN,-1,,NAPI_PREAMBLE(env),3,1419,1
109183,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1424,1
109210,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1424,1
109254,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, set_sealed.FromMaybe(false), napi_generic_failure)",3,1429,1
109265,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1432,13
109296,RETURN,-1,,CHECK_ENV(env),3,1438,1
109311,RETURN,-1,,"CHECK_ARG(env, value)",3,1439,1
109328,RETURN,-1,,"CHECK_ARG(env, result)",3,1440,1
109355,RETURN,-1,,return napi_clear_last_error(env);,3,1445,6
109375,RETURN,-1,,NAPI_PREAMBLE(env),3,1451,1
109389,RETURN,-1,,NAPI_PREAMBLE(env),3,1451,1
109403,RETURN,-1,,NAPI_PREAMBLE(env),3,1451,1
109432,RETURN,-1,,"CHECK_ARG(env, value)",3,1452,1
109449,RETURN,-1,,"CHECK_ARG(env, result)",3,1453,1
109486,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsArray(), napi_array_expected)",3,1456,1
109512,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1461,13
109544,RETURN,-1,,NAPI_PREAMBLE(env),3,1468,1
109558,RETURN,-1,,NAPI_PREAMBLE(env),3,1468,1
109572,RETURN,-1,,NAPI_PREAMBLE(env),3,1468,1
109601,RETURN,-1,,"CHECK_ARG(env, lhs)",3,1469,1
109618,RETURN,-1,,"CHECK_ARG(env, rhs)",3,1470,1
109635,RETURN,-1,,"CHECK_ARG(env, result)",3,1471,1
109678,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1477,13
109709,RETURN,-1,,NAPI_PREAMBLE(env),3,1483,1
109723,RETURN,-1,,NAPI_PREAMBLE(env),3,1483,1
109737,RETURN,-1,,NAPI_PREAMBLE(env),3,1483,1
109766,RETURN,-1,,"CHECK_ARG(env, result)",3,1484,1
109811,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1489,1
109838,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1489,1
109872,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1493,13
109902,RETURN,-1,,CHECK_ENV(env),3,1497,1
109917,RETURN,-1,,"CHECK_ARG(env, result)",3,1498,1
109938,RETURN,-1,,return napi_clear_last_error(env);,3,1502,4
109957,RETURN,-1,,CHECK_ENV(env),3,1506,1
109972,RETURN,-1,,"CHECK_ARG(env, result)",3,1507,1
109993,RETURN,-1,,return napi_clear_last_error(env);,3,1511,4
110013,RETURN,-1,,CHECK_ENV(env),3,1517,1
110028,RETURN,-1,,"CHECK_ARG(env, result)",3,1518,1
110050,RETURN,-1,,return napi_clear_last_error(env);,3,1523,4
110059,RETURN,-1,,"return v8impl::NewString(env, str, length, result, [&](v8::Isolate* isolate) {
    return v8::String::NewFromOneByte(isolate,
                                      reinterpret_cast<const uint8_t*>(str),
                                      v8::NewStringType::kNormal,
                                      length);
  });",3,1530,1
110075,RETURN,-1,,"return v8impl::NewString(env, str, length, result, [&](v8::Isolate* isolate) {
    return v8::String::NewFromUtf8(
        isolate, str, v8::NewStringType::kNormal, static_cast<int>(length));
  });",3,1542,1
110091,RETURN,-1,,"return v8impl::NewString(env, str, length, result, [&](v8::Isolate* isolate) {
    return v8::String::NewFromTwoByte(isolate,
                                      reinterpret_cast<const uint16_t*>(str),
                                      v8::NewStringType::kNormal,
                                      length);
  });",3,1552,1
110107,RETURN,-1,,"return v8impl::NewExternalString(
      env,
      str,
      length,
      finalize_callback,
      finalize_hint,
      result,
      copied,
      napi_create_string_latin1,
      [&](v8::Isolate* isolate) {
        if (length == NAPI_AUTO_LENGTH) {
          length = (std::string_view(str)).length();
        }
        auto resource = new v8impl::ExternalOneByteStringResource(
            env, str, length, finalize_callback, finalize_hint);
        return v8::String::NewExternalOneByte(isolate, resource);
      });",3,1568,1
110127,RETURN,-1,,"return v8impl::NewExternalString(
      env,
      str,
      length,
      finalize_callback,
      finalize_hint,
      result,
      copied,
      napi_create_string_utf16,
      [&](v8::Isolate* isolate) {
        if (length == NAPI_AUTO_LENGTH) {
          length = (std::u16string_view(str)).length();
        }
        auto resource = new v8impl::ExternalStringResource(
            env, str, length, finalize_callback, finalize_hint);
        return v8::String::NewExternalTwoByte(isolate, resource);
      });",3,1595,1
110158,RETURN,-1,,CHECK_ENV(env),3,1617,1
110173,RETURN,-1,,"CHECK_ARG(env, result)",3,1618,1
110195,RETURN,-1,,return napi_clear_last_error(env);,3,1623,4
110215,RETURN,-1,,CHECK_ENV(env),3,1629,1
110230,RETURN,-1,,"CHECK_ARG(env, result)",3,1630,1
110252,RETURN,-1,,return napi_clear_last_error(env);,3,1635,4
110272,RETURN,-1,,CHECK_ENV(env),3,1641,1
110287,RETURN,-1,,"CHECK_ARG(env, result)",3,1642,1
110309,RETURN,-1,,return napi_clear_last_error(env);,3,1647,4
110329,RETURN,-1,,CHECK_ENV(env),3,1653,1
110344,RETURN,-1,,"CHECK_ARG(env, result)",3,1654,1
110368,RETURN,-1,,return napi_clear_last_error(env);,3,1659,4
110388,RETURN,-1,,CHECK_ENV(env),3,1665,1
110403,RETURN,-1,,"CHECK_ARG(env, result)",3,1666,1
110425,RETURN,-1,,return napi_clear_last_error(env);,3,1671,4
110445,RETURN,-1,,CHECK_ENV(env),3,1677,1
110460,RETURN,-1,,"CHECK_ARG(env, result)",3,1678,1
110482,RETURN,-1,,return napi_clear_last_error(env);,3,1683,4
110504,RETURN,-1,,NAPI_PREAMBLE(env),3,1691,1
110518,RETURN,-1,,NAPI_PREAMBLE(env),3,1691,1
110532,RETURN,-1,,NAPI_PREAMBLE(env),3,1691,1
110561,RETURN,-1,,"CHECK_ARG(env, words)",3,1692,1
110578,RETURN,-1,,"CHECK_ARG(env, result)",3,1693,1
110609,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, word_count <= INT_MAX, napi_invalid_arg)",3,1697,1
110649,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, b, napi_generic_failure)",3,1702,1
110671,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1705,14
110702,RETURN,-1,,CHECK_ENV(env),3,1711,1
110717,RETURN,-1,,"CHECK_ARG(env, result)",3,1712,1
110757,RETURN,-1,,return napi_clear_last_error(env);,3,1722,6
110777,RETURN,-1,,CHECK_ENV(env),3,1728,1
110792,RETURN,-1,,"CHECK_ARG(env, result)",3,1729,1
110856,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, desc->IsString(), napi_string_expected)",5,1737,1
110879,RETURN,-1,,return napi_clear_last_error(env);,3,1743,6
110900,RETURN,-1,,CHECK_ENV(env),3,1750,1
110915,RETURN,-1,,"CHECK_ARG(env, result)",3,1751,1
110940,RETURN,1,,"STATUS_CALL(napi_create_string_utf8(
      env, utf8description, length, &js_description_string))",3,1754,1
110978,RETURN,-1,,return napi_clear_last_error(env);,3,1762,7
111070,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, code_value->IsString(), napi_string_expected)",7,1776,1
111105,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1778,1
111118,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1778,1
111154,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1778,1
111203,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1782,1
111216,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1782,1
111252,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1782,1
111293,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
        env, set_maybe.FromMaybe(false), napi_generic_failure)",5,1785,1
111298,RETURN,-1,,return napi_ok;,3,1788,2
111318,RETURN,-1,,CHECK_ENV(env),3,1795,1
111333,RETURN,-1,,"CHECK_ARG(env, msg)",3,1796,1
111350,RETURN,-1,,"CHECK_ARG(env, result)",3,1797,1
111387,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1800,1
111430,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1804,1
111441,RETURN,-1,,return napi_clear_last_error(env);,3,1808,9
111462,RETURN,-1,,CHECK_ENV(env),3,1815,1
111477,RETURN,-1,,"CHECK_ARG(env, msg)",3,1816,1
111494,RETURN,-1,,"CHECK_ARG(env, result)",3,1817,1
111531,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1820,1
111574,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1824,1
111585,RETURN,-1,,return napi_clear_last_error(env);,3,1828,9
111606,RETURN,-1,,CHECK_ENV(env),3,1835,1
111621,RETURN,-1,,"CHECK_ARG(env, msg)",3,1836,1
111638,RETURN,-1,,"CHECK_ARG(env, result)",3,1837,1
111675,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1840,1
111718,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1844,1
111729,RETURN,-1,,return napi_clear_last_error(env);,3,1848,9
111750,RETURN,-1,,CHECK_ENV(env),3,1855,1
111765,RETURN,-1,,"CHECK_ARG(env, msg)",3,1856,1
111782,RETURN,-1,,"CHECK_ARG(env, result)",3,1857,1
111819,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1860,1
111862,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1864,1
111873,RETURN,-1,,return napi_clear_last_error(env);,3,1868,9
111893,RETURN,-1,,CHECK_ENV(env),3,1876,1
111908,RETURN,-1,,"CHECK_ARG(env, value)",3,1877,1
111925,RETURN,-1,,"CHECK_ARG(env, result)",3,1878,1
112065,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",5,1908,1
112069,RETURN,-1,,return napi_clear_last_error(env);,3,1911,6
112088,RETURN,-1,,CHECK_ENV(env),3,1915,1
112103,RETURN,-1,,"CHECK_ARG(env, result)",3,1916,1
112122,RETURN,-1,,return napi_clear_last_error(env);,3,1920,4
112141,RETURN,-1,,CHECK_ENV(env),3,1924,1
112156,RETURN,-1,,"CHECK_ARG(env, result)",3,1925,1
112175,RETURN,-1,,return napi_clear_last_error(env);,3,1929,4
112198,RETURN,-1,,CHECK_ENV(env),3,1941,1
112213,RETURN,-1,,"CHECK_ARG(env, cbinfo)",3,1942,1
112241,RETURN,-1,,"CHECK_ARG(env, argc)",5,1948,1
112289,RETURN,-1,,return napi_clear_last_error(env);,3,1961,9
112309,RETURN,-1,,CHECK_ENV(env),3,1967,1
112324,RETURN,-1,,"CHECK_ARG(env, cbinfo)",3,1968,1
112341,RETURN,-1,,"CHECK_ARG(env, result)",3,1969,1
112359,RETURN,-1,,return napi_clear_last_error(env);,3,1975,7
112382,RETURN,-1,,NAPI_PREAMBLE(env),3,1984,1
112396,RETURN,-1,,NAPI_PREAMBLE(env),3,1984,1
112410,RETURN,-1,,NAPI_PREAMBLE(env),3,1984,1
112439,RETURN,-1,,"CHECK_ARG(env, recv)",3,1985,1
112461,RETURN,-1,,"CHECK_ARG(env, argv)",5,1987,1
112519,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,1995,1
112548,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,1995,1
112581,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,2004,1
112607,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",7,2007,1
112623,RETURN,-1,,return napi_clear_last_error(env);,5,2010,2
112642,RETURN,-1,,CHECK_ENV(env),3,2015,1
112657,RETURN,-1,,"CHECK_ARG(env, result)",3,2016,1
112676,RETURN,-1,,return napi_clear_last_error(env);,3,2020,4
112695,RETURN,-1,,NAPI_PREAMBLE(env),3,2024,1
112709,RETURN,-1,,NAPI_PREAMBLE(env),3,2024,1
112723,RETURN,-1,,NAPI_PREAMBLE(env),3,2024,1
112752,RETURN,-1,,"CHECK_ARG(env, error)",3,2025,1
112772,RETURN,-1,,return napi_clear_last_error(env);,3,2032,11
112792,RETURN,-1,,NAPI_PREAMBLE(env),3,2038,1
112806,RETURN,-1,,NAPI_PREAMBLE(env),3,2038,1
112820,RETURN,-1,,NAPI_PREAMBLE(env),3,2038,1
112880,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2042,1
112893,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2042,1
112929,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2042,1
112976,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,2045,1
112984,RETURN,-1,,return napi_clear_last_error(env);,3,2050,14
113004,RETURN,-1,,NAPI_PREAMBLE(env),3,2056,1
113018,RETURN,-1,,NAPI_PREAMBLE(env),3,2056,1
113032,RETURN,-1,,NAPI_PREAMBLE(env),3,2056,1
113092,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2060,1
113105,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2060,1
113141,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2060,1
113188,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,2063,1
113196,RETURN,-1,,return napi_clear_last_error(env);,3,2068,14
113216,RETURN,-1,,NAPI_PREAMBLE(env),3,2074,1
113230,RETURN,-1,,NAPI_PREAMBLE(env),3,2074,1
113244,RETURN,-1,,NAPI_PREAMBLE(env),3,2074,1
113304,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2078,1
113317,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2078,1
113353,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2078,1
113400,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,2081,1
113408,RETURN,-1,,return napi_clear_last_error(env);,3,2086,14
113428,RETURN,-1,,NAPI_PREAMBLE(env),3,2092,1
113442,RETURN,-1,,NAPI_PREAMBLE(env),3,2092,1
113456,RETURN,-1,,NAPI_PREAMBLE(env),3,2092,1
113516,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2096,1
113529,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2096,1
113565,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2096,1
113612,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,2099,1
113620,RETURN,-1,,return napi_clear_last_error(env);,3,2104,14
113640,RETURN,-1,,CHECK_ENV(env),3,2112,1
113655,RETURN,-1,,"CHECK_ARG(env, value)",3,2113,1
113672,RETURN,-1,,"CHECK_ARG(env, result)",3,2114,1
113699,RETURN,-1,,return napi_clear_last_error(env);,3,2119,6
113719,RETURN,-1,,CHECK_ENV(env),3,2127,1
113734,RETURN,-1,,"CHECK_ARG(env, value)",3,2128,1
113751,RETURN,-1,,"CHECK_ARG(env, result)",3,2129,1
113788,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",3,2132,1
113803,RETURN,-1,,return napi_clear_last_error(env);,3,2136,7
113823,RETURN,-1,,CHECK_ENV(env),3,2144,1
113838,RETURN,-1,,"CHECK_ARG(env, value)",3,2145,1
113855,RETURN,-1,,"CHECK_ARG(env, result)",3,2146,1
113910,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",5,2153,1
113935,RETURN,-1,,return napi_clear_last_error(env);,3,2160,6
113955,RETURN,-1,,CHECK_ENV(env),3,2168,1
113970,RETURN,-1,,"CHECK_ARG(env, value)",3,2169,1
113987,RETURN,-1,,"CHECK_ARG(env, result)",3,2170,1
114042,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",5,2177,1
114067,RETURN,-1,,return napi_clear_last_error(env);,3,2184,6
114087,RETURN,-1,,CHECK_ENV(env),3,2192,1
114102,RETURN,-1,,"CHECK_ARG(env, value)",3,2193,1
114119,RETURN,-1,,"CHECK_ARG(env, result)",3,2194,1
114155,RETURN,-1,,return napi_clear_last_error(env);,5,2201,2
114175,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",3,2204,1
114223,RETURN,-1,,return napi_clear_last_error(env);,3,2218,10
114244,RETURN,-1,,CHECK_ENV(env),3,2225,1
114259,RETURN,-1,,"CHECK_ARG(env, value)",3,2226,1
114276,RETURN,-1,,"CHECK_ARG(env, result)",3,2227,1
114293,RETURN,-1,,"CHECK_ARG(env, lossless)",3,2228,1
114330,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2232,1
114346,RETURN,-1,,return napi_clear_last_error(env);,3,2236,8
114367,RETURN,-1,,CHECK_ENV(env),3,2243,1
114382,RETURN,-1,,"CHECK_ARG(env, value)",3,2244,1
114399,RETURN,-1,,"CHECK_ARG(env, result)",3,2245,1
114416,RETURN,-1,,"CHECK_ARG(env, lossless)",3,2246,1
114453,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2250,1
114469,RETURN,-1,,return napi_clear_last_error(env);,3,2254,8
114491,RETURN,-1,,CHECK_ENV(env),3,2262,1
114506,RETURN,-1,,"CHECK_ARG(env, value)",3,2263,1
114523,RETURN,-1,,"CHECK_ARG(env, word_count)",3,2264,1
114560,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2268,1
114613,RETURN,-1,,"CHECK_ARG(env, sign_bit)",5,2277,1
114630,RETURN,-1,,"CHECK_ARG(env, words)",5,2278,1
114647,RETURN,-1,,return napi_clear_last_error(env);,3,2284,11
114667,RETURN,-1,,CHECK_ENV(env),3,2292,1
114682,RETURN,-1,,"CHECK_ARG(env, value)",3,2293,1
114699,RETURN,-1,,"CHECK_ARG(env, result)",3,2294,1
114736,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBoolean(), napi_boolean_expected)",3,2297,1
114751,RETURN,-1,,return napi_clear_last_error(env);,3,2301,7
114773,RETURN,-1,,CHECK_ENV(env),3,2314,1
114788,RETURN,-1,,"CHECK_ARG(env, value)",3,2315,1
114825,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2318,1
114846,RETURN,-1,,"CHECK_ARG(env, result)",5,2321,1
114918,RETURN,-1,,return napi_clear_last_error(env);,3,2339,6
114940,RETURN,-1,,CHECK_ENV(env),3,2352,1
114955,RETURN,-1,,"CHECK_ARG(env, value)",3,2353,1
114992,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2356,1
115013,RETURN,-1,,"CHECK_ARG(env, result)",5,2359,1
115092,RETURN,-1,,return napi_clear_last_error(env);,3,2377,6
115114,RETURN,-1,,CHECK_ENV(env),3,2393,1
115129,RETURN,-1,,"CHECK_ARG(env, value)",3,2394,1
115166,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2397,1
115187,RETURN,-1,,"CHECK_ARG(env, result)",5,2400,1
115259,RETURN,-1,,return napi_clear_last_error(env);,3,2418,6
115279,RETURN,-1,,NAPI_PREAMBLE(env),3,2424,1
115293,RETURN,-1,,NAPI_PREAMBLE(env),3,2424,1
115307,RETURN,-1,,NAPI_PREAMBLE(env),3,2424,1
115336,RETURN,-1,,"CHECK_ARG(env, value)",3,2425,1
115353,RETURN,-1,,"CHECK_ARG(env, result)",3,2426,1
115391,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2432,13
115419,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115433,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115447,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115472,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115485,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115523,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115550,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115570,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,13
115595,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115609,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115623,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115648,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115661,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115699,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115726,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115746,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,13
115771,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
115785,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
115799,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
115824,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
115837,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
115875,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
115902,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
115922,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,13
115943,RETURN,-1,,"return v8impl::Wrap(
      env, js_object, native_object, finalize_cb, finalize_hint, result);",3,2463,1
115961,RETURN,-1,,"return v8impl::Unwrap(env, obj, result, v8impl::KeepWrap);",3,2470,1
115979,RETURN,-1,,"return v8impl::Unwrap(env, obj, result, v8impl::RemoveWrap);",3,2476,1
116009,RETURN,-1,,NAPI_PREAMBLE(env),3,2484,1
116023,RETURN,-1,,NAPI_PREAMBLE(env),3,2484,1
116037,RETURN,-1,,NAPI_PREAMBLE(env),3,2484,1
116066,RETURN,-1,,"CHECK_ARG(env, result)",3,2485,1
116123,RETURN,-1,,return napi_clear_last_error(env);,3,2505,13
116143,RETURN,-1,,NAPI_PREAMBLE(env),3,2511,1
116157,RETURN,-1,,NAPI_PREAMBLE(env),3,2511,1
116171,RETURN,-1,,NAPI_PREAMBLE(env),3,2511,1
116228,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2514,1
116261,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2514,1
116291,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, type_tag)",3,2515,1
116342,RETURN,-1,,"CHECK_MAYBE_NOTHING_WITH_PREAMBLE(env, maybe_has, napi_generic_failure)",3,2519,1
116372,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, !maybe_has.FromJust(), napi_invalid_arg)",3,2520,1
116413,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, tag, napi_generic_failure)",3,2525,1
116452,RETURN,-1,,"CHECK_MAYBE_NOTHING_WITH_PREAMBLE(env, maybe_set, napi_generic_failure)",3,2528,1
116480,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, maybe_set.FromJust(), napi_generic_failure)",3,2529,1
116491,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2532,24
116523,RETURN,-1,,NAPI_PREAMBLE(env),3,2539,1
116537,RETURN,-1,,NAPI_PREAMBLE(env),3,2539,1
116551,RETURN,-1,,NAPI_PREAMBLE(env),3,2539,1
116608,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2542,1
116641,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2542,1
116671,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, type_tag)",3,2543,1
116694,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, result)",3,2544,1
116741,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, maybe_value, napi_generic_failure)",3,2548,1
116869,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2573,18
116900,RETURN,-1,,CHECK_ENV(env),3,2579,1
116915,RETURN,-1,,"CHECK_ARG(env, value)",3,2580,1
116932,RETURN,-1,,"CHECK_ARG(env, result)",3,2581,1
116969,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsExternal(), napi_invalid_arg)",3,2584,1
116995,RETURN,-1,,return napi_clear_last_error(env);,3,2589,8
117016,RETURN,-1,,CHECK_ENV(env),3,2599,1
117031,RETURN,-1,,"CHECK_ARG(env, value)",3,2600,1
117048,RETURN,-1,,"CHECK_ARG(env, result)",3,2601,1
117094,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,2607,1
117121,RETURN,-1,,return napi_clear_last_error(env);,3,2615,9
117140,RETURN,-1,,CHECK_ENV(env),3,2623,1
117155,RETURN,-1,,"CHECK_ARG(env, ref)",3,2624,1
117164,RETURN,-1,,return napi_clear_last_error(env);,3,2628,4
117184,RETURN,-1,,CHECK_ENV(env),3,2641,1
117199,RETURN,-1,,"CHECK_ARG(env, ref)",3,2642,1
117226,RETURN,-1,,return napi_clear_last_error(env);,3,2651,8
117246,RETURN,-1,,CHECK_ENV(env),3,2663,1
117261,RETURN,-1,,"CHECK_ARG(env, ref)",3,2664,1
117280,RETURN,-1,,"return napi_set_last_error(env, napi_generic_failure);",5,2669,1
117300,RETURN,-1,,return napi_clear_last_error(env);,3,2678,9
117320,RETURN,-1,,CHECK_ENV(env),3,2689,1
117335,RETURN,-1,,"CHECK_ARG(env, ref)",3,2690,1
117352,RETURN,-1,,"CHECK_ARG(env, result)",3,2691,1
117374,RETURN,-1,,return napi_clear_last_error(env);,3,2696,7
117393,RETURN,-1,,CHECK_ENV(env),3,2703,1
117408,RETURN,-1,,"CHECK_ARG(env, result)",3,2704,1
117429,RETURN,-1,,return napi_clear_last_error(env);,3,2709,5
117448,RETURN,-1,,CHECK_ENV(env),3,2716,1
117463,RETURN,-1,,"CHECK_ARG(env, scope)",3,2717,1
117475,RETURN,-1,,return napi_handle_scope_mismatch;,5,2719,1
117487,RETURN,-1,,return napi_clear_last_error(env);,3,2724,6
117506,RETURN,-1,,CHECK_ENV(env),3,2731,1
117521,RETURN,-1,,"CHECK_ARG(env, result)",3,2732,1
117542,RETURN,-1,,return napi_clear_last_error(env);,3,2737,5
117561,RETURN,-1,,CHECK_ENV(env),3,2744,1
117576,RETURN,-1,,"CHECK_ARG(env, scope)",3,2745,1
117588,RETURN,-1,,return napi_handle_scope_mismatch;,5,2747,1
117600,RETURN,-1,,return napi_clear_last_error(env);,3,2752,6
117621,RETURN,-1,,CHECK_ENV(env),3,2761,1
117636,RETURN,-1,,"CHECK_ARG(env, scope)",3,2762,1
117653,RETURN,-1,,"CHECK_ARG(env, escapee)",3,2763,1
117670,RETURN,-1,,"CHECK_ARG(env, result)",3,2764,1
117706,RETURN,-1,,return napi_clear_last_error(env);,5,2771,2
117709,RETURN,-1,,"return napi_set_last_error(env, napi_escape_called_twice);",3,2773,8
117732,RETURN,-1,,NAPI_PREAMBLE(env),3,2781,1
117746,RETURN,-1,,NAPI_PREAMBLE(env),3,2781,1
117760,RETURN,-1,,NAPI_PREAMBLE(env),3,2781,1
117789,RETURN,-1,,"CHECK_ARG(env, constructor)",3,2782,1
117811,RETURN,-1,,"CHECK_ARG(env, argv)",5,2784,1
117828,RETURN,-1,,"CHECK_ARG(env, result)",3,2786,1
117871,RETURN,-1,,"CHECK_TO_FUNCTION(env, ctor, constructor)",3,2791,1
117900,RETURN,-1,,"CHECK_TO_FUNCTION(env, ctor, constructor)",3,2791,1
117941,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_pending_exception)",3,2798,1
117957,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2801,17
117989,RETURN,-1,,NAPI_PREAMBLE(env),3,2808,1
118003,RETURN,-1,,NAPI_PREAMBLE(env),3,2808,1
118017,RETURN,-1,,NAPI_PREAMBLE(env),3,2808,1
118046,RETURN,-1,,"CHECK_ARG(env, object)",3,2809,1
118063,RETURN,-1,,"CHECK_ARG(env, result)",3,2810,1
118112,RETURN,-1,,"CHECK_TO_OBJECT(env, context, ctor, constructor)",3,2817,1
118139,RETURN,-1,,"CHECK_TO_OBJECT(env, context, ctor, constructor)",3,2817,1
118162,RETURN,-1,,"return napi_set_last_error(env, napi_function_expected);",5,2823,2
118209,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, maybe_result, status)",3,2830,1
118221,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2832,21
118251,RETURN,-1,,CHECK_ENV(env),3,2839,1
118266,RETURN,-1,,"CHECK_ARG(env, result)",3,2840,1
118281,RETURN,-1,,return napi_clear_last_error(env);,3,2843,4
118300,RETURN,-1,,CHECK_ENV(env),3,2850,1
118315,RETURN,-1,,"CHECK_ARG(env, result)",3,2851,1
118328,RETURN,-1,,"return napi_get_undefined(env, result);",5,2854,1
118365,RETURN,-1,,return napi_clear_last_error(env);,3,2861,4
118385,RETURN,-1,,CHECK_ENV(env),3,2867,1
118400,RETURN,-1,,"CHECK_ARG(env, value)",3,2868,1
118417,RETURN,-1,,"CHECK_ARG(env, result)",3,2869,1
118444,RETURN,-1,,return napi_clear_last_error(env);,3,2874,6
118465,RETURN,-1,,NAPI_PREAMBLE(env),3,2881,1
118479,RETURN,-1,,NAPI_PREAMBLE(env),3,2881,1
118493,RETURN,-1,,NAPI_PREAMBLE(env),3,2881,1
118522,RETURN,-1,,"CHECK_ARG(env, result)",3,2882,1
118571,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2895,13
118617,RETURN,1,,"STATUS_CALL(napi_create_external_buffer(
      env, byte_length, external_data, finalize_cb, finalize_hint, &buffer))",3,2909,1
118620,RETURN,-1,,"return napi_get_typedarray_info(
      env, buffer, nullptr, nullptr, nullptr, result, nullptr);",3,2911,3
118647,RETURN,-1,,CHECK_ENV(env),3,2919,1
118662,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2920,1
118699,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2923,1
118742,RETURN,-1,,return napi_clear_last_error(env);,3,2935,8
118762,RETURN,-1,,CHECK_ENV(env),3,2941,1
118777,RETURN,-1,,"CHECK_ARG(env, value)",3,2942,1
118794,RETURN,-1,,"CHECK_ARG(env, result)",3,2943,1
118821,RETURN,-1,,return napi_clear_last_error(env);,3,2948,6
118844,RETURN,-1,,NAPI_PREAMBLE(env),3,2957,1
118858,RETURN,-1,,NAPI_PREAMBLE(env),3,2957,1
118872,RETURN,-1,,NAPI_PREAMBLE(env),3,2957,1
118901,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2958,1
118918,RETURN,-1,,"CHECK_ARG(env, result)",3,2959,1
118955,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2962,1
119017,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int8Array, 1, buffer, byte_offset, length, typedArray)",7,2969,2
119041,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int8Array, 1, buffer, byte_offset, length, typedArray)",7,2969,2
119090,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8Array, 1, buffer, byte_offset, length, typedArray)",7,2973,2
119114,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8Array, 1, buffer, byte_offset, length, typedArray)",7,2973,2
119163,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8ClampedArray, 1, buffer, byte_offset, length, typedArray)",7,2977,2
119187,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8ClampedArray, 1, buffer, byte_offset, length, typedArray)",7,2977,2
119236,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int16Array, 2, buffer, byte_offset, length, typedArray)",7,2981,2
119260,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int16Array, 2, buffer, byte_offset, length, typedArray)",7,2981,2
119309,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint16Array, 2, buffer, byte_offset, length, typedArray)",7,2985,2
119333,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint16Array, 2, buffer, byte_offset, length, typedArray)",7,2985,2
119382,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int32Array, 4, buffer, byte_offset, length, typedArray)",7,2989,2
119406,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int32Array, 4, buffer, byte_offset, length, typedArray)",7,2989,2
119455,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint32Array, 4, buffer, byte_offset, length, typedArray)",7,2993,2
119479,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint32Array, 4, buffer, byte_offset, length, typedArray)",7,2993,2
119528,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float32Array, 4, buffer, byte_offset, length, typedArray)",7,2997,2
119552,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float32Array, 4, buffer, byte_offset, length, typedArray)",7,2997,2
119601,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float64Array, 8, buffer, byte_offset, length, typedArray)",7,3001,2
119625,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float64Array, 8, buffer, byte_offset, length, typedArray)",7,3001,2
119674,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigInt64Array, 8, buffer, byte_offset, length, typedArray)",7,3005,2
119698,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigInt64Array, 8, buffer, byte_offset, length, typedArray)",7,3005,2
119747,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigUint64Array, 8, buffer, byte_offset, length, typedArray)",7,3009,2
119771,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigUint64Array, 8, buffer, byte_offset, length, typedArray)",7,3009,2
119790,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,3013,46
119802,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3017,15
119837,RETURN,-1,,CHECK_ENV(env),3,3027,1
119852,RETURN,-1,,"CHECK_ARG(env, typedarray)",3,3028,1
119889,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsTypedArray(), napi_invalid_arg)",3,3031,1
120123,RETURN,-1,,return napi_clear_last_error(env);,3,3084,13
120145,RETURN,-1,,NAPI_PREAMBLE(env),3,3092,1
120159,RETURN,-1,,NAPI_PREAMBLE(env),3,3092,1
120173,RETURN,-1,,NAPI_PREAMBLE(env),3,3092,1
120202,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3093,1
120219,RETURN,-1,,"CHECK_ARG(env, result)",3,3094,1
120256,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,3097,1
120289,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,3105,2
120320,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3111,15
120351,RETURN,-1,,CHECK_ENV(env),3,3117,1
120366,RETURN,-1,,"CHECK_ARG(env, value)",3,3118,1
120383,RETURN,-1,,"CHECK_ARG(env, result)",3,3119,1
120410,RETURN,-1,,return napi_clear_last_error(env);,3,3124,6
120433,RETURN,-1,,CHECK_ENV(env),3,3133,1
120448,RETURN,-1,,"CHECK_ARG(env, dataview)",3,3134,1
120485,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsDataView(), napi_invalid_arg)",3,3137,1
120584,RETURN,-1,,return napi_clear_last_error(env);,3,3164,12
120603,RETURN,-1,,CHECK_ENV(env),3,3168,1
120618,RETURN,-1,,"CHECK_ARG(env, result)",3,3169,1
120629,RETURN,-1,,return napi_clear_last_error(env);,3,3171,4
120649,RETURN,-1,,NAPI_PREAMBLE(env),3,3177,1
120663,RETURN,-1,,NAPI_PREAMBLE(env),3,3177,1
120677,RETURN,-1,,NAPI_PREAMBLE(env),3,3177,1
120706,RETURN,-1,,"CHECK_ARG(env, deferred)",3,3178,1
120723,RETURN,-1,,"CHECK_ARG(env, promise)",3,3179,1
120758,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,3182,1
120802,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3190,19
120823,RETURN,-1,,"return v8impl::ConcludeDeferred(env, deferred, resolution, true);",3,3196,1
120839,RETURN,-1,,"return v8impl::ConcludeDeferred(env, deferred, resolution, false);",3,3202,1
120865,RETURN,-1,,CHECK_ENV(env),3,3208,1
120880,RETURN,-1,,"CHECK_ARG(env, value)",3,3209,1
120897,RETURN,-1,,"CHECK_ARG(env, is_promise)",3,3210,1
120913,RETURN,-1,,return napi_clear_last_error(env);,3,3214,5
120933,RETURN,-1,,NAPI_PREAMBLE(env),3,3220,1
120947,RETURN,-1,,NAPI_PREAMBLE(env),3,3220,1
120961,RETURN,-1,,NAPI_PREAMBLE(env),3,3220,1
120990,RETURN,-1,,"CHECK_ARG(env, result)",3,3221,1
121031,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_date, napi_generic_failure)",3,3224,1
121047,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3228,11
121078,RETURN,-1,,CHECK_ENV(env),3,3234,1
121093,RETURN,-1,,"CHECK_ARG(env, value)",3,3235,1
121110,RETURN,-1,,"CHECK_ARG(env, is_date)",3,3236,1
121126,RETURN,-1,,return napi_clear_last_error(env);,3,3240,5
121146,RETURN,-1,,NAPI_PREAMBLE(env),3,3246,1
121160,RETURN,-1,,NAPI_PREAMBLE(env),3,3246,1
121174,RETURN,-1,,NAPI_PREAMBLE(env),3,3246,1
121203,RETURN,-1,,"CHECK_ARG(env, value)",3,3247,1
121220,RETURN,-1,,"CHECK_ARG(env, result)",3,3248,1
121257,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsDate(), napi_date_expected)",3,3251,1
121283,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3256,13
121314,RETURN,-1,,NAPI_PREAMBLE(env),3,3262,1
121328,RETURN,-1,,NAPI_PREAMBLE(env),3,3262,1
121342,RETURN,-1,,NAPI_PREAMBLE(env),3,3262,1
121371,RETURN,-1,,"CHECK_ARG(env, script)",3,3263,1
121388,RETURN,-1,,"CHECK_ARG(env, result)",3,3264,1
121415,RETURN,-1,,"return napi_set_last_error(env, napi_string_expected);",5,3269,1
121462,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_script, napi_generic_failure)",3,3275,1
121493,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, script_result, napi_generic_failure)",3,3278,1
121509,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3281,19
121543,RETURN,-1,,CHECK_ENV(env),3,3292,1
121558,RETURN,-1,,"CHECK_ARG(env, js_object)",3,3293,1
121575,RETURN,-1,,"CHECK_ARG(env, finalize_cb)",3,3294,1
121612,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, v8_value->IsObject(), napi_invalid_arg)",3,3297,1
121661,RETURN,-1,,return napi_clear_last_error(env);,3,3310,11
121681,RETURN,-1,,CHECK_ENV(env),3,3316,1
121696,RETURN,-1,,"CHECK_ARG(env, adjusted_value)",3,3317,1
121711,RETURN,-1,,return napi_clear_last_error(env);,3,3322,4
121732,RETURN,-1,,CHECK_ENV(env),3,3329,1
121770,RETURN,-1,,return napi_clear_last_error(env);,3,3341,6
121789,RETURN,-1,,CHECK_ENV(env),3,3345,1
121804,RETURN,-1,,"CHECK_ARG(env, data)",3,3346,1
121829,RETURN,-1,,return napi_clear_last_error(env);,3,3352,6
121848,RETURN,-1,,CHECK_ENV(env),3,3357,1
121863,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3358,1
121900,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, value->IsArrayBuffer(), napi_arraybuffer_expected)",3,3361,1
121936,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, it->IsDetachable(), napi_detachable_arraybuffer_expected)",3,3365,1
121952,RETURN,-1,,return napi_clear_last_error(env);,3,3370,8
121972,RETURN,-1,,CHECK_ENV(env),3,3376,1
121987,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3377,1
122004,RETURN,-1,,"CHECK_ARG(env, result)",3,3378,1
122039,RETURN,-1,,return napi_clear_last_error(env);,3,3385,6
122185,RETURN,-1,,return v8impl::PersistentToLocal::Strong(context_persistent);,5,63,1
122214,RETURN,-1,,return true;,43,71,1
122228,RETURN,-1,,return;,7,75,1
122240,RETURN,-1,,return this->isolate->IsExecutionTerminating() || !can_call_into_js();,5,82,1
122416,RETURN,-1,,return napi_ok;,3,163,5
122447,RETURN,-1,,return error_code;,3,173,4
122462,RETURN,-1,,return reinterpret_cast<napi_value>(*local);,3,298,1
122490,RETURN,-1,,return local;,3,304,3
122513,RETURN,-1,,"return new Finalizer(env, finalize_callback, finalize_data, finalize_hint);",5,326,1
122524,RETURN,-1,,return finalize_callback_;,30,329,1
122530,RETURN,-1,,return finalize_data_;,18,330,1
122536,RETURN,-1,,return finalize_hint_;,18,331,1
122618,RETURN,-1,,return ownership_;,27,390,1
122728,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,35,1
122736,RETURN,-1,,return true;,3,40,1
122798,RETURN,-1,,return true;,5,52,2
122800,RETURN,-1,,return value->IsTrue();,3,54,9
122884,RETURN,-1,,return value_int;,3,69,11
122965,RETURN,-1,,return value_int;,3,84,11
123056,RETURN,-1,,return value_int;,3,106,13
123202,RETURN,-1,,return value_int;,3,140,17
123519,RETURN,-1,,return this;,40,38,1
123646,RETURN,-1,,return value_int;,3,73,11
123729,RETURN,-1,,return value_int;,3,87,11
123828,RETURN,1,,return value_int;,52,108,1
123908,RETURN,-1,,return value_int;,3,122,20
123925,RETURN,-1,,return ret;,3,128,3
123942,RETURN,-1,,return ret;,3,134,3
124369,RETURN,-1,,return isolate;,3,23,8
124479,RETURN,-1,,return false;,5,54,1
124493,RETURN,-1,,return true;,3,58,12
124559,RETURN,-1,,return {};,5,72,1
124580,RETURN,-1,,return {};,5,76,1
124585,RETURN,-1,,return utf8_value.ToString();,3,79,13
124655,RETURN,-1,,return {};,5,93,1
124670,RETURN,-1,,return {};,5,96,1
124675,RETURN,-1,,return false;,5,99,1
124697,RETURN,-1,,return {};,5,103,1
124698,RETURN,-1,,return value->BooleanValue(isolate);,3,105,14
124879,RETURN,-1,,return ret;,3,43,10
124892,RETURN,1,,return str;,26,47,1
124957,RETURN,-1,,return out;,3,66,8
125016,RETURN,-1,,return ENOTSUP;,3,437,1
125028,RETURN,-1,,"return ""Mapping to large pages is not supported."";",7,444,3
125032,RETURN,-1,,"return ""Large pages are not enabled."";",7,447,6
125036,RETURN,-1,,"return ""failed to find text region"";",7,450,9
125041,RETURN,-1,,"return ""Mapping code to large pages failed. Reverting to default page ""
          ""size."";",7,453,12
125045,RETURN,-1,,"return ""OK"";",7,457,15
125048,RETURN,-1,,"return ""Unknown error"";",7,460,17
125113,RETURN,-1,,return result;,5,388,3
125288,RETURN,1,,return {};,22,82,1
125289,RETURN,-1,,return obj.As<Object>()->GetCreationContext().ToLocalChecked();,3,83,3
125344,RETURN,-1,,return it->second;,7,91,1
125348,RETURN,-1,,return nullptr;,3,94,4
125376,RETURN,-1,,return nullptr;,5,100,1
125378,RETURN,-1,,return module_wrap_it->second;,3,102,4
125879,RETURN,-1,,return;,9,214,2
125901,RETURN,-1,,return;,9,221,3
125919,RETURN,-1,,return;,5,227,1
126091,RETURN,-1,,return assertions;,3,265,3
126146,RETURN,1,,return;,5,281,1
126309,RETURN,-1,,return;,7,313,1
126331,RETURN,-1,,return;,7,320,2
126494,RETURN,-1,,return;,5,351,5
126728,RETURN,1,,return;,7,411,1
126766,RETURN,-1,,return;,5,426,2
126841,RETURN,-1,,"return env->ThrowError(
          ""cannot get namespace, module has not been instantiated"");",7,443,5
127133,RETURN,-1,,return MaybeLocal<Module>();,5,509,4
127169,RETURN,-1,,return MaybeLocal<Module>();,5,521,2
127186,RETURN,-1,,return MaybeLocal<Module>();,5,527,2
127217,RETURN,-1,,return MaybeLocal<Module>();,5,536,2
127248,RETURN,-1,,return MaybeLocal<Module>();,5,543,2
127256,RETURN,-1,,return module->module_.Get(isolate);,3,548,20
127295,RETURN,-1,,return MaybeLocal<Promise>();,5,561,2
127352,RETURN,1,,return {};,62,572,1
127373,RETURN,-1,,return handle_scope.Escape(resolver->GetPromise());,5,578,4
127564,RETURN,-1,,return handle_scope.Escape(result.As<Promise>());,5,621,2
127573,RETURN,-1,,return MaybeLocal<Promise>();,3,624,22
127653,RETURN,1,,return;,5,645,1
127665,RETURN,-1,,return;,5,649,1
127899,RETURN,-1,,return MaybeLocal<Value>();,5,700,4
127923,RETURN,-1,,return MaybeLocal<Value>();,5,705,1
127935,RETURN,-1,,return resolver->GetPromise();,3,709,17
128851,RETURN,-1,,return scope.EscapeMaybe(realm->ExecuteBootstrapper(main_script_id));,3,268,6
128921,RETURN,-1,,"return scope.EscapeMaybe(StartExecution(env, entry));",5,290,8
128948,RETURN,-1,,return env->RunSnapshotDeserializeMain();,5,300,1
128961,RETURN,-1,,"return StartExecution(env, ""internal/main/worker_thread"");",5,304,1
128990,RETURN,-1,,"return StartExecution(env, ""internal/main/inspect"");",5,313,1
129001,RETURN,-1,,"return StartExecution(env, ""internal/main/print_help"");",5,317,1
129013,RETURN,-1,,"return StartExecution(env, ""internal/main/prof_process"");",5,321,1
129033,RETURN,-1,,"return StartExecution(env, ""internal/main/eval_string"");",5,326,1
129045,RETURN,-1,,"return StartExecution(env, ""internal/main/check_syntax"");",5,330,1
129057,RETURN,-1,,"return StartExecution(env, ""internal/main/test_runner"");",5,334,1
129069,RETURN,-1,,"return StartExecution(env, ""internal/main/watch_mode"");",5,338,1
129084,RETURN,-1,,"return StartExecution(env, ""internal/main/run_main_module"");",5,342,1
129101,RETURN,-1,,"return StartExecution(env, ""internal/main/repl"");",5,346,1
129105,RETURN,-1,,"return StartExecution(env, ""internal/main/eval_stdin"");",3,349,18
129159,RETURN,-1,,return;,5,633,1
129206,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,25,708,1
129242,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument2;,7,716,2
129276,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument2;,5,725,2
129455,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,5,766,1
129459,RETURN,-1,,return ExitCode::kNoFailure;,3,768,18
129471,RETURN,-1,,"return static_cast<int>(
      ProcessGlobalArgsInternal(args, exec_args, errors, settings));",3,775,1
129583,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,29,829,1
129616,RETURN,1,,return exit_code;,46,836,1
129641,RETURN,1,,return exit_code;,44,844,1
129666,RETURN,-1,,return ExitCode::kNoFailure;,3,899,12
129678,RETURN,-1,,"return static_cast<int>(
      InitializeNodeWithArgsInternal(argv, exec_argv, errors, flags));",3,906,1
129754,RETURN,-1,,return result;,7,931,2
129843,RETURN,-1,,return result;,7,949,4
129877,RETURN,-1,,return result;,7,957,6
129906,RETURN,-1,,return result;,7,964,4
129969,RETURN,-1,,return result;,3,1091,14
129977,RETURN,-1,,"return InitializeOncePerProcessInternal(args, flags);",3,1097,1
130096,RETURN,-1,,return exit_code;,7,1151,3
130131,RETURN,-1,,return ExitCode::kGenericUserError;,7,1165,2
130172,RETURN,-1,,return exit_code;,7,1175,1
130238,RETURN,-1,,return exit_code;,3,1198,12
130301,RETURN,-1,,return exit_code;,7,1213,3
130333,RETURN,-1,,return exit_code;,7,1222,2
130397,RETURN,-1,,return exit_code;,3,1243,8
130456,RETURN,-1,,return result->exit_code_enum();,5,1259,1
130495,RETURN,-1,,return sea::BuildSingleExecutableBlob(sea_config);,5,1278,1
130524,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument;,7,1287,2
130528,RETURN,-1,,"return GenerateAndWriteSnapshotData(&snapshot_data, result.get());",5,1289,2
130536,RETURN,-1,,"return LoadSnapshotDataAndRun(&snapshot_data, result.get());",3,1293,17
130563,RETURN,-1,,"return static_cast<int>(StartInternal(argc, argv));",3,1300,2
130580,RETURN,-1,,return 0;,3,1305,2
130593,RETURN,-1,,"return CreateEnvironment(
            setup->isolate_data(), setup->context(),
            std::forward<EnvironmentArgs>(env_args)...);",9,914,1
130618,RETURN,-1,,"return CreateEnvironment(setup->isolate_data(),
                                 setup->context(),
                                 std::forward<EnvironmentArgs>(env_args)...);",9,937,1
130694,RETURN,-1,,"NODE_DEPRECATED(""Use ErrnoException(isolate, ...)"",
                inline v8::Local<v8::Value> ErrnoException(
      int errorno,
      const char* syscall = nullptr,
      const char* message = nullptr,
      const char* path = nullptr) {
  return ErrnoException(v8::Isolate::GetCurrent(),
                        errorno,
                        syscall,
                        message,
                        path);
})",1,151,1
130714,RETURN,-1,,"NODE_DEPRECATED(""Use UVException(isolate, ...)"",
                inline v8::Local<v8::Value> UVException(int errorno,
                                        const char* syscall = nullptr,
                                        const char* message = nullptr,
                                        const char* path = nullptr) {
  return UVException(v8::Isolate::GetCurrent(),
                     errorno,
                     syscall,
                     message,
                     path);
})",1,164,1
130958,RETURN,-1,,"return InitializeOncePerProcess(
      args, static_cast<ProcessInitializationFlags::Flags>(flags_accum));",3,359,4
131706,RETURN,-1,,return ret;,3,919,4
131744,RETURN,-1,,return ret;,3,942,4
131751,RETURN,-1,,"NODE_DEPRECATED(""Use v8::Date::New() directly"",
                inline v8::Local<v8::Value> NODE_UNIXTIME_V8(double time) {
                  return v8::Date::New(
                             v8::Isolate::GetCurrent()->GetCurrentContext(),
                             1000 * time)
                      .ToLocalChecked();
                })",1,946,1
131778,RETURN,-1,,"NODE_DEPRECATED(""Use v8::Date::ValueOf() directly"",
                inline double NODE_V8_UNIXTIME(v8::Local<v8::Date> date) {
  return date->ValueOf() / 1000;
})",1,954,1
132245,RETURN,-1,,"return AsyncCleanupHookHandle(AddEnvironmentCleanupHookInternal(isolate, fun,
      arg));",3,1303,1
132481,RETURN,-1,,return;,7,93,1
132505,RETURN,-1,,return;,7,104,2
132690,RETURN,-1,,return node_env()->can_call_into_js();,3,36,1
132824,RETURN,-1,,"return new BufferFinalizer(
        env, finalize_callback, finalize_data, finalize_hint);",5,123,1
132856,RETURN,1,,return;,51,133,1
132991,RETURN,-1,,return nullptr;,5,181,5
133011,RETURN,-1,,return result;,3,196,5
133096,RETURN,-1,,return napi_queue_full;,9,242,1
133111,RETURN,-1,,return napi_invalid_arg;,9,249,1
133117,RETURN,-1,,return napi_closing;,9,252,2
133127,RETURN,-1,,return napi_ok;,7,257,3
133141,RETURN,-1,,return napi_closing;,7,265,1
133145,RETURN,-1,,return napi_ok;,5,270,5
133162,RETURN,-1,,return napi_invalid_arg;,7,277,1
133197,RETURN,-1,,return napi_ok;,5,292,6
133270,RETURN,-1,,return napi_ok;,9,313,1
133289,RETURN,-1,,return napi_generic_failure;,5,332,7
133300,RETURN,-1,,return napi_ok;,5,338,2
133311,RETURN,-1,,return napi_ok;,5,344,2
133317,RETURN,-1,,return context;,28,347,1
133517,RETURN,-1,,return has_more;,5,419,9
133576,RETURN,-1,,return;,7,441,1
133611,RETURN,-1,,return;,7,458,1
133652,RETURN,-1,,return;,9,476,2
133675,RETURN,-1,,return;,9,483,2
133836,RETURN,-1,,"return node::InternalMakeCallback(node_env(),
                                      resource(),
                                      recv,
                                      callback,
                                      argc,
                                      argv,
                                      {async_id_, trigger_async_id_});",5,570,2
133867,RETURN,-1,,return it;,5,584,5
133907,RETURN,-1,,return env_->node_env();,42,596,1
133916,RETURN,-1,,return resource_.Get(node_env()->isolate());,5,598,1
133929,RETURN,-1,,"return {async_id_, trigger_async_id_};",5,601,1
134036,RETURN,-1,,return node_api_context_register_func<NODE_API_DEFAULT_MODULE_API_VERSION>;,5,680,1
134045,RETURN,-1,,return node_api_context_register_func<9>;,5,682,1
134056,RETURN,-1,,return node_api_context_register_func<NAPI_VERSION_EXPERIMENTAL>;,5,684,1
134067,RETURN,-1,,return nullptr;,5,687,2
134103,RETURN,-1,,return;,5,701,3
134222,RETURN,-1,,"return {
      -1,
      mod->nm_flags | NM_F_DELETEME,
      nullptr,
      mod->nm_filename,
      nullptr,
      napi_module_register_cb,
      mod->nm_modname,
      const_cast<napi_module*>(mod),  // priv
      nullptr,
  };",3,742,1
134260,RETURN,-1,,CHECK_ENV(env),3,766,1
134275,RETURN,-1,,"CHECK_ARG(env, fun)",3,767,1
134289,RETURN,-1,,return napi_ok;,3,771,4
134308,RETURN,-1,,CHECK_ENV(env),3,777,1
134323,RETURN,-1,,"CHECK_ARG(env, fun)",3,778,1
134337,RETURN,-1,,return napi_ok;,3,782,4
134469,RETURN,-1,,CHECK_ENV(env),3,825,1
134484,RETURN,-1,,"CHECK_ARG(env, hook)",3,826,1
134506,RETURN,-1,,return napi_clear_last_error(env);,3,833,6
134519,RETURN,1,,return napi_invalid_arg;,33,838,1
134523,RETURN,-1,,return napi_ok;,3,842,3
134541,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134555,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134569,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134598,RETURN,-1,,"CHECK_ARG(env, err)",3,847,1
134625,RETURN,-1,,return napi_clear_last_error(env);,3,852,10
134720,RETURN,-1,,CHECK_ENV(env),3,884,1
134735,RETURN,-1,,"CHECK_ARG(env, result)",3,885,1
134753,RETURN,-1,,return napi_clear_last_error(env);,3,892,6
134772,RETURN,-1,,CHECK_ENV(env),3,899,1
134787,RETURN,-1,,"CHECK_ARG(env, scope)",3,900,1
134799,RETURN,-1,,return napi_callback_scope_mismatch;,5,902,1
134811,RETURN,-1,,return napi_clear_last_error(env);,3,908,5
134832,RETURN,-1,,CHECK_ENV(env),3,915,1
134847,RETURN,-1,,"CHECK_ARG(env, async_resource_name)",3,916,1
134864,RETURN,-1,,"CHECK_ARG(env, result)",3,917,1
134921,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8_resource, async_resource)",5,925,1
134948,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8_resource, async_resource)",5,925,1
135003,RETURN,-1,,"CHECK_TO_STRING(env, context, v8_resource_name, async_resource_name)",3,933,1
135030,RETURN,-1,,"CHECK_TO_STRING(env, context, v8_resource_name, async_resource_name)",3,933,1
135059,RETURN,-1,,return napi_clear_last_error(env);,3,943,15
135078,RETURN,-1,,CHECK_ENV(env),3,948,1
135093,RETURN,-1,,"CHECK_ARG(env, async_context)",3,949,1
135106,RETURN,-1,,return napi_clear_last_error(env);,3,956,6
135130,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
135144,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
135158,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
135187,RETURN,-1,,"CHECK_ARG(env, recv)",3,967,1
135209,RETURN,-1,,"CHECK_ARG(env, argv)",5,969,1
135254,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8recv, recv)",3,975,1
135281,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8recv, recv)",3,975,1
135317,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,978,1
135346,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,978,1
135420,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,1001,1
135441,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, callback_result, napi_generic_failure)",5,1003,1
135462,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1010,17
135494,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135508,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135522,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135551,RETURN,-1,,"CHECK_ARG(env, result)",3,1018,1
135591,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1022,1
135633,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1032,13
135667,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135681,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135695,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135724,RETURN,-1,,"CHECK_ARG(env, result)",3,1042,1
135790,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1061,1
135806,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1064,15
135839,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
135853,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
135867,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
135896,RETURN,-1,,"CHECK_ARG(env, result)",3,1077,1
135939,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1082,1
135981,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1091,13
136012,RETURN,-1,,CHECK_ENV(env),3,1097,1
136027,RETURN,-1,,"CHECK_ARG(env, value)",3,1098,1
136044,RETURN,-1,,"CHECK_ARG(env, result)",3,1099,1
136063,RETURN,-1,,return napi_clear_last_error(env);,3,1102,5
136084,RETURN,-1,,CHECK_ENV(env),3,1109,1
136099,RETURN,-1,,"CHECK_ARG(env, value)",3,1110,1
136149,RETURN,-1,,return napi_clear_last_error(env);,3,1121,6
136168,RETURN,-1,,CHECK_ENV(env),3,1126,1
136183,RETURN,-1,,"CHECK_ARG(env, result)",3,1127,1
136209,RETURN,-1,,return napi_clear_last_error(env);,3,1131,6
136224,RETURN,-1,,return napi_ok;,7,1140,3
136228,RETURN,-1,,return napi_invalid_arg;,7,1142,6
136232,RETURN,-1,,return napi_cancelled;,7,1144,9
136235,RETURN,-1,,return napi_generic_failure;,7,1146,11
136261,RETURN,-1,,"return new Work(
        env, async_resource, async_resource_name, execute, complete, data);",5,1178,1
136293,RETURN,1,,return;,31,1187,1
136332,RETURN,-1,,CHECK_ENV(env),3,1230,1
136347,RETURN,-1,,"CHECK_ARG(env, execute)",3,1231,1
136364,RETURN,-1,,"CHECK_ARG(env, result)",3,1232,1
136414,RETURN,-1,,"CHECK_TO_OBJECT(env, context, resource, async_resource)",5,1238,1
136441,RETURN,-1,,"CHECK_TO_OBJECT(env, context, resource, async_resource)",5,1238,1
136492,RETURN,-1,,"CHECK_TO_STRING(env, context, resource_name, async_resource_name)",3,1244,1
136519,RETURN,-1,,"CHECK_TO_STRING(env, context, resource_name, async_resource_name)",3,1244,1
136554,RETURN,-1,,return napi_clear_last_error(env);,3,1255,12
136573,RETURN,-1,,CHECK_ENV(env),3,1260,1
136588,RETURN,-1,,"CHECK_ARG(env, work)",3,1261,1
136602,RETURN,-1,,return napi_clear_last_error(env);,3,1265,4
136621,RETURN,-1,,CHECK_ENV(env),3,1269,1
136636,RETURN,-1,,"CHECK_ARG(env, loop)",3,1270,1
136653,RETURN,-1,,return napi_clear_last_error(env);,3,1272,4
136672,RETURN,-1,,CHECK_ENV(env),3,1277,1
136687,RETURN,-1,,"CHECK_ARG(env, work)",3,1278,1
136713,RETURN,1,,"STATUS_CALL(napi_get_uv_event_loop(env, &event_loop))",3,1281,1
136726,RETURN,-1,,return napi_clear_last_error(env);,3,1287,9
136745,RETURN,-1,,CHECK_ENV(env),3,1292,1
136760,RETURN,-1,,"CHECK_ARG(env, work)",3,1293,1
136802,RETURN,-1,,"CALL_UV(env, w->CancelWork())",3,1297,1
136808,RETURN,-1,,return napi_clear_last_error(env);,3,1299,6
136836,RETURN,-1,,CHECK_ENV(env),3,1314,1
136851,RETURN,-1,,"CHECK_ARG(env, async_resource_name)",3,1315,1
136868,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, initial_thread_count > 0, napi_invalid_arg)",3,1316,1
136885,RETURN,-1,,"CHECK_ARG(env, result)",3,1317,1
136920,RETURN,-1,,"CHECK_ARG(env, call_js_cb)",5,1323,1
136942,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8_func, func)",5,1325,1
136971,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8_func, func)",5,1325,1
137041,RETURN,-1,,"CHECK_TO_OBJECT(env, v8_context, v8_resource, async_resource)",5,1334,1
137068,RETURN,-1,,"CHECK_TO_OBJECT(env, v8_context, v8_resource, async_resource)",5,1334,1
137106,RETURN,-1,,"CHECK_TO_STRING(env, v8_context, v8_name, async_resource_name)",3,1338,1
137133,RETURN,-1,,"CHECK_TO_STRING(env, v8_context, v8_name, async_resource_name)",3,1338,1
137189,RETURN,-1,,"return napi_set_last_error(env, status);",3,1362,17
137212,RETURN,-1,,return napi_ok;,3,1371,4
137223,RETURN,-1,,"return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Push(data,
                                                                   is_blocking);",3,1379,2
137239,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Acquire();,3,1386,2
137254,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Release(mode);,3,1392,2
137270,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Unref();,3,1398,2
137285,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Ref();,3,1404,2
137308,RETURN,-1,,CHECK_ENV(env),3,1409,1
137323,RETURN,-1,,"CHECK_ARG(env, result)",3,1410,1
137337,RETURN,-1,,return napi_clear_last_error(env);,3,1413,4
137662,RETURN,-1,,return node::Environment::GetCurrent(context());,5,31,1
137674,RETURN,-1,,return filename.c_str();,44,33,1
137773,RETURN,-1,,return false;,7,476,5
137799,RETURN,-1,,return false;,11,484,3
137827,RETURN,-1,,return true;,9,492,2
137860,RETURN,-1,,return true;,9,500,5
137890,RETURN,-1,,return false;,11,507,3
137918,RETURN,-1,,return true;,9,519,2
137937,RETURN,-1,,return false;,7,537,6
137993,RETURN,-1,,return false;,7,550,3
137995,RETURN,-1,,return true;,5,553,16
138372,RETURN,1,,return nullptr;,27,296,1
138380,RETURN,-1,,return it->second.module;,5,298,8
138413,RETURN,1,,return;,27,306,1
138488,RETURN,-1,,return true;,5,364,2
138496,RETURN,-1,,return false;,3,368,6
138507,RETURN,1,,return;,27,372,1
138536,RETURN,1,,return address;,45,381,1
138538,RETURN,-1,,return nullptr;,3,382,3
138561,RETURN,-1,,return global_handle_map.get_and_increase_refcount(handle_);,3,393,2
138579,RETURN,-1,,return reinterpret_cast<InitializerCallback>(dlib->GetSymbolAddress(name));,3,402,5
138599,RETURN,-1,,"return reinterpret_cast<napi_addon_register_func>(
      dlib->GetSymbolAddress(name));",3,408,5
138612,RETURN,-1,,"return reinterpret_cast<node_api_addon_get_api_version_func>(
      dlib->GetSymbolAddress(STRINGIFY(NODE_API_MODULE_GET_API_VERSION)));",3,414,1
138639,RETURN,-1,,"return THROW_ERR_DLOPEN_DISABLED(
      env, ""Cannot load native addon because loading addons is disabled."");",5,428,1
138659,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(
        env, ""process.dlopen needs at least 2 arguments"");",5,437,1
138691,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env, ""flag argument must be an integer."");",5,443,1
138753,RETURN,-1,,return;,5,452,1
138814,RETURN,-1,,return mp;,3,570,4
138859,RETURN,-1,,return obj;,3,603,6
138927,RETURN,-1,,return scope.Escape(exports);,3,616,9
139011,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(isolate, ""No such binding: %s"", *module_v);",5,635,1
139123,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(
        env, ""No such binding was linked: %s"", *module_name_v);",5,665,1
139225,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(
        env, ""Linked binding has no declared entry point."");",5,681,1
139379,RETURN,-1,,"return DataQueue::CreateInMemoryEntryFromBackingStore(
            store, byte_offset, byte_length);",9,190,3
139429,RETURN,-1,,"return DataQueue::CreateInMemoryEntryFromBackingStore(
          store, 0, byte_length);",7,199,6
139620,RETURN,-1,,return;,7,368,11
139748,RETURN,1,,return;,55,59,1
139976,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Unabled to open file as blob"");",5,95,1
140215,RETURN,-1,,return tmpl;,3,149,3
140223,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(object);,3,153,1
140264,RETURN,1,,return BaseObjectPtr<Blob>();,5,162,1
140287,RETURN,1,,return BaseObjectPtr<Blob>();,5,166,1
140289,RETURN,-1,,"return MakeBaseObject<Blob>(env, obj, data_queue);",3,168,7
140384,RETURN,-1,,return;,7,181,1
140668,RETURN,-1,,"return Create(env,
                this->data_queue_->slice(start, static_cast<uint64_t>(end)));",3,261,1
140703,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,282,1
140776,RETURN,-1,,return tmpl;,3,296,3
140809,RETURN,-1,,return BaseObjectPtr<Blob::Reader>();,5,306,1
140812,RETURN,-1,,"return MakeBaseObject<Blob::Reader>(env, obj, std::move(blob));",3,309,3
140904,RETURN,-1,,return args.GetReturnValue().Set(bob::STATUS_EOS);,5,324,3
140992,RETURN,-1,,return {};,5,389,2
140993,RETURN,-1,,"return Blob::Create(env, data_queue);",3,391,2
141004,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,395,1
141014,RETURN,-1,,return std::make_unique<BlobTransferData>(data_queue_);,3,399,1
141213,RETURN,-1,,return;,5,436,1
141385,RETURN,-1,,return;,7,468,1
141492,RETURN,-1,,return;,5,517,1
141529,RETURN,1,,return BlobBindingData::StoredDataObject {};,5,527,1
141532,RETURN,-1,,return entry->second;,3,528,4
141584,RETURN,-1,,return true;,3,548,1
141606,RETURN,-1,,return info;,3,555,4
141755,RETURN,-1,,return status;,5,23,3
141781,RETURN,-1,,return status;,3,30,5
141864,RETURN,-1,,return eos_;,25,90,1
142117,RETURN,-1,,return ab;,3,138,8
142273,RETURN,1,,return;,29,196,1
142285,RETURN,-1,,return val->IsArrayBufferView();,3,238,1
142295,RETURN,-1,,return obj->IsArrayBufferView();,3,243,1
142320,RETURN,-1,,return static_cast<char*>(ui->Buffer()->Data()) + ui->ByteOffset();,3,250,3
142340,RETURN,-1,,return Data(obj.As<Value>());,3,255,1
142366,RETURN,-1,,return ui->ByteLength();,3,262,3
142391,RETURN,-1,,return ui->ByteLength();,3,269,3
142447,RETURN,1,,return MaybeLocal<Uint8Array>();,5,282,1
142449,RETURN,-1,,return ui;,3,283,6
142474,RETURN,-1,,return MaybeLocal<Uint8Array>();,5,293,2
142476,RETURN,-1,,"return New(env, ab, byte_offset, length);",3,295,4
142508,RETURN,1,,return Local<Object>();,5,306,1
142541,RETURN,-1,,return Local<Object>();,7,315,2
142622,RETURN,1,,return MaybeLocal<Object>();,9,332,1
142624,RETURN,-1,,return scope.Escape(obj);,7,333,5
142630,RETURN,-1,,"return scope.EscapeMaybe(New(isolate, 0));",3,337,9
142667,RETURN,-1,,return MaybeLocal<Object>();,5,347,2
142682,RETURN,1,,return handle_scope.Escape(obj);,5,350,1
142688,RETURN,-1,,return Local<Object>();,3,351,8
142716,RETURN,-1,,return Local<Object>();,5,362,2
142775,RETURN,-1,,return scope.EscapeMaybe(obj);,3,380,9
142806,RETURN,-1,,return MaybeLocal<Object>();,5,389,2
142827,RETURN,1,,return handle_scope.Escape(obj);,5,393,1
142833,RETURN,-1,,return Local<Object>();,3,394,8
142862,RETURN,-1,,return Local<Object>();,5,405,2
142928,RETURN,-1,,return scope.EscapeMaybe(obj);,3,425,9
142964,RETURN,-1,,return MaybeLocal<Object>();,5,439,3
142966,RETURN,-1,,"return handle_scope.EscapeMaybe(
      Buffer::New(env, data, length, callback, hint));",3,441,6
143015,RETURN,-1,,return Local<Object>();,5,456,3
143054,RETURN,-1,,return Local<Object>();,5,464,1
143084,RETURN,1,,return MaybeLocal<Object>();,5,470,1
143086,RETURN,-1,,return scope.Escape(ui);,3,472,9
143119,RETURN,-1,,return MaybeLocal<Object>();,5,483,3
143140,RETURN,1,,return handle_scope.Escape(obj);,5,487,1
143146,RETURN,-1,,return Local<Object>();,3,488,8
143180,RETURN,-1,,return Local<Object>();,7,503,5
143251,RETURN,1,,return handle_scope.Escape(obj);,5,519,1
143257,RETURN,-1,,return Local<Object>();,3,520,10
143373,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,545,1
143411,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[0], 0, &start))",3,549,1
143419,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[0], 0, &start))",3,549,1
143452,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], buffer.length(), &end))",3,550,1
143460,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], buffer.length(), &end))",3,550,1
143497,RETURN,1,,THROW_AND_RETURN_IF_OOB(Just(end <= buffer.length())),3,552,1
143505,RETURN,1,,THROW_AND_RETURN_IF_OOB(Just(end <= buffer.length())),3,552,1
143570,RETURN,-1,,return;,5,566,3
143670,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,585,1
143678,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,585,1
143708,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,586,1
143716,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,586,1
143749,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], source.length(),
                                          &source_end))",3,587,1
143757,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], source.length(),
                                          &source_end))",3,587,1
143774,RETURN,1,,return args.GetReturnValue().Set(0);,5,592,1
143791,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""sourceStart\"" is out of range."");",5,595,1
143919,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &start))",3,618,1
143927,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &start))",3,618,1
143958,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &end))",3,620,1
143966,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &end))",3,620,1
143998,RETURN,1,,return args.GetReturnValue().Set(-2);,5,629,1
144062,RETURN,1,,return;,46,643,1
144075,RETURN,-1,,return;,5,646,6
144210,RETURN,1,,return;,5,678,1
144216,RETURN,1,,return args.GetReturnValue().Set(-1);,5,686,1
144358,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], 0, &offset))",3,717,1
144366,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], 0, &offset))",3,717,1
144379,RETURN,-1,,"return node::THROW_ERR_BUFFER_OUT_OF_BOUNDS(
        env, ""\""offset\"" is outside of buffer bounds"");",5,719,1
144410,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], ts_obj_length - offset,
                                          &max_length))",3,723,1
144418,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], ts_obj_length - offset,
                                          &max_length))",3,723,1
144441,RETURN,1,,return args.GetReturnValue().Set(0);,5,729,1
144561,RETURN,-1,,return result;,3,753,9
144585,RETURN,1,,return 1;,7,764,1
144594,RETURN,1,,return -1;,7,766,1
144604,RETURN,1,,return 1;,7,769,1
144608,RETURN,1,,return -1;,7,771,1
144611,RETURN,-1,,return val;,3,773,2
144698,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,789,1
144706,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,789,1
144736,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,790,1
144744,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,790,1
144777,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], target.length(),
                                          &target_end))",3,791,1
144785,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], target.length(),
                                          &target_end))",3,791,1
144818,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[5], source.length(),
                                          &source_end))",3,793,1
144826,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[5], source.length(),
                                          &source_end))",3,793,1
144842,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""sourceStart\"" is out of range."");",5,797,1
144854,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""targetStart\"" is out of range."");",5,800,1
145047,RETURN,-1,,return length_i64 + offset_i64;,7,848,1
145060,RETURN,-1,,return 0;,7,851,1
145064,RETURN,-1,,return -1;,7,854,1
145076,RETURN,-1,,return offset_i64;,7,859,1
145085,RETURN,-1,,return length_i64;,7,862,1
145092,RETURN,-1,,return -1;,7,865,1
145097,RETURN,-1,,return length_i64 - 1;,7,868,1
145254,RETURN,1,,return;,68,897,1
145278,RETURN,-1,,return;,5,907,2
145284,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,911,1
145300,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,915,1
145332,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,921,1
145361,RETURN,1,,return args.GetReturnValue().Set(-1);,7,929,1
145383,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,932,1
145409,RETURN,1,,return;,57,937,1
145424,RETURN,1,,return args.GetReturnValue().Set(-1);,9,942,1
145497,RETURN,1,,return args.GetReturnValue().Set(-1);,7,962,1
145543,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,973,1
145762,RETURN,-1,,return;,5,1019,2
145768,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1023,1
145784,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1027,1
145816,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1033,1
145844,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,1040,1
146015,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1079,1
146280,RETURN,-1,,"return node::THROW_ERR_INVALID_STATE(
        env, ""Cannot validate on a detached buffer"");",5,1130,1
146357,RETURN,-1,,"return node::THROW_ERR_INVALID_STATE(
        env, ""Cannot validate on a detached buffer"");",5,1145,1
146695,RETURN,-1,,"return {pointer, byte_length};",3,1220,4
147338,RETURN,1,,return false;,5,79,1
147347,RETURN,1,,return false;,5,83,1
147349,RETURN,-1,,return true;,3,86,3
147391,RETURN,-1,,return source->find(id) != source->end();,3,58,3
147420,RETURN,-1,,return result.second;,3,63,3
147532,RETURN,-1,,return config_.ToStringChecked(isolate);,3,82,1
147578,RETURN,-1,,return ids;,3,92,6
147721,RETURN,-1,,return builtin_categories;,3,157,9
147758,RETURN,-1,,return source_it->second.ToStringChecked(isolate);,3,186,6
147950,RETURN,-1,,return {};,5,263,1
148103,RETURN,-1,,return MaybeLocal<Function>();,5,315,1
148194,RETURN,-1,,return scope.Escape(fun);,3,354,28
148302,RETURN,-1,,return maybe;,3,411,8
148377,RETURN,-1,,return MaybeLocal<Value>();,7,433,1
148405,RETURN,-1,,"return CompileAndCall(context, id, arguments.size(), arguments.data(), realm);",3,458,5
148451,RETURN,-1,,return MaybeLocal<Value>();,5,471,1
148464,RETURN,-1,,"return fn->Call(context, undefined, argc, argv);",3,474,5
148558,RETURN,-1,,return all_succeeded;,3,495,7
148742,RETURN,1,,return;,5,537,1
148757,RETURN,1,,return;,5,543,1
148771,RETURN,1,,return;,5,546,1
148786,RETURN,-1,,return;,5,552,1
148864,RETURN,-1,,return;,5,568,1
148879,RETURN,-1,,return;,5,575,1
148893,RETURN,-1,,return;,5,580,1
148908,RETURN,-1,,return;,5,587,1
148922,RETURN,-1,,return;,5,592,1
148937,RETURN,-1,,return;,5,599,1
150286,RETURN,-1,,return result;,5,1057,3
150326,RETURN,-1,,"return Uint32::New(context->GetIsolate(), index)->ToString(context)
      .ToLocalChecked();",3,106,1
150429,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,130,1
150431,RETURN,-1,,"return New(v8_context, env, sandbox_obj, options);",3,132,11
150666,RETURN,-1,,return MaybeLocal<Context>();,7,224,1
150690,RETURN,-1,,return MaybeLocal<Context>();,5,233,1
150692,RETURN,-1,,return scope.Escape(ctx);,3,236,5
150719,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,250,1
150884,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,7,295,1
150909,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,7,302,1
150942,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,315,1
150944,RETURN,-1,,return result;,3,318,20
151265,RETURN,-1,,return;,5,391,2
151373,RETURN,-1,,return Unwrap<ContextifyContext>(context_global.As<Object>());,5,424,1
151382,RETURN,-1,,return nullptr;,3,426,3
151389,RETURN,-1,,return Get(args.This());,3,431,1
151417,RETURN,-1,,return nullptr;,5,437,1
151427,RETURN,-1,,return nullptr;,5,440,1
151429,RETURN,-1,,"return static_cast<ContextifyContext*>(
      context->GetAlignedPointerFromEmbedderData(
          ContextEmbedderIndex::kContextifyContext));",3,442,4
151444,RETURN,-1,,return ctx == nullptr || ctx->context_.IsEmpty();,3,448,1
151473,RETURN,1,,return;,33,458,1
151574,RETURN,1,,return;,33,486,1
151653,RETURN,1,,return;,5,505,1
151693,RETURN,1,,return;,5,525,1
151703,RETURN,1,,return;,45,527,1
151719,RETURN,1,,return;,66,528,1
151822,RETURN,1,,return;,33,554,1
151898,RETURN,1,,return;,33,576,1
151956,RETURN,1,,return;,5,593,1
152079,RETURN,1,,return;,33,636,1
152102,RETURN,1,,return;,5,641,1
152128,RETURN,1,,return;,33,654,1
152153,RETURN,1,,return;,5,659,1
152180,RETURN,1,,return;,33,671,1
152211,RETURN,1,,return;,33,685,1
152242,RETURN,1,,return;,33,698,1
152273,RETURN,1,,return;,33,712,1
152304,RETURN,1,,return;,33,725,1
152327,RETURN,1,,return;,5,730,1
152877,RETURN,-1,,return;,5,865,5
152926,RETURN,-1,,return;,5,881,1
152951,RETURN,1,,return;,5,889,1
152984,RETURN,-1,,return Nothing<bool>();,5,903,1
153021,RETURN,-1,,return Nothing<bool>();,7,912,1
153072,RETURN,-1,,return Nothing<bool>();,9,924,1
153097,RETURN,-1,,return Nothing<bool>();,7,932,1
153099,RETURN,-1,,return Just(true);,3,935,5
153108,RETURN,-1,,"return !value.IsEmpty() &&
         env->script_context_constructor_template()->HasInstance(value);",3,940,1
153320,RETURN,1,,return;,28,985,1
153439,RETURN,1,,return false;,5,1028,1
153456,RETURN,-1,,return false;,5,1033,2
153606,RETURN,1,,return false;,7,1076,1
153666,RETURN,-1,,return false;,5,1102,3
153679,RETURN,-1,,return true;,3,1106,24
154156,RETURN,1,,return;,67,1232,1
154220,RETURN,1,,return;,55,1243,1
154307,RETURN,-1,,return;,5,1265,2
154329,RETURN,-1,,return;,5,1271,1
154373,RETURN,1,,return;,5,1278,1
154389,RETURN,1,,return;,5,1281,1
154411,RETURN,1,,return;,5,1287,1
154449,RETURN,-1,,return;,5,1300,1
154659,RETURN,1,,return;,68,1349,1
154723,RETURN,-1,,return microtask_queue_;,3,1372,1
155113,RETURN,-1,,return false;,3,44,1
155208,RETURN,-1,,return true;,5,102,13
155258,RETURN,-1,,return true;,7,121,2
155265,RETURN,-1,,return false;,3,127,6
155314,RETURN,1,,return;,65,136,1
155407,RETURN,-1,,return;,5,79,1
155795,RETURN,-1,,"FS_TYPE_TO_NAME(OPENDIR, ""opendir"")",5,51,3
155801,RETURN,-1,,"FS_TYPE_TO_NAME(READDIR, ""readdir"")",5,52,6
155807,RETURN,-1,,"FS_TYPE_TO_NAME(CLOSEDIR, ""closedir"")",5,53,9
155810,RETURN,-1,,"return ""unknow"";",7,56,11
155860,RETURN,-1,,return nullptr;,5,112,1
155862,RETURN,-1,,"return new DirHandle(env, obj, dir);",3,115,3
155907,RETURN,1,,return;,16,137,1
156133,RETURN,-1,,return;,5,161,2
156742,RETURN,-1,,return MaybeLocal<Array>();,7,230,2
156768,RETURN,-1,,"return Array::New(env->isolate(), entries.out(), j);",3,237,6
156926,RETURN,-1,,return;,5,246,1
156965,RETURN,-1,,return;,5,257,4
157012,RETURN,-1,,return req_wrap->Reject(error);,5,273,2
157471,RETURN,-1,,return;,7,315,1
157497,RETURN,-1,,return;,7,322,3
157567,RETURN,-1,,return;,7,337,3
157714,RETURN,-1,,return;,5,350,1
158155,RETURN,-1,,return;,7,389,1
158543,RETURN,-1,,"return Just(std::string(*val, init_sz));",5,118,1
158552,RETURN,-1,,return Nothing<std::string>();,3,121,10
158589,RETURN,-1,,"return String::NewFromUtf8(
        isolate, val.data(), NewStringType::kNormal, val.size());",5,131,3
158606,RETURN,-1,,return MaybeLocal<String>();,3,135,5
158667,RETURN,-1,,return -1;,5,161,1
158670,RETURN,-1,,return 0;,3,172,9
158682,RETURN,-1,,return Query(*key);,3,177,3
158776,RETURN,-1,,return Local<Array>();,7,206,2
158787,RETURN,-1,,"return Array::New(isolate, env_v.out(), env_v_index);",3,211,13
158893,RETURN,-1,,return copy;,3,228,9
158911,RETURN,-1,,return it == map_.end() ? Nothing<std::string>() : Just(it->second);,3,234,5
158952,RETURN,1,,return Local<String>();,26,240,1
158961,RETURN,-1,,"return String::NewFromUtf8(
      isolate, val.data(), NewStringType::kNormal, val.size());",3,242,7
159045,RETURN,-1,,return map_.find(key) == map_.end() ? -1 : 0;,3,258,3
159070,RETURN,-1,,return Query(*str);,3,263,3
159157,RETURN,-1,,"return Array::New(isolate, values.data(), values.size());",3,282,6
159176,RETURN,-1,,return std::make_shared<MapKVStore>(*this);,3,286,1
159189,RETURN,-1,,return std::make_shared<MapKVStore>();,3,290,1
159228,RETURN,1,,return Nothing<bool>();,5,299,1
159268,RETURN,1,,return Nothing<bool>();,7,304,1
159314,RETURN,-1,,return Nothing<bool>();,7,311,1
159323,RETURN,-1,,return Just(true);,3,316,10
159430,RETURN,1,,return Nothing<bool>();,14,334,1
159432,RETURN,-1,,return Just(true);,3,336,7
159460,RETURN,-1,,return info.GetReturnValue().SetUndefined();,5,344,1
159572,RETURN,1,,return;,7,373,1
159614,RETURN,-1,,return;,5,380,1
159846,RETURN,-1,,"return EnvSetter(property, desc.value(), info);",7,442,1
159894,RETURN,1,,return;,54,461,1
160106,RETURN,-1,,return maybe_value.ToLocal(&decorated) && decorated->IsTrue();,5,43,5
160118,RETURN,-1,,return false;,3,45,2
160235,RETURN,-1,,return std::string();,5,76,2
160247,RETURN,-1,,return std::string();,5,79,1
160263,RETURN,-1,,return *error_source_utf8;,3,83,21
160317,RETURN,-1,,return sourceline;,5,96,1
160377,RETURN,-1,,return source;,7,109,1
160503,RETURN,-1,,return buf;,5,161,1
160596,RETURN,-1,,"return buf + std::string(underline_buf, off);",3,185,42
160805,RETURN,-1,,return result;,3,234,3
160902,RETURN,-1,,return result;,3,265,8
160916,RETURN,-1,,"return FormatCaughtException(
      isolate, context, try_catch.Exception(), try_catch.Message());",3,272,2
160954,RETURN,1,,return;,26,286,1
161018,RETURN,1,,return;,7,297,1
161042,RETURN,-1,,return;,5,304,1
161089,RETURN,1,,return;,31,315,1
161105,RETURN,-1,,return;,5,321,7
161881,RETURN,-1,,"return {
      codegen_allowed,
      {},
  };",3,586,9
161972,RETURN,-1,,"return """";",7,932,2
162504,RETURN,1,,return;,31,1071,1
162520,RETURN,1,,return;,43,1075,1
162587,RETURN,-1,,return;,5,1085,1
162603,RETURN,-1,,return;,5,1089,1
162799,RETURN,-1,,return;,5,1142,3
162865,RETURN,-1,,return;,5,1169,1
162873,RETURN,-1,,return;,5,1179,1
162906,RETURN,-1,,return;,5,1196,1
162940,RETURN,-1,,return;,5,1214,1
163010,RETURN,-1,,return external_references_;,3,15,2
163260,RETURN,1,,return;,44,490,1
163852,RETURN,-1,,return;,17,1736,9
164299,RETURN,-1,,"return str.substr(start_pos, str_size);",3,113,9
164311,RETURN,-1,,return IsSafeJsInt(value) ? value.As<Integer>()->Value() : -1;,3,117,1
164336,RETURN,-1,,"FS_TYPE_TO_NAME(OPEN, ""open"")",5,125,3
164342,RETURN,-1,,"FS_TYPE_TO_NAME(CLOSE, ""close"")",5,126,6
164348,RETURN,-1,,"FS_TYPE_TO_NAME(READ, ""read"")",5,127,9
164354,RETURN,-1,,"FS_TYPE_TO_NAME(WRITE, ""write"")",5,128,12
164360,RETURN,-1,,"FS_TYPE_TO_NAME(SENDFILE, ""sendfile"")",5,129,15
164366,RETURN,-1,,"FS_TYPE_TO_NAME(STAT, ""stat"")",5,130,18
164372,RETURN,-1,,"FS_TYPE_TO_NAME(LSTAT, ""lstat"")",5,131,21
164378,RETURN,-1,,"FS_TYPE_TO_NAME(FSTAT, ""fstat"")",5,132,24
164384,RETURN,-1,,"FS_TYPE_TO_NAME(FTRUNCATE, ""ftruncate"")",5,133,27
164390,RETURN,-1,,"FS_TYPE_TO_NAME(UTIME, ""utime"")",5,134,30
164396,RETURN,-1,,"FS_TYPE_TO_NAME(FUTIME, ""futime"")",5,135,33
164402,RETURN,-1,,"FS_TYPE_TO_NAME(ACCESS, ""access"")",5,136,36
164408,RETURN,-1,,"FS_TYPE_TO_NAME(CHMOD, ""chmod"")",5,137,39
164414,RETURN,-1,,"FS_TYPE_TO_NAME(FCHMOD, ""fchmod"")",5,138,42
164420,RETURN,-1,,"FS_TYPE_TO_NAME(FSYNC, ""fsync"")",5,139,45
164426,RETURN,-1,,"FS_TYPE_TO_NAME(FDATASYNC, ""fdatasync"")",5,140,48
164432,RETURN,-1,,"FS_TYPE_TO_NAME(UNLINK, ""unlink"")",5,141,51
164438,RETURN,-1,,"FS_TYPE_TO_NAME(RMDIR, ""rmdir"")",5,142,54
164444,RETURN,-1,,"FS_TYPE_TO_NAME(MKDIR, ""mkdir"")",5,143,57
164450,RETURN,-1,,"FS_TYPE_TO_NAME(MKDTEMP, ""mkdtemp"")",5,144,60
164456,RETURN,-1,,"FS_TYPE_TO_NAME(RENAME, ""rename"")",5,145,63
164462,RETURN,-1,,"FS_TYPE_TO_NAME(SCANDIR, ""scandir"")",5,146,66
164468,RETURN,-1,,"FS_TYPE_TO_NAME(LINK, ""link"")",5,147,69
164474,RETURN,-1,,"FS_TYPE_TO_NAME(SYMLINK, ""symlink"")",5,148,72
164480,RETURN,-1,,"FS_TYPE_TO_NAME(READLINK, ""readlink"")",5,149,75
164486,RETURN,-1,,"FS_TYPE_TO_NAME(CHOWN, ""chown"")",5,150,78
164492,RETURN,-1,,"FS_TYPE_TO_NAME(FCHOWN, ""fchown"")",5,151,81
164498,RETURN,-1,,"FS_TYPE_TO_NAME(REALPATH, ""realpath"")",5,152,84
164504,RETURN,-1,,"FS_TYPE_TO_NAME(COPYFILE, ""copyfile"")",5,153,87
164510,RETURN,-1,,"FS_TYPE_TO_NAME(LCHOWN, ""lchown"")",5,154,90
164516,RETURN,-1,,"FS_TYPE_TO_NAME(STATFS, ""statfs"")",5,155,93
164522,RETURN,-1,,"FS_TYPE_TO_NAME(MKSTEMP, ""mkstemp"")",5,156,96
164528,RETURN,-1,,"FS_TYPE_TO_NAME(LUTIME, ""lutime"")",5,157,99
164531,RETURN,-1,,"return ""unknow"";",7,160,101
164617,RETURN,-1,,return nullptr;,5,259,1
164655,RETURN,-1,,return handle;,3,264,8
164796,RETURN,-1,,return UV_ENOSYS;,3,297,1
164813,RETURN,-1,,"return reading_ || closing_ || closed_ ?
      TransferMode::kUntransferable : TransferMode::kTransferable;",3,305,1
164848,RETURN,-1,,return ret;,3,313,5
165094,RETURN,1,,return {};,22,334,1
165103,RETURN,-1,,"return BaseObjectPtr<BaseObject> { FileHandle::New(bd, fd) };",3,338,7
165121,RETURN,1,,return;,28,346,1
165350,RETURN,-1,,return;,5,374,2
165512,RETURN,-1,,return Unwrap<FileHandle>(obj);,3,423,7
165629,RETURN,-1,,return close_resolver.As<Promise>();,5,462,2
165705,RETURN,-1,,return MaybeLocal<Promise>();,5,477,1
165859,RETURN,-1,,return scope.Escape(promise);,3,508,29
165895,RETURN,1,,return;,42,515,1
165930,RETURN,-1,,return fd;,3,530,4
165991,RETURN,1,,return UV_EOF;,5,552,1
165999,RETURN,1,,return 0;,5,557,1
166012,RETURN,-1,,return 0;,5,563,2
166119,RETURN,-1,,return UV_EBUSY;,9,590,1
166279,RETURN,-1,,return 0;,3,665,14
166288,RETURN,-1,,return 0;,3,670,2
166296,RETURN,-1,,"return new FileHandleCloseWrap(this, object);",3,676,1
166316,RETURN,-1,,return 1;,5,682,2
166438,RETURN,-1,,return 0;,3,701,8
166572,RETURN,1,,return;,15,750,1
166649,RETURN,-1,,return false;,5,780,1
166659,RETURN,-1,,return false;,5,785,2
166661,RETURN,-1,,return true;,3,787,3
167440,RETURN,1,,return;,24,840,1
167606,RETURN,1,,return req_wrap->Resolve(Undefined(req_wrap->env()->isolate()));,7,866,1
167661,RETURN,-1,,return req_wrap->Reject(error);,7,873,1
167667,RETURN,-1,,return req_wrap->Resolve(path);,5,875,8
168193,RETURN,-1,,return;,5,925,1
168260,RETURN,-1,,"return req_wrap->Reject(
          UVException(isolate, r, nullptr, req_wrap->syscall(), req->path));",7,945,1
168303,RETURN,-1,,return req_wrap->Reject(error);,7,952,1
169250,RETURN,-1,,return;,5,1039,2
169283,RETURN,-1,,return;,5,1047,2
169364,RETURN,-1,,return;,7,1074,2
170104,RETURN,-1,,return;,7,1171,1
170529,RETURN,-1,,return;,7,1205,1
170949,RETURN,-1,,return;,7,1237,1
171374,RETURN,-1,,return;,7,1277,1
172709,RETURN,-1,,return;,7,1403,1
172774,RETURN,-1,,return;,7,1415,3
175236,RETURN,-1,,return 0;,13,1615,1
175248,RETURN,-1,,return err;,11,1622,1
175376,RETURN,-1,,return UV_ENOTDIR;,15,1644,1
175378,RETURN,-1,,return UV_EEXIST;,13,1646,3
175385,RETURN,1,,return err;,24,1648,1
175391,RETURN,-1,,return 0;,3,1656,5
175468,RETURN,-1,,return err;,3,1751,8
175575,RETURN,-1,,return err;,3,1770,5
175999,RETURN,-1,,return;,11,1814,3
176515,RETURN,-1,,return;,7,1852,1
176580,RETURN,-1,,return;,7,1865,3
177013,RETURN,-1,,return;,7,1910,1
177115,RETURN,-1,,return;,9,1930,4
177172,RETURN,-1,,return;,9,1942,3
177327,RETURN,-1,,return JustVoid();,3,1994,9
177395,RETURN,1,,return;,59,2009,1
177626,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, out, arraysize(out)));",5,2023,3
177893,RETURN,-1,,"return args.GetReturnValue().Set(
          Array::New(isolate, out, arraysize(out)));",7,2047,4
178135,RETURN,1,,return;,59,2080,1
178599,RETURN,1,,return;,59,2118,1
178950,RETURN,-1,,return;,7,2134,1
178965,RETURN,1,,return;,24,2137,1
180628,RETURN,1,,return;,66,2337,1
180835,RETURN,1,,return;,9,2367,1
185889,RETURN,-1,,return;,7,2794,3
185931,RETURN,-1,,return false;,5,2810,2
185989,RETURN,-1,,return false;,5,2891,4
186068,RETURN,-1,,return false;,7,2907,2
186080,RETURN,-1,,return true;,3,2913,11
186147,RETURN,1,,return BindingData::FilePathIsFileReturnType::kIsFile;,16,2937,1
186153,RETURN,-1,,return BindingData::FilePathIsFileReturnType::kIsNotFile;,3,2939,8
186243,RETURN,-1,,return;,5,2972,2
186336,RETURN,-1,,return;,7,2991,2
186347,RETURN,1,,return;,72,2994,1
186385,RETURN,-1,,return args.GetReturnValue().Set(i);,11,3004,3
186407,RETURN,-1,,return;,11,3012,9
186445,RETURN,-1,,return;,5,3026,2
186456,RETURN,1,,return;,70,3029,1
186496,RETURN,-1,,return args.GetReturnValue().Set(i);,9,3040,3
186518,RETURN,-1,,return;,9,3047,9
186533,RETURN,1,,return;,67,3056,1
186601,RETURN,-1,,return;,7,3068,2
186612,RETURN,1,,return;,61,3071,1
186635,RETURN,-1,,return;,5,3077,4
186946,RETURN,-1,,return true;,3,3175,8
186965,RETURN,-1,,return info;,3,3182,5
187528,RETURN,-1,,return binding_data_.get();,3,3313,1
187898,RETURN,-1,,return;,9,1633,1
187974,RETURN,-1,,return code == NGHTTP2_CANCEL;,5,2276,1
188042,RETURN,-1,,return observers[performance::NODE_PERFORMANCE_ENTRY_TYPE_HTTP2] != 0;,3,56,3
188072,RETURN,1,,return;,18,82,1
188088,RETURN,-1,,return;,5,88,2
188101,RETURN,1,,return;,18,94,1
188322,RETURN,-1,,return count;,3,231,9
188353,RETURN,-1,,return callback_.Get(env()->isolate());,3,250,1
188377,RETURN,-1,,"return Pack(session_->env(), count_, entries_);",3,261,1
188397,RETURN,-1,,"return Pack(state->env(), count, entries);",3,267,4
188462,RETURN,-1,,return scope.Escape(Undefined(env->isolate()));,5,284,1
188491,RETURN,-1,,"return scope.Escape(Buffer::New(env, ab, 0, ab->ByteLength())
                          .FromMaybe(Local<Value>()));",3,287,7
188693,RETURN,-1,,"return ""server"";",34,358,3
188697,RETURN,-1,,"return ""client"";",34,359,6
188723,RETURN,-1,,return;,5,374,2
188857,RETURN,-1,,return;,7,410,6
189204,RETURN,-1,,"return std::string(""Http2Session "") + TypeName() + "" ("" +
      std::to_string(static_cast<int64_t>(get_async_id())) + "")"";",3,550,1
189279,RETURN,-1,,"SET(bytes_read_string, received_bytes)",3,569,1
189316,RETURN,-1,,"SET(bytes_written_string, sent_bytes)",3,570,1
189353,RETURN,-1,,"SET(id_string, id)",3,571,1
189396,RETURN,-1,,"SET(time_to_first_byte_string, first_byte)",3,585,1
189439,RETURN,-1,,"SET(time_to_first_byte_sent_string, first_byte_sent)",3,586,1
189482,RETURN,-1,,"SET(time_to_first_header_string, first_header)",3,587,1
189484,RETURN,-1,,return obj;,3,590,8
189541,RETURN,-1,,"SET(bytes_written_string, data_sent)",3,608,1
189578,RETURN,-1,,"SET(bytes_read_string, data_received)",3,609,1
189615,RETURN,-1,,"SET(frames_received_string, frame_count)",3,610,1
189652,RETURN,-1,,"SET(frames_sent_string, frame_sent)",3,611,1
189689,RETURN,-1,,"SET(max_concurrent_streams_string, max_concurrent_streams)",3,612,1
189726,RETURN,-1,,"SET(ping_rtt_string, ping_rtt)",3,613,1
189763,RETURN,-1,,"SET(stream_average_duration_string, stream_average_duration)",3,614,1
189800,RETURN,-1,,"SET(stream_count_string, stream_count)",3,615,1
189835,RETURN,-1,,return MaybeLocal<Object>();,5,624,1
189837,RETURN,-1,,return obj;,3,628,11
189850,RETURN,1,,return;,5,634,1
189909,RETURN,1,,return;,5,654,1
189970,RETURN,1,,return;,5,677,1
190080,RETURN,-1,,return s != streams_.end() ? s->second : BaseObjectPtr<Http2Stream>();,3,731,3
190119,RETURN,-1,,"return streams_.size() < maxSize &&
         has_available_session_memory(sizeof(Http2Stream));",3,742,5
190192,RETURN,1,,return stream;,5,759,1
190210,RETURN,-1,,return stream;,3,765,5
190231,RETURN,1,,return frameLen;,15,775,1
190253,RETURN,-1,,return pad;,3,784,8
190265,RETURN,-1,,return maxPayloadLen;,3,792,2
190445,RETURN,-1,,"return (frame->hd.type == NGHTTP2_PUSH_PROMISE) ?
      frame->push_promise.promised_stream_id :
      frame->hd.stream_id;",3,872,1
190536,RETURN,1,,return NGHTTP2_ERR_CALLBACK_FAILURE;,9,898,1
190546,RETURN,-1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,7,905,3
190571,RETURN,-1,,return 0;,3,912,8
190610,RETURN,1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,5,931,1
190633,RETURN,-1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,5,938,2
190635,RETURN,-1,,return 0;,3,940,8
190673,RETURN,-1,,return session->HandleDataFrame(frame);,7,955,3
190739,RETURN,-1,,return 0;,3,982,6
190784,RETURN,-1,,return 1;,5,999,2
190847,RETURN,-1,,return 0;,3,1013,8
190916,RETURN,-1,,return NGHTTP2_STREAM_CLOSED;,5,1034,3
190920,RETURN,-1,,return NGHTTP2_COMPRESSION_ERROR;,5,1036,6
190924,RETURN,-1,,return NGHTTP2_FRAME_SIZE_ERROR;,5,1038,9
190928,RETURN,-1,,return NGHTTP2_FLOW_CONTROL_ERROR;,5,1040,12
190932,RETURN,-1,,return NGHTTP2_REFUSED_STREAM;,5,1042,15
190940,RETURN,-1,,return NGHTTP2_PROTOCOL_ERROR;,5,1046,22
190943,RETURN,-1,,return NGHTTP2_INTERNAL_ERROR;,5,1048,24
190993,RETURN,-1,,return 0;,5,1076,2
191037,RETURN,-1,,return 0;,3,1092,16
191059,RETURN,-1,,return 0;,3,1100,4
191130,RETURN,1,,return 0;,5,1119,1
191190,RETURN,-1,,return 0;,3,1135,17
191202,RETURN,-1,,return 0;,3,1149,1
191244,RETURN,1,,return 0;,5,1171,1
191271,RETURN,1,,return 0;,5,1181,1
191400,RETURN,-1,,return NGHTTP2_ERR_PAUSE;,5,1230,4
191402,RETURN,-1,,return 0;,3,1233,15
191456,RETURN,-1,,return padding;,3,1256,6
191535,RETURN,-1,,return 0;,3,1279,5
191542,RETURN,-1,,"return uv_buf_init(nullptr, size);",3,1285,1
191591,RETURN,-1,,return;,5,1297,2
191740,RETURN,1,,return;,5,1338,1
191852,RETURN,1,,return;,49,1381,1
191982,RETURN,-1,,return 1;,7,1421,3
191984,RETURN,-1,,return 0;,3,1424,6
192083,RETURN,1,,return;,68,1460,1
192338,RETURN,-1,,return;,7,1523,3
192349,RETURN,-1,,return;,5,1527,4
192360,RETURN,1,,return;,66,1530,1
192424,RETURN,1,,return;,7,1545,1
192432,RETURN,-1,,return;,5,1548,4
192448,RETURN,-1,,return;,5,1556,2
192552,RETURN,-1,,return;,5,1600,5
192579,RETURN,1,,return;,5,1621,1
192618,RETURN,1,,return;,45,1650,1
192810,RETURN,1,,return 0;,5,1732,1
192817,RETURN,1,,return 1;,5,1737,1
192861,RETURN,-1,,return 0;,5,1761,2
192877,RETURN,-1,,return 0;,5,1769,2
192986,RETURN,-1,,return 0;,3,1803,30
193023,RETURN,1,,return 0;,16,1820,1
193178,RETURN,-1,,return 0;,3,1861,10
193244,RETURN,-1,,return stream;,3,1884,11
193251,RETURN,-1,,return env()->allocate_managed_buffer(suggested_size);,3,1888,1
193309,RETURN,-1,,return;,5,1905,2
193483,RETURN,1,,return true;,7,1964,1
193485,RETURN,-1,,return false;,3,1966,2
193638,RETURN,-1,,return nullptr;,5,2015,1
193640,RETURN,-1,,"return new Http2Stream(session, obj, id, category, options);",3,2017,3
193766,RETURN,-1,,"return ""HttpStream "" + std::to_string(id()) + "" ("" +
         std::to_string(static_cast<int64_t>(get_async_id())) + "") ["" + sname +
         ""]"";",3,2073,5
193824,RETURN,-1,,return stream();,50,2089,1
193830,RETURN,-1,,"return nghttp2_session_find_stream(session_->session(), id_);",3,2092,1
193861,RETURN,-1,,return nullptr;,3,2105,1
193871,RETURN,1,,return UV_EPIPE;,5,2110,1
193889,RETURN,-1,,return 1;,3,2120,3
193898,RETURN,1,,return;,5,2129,1
194014,RETURN,-1,,return ret;,3,2191,12
194060,RETURN,-1,,return ret;,3,2209,8
194173,RETURN,-1,,return ret;,3,2247,8
194218,RETURN,-1,,return ret;,3,2266,8
194251,RETURN,-1,,return;,7,2289,2
194265,RETURN,-1,,return;,5,2299,2
194274,RETURN,1,,return;,5,2307,1
194354,RETURN,-1,,return stream;,3,2338,10
194383,RETURN,-1,,return 0;,3,2358,8
194399,RETURN,1,,return 0;,5,2365,1
194405,RETURN,-1,,return 0;,3,2368,5
194426,RETURN,-1,,return UV_EOF;,5,2388,1
194482,RETURN,-1,,return 0;,3,2404,8
194504,RETURN,1,,return true;,5,2418,1
194542,RETURN,-1,,return false;,5,2427,1
194573,RETURN,-1,,return true;,3,2437,12
194696,RETURN,1,,return 0;,16,2478,1
194863,RETURN,-1,,"return OnRead(handle, id, buf, length, flags, source, user_data);",7,2515,1
194872,RETURN,-1,,return NGHTTP2_ERR_DEFERRED;,5,2517,5
194916,RETURN,-1,,return amount;,3,2530,15
195087,RETURN,-1,,return args.GetReturnValue().Set(false);,5,2582,2
195524,RETURN,-1,,return args.GetReturnValue().Set(ret);,5,2706,2
195562,RETURN,1,,return;,5,2721,1
196098,RETURN,-1,,return args.GetReturnValue().Set(ret);,5,2859,2
196436,RETURN,1,,return;,5,2948,1
196722,RETURN,-1,,return ping;,3,3011,3
196754,RETURN,-1,,return false;,5,3019,1
196775,RETURN,1,,return false;,5,3025,1
196790,RETURN,-1,,return false;,5,3029,2
196810,RETURN,-1,,return true;,3,3040,9
196846,RETURN,-1,,return settings;,3,3050,3
196877,RETURN,-1,,return false;,5,3058,1
196899,RETURN,1,,return false;,5,3064,1
196914,RETURN,-1,,return false;,5,3068,2
196933,RETURN,-1,,return true;,3,3074,9
196966,RETURN,-1,,return callback_.Get(env()->isolate());,3,3092,1
197434,RETURN,1,,return;,25,3184,1
199267,RETURN,-1,,return;,5,27,2
199399,RETURN,-1,,return;,7,55,6
199471,RETURN,-1,,"return std::max(max_header_pairs, min_header_pairs);",3,71,3
199487,RETURN,-1,,"return std::max(max_header_pairs, min_header_pairs);",3,76,3
199508,RETURN,-1,,return ret;,3,84,5
199516,RETURN,-1,,"return IsZeroLength(-1, name, value);",3,91,1
199540,RETURN,1,,return true;,5,101,1
199550,RETURN,-1,,"return header_name != nullptr ||
      NgHeader<T>::rcbufferpointer_t::IsZeroLength(name);",3,104,4
199717,RETURN,-1,,return str;,7,166,3
199719,RETURN,-1,,return eternal.Get(env_->isolate());,5,168,5
199728,RETURN,-1,,"return rcbufferpointer_t::External::New(allocator, name_);",3,170,4
199742,RETURN,-1,,"return rcbufferpointer_t::External::New(allocator, value_);",3,176,1
199755,RETURN,-1,,return name_.str();,3,181,1
199764,RETURN,-1,,return value_.str();,3,186,1
199773,RETURN,-1,,return name_.len() + value_.len();,3,191,1
199787,RETURN,-1,,return flags_;,3,196,1
199926,RETURN,-1,,return c == ' ' || c == '\t';,3,91,1
200092,RETURN,1,,"return OneByteString(env->isolate(), str_, size_);",7,170,1
200102,RETURN,1,,return String::Empty(env->isolate());,7,172,1
200130,RETURN,-1,,return ToString(env);,5,181,2
200238,RETURN,-1,,return rv;,7,292,1
200246,RETURN,-1,,return 0;,5,296,5
200264,RETURN,-1,,return rv;,7,303,1
200272,RETURN,-1,,return 0;,5,307,5
200290,RETURN,-1,,return rv;,7,314,1
200337,RETURN,-1,,return 0;,5,334,8
200355,RETURN,-1,,return rv;,7,341,1
200389,RETURN,-1,,return 0;,5,355,8
200440,RETURN,1,,return 0;,7,385,1
200687,RETURN,-1,,return -1;,7,444,2
200690,RETURN,-1,,return static_cast<int>(val);,5,447,24
200705,RETURN,1,,return 0;,7,453,1
200745,RETURN,1,,return 0;,7,461,1
200790,RETURN,-1,,return HPE_USER;,7,470,3
200792,RETURN,-1,,return 0;,5,473,11
200868,RETURN,1,,return 0;,7,501,1
200917,RETURN,-1,,return -1;,7,513,2
200920,RETURN,-1,,return 0;,5,516,13
200929,RETURN,-1,,return 0;,5,522,2
200938,RETURN,-1,,return 0;,5,529,2
201515,RETURN,1,,return;,7,700,1
201595,RETURN,-1,,return;,7,724,2
201648,RETURN,1,,"return uv_buf_init(Malloc(suggested_size), suggested_size);",7,746,1
201673,RETURN,-1,,"return uv_buf_init(binding_data_->parser_buffer.data(), kAllocBufferSize);",5,752,4
201705,RETURN,-1,,return;,7,770,2
201711,RETURN,1,,return;,7,775,1
201729,RETURN,1,,return;,7,781,1
201755,RETURN,1,,return;,7,787,1
201865,RETURN,1,,return scope.Escape(Local<Value>());,7,839,1
202049,RETURN,-1,,return scope.Escape(e);,7,870,11
202060,RETURN,-1,,return scope.Escape(Local<Value>());,7,875,1
202066,RETURN,-1,,return scope.Escape(nread_obj);,5,877,18
202125,RETURN,-1,,"return Array::New(env()->isolate(), headers_v, num_values_ * 2);",5,889,3
202180,RETURN,1,,return;,7,901,1
202305,RETURN,-1,,return HPE_USER;,7,950,2
202307,RETURN,-1,,return 0;,5,952,3
202317,RETURN,-1,,return 0;,7,958,1
202326,RETURN,-1,,return HPE_PAUSED;,5,963,4
202332,RETURN,-1,,return true;,5,971,1
202394,RETURN,-1,,return rv;,7,1006,6
202448,RETURN,-1,,return lhs < rhs;,5,1020,1
202461,RETURN,-1,,return true;,5,1022,1
202472,RETURN,-1,,return false;,5,1024,1
202474,RETURN,-1,,return lhs->last_message_start_ < rhs->last_message_start_;,3,1027,2
202568,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1050,8
202649,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1069,8
202723,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1086,8
202819,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, 0));",5,1104,1
202893,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, 0));",5,1123,1
202997,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1149,26
203113,RETURN,1,,return;,32,1208,1
203715,RETURN,-1,,"return node::Start(argc, argv);",3,97,1
203837,RETURN,-1,,return;,5,68,1
203891,RETURN,-1,,return exit_code;,3,87,14
204041,RETURN,-1,,return env;,3,145,8
204167,RETURN,-1,,return BaseObject::TransferMode::kUntransferable;,3,51,1
204177,RETURN,-1,,return CloneForMessaging();,3,55,1
204183,RETURN,-1,,return {};,3,59,1
204188,RETURN,-1,,return Just(BaseObjectList {});,3,63,1
204198,RETURN,-1,,return Just(true);,3,68,1
204208,RETURN,-1,,return Just(true);,3,75,1
204220,RETURN,-1,,return main_message_buf_.data == nullptr;,3,82,1
204253,RETURN,1,,return MaybeLocal<Object>();,7,107,1
204266,RETURN,-1,,return host_objects_[id]->object(isolate);,7,110,2
204305,RETURN,1,,return MaybeLocal<Object>();,7,116,1
204312,RETURN,-1,,return scope.Escape(object.As<Object>());,5,118,10
204333,RETURN,-1,,return shared_array_buffers_[clone_id];,5,124,2
204349,RETURN,-1,,"return WasmModuleObject::FromCompiledModule(
        isolate, wasm_modules_[transfer_id]);",5,130,2
204368,RETURN,-1,,return &shared_value_conveyor_.value();,5,136,2
204498,RETURN,1,,return {};,27,182,1
204557,RETURN,-1,,return {};,11,195,1
204690,RETURN,1,,return {};,5,231,1
204709,RETURN,1,,return {};,5,234,1
204726,RETURN,1,,return {};,7,238,1
204731,RETURN,-1,,return handle_scope.Escape(return_value);,3,242,25
204779,RETURN,-1,,return wasm_modules_.size() - 1;,3,256,2
204848,RETURN,-1,,return MaybeLocal<Function>();,5,273,1
204855,RETURN,-1,,return emit_message_val.As<Function>();,3,276,7
204907,RETURN,-1,,return MaybeLocal<Function>();,5,287,1
204924,RETURN,-1,,return domexception_ctor;,3,291,8
204982,RETURN,-1,,return;,5,303,1
205017,RETURN,-1,,"return WriteHostObject(
          BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(object) });",7,322,1
205078,RETURN,-1,,"return serializer->WriteValue(env_->context(), normal_object);",7,338,6
205093,RETURN,-1,,return Nothing<bool>();,5,342,6
205127,RETURN,-1,,return Just(i);,9,352,1
205146,RETURN,-1,,return Just(i);,5,359,5
205155,RETURN,-1,,return Just(msg_->AddWASMModule(module->GetCompiledModule()));,5,364,1
205180,RETURN,-1,,return true;,5,370,2
205247,RETURN,1,,return Nothing<bool>();,18,381,1
205260,RETURN,1,,return Nothing<bool>();,9,383,1
205271,RETURN,-1,,return Just(true);,5,386,2
205333,RETURN,1,,return Nothing<bool>();,9,402,1
205361,RETURN,-1,,return Just(true);,5,411,2
205391,RETURN,-1,,return Nothing<bool>();,7,421,2
205420,RETURN,-1,,return Just(true);,9,427,2
205434,RETURN,-1,,return Nothing<bool>();,7,433,2
205468,RETURN,-1,,return Just(true);,5,442,12
205590,RETURN,-1,,return Nothing<bool>();,9,483,1
205648,RETURN,-1,,return Nothing<bool>();,9,508,2
205705,RETURN,-1,,return Nothing<bool>();,9,524,2
205752,RETURN,-1,,return Nothing<bool>();,9,536,2
205803,RETURN,-1,,return Nothing<bool>();,9,548,2
205827,RETURN,-1,,return Nothing<bool>();,5,558,5
205838,RETURN,1,,return Nothing<bool>();,5,561,1
205855,RETURN,-1,,return Nothing<bool>();,5,565,1
205900,RETURN,1,,return Nothing<bool>();,5,577,1
205924,RETURN,-1,,return Just(true);,3,584,22
206095,RETURN,1,,return;,5,656,1
206125,RETURN,1,,return;,7,661,1
206141,RETURN,1,,return;,5,666,1
206161,RETURN,-1,,return data_ == nullptr || IsHandleClosing();,3,674,1
206174,RETURN,1,,return;,26,678,1
206268,RETURN,1,,return nullptr;,5,715,1
206286,RETURN,-1,,return nullptr;,5,720,1
206340,RETURN,-1,,return port;,3,739,11
206397,RETURN,-1,,return env()->no_message_symbol();,7,762,1
206423,RETURN,-1,,return env()->no_message_symbol();,5,771,2
206435,RETURN,1,,return MaybeLocal<Value>();,35,774,1
206437,RETURN,-1,,"return received->Deserialize(env(), context, port_list);",3,776,5
206530,RETURN,-1,,return;,7,808,2
206698,RETURN,-1,,return;,7,854,4
206728,RETURN,-1,,return std::move(data_);,3,871,5
206741,RETURN,1,,return BaseObject::TransferMode::kUntransferable;,5,876,1
206747,RETURN,-1,,return BaseObject::TransferMode::kTransferable;,3,877,2
206758,RETURN,-1,,return Detach();,3,882,2
206767,RETURN,-1,,"return BaseObjectPtr<MessagePort> { MessagePort::New(
      env, context,
      static_unique_pointer_cast<MessagePortData>(std::move(self))) };",3,889,1
206837,RETURN,-1,,return serialization_maybe;,5,909,1
206845,RETURN,-1,,return Nothing<bool>();,5,912,1
206864,RETURN,1,,return res;,5,918,1
206879,RETURN,-1,,return res;,3,923,14
206900,RETURN,-1,,return Nothing<bool>();,5,932,2
206902,RETURN,-1,,"return group_->Dispatch(this, message, error);",3,934,2
206925,RETURN,1,,return Just(false);,28,942,1
206984,RETURN,1,,return Nothing<bool>();,9,950,1
206986,RETURN,-1,,return Just(true);,5,952,6
207022,RETURN,1,,return Nothing<bool>();,35,958,1
207031,RETURN,1,,return Just(false);,39,959,1
207058,RETURN,1,,return Nothing<bool>();,28,963,1
207067,RETURN,1,,return Just(false);,30,964,1
207095,RETURN,1,,return Nothing<bool>();,5,968,1
207104,RETURN,1,,return Just(false);,28,969,1
207146,RETURN,1,,return Nothing<bool>();,28,975,1
207155,RETURN,1,,return Just(false);,30,976,1
207183,RETURN,1,,return Nothing<bool>();,7,980,1
207218,RETURN,1,,return Nothing<bool>();,7,985,1
207249,RETURN,-1,,return Just(true);,3,991,18
207296,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(env, ""Not enough arguments to ""
                                       ""MessagePort.postMessage"");",5,1000,1
207317,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""Optional transferList argument must be an iterable"");",5,1007,1
207346,RETURN,1,,return;,7,1015,1
207378,RETURN,1,,return;,39,1019,1
207399,RETURN,1,,return;,33,1022,1
207404,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
              ""Optional options.transfer argument must be an iterable"");",11,1024,1
207442,RETURN,-1,,return;,5,1038,3
207527,RETURN,-1,,return;,5,1063,1
207560,RETURN,-1,,return;,5,1073,1
207649,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""The \""port\"" argument must be a MessagePort instance"");",5,1094,1
207686,RETURN,-1,,return;,5,1102,2
207762,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""The \""port\"" argument must be a MessagePort instance"");",5,1116,1
207798,RETURN,-1,,return;,5,1123,4
207830,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env, ""Invalid context argument"");",5,1131,1
207971,RETURN,1,,return templ;,5,1163,1
208038,RETURN,-1,,return GetMessagePortConstructorTemplate(env);,3,1179,4
208103,RETURN,-1,,return TransferMode::kUntransferable;,5,1200,1
208107,RETURN,-1,,return has_clone ? TransferMode::kCloneable : TransferMode::kTransferable;,3,1203,7
208120,RETURN,-1,,return TransferOrClone(TransferMode::kTransferable);,3,1207,1
208129,RETURN,-1,,return TransferOrClone(TransferMode::kCloneable);,3,1211,1
208197,RETURN,-1,,return {};,5,1227,1
208228,RETURN,-1,,return {};,7,1233,1
208288,RETURN,-1,,return {};,9,1243,1
208302,RETURN,1,,return {};,45,1246,1
208303,RETURN,-1,,"return std::make_unique<Data>(
          *deserialize_info_str, Global<Value>(env()->isolate(), data));",7,1247,8
208332,RETURN,1,,return TransferOrClone(TransferMode::kCloneable);,5,1253,1
208339,RETURN,1,,return {};,5,1255,1
208392,RETURN,-1,,return Nothing<BaseObjectList>();,5,1267,1
208401,RETURN,1,,return Just(BaseObjectList {});,30,1269,1
208429,RETURN,-1,,return Nothing<BaseObjectList>();,5,1274,1
208438,RETURN,1,,return Just(BaseObjectList {});,27,1276,1
208487,RETURN,1,,return Nothing<BaseObjectList>();,7,1283,1
208513,RETURN,-1,,return Just(ret);,3,1287,14
208546,RETURN,1,,return Nothing<bool>();,57,1296,1
208577,RETURN,-1,,return Nothing<bool>();,5,1301,1
208586,RETURN,1,,return Just(true);,30,1303,1
208606,RETURN,-1,,return Nothing<bool>();,5,1306,1
208608,RETURN,-1,,return Just(true);,3,1308,10
208634,RETURN,-1,,return {};,5,1328,2
208657,RETURN,1,,return {};,62,1332,1
208712,RETURN,-1,,return {};,5,1340,1
208713,RETURN,-1,,return BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(ret) };,3,1343,9
208750,RETURN,-1,,return ret;,3,1351,6
208816,RETURN,-1,,return group;,3,1364,7
208904,RETURN,-1,,return Nothing<bool>();,5,1394,2
208911,RETURN,1,,return Just(false);,5,1399,1
208933,RETURN,-1,,return Nothing<bool>();,5,1406,2
208969,RETURN,-1,,return Just(true);,9,1419,2
208977,RETURN,-1,,return Just(true);,3,1425,7
209123,RETURN,-1,,return;,5,1469,2
209157,RETURN,1,,return;,25,1476,1
209176,RETURN,-1,,return;,5,1480,2
209770,RETURN,1,,return;,7,40,1
209811,RETURN,-1,,return static_cast<T*>(wrap);,5,54,7
209819,RETURN,-1,,return handle(v8::Isolate::GetCurrent());,5,59,1
209832,RETURN,-1,,"return v8::Local<v8::Object>::New(isolate, persistent());",5,64,1
209851,RETURN,-1,,return handle_;,5,70,1
210016,RETURN,-1,,"return credentials::SafeGetenv(name, &text) ? text : """";",5,1295,2
210504,RETURN,1,,return;,34,300,1
211705,RETURN,1,,"return host.substr(1, host.size() - 2);",5,1002,1
211719,RETURN,1,,return host;,5,1004,1
211769,RETURN,-1,,return static_cast<int>(result);,3,1017,6
211795,RETURN,1,,"return HostPort{host, DebugOptions::kDefaultInspectorPort};",5,1026,1
211832,RETURN,-1,,"return HostPort{arg, DebugOptions::kDefaultInspectorPort};",9,1034,1
211839,RETURN,-1,,"return HostPort { """", ParseAndValidatePort(arg, errors) };",5,1037,2
211846,RETURN,-1,,"return HostPort { RemoveBrackets(arg.substr(0, colon)),
                    ParseAndValidatePort(arg.substr(colon + 1), errors) };",3,1040,7
211948,RETURN,-1,,return out.str();,3,1079,11
211978,RETURN,-1,,"return env->ThrowError(
        ""Should not query options before bootstrapping is done"");",5,1089,1
212077,RETURN,-1,,return;,5,1113,1
212231,RETURN,-1,,return;,11,1151,1
212256,RETURN,-1,,return;,11,1158,1
212341,RETURN,-1,,return;,11,1172,1
212511,RETURN,-1,,return;,7,1203,1
212530,RETURN,1,,return;,71,1208,1
212548,RETURN,-1,,return;,5,1213,1
212589,RETURN,-1,,return;,5,1219,1
212618,RETURN,-1,,"return env->ThrowError(
        ""Should not query options before bootstrapping is done"");",5,1229,1
212677,RETURN,1,,return;,21,1239,1
212703,RETURN,1,,return;,21,1244,1
212729,RETURN,1,,return;,5,1250,1
212982,RETURN,-1,,return env_argv;,9,1327,2
213052,RETURN,-1,,return env_argv;,3,1351,8
213159,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,70,3
213231,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,85,3
213350,RETURN,1,,return;,5,109,1
213586,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,156,2
213694,RETURN,1,,return args.GetReturnValue().SetUndefined();,5,186,1
213725,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,192,3
214118,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,261,3
214222,RETURN,1,,return;,9,283,1
214266,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,296,3
214425,RETURN,-1,,return;,5,323,3
214692,RETURN,-1,,return;,5,377,3
215057,RETURN,-1,,return info;,3,70,3
215114,RETURN,-1,,return o;,3,88,2
215261,RETURN,-1,,return;,5,129,1
215329,RETURN,-1,,return MaybeLocal<Object>();,5,146,1
215362,RETURN,-1,,return MaybeLocal<Object>();,5,155,1
215364,RETURN,-1,,return obj;,3,158,4
215393,RETURN,-1,,return;,5,170,1
215411,RETURN,1,,return;,5,175,1
215643,RETURN,-1,,return val;,3,233,3
217355,RETURN,-1,,return delayed.get() == task;,11,438,1
217520,RETURN,-1,,"return std::max(thread_pool_size, 1);",3,52,2
217569,RETURN,-1,,return t;,5,71,8
217857,RETURN,-1,,return task;,5,161,5
218033,RETURN,-1,,return threads_.size();,3,226,1
218069,RETURN,-1,,return shared_from_this();,3,240,1
218104,RETURN,-1,,return;,5,256,1
218126,RETURN,-1,,return;,5,267,1
218219,RETURN,1,,return;,5,298,1
218463,RETURN,-1,,return;,5,396,2
218487,RETURN,1,,return;,23,403,1
218507,RETURN,-1,,return worker_thread_task_runner_->NumberOfWorkerThreads();,3,414,1
218523,RETURN,1,,return;,43,418,1
218651,RETURN,1,,return;,21,452,1
218792,RETURN,-1,,return did_work;,3,496,6
218842,RETURN,-1,,return data.first;,3,514,6
218864,RETURN,-1,,return data.second;,3,522,6
218887,RETURN,1,,return false;,21,527,1
218889,RETURN,-1,,return per_isolate->FlushForegroundTasksInternal();,3,528,3
218900,RETURN,-1,,"return v8::platform::NewDefaultJobHandle(
      this, priority, std::move(job_task), NumberOfWorkerThreads());",3,533,1
218920,RETURN,-1,,return ForIsolate(isolate)->IdleTasksEnabled();,3,538,1
218931,RETURN,-1,,return ForIsolate(isolate)->GetForegroundTaskRunner();,3,543,1
218941,RETURN,-1,,return uv_hrtime() / 1e9;,3,548,1
218949,RETURN,-1,,return SystemClockTimeMillis();,3,552,1
218956,RETURN,-1,,return tracing_controller_;,3,557,2
218962,RETURN,-1,,"return []() {
    fprintf(stderr, ""\n"");
    DumpBacktrace(stderr);
    fflush(stderr);
  };",3,561,1
218968,RETURN,-1,,return page_allocator_;,3,569,1
219011,RETURN,-1,,return std::unique_ptr<T>(nullptr);,5,589,1
219039,RETURN,-1,,return result;,3,593,6
219065,RETURN,-1,,return std::unique_ptr<T>(nullptr);,5,603,1
219093,RETURN,-1,,return result;,3,607,7
219168,RETURN,-1,,return result;,3,638,5
219356,RETURN,-1,,return 1;,3,68,15
219433,RETURN,1,,return MaybeLocal<Value>();,32,28,1
219451,RETURN,-1,,"return MakeCallback(isolate, process, ""emit"", arraysize(argv), argv, {0, 0});",3,32,8
219477,RETURN,1,,return Just(false);,33,39,1
219527,RETURN,-1,,return Nothing<bool>();,5,48,1
219536,RETURN,1,,return Just(false);,36,51,1
219570,RETURN,1,,return Nothing<bool>();,5,59,1
219599,RETURN,-1,,return Nothing<bool>();,7,65,1
219627,RETURN,-1,,return Nothing<bool>();,7,71,1
219648,RETURN,-1,,return Nothing<bool>();,5,80,1
219650,RETURN,-1,,return Just(true);,3,82,16
219672,RETURN,1,,return Nothing<bool>();,5,91,1
219687,RETURN,-1,,"return ProcessEmitWarningGeneric(env, message.c_str(), ""ExperimentalWarning"");",3,96,6
219702,RETURN,-1,,"return ProcessEmitWarningGeneric(
      env, warning, ""DeprecationWarning"", deprecation_code);",3,102,1
219842,RETURN,-1,,"return env->ThrowUVException(err, ""chdir"", nullptr, buf, *path);",5,91,5
219885,RETURN,-1,,return arr->Buffer();,3,102,4
219913,RETURN,1,,"return env->ThrowUVException(err, ""uv_getrusage"");",5,117,1
220011,RETURN,1,,"return env->ThrowUVException(err, ""uv_cwd"");",5,135,1
220098,RETURN,1,,return;,47,153,1
220115,RETURN,1,,return;,47,155,1
220186,RETURN,1,,"return env->ThrowUVException(err, ""uv_resident_set_memory"");",5,176,1
220269,RETURN,1,,"return env->ThrowUVException(err, ""uv_resident_set_memory"");",5,199,1
220863,RETURN,1,,"return env->ThrowUVException(err, ""uv_getrusage"");",5,324,1
221261,RETURN,-1,,"return static_cast<BindingData*>(
      v8_object->GetAlignedPointerFromInternalField(BaseObject::kSlot));",3,501,2
221412,RETURN,-1,,return true;,3,551,2
221434,RETURN,-1,,return info;,3,558,4
221755,RETURN,-1,,return a.first < b.first;,36,129,1
221933,RETURN,-1,,"return THROW_ERR_OUT_OF_RANGE(
      env,
      ""process.debugPort must be 0 or in range 1024 to 65535"");",5,67,1
222046,RETURN,-1,,return MaybeLocal<Object>();,5,92,1
222075,RETURN,-1,,return {};,5,101,1
222235,RETURN,-1,,return scope.Escape(process);,3,174,29
222523,RETURN,1,,return;,51,269,1
222961,RETURN,-1,,return info;,3,113,10
223075,RETURN,-1,,return scope.EscapeMaybe(result);,3,173,6
223114,RETURN,-1,,return MaybeLocal<Value>();,5,184,1
223117,RETURN,-1,,return scope.Escape(result);,3,189,7
223263,RETURN,1,,return;,47,266,1
223270,RETURN,-1,,return PersistentToLocal::Strong(context_);,3,279,1
223323,RETURN,-1,,return MaybeLocal<Value>();,5,319,1
223345,RETURN,-1,,return MaybeLocal<Value>();,7,327,1
223364,RETURN,-1,,return MaybeLocal<Value>();,5,336,1
223383,RETURN,-1,,return MaybeLocal<Value>();,5,344,1
223432,RETURN,-1,,return MaybeLocal<Value>();,5,352,1
223434,RETURN,-1,,return v8::True(isolate_);,3,355,15
223511,RETURN,-1,,return !std::iswspace(ch);,17,540,1
223525,RETURN,-1,,return a.first < b.first;,36,818,1
224736,RETURN,-1,,return writer->json_objectend();,7,395,1
224870,RETURN,-1,,return Nothing<std::string>();,5,422,1
224973,RETURN,-1,,return Nothing<std::string>();,5,441,1
224980,RETURN,-1,,"return Just<>(std::string(*sv, sv.length()));",3,444,8
225047,RETURN,-1,,return;,5,465,2
225115,RETURN,-1,,return;,5,488,2
225225,RETURN,-1,,"return PrintJavaScriptStack(writer, isolate, trigger);",5,516,1
225264,RETURN,-1,,return;,5,525,2
226537,RETURN,-1,,"return """";",7,917,4
226601,RETURN,-1,,return filename;,3,941,11
226628,RETURN,-1,,"return TriggerNodeReport(isolate, env, message, trigger, name, error);",3,954,4
226645,RETURN,-1,,"return TriggerNodeReport(env != nullptr ? env->isolate() : nullptr,
                           env,
                           message,
                           trigger,
                           name,
                           error);",3,963,1
227752,RETURN,-1,,return;,5,18,2
228752,RETURN,-1,,"return {blob, size};",5,125,4
228782,RETURN,-1,,return deserializer.Read<SeaResource>();,5,144,6
228826,RETURN,-1,,"return static_cast<SeaFlags>(static_cast<uint32_t>(x) |
                               static_cast<uint32_t>(y));",3,40,1
228842,RETURN,-1,,"return static_cast<SeaFlags>(static_cast<uint32_t>(x) &
                               static_cast<uint32_t>(y));",3,45,1
228858,RETURN,-1,,return x = x | y;,3,50,1
228950,RETURN,-1,,return written_total;,3,81,12
229008,RETURN,-1,,"return {flags, code};",3,108,12
229035,RETURN,-1,,return result;,3,131,5
229046,RETURN,-1,,return sea_resource;,3,146,3
229052,RETURN,-1,,return postject_has_resource();,3,150,1
229071,RETURN,-1,,return;,5,156,2
229148,RETURN,-1,,"return {argc, argv};",3,177,2
229194,RETURN,-1,,return std::nullopt;,5,198,4
229212,RETURN,-1,,return std::nullopt;,5,205,2
229244,RETURN,-1,,return std::nullopt;,5,214,2
229276,RETURN,-1,,return std::nullopt;,5,223,2
229299,RETURN,-1,,return std::nullopt;,5,232,2
229316,RETURN,-1,,return result;,3,238,16
229353,RETURN,-1,,return ExitCode::kGenericUserError;,5,248,4
229414,RETURN,-1,,return ExitCode::kGenericUserError;,5,261,4
229424,RETURN,-1,,return ExitCode::kNoFailure;,3,267,14
229452,RETURN,-1,,return code;,5,277,3
229454,RETURN,-1,,return ExitCode::kGenericUserError;,3,280,4
229731,RETURN,1,,return;,24,118,1
229785,RETURN,-1,,"return ValueSerializer::Delegate::GetSharedArrayBufferId(
        isolate, shared_array_buffer);",5,132,1
229821,RETURN,1,,return Nothing<uint32_t>();,21,142,1
229823,RETURN,-1,,return id.ToLocalChecked()->Uint32Value(env()->context());,3,144,6
229882,RETURN,-1,,"return ValueSerializer::Delegate::WriteHostObject(isolate, input);",5,157,1
229914,RETURN,1,,return Nothing<bool>();,5,166,1
229916,RETURN,-1,,return Just(true);,3,168,7
229939,RETURN,-1,,"return THROW_ERR_CONSTRUCT_CALL_REQUIRED(
        env, ""Class constructor Serializer cannot be invoked without 'new'"");",5,174,1
230151,RETURN,1,,return;,23,227,1
230161,RETURN,1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        ctx->env(), ""arrayBuffer must be an ArrayBuffer"");",5,230,1
230194,RETURN,-1,,return;,3,235,8
230233,RETURN,1,,return;,26,243,1
230306,RETURN,1,,return;,5,255,1
230367,RETURN,1,,return;,26,267,1
230400,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        ctx->env(), ""source must be a TypedArray or a DataView"");",5,277,1
230486,RETURN,-1,,return ValueDeserializer::Delegate::ReadHostObject(isolate);,5,303,1
230523,RETURN,1,,return MaybeLocal<Object>();,5,314,1
230547,RETURN,-1,,return MaybeLocal<Object>();,5,319,2
230549,RETURN,-1,,return return_value.As<Object>();,3,322,9
230574,RETURN,-1,,"return THROW_ERR_CONSTRUCT_CALL_REQUIRED(
        env, ""Class constructor Deserializer cannot be invoked without 'new'"");",5,328,1
230587,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        env, ""buffer must be a TypedArray or a DataView"");",5,333,1
230738,RETURN,1,,return;,23,364,1
230770,RETURN,-1,,return;,5,369,3
230802,RETURN,-1,,return;,5,375,3
230803,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
      ctx->env(), ""arrayBuffer must be an ArrayBuffer or SharedArrayBuffer"");",3,378,7
230868,RETURN,1,,"return ctx->env()->ThrowError(""ReadUint32() failed"");",12,396,1
230877,RETURN,-1,,return args.GetReturnValue().Set(value);,3,397,7
230915,RETURN,1,,"return ctx->env()->ThrowError(""ReadUint64() failed"");",12,406,1
230964,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, ret, arraysize(ret)));",3,417,15
231009,RETURN,1,,"return ctx->env()->ThrowError(""ReadDouble() failed"");",12,426,1
231018,RETURN,-1,,return args.GetReturnValue().Set(value);,3,427,7
231065,RETURN,1,,return;,31,436,1
231090,RETURN,1,,"return ctx->env()->ThrowError(""ReadRawBytes() failed"");",12,441,1
231545,RETURN,-1,,return nullptr;,5,25,2
231547,RETURN,-1,,return realm;,3,27,6
231581,RETURN,-1,,return scope.Escape(realm->context());,5,37,1
231590,RETURN,-1,,return MaybeLocal<Context>();,3,39,8
231686,RETURN,-1,,return;,5,83,1
231718,RETURN,-1,,return ctx;,3,95,3
231743,RETURN,-1,,return MaybeLocal<Value>();,7,136,1
231745,RETURN,-1,,return v8::True(isolate_);,3,140,4
231789,RETURN,-1,,return nullptr;,3,10,1
231835,RETURN,-1,,return;,7,1208,1
231996,RETURN,-1,,return output;,3,58,2
232017,RETURN,-1,,return output;,3,68,4
232040,RETURN,-1,,return output;,3,78,4
232065,RETURN,-1,,return output;,3,88,4
232102,RETURN,-1,,return output;,3,94,2
232127,RETURN,-1,,return output;,3,104,4
232176,RETURN,-1,,return output;,3,120,2
232255,RETURN,-1,,return output;,3,142,2
232317,RETURN,-1,,"return v8::StartupData{buf.release(), raw_size};",3,190,9
232361,RETURN,-1,,return written_total;,3,203,7
232416,RETURN,-1,,return result;,3,225,11
232470,RETURN,-1,,return written_total;,3,241,7
232508,RETURN,-1,,return result;,3,264,7
232557,RETURN,-1,,return written_total;,3,279,7
232605,RETURN,-1,,return result;,3,306,9
232675,RETURN,-1,,return written_total;,3,325,9
232703,RETURN,-1,,return result;,3,342,5
232737,RETURN,-1,,return written_total;,3,355,5
232765,RETURN,-1,,return result;,3,370,5
232799,RETURN,-1,,return written_total;,3,384,5
232837,RETURN,-1,,return result;,3,403,7
232889,RETURN,-1,,return written_total;,3,420,7
232922,RETURN,-1,,return result;,3,439,6
232965,RETURN,-1,,return written_total;,3,453,6
232995,RETURN,-1,,return result;,3,464,7
233058,RETURN,-1,,return written_total;,3,481,8
233116,RETURN,-1,,return result;,3,498,12
233211,RETURN,-1,,return written_total;,3,522,13
233261,RETURN,-1,,return result;,3,549,9
233350,RETURN,-1,,return written_total;,3,573,14
233446,RETURN,-1,,return w.sink;,3,606,16
233485,RETURN,-1,,return data != nullptr ? data->impl_ : nullptr;,3,618,1
233498,RETURN,-1,,"return EmbedderSnapshotData::Pointer{new EmbedderSnapshotData(this, false)};",3,622,1
233511,RETURN,-1,,"return FromBlob(out, ReadFileSync(in));",3,626,1
233522,RETURN,-1,,"return FromBlob(out, std::string_view(in.data(), in.size()));",3,630,1
233591,RETURN,-1,,return false;,5,646,1
233643,RETURN,-1,,return true;,3,657,19
233672,RETURN,-1,,return false;,5,667,2
233695,RETURN,-1,,return false;,5,676,2
233718,RETURN,-1,,return false;,5,685,2
233747,RETURN,-1,,return false;,5,700,2
233749,RETURN,-1,,return true;,3,704,7
233863,RETURN,-1,,"return std::string(buf) + std::string(""_cache_data"");",3,729,7
233931,RETURN,-1,,return buf;,3,742,4
234121,RETURN,-1,,return registry->external_references();,3,888,3
234230,RETURN,-1,,return ExitCode::kBootstrapFailure;,5,920,2
234284,RETURN,-1,,return ExitCode::kGenericUserError;,11,943,1
234306,RETURN,-1,,return exit_code;,11,952,1
234308,RETURN,-1,,"return CreateSnapshot(out, setup.get(), static_cast<uint8_t>(snapshot_type));",3,957,10
234420,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,9,985,1
234438,RETURN,-1,,return ExitCode::kBootstrapFailure;,7,994,1
234555,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,5,1048,1
234631,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,5,1067,1
234635,RETURN,-1,,return ExitCode::kNoFailure;,3,1069,17
234664,RETURN,-1,,return exit_code;,5,1080,1
234670,RETURN,-1,,return exit_code;,3,1083,6
234712,RETURN,-1,,return;,5,1109,2
234744,RETURN,-1,,return;,5,1119,2
234796,RETURN,-1,,"return StartupData{nullptr, 0};",5,1170,1
234881,RETURN,-1,,"return StartupData{reinterpret_cast<const char*>(info),
                     static_cast<int>(info->length)};",3,1193,13
235261,RETURN,-1,,return kAnonymousMainPath;,3,1303,1
235366,RETURN,-1,,return true;,3,1342,4
235385,RETURN,-1,,return info;,3,1349,5
235652,RETURN,-1,,return addr;,3,36,5
235667,RETURN,-1,,"return uv_ip4_addr(
          host,
          port,
          reinterpret_cast<sockaddr_in*>(addr)) == 0;",7,47,3
235678,RETURN,-1,,"return uv_ip6_addr(
          host,
          port,
          reinterpret_cast<sockaddr_in6*>(addr)) == 0;",7,52,6
235696,RETURN,-1,,"return New(AF_INET, host, port, addr) || New(AF_INET6, host, port, addr);",3,65,1
235716,RETURN,-1,,"return ToSockAddr(family, host, port,
                    reinterpret_cast<sockaddr_storage*>(addr->storage()));",3,73,1
235802,RETURN,-1,,return hash;,3,97,4
235809,RETURN,-1,,"return FromUVHandle(uv_tcp_getsockname, handle);",3,101,1
235818,RETURN,-1,,"return FromUVHandle(uv_udp_getsockname, handle);",3,105,1
235827,RETURN,-1,,"return FromUVHandle(uv_tcp_getpeername, handle);",3,109,1
235836,RETURN,-1,,"return FromUVHandle(uv_udp_getpeername, handle);",3,113,1
235881,RETURN,-1,,"return memcmp(&one_in->sin_addr, &two_in->sin_addr, sizeof(uint32_t)) == 0;",3,126,5
235919,RETURN,-1,,"return memcmp(&one_in->sin6_addr, &two_in->sin6_addr, 16) == 0;",3,136,5
235965,RETURN,-1,,"return memcmp(ptr, mask, sizeof(mask)) == 0 &&
         memcmp(ptr + sizeof(mask),
                &check_ipv4->sin_addr,
                sizeof(uint32_t)) == 0;",3,150,7
236034,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,167,1
236047,RETURN,1,,return SocketAddress::CompareResult::SAME;,5,169,1
236055,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,171,1
236103,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,183,1
236116,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,185,1
236122,RETURN,-1,,return SocketAddress::CompareResult::SAME;,3,186,8
236170,RETURN,1,,return SocketAddress::CompareResult::NOT_COMPARABLE;,5,201,1
236195,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,209,1
236208,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,211,1
236214,RETURN,-1,,return SocketAddress::CompareResult::SAME;,3,212,11
236257,RETURN,-1,,"return (htonl(ip_in->sin_addr.s_addr) & mask) ==
         (htonl(net_in->sin_addr.s_addr) & mask);",3,226,7
236287,RETURN,1,,"return compare_ipv6(ip, net) == SocketAddress::CompareResult::SAME;",5,237,1
236355,RETURN,1,,return false;,5,249,1
236377,RETURN,-1,,return (p1[len] & mask) == (p2[len] & mask);,3,256,17
236401,RETURN,1,,"return compare_ipv4_ipv6(ip, net) == SocketAddress::CompareResult::SAME;",5,265,1
236499,RETURN,1,,return false;,5,281,1
236514,RETURN,-1,,return (ptr[0] & mask) == (p2[len] & mask);,3,287,21
236538,RETURN,1,,"return compare_ipv4_ipv6(net, ip) == SocketAddress::CompareResult::SAME;",5,295,1
236596,RETURN,1,,return false;,5,308,1
236607,RETURN,-1,,return (check & m) == (htonl(net_in->sin_addr.s_addr) & m);,3,313,14
236638,RETURN,-1,,"return is_match_ipv4(*this, other);",23,325,3
236645,RETURN,-1,,"return is_match_ipv4_ipv6(*this, other);",24,326,6
236661,RETURN,-1,,"return is_match_ipv4_ipv6(other, *this);",23,331,3
236668,RETURN,-1,,"return is_match_ipv6(*this, other);",24,332,6
236674,RETURN,-1,,return false;,3,336,2
236694,RETURN,-1,,"return compare_ipv4(*this, other);",23,344,3
236701,RETURN,-1,,"return compare_ipv4_ipv6(*this, other);",24,345,6
236740,RETURN,-1,,return c;,15,356,5
236748,RETURN,-1,,return SocketAddress::CompareResult::LESS_THAN;,15,358,8
236760,RETURN,-1,,return SocketAddress::CompareResult::GREATER_THAN;,15,360,11
236769,RETURN,-1,,"return compare_ipv6(*this, other);",24,364,6
236775,RETURN,-1,,return SocketAddress::CompareResult::NOT_COMPARABLE;,3,368,2
236800,RETURN,-1,,"return in_network_ipv4(*this, other, prefix);",23,378,3
236808,RETURN,-1,,"return in_network_ipv4_ipv6(*this, other, prefix);",24,379,6
236825,RETURN,-1,,"return in_network_ipv6_ipv4(*this, other, prefix);",23,384,3
236833,RETURN,-1,,"return in_network_ipv6(*this, other, prefix);",24,385,6
236840,RETURN,-1,,return false;,3,390,2
237023,RETURN,1,,return true;,7,439,1
237025,RETURN,-1,,return parent_ ? parent_->Apply(address) : false;,3,441,4
237056,RETURN,-1,,return this->address->is_match(*address.get());,3,462,1
237096,RETURN,-1,,return ret;,3,470,6
237103,RETURN,-1,,"return *address.get() >= *start.get() &&
         *address.get() <= *end.get();",3,475,1
237164,RETURN,-1,,return ret;,3,486,8
237171,RETURN,-1,,"return address->is_in_network(*network.get(), prefix);",3,491,1
237219,RETURN,-1,,return ret;,3,500,7
237245,RETURN,1,,return MaybeLocal<Array>();,5,507,1
237247,RETURN,-1,,"return Array::New(env->isolate(), rules.data(), rules.size());",3,508,5
237281,RETURN,1,,return false;,5,515,1
237305,RETURN,1,,return false;,7,519,1
237312,RETURN,-1,,return true;,3,522,3
237404,RETURN,-1,,return BaseObjectPtr<SocketAddressBlockListWrap>();,5,560,1
237421,RETURN,-1,,return wrap;,3,565,5
237456,RETURN,-1,,return BaseObjectPtr<SocketAddressBlockListWrap>();,5,575,1
237478,RETURN,-1,,return wrap;,3,583,5
237632,RETURN,1,,return args.GetReturnValue().Set(false);,5,624,1
237726,RETURN,-1,,return;,5,647,1
237891,RETURN,-1,,return std::make_unique<TransferData>(this);,3,688,1
237905,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,694,1
237995,RETURN,-1,,return tmpl;,3,712,3
238041,RETURN,-1,,"return New(env, std::move(blocklist_));",3,738,1
238065,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,747,1
238145,RETURN,-1,,return tmpl;,3,764,3
238196,RETURN,-1,,return BaseObjectPtr<SocketAddressBase>();,5,782,1
238198,RETURN,-1,,"return MakeBaseObject<SocketAddressBase>(env, obj, std::move(address));",3,785,3
238330,RETURN,1,,return THROW_ERR_INVALID_ADDRESS(env);,5,804,1
238414,RETURN,1,,return;,5,821,1
238598,RETURN,1,,return;,53,852,1
238630,RETURN,-1,,return std::make_unique<TransferData>(this);,3,871,1
238656,RETURN,-1,,"return SocketAddressBase::Create(env, std::move(address_));",3,882,1
239133,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,5,39,1
239141,RETURN,-1,,"return maybe_async_id->IsNumber()
      ? maybe_async_id->NumberValue(env->context())
      : v8::Just(AsyncWrap::kInvalidAsyncId);",3,41,3
239211,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,7,58,1
239219,RETURN,-1,,"return maybe_async_id->IsNumber()
        ? maybe_async_id->NumberValue(env->context())
        : v8::Just(AsyncWrap::kInvalidAsyncId);",5,60,3
239242,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,7,64,1
239308,RETURN,1,,return;,51,78,1
239417,RETURN,-1,,return;,5,107,1
239465,RETURN,1,,return;,27,121,1
239481,RETURN,1,,return;,35,123,1
239510,RETURN,1,,return;,31,130,1
239526,RETURN,1,,return;,39,133,1
240341,RETURN,-1,,return categories_;,56,41,1
240453,RETURN,1,,return;,59,69,1
240466,RETURN,1,,return;,16,71,1
241757,RETURN,-1,,return true;,3,53,2
241779,RETURN,-1,,return info;,3,60,4
241869,RETURN,-1,,"return args.GetReturnValue().Set(FIXED_ONE_BYTE_STRING(env->isolate(), """"));",5,81,1
241905,RETURN,-1,,"return args.GetReturnValue().Set(FIXED_ONE_BYTE_STRING(env->isolate(), """"));",5,90,1
242010,RETURN,-1,,"return args.GetReturnValue().Set(
        String::NewFromUtf8(env->isolate(), """").ToLocalChecked());",5,109,1
242139,RETURN,-1,,return;,5,134,2
242284,RETURN,-1,,"return ada::can_parse(std::string_view(input.data, input.length));",3,170,1
242324,RETURN,-1,,"return ada::can_parse(std::string_view(input.data, input.length), &base_view);",3,179,3
242633,RETURN,-1,,return args.GetReturnValue().Set(false);,7,246,1
242671,RETURN,-1,,return args.GetReturnValue().Set(false);,5,254,1
242946,RETURN,-1,,return args.GetReturnValue().Set(false);,5,330,1
243246,RETURN,-1,,return ada::href_from_file(escaped_file_path);,3,401,3
243420,RETURN,1,,return;,5,103,1
243512,RETURN,1,,return;,5,121,1
243623,RETURN,-1,,return;,5,147,4
243646,RETURN,1,,return;,5,154,1
243680,RETURN,1,,return;,5,160,1
243689,RETURN,1,,return args.GetReturnValue().Set(entries);,5,163,1
243712,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(env->isolate(), ret, arraysize(ret)));",3,169,10
243841,RETURN,-1,,return true;,5,208,2
243872,RETURN,-1,,return true;,3,225,6
243904,RETURN,-1,,return info;,3,234,6
244081,RETURN,1,,return;,36,271,1
244148,RETURN,1,,return;,36,281,1
244214,RETURN,1,,return;,53,290,1
244334,RETURN,-1,,return type;,3,354,6
245336,RETURN,-1,,return true;,3,148,6
245404,RETURN,-1,,return info;,3,169,5
245904,RETURN,-1,,"return ""Scavenge"";",7,244,3
245912,RETURN,-1,,"return ""MarkSweepCompact"";",7,246,6
245920,RETURN,-1,,"return ""IncrementalMarking"";",7,248,9
245928,RETURN,-1,,"return ""ProcessWeakCallbacks"";",7,250,12
245931,RETURN,-1,,"return ""Unknown"";",7,252,14
246164,RETURN,-1,,return;,5,304,1
246226,RETURN,-1,,return;,5,322,1
246314,RETURN,-1,,return &writer_;,3,356,1
246321,RETURN,-1,,return &out_stream_;,3,360,1
246381,RETURN,-1,,return;,5,374,1
246507,RETURN,-1,,return;,5,399,1
246651,RETURN,1,,return;,32,427,1
247579,RETURN,1,,return MaybeLocal<Value>();,5,63,1
247629,RETURN,-1,,return MaybeLocal<Value>();,5,70,1
247631,RETURN,-1,,return e;,3,73,16
247682,RETURN,1,,return;,7,87,1
248418,RETURN,-1,,return UVWASI_EINVAL;,3,233,1
248447,RETURN,1,,return EinvalError<R>();,34,247,1
248469,RETURN,-1,,return EinvalError<R>();,5,252,2
248485,RETURN,-1,,"return F(*wasi,
           {reinterpret_cast<char*>(memory), options.wasm_memory->length()},
           args...);",3,257,8
248516,RETURN,-1,,return value->IsUint32();,3,271,1
248526,RETURN,-1,,return value.As<Uint32>()->Value();,3,276,1
248539,RETURN,-1,,return value->IsBigInt();,3,281,1
248560,RETURN,-1,,return js_value->Uint64Value(&lossless);,3,288,3
248572,RETURN,-1,,return value->IsBigInt();,3,293,1
248593,RETURN,-1,,return js_value->Int64Value(&lossless);,3,300,3
248607,RETURN,-1,,return CheckType<T>(info[i]);,3,305,1
248627,RETURN,1,,return false;,37,313,1
248629,RETURN,-1,,"return CheckTypes<Ts...>(info, i + 1, args...);",3,314,2
248641,RETURN,-1,,"return CheckTypes<Args...>(info, 0, Args()...);",3,319,1
248651,RETURN,-1,,return true;,3,324,1
248714,RETURN,-1,,return;,5,361,2
248728,RETURN,-1,,return;,5,365,2
248751,RETURN,-1,,return;,5,372,2
248857,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, argv_buf_offset, wasi.uvw_.argv_buf_size)",3,402,1
248883,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, argv_offset, wasi.uvw_.argc * UVWASI_SERDES_SIZE_uint32_t)",3,403,1
248960,RETURN,-1,,return err;,3,418,11
248993,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, argc_offset, UVWASI_SERDES_SIZE_size_t)",3,426,1
249014,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, argv_buf_offset, UVWASI_SERDES_SIZE_size_t)",3,427,1
249048,RETURN,-1,,return err;,3,437,9
249081,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, resolution_ptr, UVWASI_SERDES_SIZE_timestamp_t)",3,445,1
249107,RETURN,-1,,return err;,3,452,7
249142,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, time_ptr, UVWASI_SERDES_SIZE_timestamp_t)",3,461,1
249169,RETURN,-1,,return err;,3,468,7
249210,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, environ_buf_offset, wasi.uvw_.env_buf_size)",3,476,1
249236,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size,
                         environ_offset,
                         wasi.uvw_.envc * UVWASI_SERDES_SIZE_uint32_t)",3,478,1
249313,RETURN,-1,,return err;,3,498,11
249346,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, envc_offset, UVWASI_SERDES_SIZE_size_t)",3,506,1
249367,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, env_buf_offset, UVWASI_SERDES_SIZE_size_t)",3,507,1
249401,RETURN,-1,,return err;,3,518,9
249420,RETURN,-1,,"return uvwasi_fd_advise(&wasi.uvw_, fd, offset, len, advice);",3,528,2
249445,RETURN,-1,,"return uvwasi_fd_allocate(&wasi.uvw_, fd, offset, len);",3,534,2
249465,RETURN,-1,,"return uvwasi_fd_close(&wasi.uvw_, fd);",3,539,2
249483,RETURN,-1,,"return uvwasi_fd_datasync(&wasi.uvw_, fd);",3,544,2
249521,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_fdstat_t)",3,552,1
249548,RETURN,-1,,return err;,3,559,7
249563,RETURN,-1,,"return uvwasi_fd_fdstat_set_flags(&wasi.uvw_, fd, flags);",3,567,2
249586,RETURN,-1,,"return uvwasi_fd_fdstat_set_rights(
      &wasi.uvw_, fd, fs_rights_base, fs_rights_inheriting);",3,580,2
249626,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_filestat_t)",3,589,1
249653,RETURN,-1,,return err;,3,596,7
249668,RETURN,-1,,"return uvwasi_fd_filestat_set_size(&wasi.uvw_, fd, st_size);",3,604,2
249693,RETURN,-1,,"return uvwasi_fd_filestat_set_times(
      &wasi.uvw_, fd, st_atim, st_mtim, fst_flags);",3,619,2
249741,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_iovec_t)",3,637,1
249762,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nread_ptr, UVWASI_SERDES_SIZE_size_t)",3,639,1
249794,RETURN,-1,,return err;,5,646,1
249824,RETURN,-1,,return err;,3,654,11
249857,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_prestat_t)",3,662,1
249884,RETURN,-1,,return err;,3,669,7
249919,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,678,1
249922,RETURN,-1,,"return uvwasi_fd_prestat_dir_name(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,679,3
249974,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_ciovec_t)",3,697,1
249995,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nwritten_ptr, UVWASI_SERDES_SIZE_size_t)",3,699,1
250027,RETURN,-1,,return err;,5,706,1
250057,RETURN,-1,,return err;,3,715,11
250095,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_iovec_t)",3,725,1
250116,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nread_ptr, UVWASI_SERDES_SIZE_size_t)",3,727,1
250148,RETURN,-1,,return err;,5,734,1
250177,RETURN,-1,,return err;,3,742,11
250216,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,759,1
250237,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, bufused_ptr, UVWASI_SERDES_SIZE_size_t)",3,760,1
250271,RETURN,-1,,return err;,3,767,8
250286,RETURN,-1,,"return uvwasi_fd_renumber(&wasi.uvw_, from, to);",3,772,2
250329,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, newoffset_ptr, UVWASI_SERDES_SIZE_filesize_t)",3,782,1
250357,RETURN,-1,,return err;,3,790,7
250370,RETURN,-1,,"return uvwasi_fd_sync(&wasi.uvw_, fd);",3,795,2
250408,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, offset_ptr, UVWASI_SERDES_SIZE_filesize_t)",3,803,1
250434,RETURN,-1,,return err;,3,811,7
250472,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_ciovec_t)",3,826,1
250493,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nwritten_ptr, UVWASI_SERDES_SIZE_size_t)",3,828,1
250525,RETURN,-1,,return err;,5,835,1
250554,RETURN,-1,,return err;,3,843,11
250589,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,852,1
250608,RETURN,-1,,return err;,3,855,5
250645,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,870,1
250666,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, UVWASI_SERDES_SIZE_filestat_t)",3,871,1
250701,RETURN,-1,,return err;,3,878,8
250744,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,899,1
250747,RETURN,-1,,"return uvwasi_path_filestat_set_times(&wasi.uvw_,
                                        fd,
                                        flags,
                                        &memory.data[path_ptr],
                                        path_len,
                                        st_atim,
                                        st_mtim,
                                        fst_flags);",3,900,3
250806,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,928,1
250827,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,929,1
250830,RETURN,-1,,"return uvwasi_path_link(&wasi.uvw_,
                          old_fd,
                          old_flags,
                          &memory.data[old_path_ptr],
                          old_path_len,
                          new_fd,
                          &memory.data[new_path_ptr],
                          new_path_len);",3,930,4
250898,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,962,1
250919,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, fd_ptr, UVWASI_SERDES_SIZE_fd_t)",3,963,1
250961,RETURN,-1,,return err;,3,978,8
251002,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,997,1
251023,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,998,1
251044,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, bufused_ptr, UVWASI_SERDES_SIZE_size_t)",3,999,1
251084,RETURN,-1,,return err;,3,1011,9
251119,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,1020,1
251122,RETURN,-1,,"return uvwasi_path_remove_directory(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,1021,3
251175,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,1041,1
251196,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,1042,1
251199,RETURN,-1,,"return uvwasi_path_rename(&wasi.uvw_,
                            old_fd,
                            &memory.data[old_path_ptr],
                            old_path_len,
                            new_fd,
                            &memory.data[new_path_ptr],
                            new_path_len);",3,1043,4
251258,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,1066,1
251279,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,1067,1
251282,RETURN,-1,,"return uvwasi_path_symlink(&wasi.uvw_,
                             &memory.data[old_path_ptr],
                             old_path_len,
                             fd,
                             &memory.data[new_path_ptr],
                             new_path_len);",3,1068,4
251336,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,1082,1
251339,RETURN,-1,,"return uvwasi_path_unlink_file(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,1083,3
251389,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, in_ptr, nsubscriptions * UVWASI_SERDES_SIZE_subscription_t)",3,1099,1
251411,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, out_ptr, nsubscriptions * UVWASI_SERDES_SIZE_event_t)",3,1101,1
251432,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nevents_ptr, UVWASI_SERDES_SIZE_size_t)",3,1103,1
251530,RETURN,-1,,return err;,3,1124,12
251560,RETURN,-1,,"return uvwasi_proc_raise(&wasi.uvw_, sig);",3,1134,2
251598,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,1142,1
251601,RETURN,-1,,"return uvwasi_random_get(&wasi.uvw_, &memory.data[buf_ptr], buf_len);",3,1143,3
251623,RETURN,-1,,return uvwasi_sched_yield(&wasi.uvw_);,3,1148,2
251668,RETURN,-1,,return err;,3,1163,6
251710,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, ri_data_ptr, ri_data_len * UVWASI_SERDES_SIZE_iovec_t)",3,1182,1
251731,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, ro_datalen_ptr, 4)",3,1184,1
251752,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, ro_flags_ptr, 4)",3,1185,1
251784,RETURN,-1,,return err;,5,1190,1
251823,RETURN,-1,,return err;,3,1207,13
251863,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, si_data_ptr, si_data_len * UVWASI_SERDES_SIZE_ciovec_t)",3,1224,1
251884,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, so_datalen_ptr, UVWASI_SERDES_SIZE_size_t)",3,1226,1
251916,RETURN,-1,,return err;,5,1232,1
251946,RETURN,-1,,return err;,3,1241,11
251961,RETURN,-1,,"return uvwasi_sock_shutdown(&wasi.uvw_, sock, how);",3,1249,2
251997,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        wasi->env(),
        ""\""instance.exports.memory\"" property must be a WebAssembly.Memory ""
        ""object"");",5,1257,1
252639,RETURN,-1,,return templ;,5,26,1
252706,RETURN,-1,,return function;,3,41,14
252781,RETURN,-1,,return MaybeLocal<Object>();,5,64,1
252805,RETURN,-1,,return obj;,3,73,10
252998,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        Environment::GetCurrent(args),
        ""chunk must be an ArrayBufferView or an ArrayBuffer"");",5,118,1
253139,RETURN,-1,,return;,5,164,1
253580,RETURN,-1,,return SignalPropagation::kStopPropagation;,3,122,3
253785,RETURN,-1,,return SignalPropagation::kContinuePropagation;,3,197,3
253796,RETURN,-1,,return;,5,203,1
253807,RETURN,-1,,return;,5,207,1
253894,RETURN,-1,,return TRUE;,5,259,2
253898,RETURN,-1,,return FALSE;,5,261,1
253967,RETURN,-1,,return is_stopping;,3,289,7
253982,RETURN,-1,,return 0;,5,297,1
253995,RETURN,-1,,return 0;,3,326,5
254021,RETURN,-1,,return had_pending_signal;,7,341,2
254036,RETURN,-1,,return had_pending_signal;,3,373,8
254045,RETURN,-1,,return has_pending_signal_;,3,380,3
254181,RETURN,1,,return;,18,303,1
254221,RETURN,-1,,"return env_vars->Get(name).FromMaybe("""");",7,529,1
254474,RETURN,-1,,return;,5,73,1
254598,RETURN,1,,return env_->is_stopping();,5,106,1
254603,RETURN,-1,,return stopped_;,3,107,4
254738,RETURN,-1,,return;,7,151,4
254799,RETURN,-1,,return;,7,169,2
254986,RETURN,-1,,return !loop_init_failed_;,33,243,1
255060,RETURN,-1,,return new_limit;,3,274,11
255113,RETURN,1,,return;,28,287,1
255150,RETURN,1,,return;,23,315,1
255234,RETURN,-1,,return;,11,347,2
255238,RETURN,1,,return;,25,351,1
255283,RETURN,1,,return;,27,363,1
255307,RETURN,1,,return;,23,372,1
255325,RETURN,1,,return;,25,376,1
255335,RETURN,-1,,return;,11,379,1
255354,RETURN,1,,return;,11,384,1
255466,RETURN,-1,,return child_port;,3,424,8
255479,RETURN,1,,return;,5,429,1
255684,RETURN,-1,,return;,5,488,2
256008,RETURN,1,,return;,65,554,1
256035,RETURN,-1,,return;,9,560,5
256107,RETURN,-1,,return;,9,575,1
256129,RETURN,-1,,return;,9,579,1
256239,RETURN,-1,,return;,9,604,1
256266,RETURN,-1,,return;,7,611,5
256788,RETURN,-1,,"return Float64Array::New(ab, 0, kTotalResourceLimitCount);",3,759,3
256846,RETURN,-1,,return true;,3,789,1
256925,RETURN,-1,,return;,5,815,1
257010,RETURN,1,,return args.GetReturnValue().Set(-1);,5,871,1
257071,RETURN,1,,return args.GetReturnValue().Set(-1);,5,886,1
258119,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258126,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258133,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258140,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258147,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258154,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258161,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258168,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258175,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
258177,RETURN,-1,,"return ""Z_UNKNOWN_ERROR"";",3,94,10
258219,RETURN,-1,,return code != nullptr;,33,127,1
258594,RETURN,-1,,return;,7,277,2
258690,RETURN,1,,return;,52,308,1
258772,RETURN,1,,return;,55,327,1
258788,RETURN,1,,return;,55,328,1
258845,RETURN,1,,return;,54,336,1
258861,RETURN,1,,return;,54,337,1
258964,RETURN,-1,,return;,7,373,5
259008,RETURN,1,,return true;,25,395,1
259012,RETURN,-1,,return false;,5,397,5
259038,RETURN,-1,,return;,7,411,2
259065,RETURN,1,,return;,7,421,1
259225,RETURN,-1,,return &ctx_;,35,470,1
259263,RETURN,-1,,"return AllocForBrotli(data, real_size);",5,488,3
259294,RETURN,1,,return nullptr;,38,495,1
259312,RETURN,-1,,return memory + sizeof(size_t);,5,499,9
259329,RETURN,1,,return;,39,503,1
259384,RETURN,1,,return;,22,517,1
259604,RETURN,1,,return;,58,595,1
259621,RETURN,1,,return;,51,598,1
259638,RETURN,1,,return;,56,601,1
259655,RETURN,1,,return;,55,604,1
259839,RETURN,1,,return;,51,638,1
259856,RETURN,1,,return;,54,640,1
259904,RETURN,-1,,return this->CompressionStream<CompressionContext>::context();,5,664,1
260061,RETURN,-1,,return;,7,697,3
260150,RETURN,-1,,return;,9,711,3
260189,RETURN,-1,,return;,7,738,3
260269,RETURN,-1,,return;,5,762,1
260540,RETURN,-1,,"return CompressionError { message, ZlibStrerror(err_), err_ };",3,890,2
260569,RETURN,-1,,"return ErrorForMessage(""unexpected end of file"");",7,900,1
260583,RETURN,1,,"return ErrorForMessage(""Missing dictionary"");",7,907,1
260588,RETURN,1,,"return ErrorForMessage(""Bad dictionary"");",7,909,1
260592,RETURN,-1,,"return ErrorForMessage(""Zlib error"");",5,912,13
260595,RETURN,-1,,return CompressionError {};,3,915,2
260613,RETURN,-1,,"return ErrorForMessage(""Failed to init stream before reset"");",5,922,1
260653,RETURN,1,,"return ErrorForMessage(""Failed to reset stream"");",5,943,1
260656,RETURN,-1,,return SetDictionary();,3,945,7
260840,RETURN,-1,,return false;,5,1008,1
260891,RETURN,-1,,return true;,5,1035,3
260897,RETURN,-1,,return true;,3,1040,8
260909,RETURN,1,,return CompressionError {};,5,1046,1
260959,RETURN,-1,,"return ErrorForMessage(""Failed to set dictionary"");",5,1069,1
260962,RETURN,-1,,return CompressionError {};,3,1072,5
260982,RETURN,-1,,"return ErrorForMessage(""Failed to init stream before set parameters"");",5,1079,1
261014,RETURN,-1,,"return ErrorForMessage(""Failed to set parameters"");",5,1094,1
261017,RETURN,-1,,return CompressionError {};,3,1097,7
261142,RETURN,-1,,"return CompressionError(""Could not initialize Brotli instance"",
                            ""ERR_ZLIB_INITIALIZATION_FAILED"",
                            -1);",5,1150,1
261150,RETURN,-1,,return CompressionError {};,5,1154,1
261157,RETURN,-1,,"return Init(alloc_, free_, alloc_opaque_);",3,1159,1
261180,RETURN,-1,,"return CompressionError(""Setting parameter failed"",
                            ""ERR_BROTLI_PARAM_SET_FAILED"",
                            -1);",5,1166,1
261188,RETURN,-1,,return CompressionError {};,5,1170,1
261199,RETURN,-1,,"return CompressionError(""Compression failed"",
                            ""ERR_BROTLI_COMPRESSION_FAILED"",
                            -1);",5,1176,1
261207,RETURN,-1,,return CompressionError {};,5,1180,1
261305,RETURN,-1,,"return CompressionError(""Could not initialize Brotli instance"",
                            ""ERR_ZLIB_INITIALIZATION_FAILED"",
                            -1);",5,1215,1
261313,RETURN,-1,,return CompressionError {};,5,1219,1
261320,RETURN,-1,,"return Init(alloc_, free_, alloc_opaque_);",3,1224,1
261343,RETURN,-1,,"return CompressionError(""Setting parameter failed"",
                            ""ERR_BROTLI_PARAM_SET_FAILED"",
                            -1);",5,1231,1
261351,RETURN,-1,,return CompressionError {};,5,1235,1
261363,RETURN,-1,,"return CompressionError(""Decompression failed"",
                            error_string_.c_str(),
                            static_cast<int>(error_));",5,1241,1
261384,RETURN,-1,,"return CompressionError(""unexpected end of file"",
                            ""Z_BUF_ERROR"",
                            Z_BUF_ERROR);",5,1247,1
261391,RETURN,-1,,return CompressionError {};,5,1251,1
272246,RETURN,-1,,return deny_all_ == false;,3,19,1
272339,RETURN,-1,,"return res + ""*"";",9,26,1
272343,RETURN,-1,,"return res + node::kPathSeparator + ""*"";",7,28,2
272354,RETURN,-1,,return res;,3,32,6
272366,RETURN,-1,,return;,5,38,1
272404,RETURN,-1,,"return granted_tree->Lookup(param, true);",3,67,1
272428,RETURN,-1,,return;,5,80,1
272569,RETURN,-1,,return;,7,129,2
272640,RETURN,-1,,return allow_all_in_ && allow_all_out_;,7,150,3
272648,RETURN,-1,,"return !deny_all_in_ &&
             ((param.empty() && allow_all_in_) || allow_all_in_ ||
              is_tree_granted(&granted_in_fs_, param));",7,152,6
272669,RETURN,-1,,"return !deny_all_out_ &&
             ((param.empty() && allow_all_out_) || allow_all_out_ ||
              is_tree_granted(&granted_out_fs_, param));",7,156,9
272687,RETURN,-1,,return false;,7,160,11
272718,RETURN,-1,,return when_empty_return;,5,174,1
272752,RETURN,-1,,return true;,7,182,1
272768,RETURN,-1,,return false;,7,187,1
272794,RETURN,-1,,return true;,7,194,1
272943,RETURN,-1,,return deny_all_ == false;,3,18,1
273025,RETURN,-1,,return;,5,37,1
273046,RETURN,-1,,return args.GetReturnValue().Set(false);,5,43,1
273083,RETURN,-1,,return;,7,49,1
273084,RETURN,-1,,"return args.GetReturnValue().Set(
        env->permission()->is_granted(scope, *utf8_arg));",5,51,4
273102,RETURN,-1,,return args.GetReturnValue().Set(env->permission()->is_granted(scope));,3,55,15
273125,RETURN,-1,,return nullptr;,3,64,3
273134,RETURN,-1,,return PermissionScope::kPermissionsRoot;,3,72,3
273306,RETURN,1,,return;,5,123,1
273459,RETURN,-1,,return deny_all_ == false;,3,18,1
273568,RETURN,-1,,"return handle_scope.EscapeMaybe(
      constructor->NewInstance(env->context(), 1, &type_value));",3,61,9
274485,RETURN,1,,return;,58,202,1
274546,RETURN,1,,return;,53,217,1
274829,RETURN,-1,,return stream;,5,100,6
276146,RETURN,1,,return false;,59,18,1
276168,RETURN,-1,,return true;,3,23,4
276204,RETURN,1,,return false;,59,32,1
276226,RETURN,-1,,return true;,3,37,4
276262,RETURN,1,,return false;,59,46,1
276330,RETURN,-1,,return false;,9,59,4
276350,RETURN,-1,,return true;,3,66,4
276389,RETURN,-1,,return stats->*member;,3,90,1
276972,RETURN,1,,return;,59,110,1
277103,RETURN,-1,,return handled_signals.find(signum) != handled_signals.end();,3,173,3
277189,RETURN,-1,,return used();,3,71,2
277195,RETURN,-1,,return sizeof data_ - used();,3,76,1
277204,RETURN,-1,,return used_;,3,81,1
277210,RETURN,-1,,return next_;,3,86,1
277286,RETURN,1,,return r;,5,134,1
277296,RETURN,-1,,return 0;,3,139,7
277338,RETURN,1,,return r;,9,160,1
277353,RETURN,1,,return r;,7,165,1
277370,RETURN,1,,return r;,7,171,1
277372,RETURN,-1,,return 0;,3,174,5
277422,RETURN,-1,,return js_buffer;,3,191,5
277428,RETURN,-1,,return readable_;,3,196,1
277434,RETURN,-1,,return writable_;,3,201,1
277456,RETURN,-1,,return static_cast<uv_stdio_flags>(flags);,3,214,5
277467,RETURN,-1,,return &uv_pipe_;,3,220,2
277474,RETURN,-1,,return reinterpret_cast<uv_stream_t*>(uv_pipe());,3,225,1
277482,RETURN,-1,,return reinterpret_cast<uv_handle_t*>(uv_pipe());,3,230,1
277515,RETURN,-1,,return size;,3,241,5
277847,RETURN,1,,return;,41,377,1
277886,RETURN,-1,,return env_;,3,431,1
277914,RETURN,1,,return MaybeLocal<Object>();,22,441,1
277923,RETURN,-1,,return scope.Escape(result);,3,445,9
277951,RETURN,-1,,return Just(false);,5,459,2
277970,RETURN,-1,,return Just(false);,5,467,4
277983,RETURN,1,,return Nothing<bool>();,38,470,1
277992,RETURN,-1,,return Just(false);,5,474,2
278013,RETURN,-1,,return Just(false);,7,481,2
278044,RETURN,-1,,return Just(false);,7,496,2
278067,RETURN,-1,,return Just(false);,5,504,2
278097,RETURN,-1,,return Just(false);,9,513,2
278114,RETURN,-1,,return Just(true);,3,525,19
278248,RETURN,1,,return;,5,602,1
278312,RETURN,1,,return SetError(static_cast<int>(exit_status));,5,645,1
278338,RETURN,1,,return error_;,5,660,1
278342,RETURN,1,,return pipe_error_;,5,662,1
278610,RETURN,-1,,return scope.Escape(js_result);,3,724,10
278695,RETURN,-1,,"return scope.Escape(
      Array::New(env()->isolate(), js_output.out(), js_output.length()));",3,743,8
278739,RETURN,1,,return Just<int>(UV_EINVAL);,30,752,1
278792,RETURN,1,,return Nothing<int>();,53,759,1
278799,RETURN,1,,return Just(r);,14,760,1
278837,RETURN,1,,return Nothing<int>();,58,765,1
278844,RETURN,1,,return Just(r);,14,766,1
278888,RETURN,1,,return Nothing<int>();,53,772,1
278895,RETURN,1,,return Just(r);,16,773,1
278937,RETURN,1,,return Nothing<int>();,7,781,1
278944,RETURN,1,,return Just(r);,16,782,1
279296,RETURN,1,,return Just(r);,14,849,1
279299,RETURN,-1,,return Just(0);,3,851,41
279325,RETURN,1,,return UV_EINVAL;,5,860,1
279399,RETURN,1,,return UV_EINVAL;,7,877,1
279415,RETURN,1,,return r;,7,881,1
279427,RETURN,-1,,return 0;,3,887,15
279473,RETURN,-1,,return AddStdioIgnore(child_fd);,5,898,1
279608,RETURN,-1,,return UV_EINVAL;,9,923,1
279610,RETURN,-1,,"return AddStdioPipe(child_fd, readable, writable, buf);",5,927,12
279659,RETURN,-1,,"return AddStdioInheritFD(child_fd, inherit_fd);",5,933,3
279687,RETURN,-1,,return 0;,3,947,4
279735,RETURN,-1,,return r;,5,964,2
279768,RETURN,-1,,return 0;,3,972,10
279800,RETURN,-1,,return 0;,3,983,5
279807,RETURN,-1,,return !value->IsUndefined() && !value->IsNull();,3,988,1
279873,RETURN,1,,return Nothing<int>();,5,1002,1
279890,RETURN,1,,return Nothing<int>();,5,1006,1
279920,RETURN,-1,,return Just(0);,3,1015,14
279954,RETURN,1,,return Just<int>(UV_EINVAL);,29,1027,1
280052,RETURN,1,,return Nothing<int>();,9,1049,1
280083,RETURN,1,,return Nothing<int>();,33,1058,1
280177,RETURN,-1,,return Just(0);,3,1083,23
280327,RETURN,-1,,return UV_EBUSY;,7,52,1
280410,RETURN,-1,,return UV_EBUSY;,7,74,1
280413,RETURN,-1,,return err;,3,79,18
280478,RETURN,-1,,"return StreamWriteResult{false, err, nullptr, total_bytes, {}};",7,97,1
280517,RETURN,-1,,"return StreamWriteResult{false, UV_EBUSY, nullptr, 0, {}};",7,107,1
280603,RETURN,-1,,"return StreamWriteResult{false, UV_EBUSY, nullptr, 0, {}};",7,131,1
280612,RETURN,-1,,"return StreamWriteResult{
      async, err, req_wrap, total_bytes, std::move(req_wrap_ptr)};",3,136,24
280629,RETURN,-1,,return ReadStart();,3,151,1
280636,RETURN,-1,,return ReadStop();,3,156,1
280673,RETURN,-1,,return 0;,3,164,5
280699,RETURN,-1,,return Shutdown(req_wrap_obj);,3,171,3
280874,RETURN,1,,return -1;,9,207,1
280900,RETURN,1,,return -1;,9,216,1
280926,RETURN,1,,return -1;,9,219,1
280976,RETURN,-1,,return -1;,9,227,1
280987,RETURN,1,,return UV_ENOBUFS;,7,233,1
281022,RETURN,1,,return -1;,9,238,1
281113,RETURN,1,,return -1;,9,255,1
281190,RETURN,1,,return -1;,9,272,1
281216,RETURN,1,,return -1;,9,275,1
281286,RETURN,-1,,return res.err;,3,292,27
281325,RETURN,-1,,return 0;,5,303,2
281420,RETURN,-1,,return -1;,7,324,1
281434,RETURN,-1,,return res.err;,3,331,15
281558,RETURN,-1,,return -1;,5,356,1
281566,RETURN,1,,return UV_ENOBUFS;,5,360,1
281658,RETURN,-1,,return err;,7,390,2
281797,RETURN,-1,,return -1;,7,431,1
281835,RETURN,-1,,return res.err;,3,442,34
281947,RETURN,-1,,"return wrap->MakeCallback(onread.As<Function>(), arraysize(argv), argv);",3,476,15
281963,RETURN,-1,,return false;,3,481,1
281969,RETURN,-1,,return -1;,3,486,1
281976,RETURN,-1,,return GetAsyncWrap()->object();,3,491,1
282198,RETURN,1,,return;,22,575,1
282310,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,24,601,1
282326,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,25,603,1
282370,RETURN,1,,return args.GetReturnValue().Set(0);,24,610,1
282415,RETURN,1,,return args.GetReturnValue().Set(0);,24,618,1
282460,RETURN,1,,return;,24,626,1
282508,RETURN,1,,return;,24,635,1
282516,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,25,637,1
282549,RETURN,-1,,return 0;,3,645,1
282555,RETURN,-1,,return nullptr;,3,650,1
282576,RETURN,-1,,return env->allocate_managed_buffer(suggested_size);,3,662,4
282647,RETURN,-1,,return;,5,677,2
282689,RETURN,-1,,return buffer_;,3,688,1
282740,RETURN,-1,,return;,5,705,2
282827,RETURN,1,,return;,33,726,1
283128,RETURN,-1,,return wrap;,3,825,4
283146,RETURN,-1,,return wrap;,3,832,4
283202,RETURN,-1,,return;,7,845,1
283273,RETURN,1,,return;,7,78,1
283291,RETURN,-1,,return;,7,81,1
283364,RETURN,-1,,return;,7,92,1
283440,RETURN,-1,,return;,7,103,1
283495,RETURN,-1,,return static_cast<StreamBase*>(readable_listener_.stream());,3,42,1
283506,RETURN,-1,,return static_cast<StreamBase*>(writable_listener_.stream());,3,46,1
283521,RETURN,1,,return;,5,51,1
283556,RETURN,1,,return;,23,65,1
283603,RETURN,-1,,return pipe->env()->allocate_managed_buffer(size);,3,112,6
283688,RETURN,-1,,return;,5,135,8
283838,RETURN,1,,return;,9,167,1
283844,RETURN,-1,,return;,5,170,2
283876,RETURN,-1,,return;,5,179,7
283897,RETURN,-1,,return;,5,187,6
284025,RETURN,1,,return;,5,224,1
284059,RETURN,-1,,return previous_listener_->OnStreamAlloc(suggested_size);,3,234,2
284072,RETURN,-1,,"return previous_listener_->OnStreamRead(nread, buf);",3,240,2
284126,RETURN,-1,,return Nothing<StreamPipe*>();,5,255,1
284149,RETURN,-1,,return Nothing<StreamPipe*>();,5,260,1
284172,RETURN,-1,,return Nothing<StreamPipe*>();,5,264,1
284195,RETURN,-1,,return Nothing<StreamPipe*>();,5,269,1
284197,RETURN,-1,,return Just(stream_pipe.release());,3,272,8
284268,RETURN,1,,return;,63,282,1
285273,RETURN,-1,,return tmpl;,3,160,3
285303,RETURN,-1,,return Unwrap<LibuvStreamWrap>(object);,3,167,3
285329,RETURN,-1,,return fd;,3,178,4
285335,RETURN,-1,,return HandleWrap::IsAlive(this);,3,184,1
285345,RETURN,-1,,return uv_is_closing(reinterpret_cast<uv_handle_t*>(stream()));,3,189,1
285354,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,194,1
285362,RETURN,-1,,return is_named_pipe_ipc();,3,199,1
285368,RETURN,-1,,"return uv_read_start(
      stream(),
      [](uv_handle_t* handle, size_t suggested_size, uv_buf_t* buf) {
        static_cast<LibuvStreamWrap*>(handle->data)
            ->OnUvAlloc(suggested_size, buf);
      },
      [](uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {
        LibuvStreamWrap* wrap = static_cast<LibuvStreamWrap*>(stream->data);
        TryCatchScope try_catch(wrap->env());
        try_catch.SetVerbose(true);
        wrap->OnUvRead(nread, buf);
      });",3,203,1
285377,RETURN,-1,,return uv_read_stop(stream());,3,219,1
285450,RETURN,1,,return Local<Object>();,5,241,1
285482,RETURN,-1,,return scope.Escape(wrap_obj);,3,251,13
285631,RETURN,-1,,return Nothing<void>();,7,289,1
285637,RETURN,-1,,return JustVoid();,3,294,11
285668,RETURN,-1,,return;,5,304,2
285712,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,5,318,1
285750,RETURN,-1,,"return new LibuvShutdownWrap(this, object);",3,328,1
285760,RETURN,-1,,"return new LibuvWriteWrap(this, object);",3,332,1
285776,RETURN,-1,,"return req_wrap->Dispatch(uv_shutdown, stream(), AfterUvShutdown);",3,338,3
285858,RETURN,1,,return 0;,5,364,1
285865,RETURN,1,,return err;,5,366,1
285925,RETURN,-1,,return 0;,3,388,14
285941,RETURN,-1,,"return w->Dispatch(uv_write2,
                     stream(),
                     bufs,
                     count,
                     send_handle,
                     AfterUvWrite);",3,397,3
286051,RETURN,-1,,return data_;,5,64,1
286057,RETURN,-1,,return length_;,5,68,1
286063,RETURN,-1,,return length() * sizeof(*data());,5,72,1
286082,RETURN,1,,return String::Empty(isolate);,7,80,1
286095,RETURN,1,,"return NewSimpleFromCopy(isolate, data, length, error);",7,83,1
286124,RETURN,-1,,return MaybeLocal<Value>();,7,88,2
286134,RETURN,-1,,"return ExternString<ResourceType, TypeName>::New(isolate,
                                                     new_data,
                                                     length,
                                                     error);",5,92,7
286156,RETURN,1,,return String::Empty(isolate);,7,104,1
286182,RETURN,-1,,return str;,7,109,3
286225,RETURN,-1,,return MaybeLocal<Value>();,7,121,3
286227,RETURN,-1,,return str.ToLocalChecked();,5,124,8
286236,RETURN,-1,,return isolate_;,37,127,1
286270,RETURN,-1,,"return String::NewExternalOneByte(isolate, h_str).FromMaybe(Local<Value>());",3,156,1
286287,RETURN,-1,,"return String::NewExternalTwoByte(isolate, h_str).FromMaybe(Local<Value>());",3,163,1
286340,RETURN,-1,,return MaybeLocal<Value>();,5,178,2
286342,RETURN,-1,,return str.ToLocalChecked();,3,180,3
286387,RETURN,-1,,return MaybeLocal<Value>();,5,196,2
286389,RETURN,-1,,return str.ToLocalChecked();,3,198,3
287343,RETURN,-1,,return unhex_table[x];,3,244,1
287410,RETURN,1,,return i;,7,257,1
287421,RETURN,-1,,return i;,3,261,3
287451,RETURN,-1,,return 0;,5,270,1
287478,RETURN,-1,,return nchars * sizeof(*dst);,5,277,2
287511,RETURN,-1,,return 0;,5,285,1
287566,RETURN,-1,,return nchars * sizeof(*dst);,3,299,20
287805,RETURN,-1,,return nbytes;,3,374,9
287840,RETURN,-1,,return Just(Buffer::Length(val));,5,388,1
287868,RETURN,1,,return Nothing<size_t>();,5,393,1
287946,RETURN,-1,,return Just(data_size);,3,428,11
287974,RETURN,1,,return Just(Buffer::Length(val));,5,437,1
288002,RETURN,1,,return Nothing<size_t>();,5,441,1
288011,RETURN,-1,,return Just<size_t>(str->Length());,7,446,5
288024,RETURN,-1,,return Just<size_t>(str->Utf8Length(isolate));,7,450,10
288036,RETURN,-1,,return Just(str->Length() * sizeof(uint16_t));,7,453,13
288054,RETURN,-1,,"return Just(base64_decoded_size(*value, value.length()));",7,459,3
288065,RETURN,-1,,return Just<size_t>(str->Length() / 2);,7,463,21
288121,RETURN,-1,,return;,5,479,2
288184,RETURN,-1,,return;,7,496,2
288330,RETURN,-1,,return dlen;,3,538,4
288356,RETURN,-1,,return dst;,3,545,6
288387,RETURN,-1,,CHECK_BUFLEN_IN_RANGE(buflen),3,562,2
288398,RETURN,-1,,return String::Empty(isolate);,5,565,1
288449,RETURN,-1,,return buf;,9,578,5
288484,RETURN,-1,,return MaybeLocal<Value>();,11,587,2
288490,RETURN,-1,,"return ExternOneByteString::New(isolate, out, buflen, error);",9,590,5
288501,RETURN,-1,,"return ExternOneByteString::NewFromCopy(isolate, buf, buflen, error);",9,592,1
288549,RETURN,-1,,return str;,9,605,4
288553,RETURN,-1,,"return ExternOneByteString::NewFromCopy(isolate, buf, buflen, error);",7,609,12
288591,RETURN,-1,,return MaybeLocal<Value>();,9,616,2
288604,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,622,9
288645,RETURN,-1,,return MaybeLocal<Value>();,9,630,2
288661,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,636,9
288700,RETURN,-1,,return MaybeLocal<Value>();,9,644,2
288713,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,649,9
288761,RETURN,-1,,return MaybeLocal<Value>();,11,658,2
288815,RETURN,-1,,"return ExternTwoByteString::New(isolate, dst, str_len, error);",9,667,5
288854,RETURN,-1,,return MaybeLocal<Value>();,11,674,2
288860,RETURN,-1,,"return ExternTwoByteString::New(
            isolate, reinterpret_cast<uint16_t*>(dst), str_len, error);",9,677,5
288871,RETURN,-1,,"return ExternTwoByteString::NewFromCopy(
          isolate, reinterpret_cast<const uint16_t*>(buf), str_len, error);",7,680,5
288898,RETURN,1,,return String::Empty(isolate);,20,694,1
288924,RETURN,-1,,CHECK_BUFLEN_IN_RANGE(buflen),3,695,2
288953,RETURN,-1,,return MaybeLocal<Value>();,7,705,2
288971,RETURN,-1,,"return ExternTwoByteString::New(isolate, dst, buflen, error);",5,710,8
288982,RETURN,-1,,"return ExternTwoByteString::NewFromCopy(isolate, buf, buflen, error);",5,712,1
289004,RETURN,-1,,"return Encode(isolate, buf, len, encoding, error);",3,721,3
289108,RETURN,-1,,return MaybeLocal<String>();,7,41,2
289112,RETURN,-1,,return utf8_string;,7,43,1
289158,RETURN,-1,,return ret.FromMaybe(Local<Value>()).As<String>();,3,60,6
289313,RETURN,-1,,return MaybeLocal<String>();,11,124,1
289606,RETURN,1,,return MaybeLocal<String>();,11,220,1
289623,RETURN,-1,,return body;,7,227,1
289627,RETURN,-1,,"return String::Concat(isolate, prepend, body);",7,229,1
289649,RETURN,-1,,"return MakeString(isolate, data, nread, Encoding());",5,233,2
289703,RETURN,1,,return String::Empty(isolate);,5,250,1
289730,RETURN,-1,,return ret;,3,261,7
290248,RETURN,-1,,"return uv_ip4_addr(ip_address, port, addr);",7,301,1
290262,RETURN,-1,,"return uv_ip6_addr(ip_address, port, addr);",7,313,1
290363,RETURN,-1,,"return handle_scope.EscapeMaybe(
      constructor->NewInstance(env->context(), 1, &type_value));",3,67,9
291148,RETURN,1,,return;,57,203,1
291224,RETURN,1,,return;,5,230,1
291320,RETURN,1,,return;,55,253,1
291343,RETURN,-1,,return;,5,256,1
291454,RETURN,1,,return;,58,287,1
291546,RETURN,1,,return;,55,310,1
291769,RETURN,1,,return 0;,31,372,1
291818,RETURN,-1,,return err;,3,382,6
291936,RETURN,-1,,return {};,9,415,2
292119,RETURN,-1,,return scope.Escape(info);,3,447,9
292186,RETURN,1,,return;,31,11,1
292239,RETURN,1,,return;,31,27,1
292257,RETURN,1,,return;,31,32,1
292274,RETURN,1,,return;,31,37,1
292307,RETURN,1,,return timer_->Stop();,5,48,1
292524,RETURN,-1,,return GetLibuvNowImpl(FromJSObject<BindingData>(receiver));,3,37,1
292536,RETURN,-1,,return static_cast<double>(data->env()->GetNowUint64());,3,41,1
292710,RETURN,-1,,return true;,3,93,1
292732,RETURN,-1,,return info;,3,100,4
292883,RETURN,1,,return;,32,156,1
293105,RETURN,1,,return;,28,24,1
293159,RETURN,-1,,return result;,3,43,3
293259,RETURN,1,,return;,5,88,1
293402,RETURN,-1,,"return AgentWriterHandle(this, id);",3,134,15
293410,RETURN,-1,,"return AgentWriterHandle(this, kDefaultHandleId);",3,138,1
293422,RETURN,1,,return;,5,143,1
293448,RETURN,1,,return;,35,155,1
293492,RETURN,1,,return;,5,167,1
293582,RETURN,1,,return nullptr;,5,187,1
293602,RETURN,-1,,return trace_config;,3,192,5
293627,RETURN,-1,,return categories;,3,202,3
293826,RETURN,-1,,return uv_hrtime() / 1000;,5,40,1
293866,RETURN,-1,,return agent_ == nullptr;,31,60,1
293892,RETURN,-1,,return agent_;,27,68,1
293949,RETURN,-1,,return controller;,5,92,4
294090,RETURN,-1,,return *this;,3,169,5
294142,RETURN,-1,,return agent_ != nullptr && id_ == Agent::kDefaultHandleId;,3,185,1
294156,RETURN,-1,,return agent_ != nullptr ? agent_->GetTracingController() : nullptr;,3,189,1
294331,RETURN,-1,,return trace_object;,3,31,10
294346,RETURN,-1,,return nullptr;,5,38,1
294371,RETURN,-1,,return nullptr;,5,47,1
294387,RETURN,-1,,return nullptr;,5,52,1
294389,RETURN,-1,,return chunk->GetEventAt(event_index);,3,54,13
294482,RETURN,-1,,"return ((static_cast<uint64_t>(chunk_seq) * Capacity() +
          chunk_index * TraceBufferChunk::kChunkSize + event_index) << 1) + id_;",3,83,1
294626,RETURN,-1,,return nullptr;,5,130,2
294628,RETURN,-1,,return current_buf_.load()->AddTraceEvent(handle);,3,132,2
294642,RETURN,-1,,return current_buf_.load()->GetEventByHandle(handle);,3,136,1
294665,RETURN,-1,,return true;,3,142,3
294713,RETURN,-1,,return false;,7,157,1
294715,RETURN,-1,,return true;,3,160,4
294840,RETURN,-1,,return total_chunks_ == max_chunks_ && chunks_[total_chunks_ - 1]->IsFull();,5,28,1
294857,RETURN,-1,,return flushing_;,5,31,1
294879,RETURN,-1,,return max_chunks_ * TraceBufferChunk::kChunkSize;,29,39,1
295417,RETURN,1,,return;,7,147,1
295457,RETURN,1,,return;,18,163,1
295830,RETURN,-1,,return g_agent;,3,21,1
295836,RETURN,-1,,return g_controller;,3,25,1
295850,RETURN,-1,,return tracing::TraceEventHelper::GetTracingController();,3,35,1
295957,RETURN,1,,return &disabled;,42,324,1
295960,RETURN,-1,,return controller->GetCategoryGroupEnabled(group);,5,325,6
295978,RETURN,-1,,return raw_id_;,31,338,1
295984,RETURN,-1,,return scope_;,33,339,1
296050,RETURN,-1,,return scope_;,33,363,1
296056,RETURN,-1,,return raw_id_;,31,364,1
296112,RETURN,-1,,return raw_id_;,31,384,1
296235,RETURN,-1,,return raw_id_;,29,430,1
296241,RETURN,-1,,return scope_;,31,431,1
296269,RETURN,-1,,return str_;,34,452,1
296360,RETURN,1,,return 0;,30,475,1
296362,RETURN,-1,,"return controller->AddTraceEvent(phase, category_group_enabled, name, scope, id,
                                   bind_id, num_args, arg_names, arg_types,
                                   arg_values, arg_convertibles, flags);",3,476,7
296706,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(phase, category_group_enabled, name,
                                         scope, id, bind_id, kZeroNumArgs,
                                         nullptr, nullptr, nullptr, flags);",3,589,1
296757,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(
      phase, category_group_enabled, name, scope, id, bind_id, num_args,
      &arg1_name, &arg_type, &arg_value, flags);",3,603,6
296839,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(
      phase, category_group_enabled, name, scope, id, bind_id, num_args,
      arg_names, arg_types, arg_values, flags);",3,622,9
297060,RETURN,-1,,return result;,3,86,6
297078,RETURN,-1,,"return ""\""NaN\"""";",18,91,3
297082,RETURN,-1,,"return (v < 0.0 ? ""\""-Infinity\"""" : ""\""Infinity\"""");",23,92,6
297091,RETURN,-1,,"return ""0"";",19,93,9
297108,RETURN,-1,,return stream.str();,7,99,14
297117,RETURN,-1,,return std::unique_ptr<TracedValue>(new TracedValue(false));,3,106,1
297131,RETURN,-1,,return std::unique_ptr<TracedValue>(new TracedValue(true));,3,110,1
297745,RETURN,1,,return;,53,83,1
297961,RETURN,1,,return;,53,131,1
298126,RETURN,-1,,return;,5,61,2
298159,RETURN,-1,,return;,5,67,1
298202,RETURN,-1,,return have_callback_;,3,98,1
298229,RETURN,-1,,return listener_;,3,112,2
298276,RETURN,-1,,"return static_cast<UDPWrapBase*>(
      obj->GetAlignedPointerFromInternalField(UDPWrapBase::kUDPWrapBaseField));",3,127,2
298900,RETURN,-1,,"return uv_ip4_addr(address, port, reinterpret_cast<sockaddr_in*>(addr));",7,256,3
298909,RETURN,-1,,"return uv_ip6_addr(address, port, reinterpret_cast<sockaddr_in6*>(addr));",7,258,6
299000,RETURN,1,,return;,5,278,1
299117,RETURN,1,,return;,5,306,1
299310,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,356,2
299373,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,370,2
299680,RETURN,1,,return;,26,464,1
299915,RETURN,1,,return;,58,524,1
300064,RETURN,1,,return UV_EBADF;,26,559,1
300180,RETURN,-1,,return msg_size + 1;,9,585,2
300209,RETURN,1,,return UV_ENOSYS;,30,593,1
300231,RETURN,-1,,return err;,3,610,9
300251,RETURN,-1,,return req_wrap;,3,619,4
300273,RETURN,-1,,return this;,3,634,1
300279,RETURN,-1,,return SocketAddress::FromPeerName(handle_);,3,638,1
300289,RETURN,-1,,return SocketAddress::FromSockName(handle_);,3,642,1
300334,RETURN,1,,return UV_EBADF;,26,651,1
300352,RETURN,-1,,return err;,3,656,5
300393,RETURN,1,,return UV_EBADF;,26,666,1
300395,RETURN,-1,,return uv_udp_recv_stop(&handle_);,3,667,2
300507,RETURN,-1,,return env()->allocate_managed_buffer(suggested_size);,3,695,1
300587,RETURN,-1,,return;,5,715,1
300627,RETURN,-1,,return;,5,729,2
300740,RETURN,-1,,return;,7,752,3
300836,RETURN,-1,,return;,7,771,3
300869,RETURN,-1,,return env->udp_constructor_function()->NewInstance(env->context());,3,786,4
301099,RETURN,1,,return;,72,73,1
301116,RETURN,1,,return;,70,76,1
301167,RETURN,1,,return;,5,88,1
301184,RETURN,-1,,return;,5,96,1
301206,RETURN,1,,return;,72,100,1
301251,RETURN,-1,,return;,5,118,2
301367,RETURN,1,,return default_title;,7,156,1
301388,RETURN,-1,,return buf;,3,165,5
301394,RETURN,-1,,"return SPrintF(""%s[%d]"", GetProcessTitle(""Node.js""), uv_os_getpid());",3,169,1
301484,RETURN,-1,,return out;,3,187,3
301511,RETURN,-1,,return kMicrosecondsPerSecond * tv.tv_sec + tv.tv_usec;,3,198,5
301553,RETURN,-1,,return fd;,5,211,1
301576,RETURN,-1,,return err;,5,217,1
301589,RETURN,-1,,return err;,3,222,12
301614,RETURN,-1,,"return WriteFileSync(path, buf);",3,230,5
301646,RETURN,-1,,return req.result;,5,242,1
301700,RETURN,-1,,return req.result;,7,261,1
301721,RETURN,-1,,return 0;,3,269,15
301779,RETURN,-1,,return contents;,3,284,15
301955,RETURN,-1,,return oss.str();,3,339,15
301970,RETURN,-1,,"return v8::FunctionTemplate::New(isolate,
                                   callback,
                                   Local<v8::Value>(),
                                   signature,
                                   0,
                                   behavior,
                                   side_effect_type,
                                   c_function);",3,349,1
302976,RETURN,-1,,"return String::NewExternalOneByte(isolate, one_byte_resource_)
        .ToLocalChecked();",5,613,1
302988,RETURN,-1,,"return String::NewExternalTwoByte(isolate, two_byte_resource_)
        .ToLocalChecked();",5,616,1
303103,RETURN,1,,return;,5,71,1
303123,RETURN,1,,return;,54,74,1
303254,RETURN,-1,,return;,7,100,1
