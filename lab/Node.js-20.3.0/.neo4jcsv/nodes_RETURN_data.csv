88,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            callback, argc, argv,
                            async_context_);",3,32,1
109,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            method, argc, argv,
                            async_context_);",3,40,1
130,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            symbol, argc, argv,
                            async_context_);",3,48,1
148,RETURN,-1,,return resource_.Get(env_->isolate());,3,54,1
161,RETURN,-1,,return async_context_.async_id;,3,58,1
169,RETURN,-1,,return async_context_.trigger_async_id;,3,62,1
296,RETURN,-1,,return;,5,61,2
389,RETURN,1,,return;,16,97,1
404,RETURN,1,,return;,28,111,1
453,RETURN,1,,return;,16,123,1
464,RETURN,-1,,return;,5,126,1
479,RETURN,1,,return;,34,131,1
549,RETURN,-1,,return;,5,150,1
570,RETURN,1,,return;,34,156,1
702,RETURN,-1,,return MaybeLocal<Value>();,5,199,1
813,RETURN,-1,,return MaybeLocal<Value>();,5,220,2
825,RETURN,-1,,return MaybeLocal<Value>();,5,225,1
827,RETURN,-1,,return ret;,3,228,19
854,RETURN,-1,,"return MakeCallback(isolate, recv, method_string, argc, argv, asyncContext);",3,241,2
895,RETURN,1,,return Local<Value>();,33,254,1
919,RETURN,1,,return Local<Value>();,5,258,1
928,RETURN,-1,,return Undefined(isolate);,5,262,1
941,RETURN,-1,,"return MakeCallback(isolate, recv, callback, argc, argv, asyncContext);",3,265,9
1008,RETURN,-1,,return Undefined(isolate);,5,290,1
1011,RETURN,-1,,return ret;,3,292,8
1045,RETURN,1,,return Local<Value>();,33,307,1
1066,RETURN,-1,,"return callback->Call(context, recv, argc, argv);",5,314,1
1095,RETURN,-1,,return ret;,3,322,10
1109,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, method, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,333,3
1139,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, symbol, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,344,3
1169,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, callback, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,355,3
1228,RETURN,-1,,"return CreateEnvironment(
            setup->isolate_data(),
            setup->context(),
            args,
            exec_args,
            static_cast<EnvironmentFlags::Flags>(env_flags));",9,193,1
1310,RETURN,1,,return Nothing<ExitCode>();,27,32,1
1436,RETURN,1,,return Nothing<ExitCode>();,27,66,1
1457,RETURN,-1,,return EmitProcessExitInternal(env);,3,76,21
1526,RETURN,-1,,return;,5,108,2
1693,RETURN,-1,,return;,7,153,3
1721,RETURN,-1,,return;,7,160,2
1782,RETURN,-1,,return ret;,3,201,6
1938,RETURN,1,,return {};,42,247,1
1939,RETURN,-1,,return result;,3,249,9
1960,RETURN,-1,,return Nothing<int>();,5,255,1
1962,RETURN,-1,,return Just(static_cast<int>(result.FromJust()));,3,257,3
1974,RETURN,-1,,return &impl_->loop;,3,261,1
1983,RETURN,-1,,return impl_->allocator;,3,266,1
1991,RETURN,-1,,return impl_->isolate;,3,270,1
1999,RETURN,-1,,return impl_->isolate_data.get();,3,274,1
2010,RETURN,-1,,return impl_->env.get();,3,278,1
2021,RETURN,-1,,return impl_->main_context.Get(impl_->isolate);,3,282,1
2035,RETURN,-1,,return impl_->snapshot_creator ? &impl_->snapshot_creator.value() : nullptr;,3,286,1
2087,RETURN,-1,,"return EmbedderSnapshotData::Pointer{new EmbedderSnapshotData(
      SnapshotBuilder::GetEmbeddedSnapshotData(), false)};",3,300,1
2133,RETURN,-1,,return {};,5,311,1
2134,RETURN,-1,,return result;,3,313,7
2141,RETURN,-1,,return FromBlob(ReadFileSync(in));,3,317,1
2149,RETURN,-1,,return impl_->ToBlob();,3,321,1
2174,RETURN,-1,,return true;,3,336,1
2244,RETURN,1,,return UTF8;,11,27,1
2256,RETURN,1,,return UCS2;,11,29,1
2299,RETURN,1,,return UCS2;,11,34,1
2306,RETURN,1,,return UTF8;,9,37,1
2313,RETURN,1,,return UTF8;,9,39,1
2320,RETURN,1,,return UCS2;,9,41,1
2327,RETURN,1,,return UCS2;,9,43,1
2334,RETURN,1,,return UCS2;,9,45,1
2341,RETURN,1,,return UCS2;,9,47,1
2365,RETURN,1,,return LATIN1;,11,55,1
2372,RETURN,1,,return LATIN1;,9,58,1
2396,RETURN,1,,return LATIN1;,11,66,1
2417,RETURN,1,,return BUFFER;,11,70,1
2438,RETURN,1,,return BASE64;,11,74,1
2450,RETURN,1,,return BASE64URL;,11,76,1
2457,RETURN,1,,return LATIN1;,9,79,1
2464,RETURN,1,,return BUFFER;,9,81,1
2471,RETURN,1,,return BASE64;,9,83,1
2478,RETURN,1,,return BASE64URL;,9,85,1
2502,RETURN,1,,return ASCII;,11,93,1
2509,RETURN,1,,return ASCII;,9,96,1
2536,RETURN,1,,return HEX;,11,104,1
2543,RETURN,1,,return HEX;,9,106,1
2546,RETURN,-1,,return default_encoding;,3,109,2
2568,RETURN,1,,return default_encoding;,5,119,1
2574,RETURN,-1,,"return ParseEncoding(*encoding, default_encoding);",3,123,5
2595,RETURN,-1,,"return StringBytes::Encode(isolate, buf, len, encoding, &error)
      .ToLocalChecked();",3,132,3
2621,RETURN,-1,,"return StringBytes::Encode(isolate, buf, len, &error)
      .ToLocalChecked();",3,138,2
2644,RETURN,-1,,"return StringBytes::Size(isolate, val, encoding).FromMaybe(-1);",3,148,3
2666,RETURN,-1,,"return StringBytes::Write(isolate, buf, buflen, val, encoding);",3,157,1
2697,RETURN,-1,,"return info.run_cjs->Call(
            env->context(), Null(env->isolate()), 1, &main_script);",9,559,2
2790,RETURN,-1,,return wasm_code_gen->IsUndefined() || wasm_code_gen->IsTrue();,3,51,2
2816,RETURN,-1,,"return env != nullptr &&
         (env->is_main_thread() || !env->is_stopping()) &&
         env->abort_on_uncaught_exception() &&
         env->should_abort_on_uncaught_toggle()[0] &&
         !env->inside_should_not_abort_on_uncaught_scope();",3,57,5
2869,RETURN,-1,,return exception->ToString(context).FromMaybe(Local<Value>());,5,69,1
2920,RETURN,-1,,return exception->ToString(context).FromMaybe(Local<Value>());,5,84,1
2978,RETURN,-1,,return result;,3,101,15
3025,RETURN,-1,,return ret;,3,112,4
3054,RETURN,-1,,return ret;,3,119,4
3094,RETURN,-1,,return ret;,3,127,4
3144,RETURN,-1,,return data;,3,143,6
3165,RETURN,-1,,return data;,3,150,6
3218,RETURN,-1,,return nullptr;,5,171,2
3247,RETURN,-1,,return ret;,3,181,8
3296,RETURN,1,,return;,24,198,1
3337,RETURN,1,,return;,24,211,1
3364,RETURN,1,,return std::make_unique<DebuggingArrayBufferAllocator>();,5,218,1
3371,RETURN,1,,return std::make_unique<NodeArrayBufferAllocator>();,5,220,1
3380,RETURN,-1,,return ArrayBufferAllocator::Create().release();,3,224,1
3727,RETURN,1,,return nullptr;,27,333,1
3768,RETURN,-1,,return isolate;,3,365,9
3790,RETURN,-1,,"return NewIsolate(&params,
                    event_loop,
                    platform,
                    SnapshotData::FromEmbedderWrapper(snapshot_data),
                    settings);",3,375,3
3820,RETURN,-1,,"return NewIsolate(&params,
                    event_loop,
                    platform,
                    SnapshotData::FromEmbedderWrapper(snapshot_data),
                    settings);",3,389,3
3849,RETURN,-1,,"return new IsolateData(isolate, loop, platform, allocator, snapshot_data);",3,404,3
3968,RETURN,-1,,return nullptr;,7,464,2
3999,RETURN,-1,,return nullptr;,5,486,2
4001,RETURN,-1,,return env;,3,489,18
4085,RETURN,-1,,"return GetInspectorParentHandle(env, thread_id, url, """");",3,524,1
4124,RETURN,-1,,return nullptr;,5,533,1
4126,RETURN,-1,,return {};,3,539,5
4141,RETURN,-1,,"return StartExecution(env, cb);",3,549,3
4154,RETURN,-1,,"return LoadEnvironment(
      env, [&](const StartExecutionCallbackInfo& info) -> MaybeLocal<Value> {
        Local<Value> main_script =
            ToV8Value(env->context(), main_script_source_utf8).ToLocalChecked();
        return info.run_cjs->Call(
            env->context(), Null(env->isolate()), 1, &main_script);
      });",3,555,2
4163,RETURN,-1,,return Environment::GetCurrent(context);,3,565,1
4174,RETURN,-1,,return env->isolate_data();,3,569,1
4184,RETURN,-1,,return isolate_data->node_allocator();,3,573,1
4194,RETURN,-1,,return env->context();,3,577,1
4204,RETURN,-1,,return GetMultiIsolatePlatform(env->isolate_data());,3,581,1
4215,RETURN,-1,,return env->platform();,3,585,1
4226,RETURN,-1,,"return CreatePlatform(
      thread_pool_size,
      static_cast<v8::TracingController*>(tracing_controller));",3,591,1
4238,RETURN,-1,,"return MultiIsolatePlatform::Create(thread_pool_size,
                                      tracing_controller)
      .release();",3,599,1
4262,RETURN,-1,,"return std::make_unique<NodePlatform>(thread_pool_size,
                                        tracing_controller,
                                        page_allocator);",3,612,1
4332,RETURN,1,,return MaybeLocal<Object>();,5,627,1
4340,RETURN,1,,return handle_scope.Escape(existing_value.As<Object>());,5,629,1
4381,RETURN,1,,return MaybeLocal<Object>();,5,634,1
4383,RETURN,-1,,return handle_scope.Escape(exports);,3,635,12
4411,RETURN,1,,return context;,26,644,1
4420,RETURN,-1,,return Local<Context>();,5,647,1
4422,RETURN,-1,,return context;,3,650,5
4483,RETURN,-1,,return Just(true);,5,677,1
4532,RETURN,-1,,return Nothing<bool>();,7,693,1
4556,RETURN,-1,,return Nothing<bool>();,7,700,1
4593,RETURN,-1,,return Nothing<bool>();,7,713,1
4625,RETURN,-1,,return Nothing<bool>();,7,719,1
4653,RETURN,-1,,return Nothing<bool>();,7,728,1
4669,RETURN,-1,,return Just(true);,3,735,14
4731,RETURN,-1,,return Nothing<bool>();,7,752,1
4752,RETURN,-1,,return Nothing<bool>();,7,757,1
4754,RETURN,-1,,return Just(true);,3,760,6
4797,RETURN,-1,,return Nothing<bool>();,5,774,1
4799,RETURN,-1,,return InitializePrimordials(context);,3,776,8
4874,RETURN,-1,,return Nothing<bool>();,5,793,1
4920,RETURN,-1,,return Nothing<bool>();,7,814,1
4922,RETURN,-1,,return Just(true);,3,818,13
4937,RETURN,-1,,return Nothing<bool>();,5,824,1
4939,RETURN,-1,,return InitializeContextRuntime(context);,3,827,2
4966,RETURN,1,,return nullptr;,26,833,1
4981,RETURN,1,,return nullptr;,23,835,1
4983,RETURN,-1,,return env->event_loop();,3,836,8
5119,RETURN,-1,,return ThreadId { next_thread_id++ };,3,894,1
5478,RETURN,-1,,return e;,3,72,20
5486,RETURN,-1,,"return String::NewFromUtf8(isolate, path).ToLocalChecked();",3,87,1
5804,RETURN,-1,,return e;,3,151,23
5932,RETURN,-1,,return Nothing<bool>();,5,43,1
5954,RETURN,-1,,"return ProcessEmit(env, ""beforeExit"", exit_code).IsEmpty() ?
      Nothing<bool>() : Just(true);",3,49,11
5971,RETURN,-1,,return EmitProcessExitInternal(env).FromMaybe(ExitCode::kGenericUserError);,3,54,1
5985,RETURN,-1,,return static_cast<int>(EmitExitInternal(env));,3,58,1
6023,RETURN,-1,,return Nothing<ExitCode>();,5,70,1
6054,RETURN,-1,,return Nothing<ExitCode>();,5,77,1
6056,RETURN,-1,,return Just(env->exit_code(ExitCode::kNoFailure));,3,80,11
6084,RETURN,-1,,return Nothing<int>();,5,86,1
6086,RETURN,-1,,return Just(static_cast<int>(result.FromJust()));,3,88,3
6287,RETURN,-1,,return new ACHHandle { info };,3,161,11
6302,RETURN,1,,return;,30,166,1
6354,RETURN,1,,return -1;,23,183,1
6357,RETURN,-1,,return env->execution_async_id();,3,184,4
6380,RETURN,1,,return -1;,23,189,1
6383,RETURN,-1,,return env->trigger_async_id();,3,190,4
6417,RETURN,-1,,"return EmitAsyncInit(isolate, resource, type, trigger_async_id);",3,202,4
6478,RETURN,-1,,return context;,3,226,10
6529,RETURN,-1,,SIGNO_CASE(SIGTERM),5,74,3
6532,RETURN,-1,,"return """";",7,165,5
6649,RETURN,1,,return;,35,75,1
6703,RETURN,1,,return;,9,85,1
6743,RETURN,1,,return;,5,95,1
7280,RETURN,-1,,return;,5,221,1
7587,RETURN,1,,return;,57,277,1
7883,RETURN,-1,,return tmpl;,3,352,3
8609,RETURN,-1,,return init_hook_ran_;,3,529,1
8655,RETURN,-1,,return;,5,555,1
8780,RETURN,1,,return;,15,628,1
8834,RETURN,-1,,return;,5,646,1
8933,RETURN,-1,,return ret;,3,678,8
8939,RETURN,-1,,return provider_names[provider_type()];,3,682,1
8949,RETURN,-1,,return buf;,3,693,3
8955,RETURN,-1,,"return GetOwner(env(), object());",3,697,1
9014,RETURN,-1,,return handle_scope.Escape(obj);,7,710,1
9217,RETURN,-1,,return;,5,38,1
9252,RETURN,1,,return;,47,50,1
9298,RETURN,-1,,return MakeLazilyInitializedJSTemplate(env->isolate_data());,3,85,1
9331,RETURN,-1,,return t;,3,93,3
9363,RETURN,-1,,return pointer_data_;,3,104,3
9463,RETURN,-1,,return self->Detach();,5,130,1
9474,RETURN,-1,,return true;,3,136,1
9480,RETURN,-1,,return object();,3,140,1
9486,RETURN,-1,,return !persistent_handle_.IsWeak();,3,144,1
9496,RETURN,-1,,return IsWeakOrDetached();,3,148,1
9691,RETURN,1,,return Nothing<bool>();,11,1472,1
9695,RETURN,-1,,return Just(true);,7,1475,2
9759,RETURN,-1,,return static_cast<uint32_t>(p[0] << 8U) | (static_cast<uint32_t>(p[1]));,3,82,1
9816,RETURN,-1,,return;,5,96,2
9930,RETURN,-1,,return;,9,133,1
10065,RETURN,-1,,return scope.Escape(ret);,3,171,6
10125,RETURN,-1,,return names;,3,186,4
10165,RETURN,-1,,"return Array::New(env->isolate(), ttls.out(), naddrttls);",3,198,4
10265,RETURN,1,,return status;,5,241,1
10320,RETURN,-1,,return ARES_SUCCESS;,5,257,3
10466,RETURN,-1,,return ARES_SUCCESS;,3,281,13
10497,RETURN,1,,return status;,5,295,1
10630,RETURN,-1,,return ARES_SUCCESS;,3,316,13
10661,RETURN,1,,return status;,5,330,1
10798,RETURN,-1,,return ARES_SUCCESS;,3,352,13
10829,RETURN,1,,return status;,5,367,1
11101,RETURN,-1,,return ARES_SUCCESS;,3,415,18
11132,RETURN,1,,return status;,5,430,1
11317,RETURN,-1,,return ARES_SUCCESS;,3,457,13
11348,RETURN,1,,return status;,5,473,1
11576,RETURN,-1,,return ARES_SUCCESS;,3,510,13
11627,RETURN,-1,,return status == ARES_EBADNAME ? ARES_EBADRESP : status;,5,535,1
11648,RETURN,-1,,return ARES_EBADRESP;,5,541,1
11688,RETURN,1,,return status2 == ARES_EBADNAME ? ARES_EBADRESP : status2;,7,551,1
11710,RETURN,-1,,return ARES_EBADRESP;,7,557,1
11753,RETURN,-1,,return status3 == ARES_EBADNAME ? ARES_EBADRESP : status3;,9,573,1
11787,RETURN,-1,,return status4 == ARES_EBADNAME ? ARES_EBADRESP : status4;,9,584,1
11811,RETURN,-1,,return ARES_EBADRESP;,9,590,1
12071,RETURN,-1,,return ARES_SUCCESS;,3,634,19
12277,RETURN,-1,,return nullptr;,5,705,2
12279,RETURN,-1,,return task;,3,708,6
12334,RETURN,1,,return env()->ThrowError(ToErrorCodeString(r));,7,727,1
12368,RETURN,-1,,return env()->ThrowError(ToErrorCodeString(r));,5,739,4
12412,RETURN,-1,,return;,5,751,1
12451,RETURN,1,,return;,5,761,1
12495,RETURN,-1,,return;,5,796,1
12509,RETURN,1,,return;,27,804,1
12522,RETURN,-1,,return;,5,808,3
12566,RETURN,-1,,return;,5,818,3
12588,RETURN,-1,,return 0;,3,833,2
12603,RETURN,-1,,return 0;,3,838,2
12618,RETURN,-1,,return 0;,3,843,2
12635,RETURN,-1,,return 0;,3,848,2
12650,RETURN,-1,,return 0;,3,853,2
12665,RETURN,-1,,return 0;,3,858,2
12680,RETURN,-1,,return 0;,3,863,2
12695,RETURN,-1,,return 0;,3,868,2
12710,RETURN,-1,,return 0;,3,873,2
12725,RETURN,-1,,return 0;,3,878,2
12740,RETURN,-1,,return 0;,3,883,2
12755,RETURN,-1,,return 0;,3,888,2
12769,RETURN,1,,return ARES_EBADRESP;,5,895,1
12860,RETURN,1,,return status;,5,921,1
13111,RETURN,1,,return status;,5,966,1
13261,RETURN,1,,return status;,5,988,1
13290,RETURN,1,,return status;,5,995,1
13397,RETURN,1,,return status;,5,1011,1
13416,RETURN,1,,return status;,5,1016,1
13445,RETURN,1,,return status;,5,1023,1
13552,RETURN,1,,return status;,5,1038,1
13578,RETURN,1,,return status;,5,1044,1
13620,RETURN,1,,return status;,5,1052,1
13627,RETURN,-1,,return 0;,3,1055,61
13641,RETURN,1,,return ARES_EBADRESP;,5,1062,1
13720,RETURN,1,,return status;,5,1084,1
13743,RETURN,-1,,return 0;,3,1089,23
13757,RETURN,1,,return ARES_EBADRESP;,5,1096,1
13836,RETURN,1,,return status;,5,1118,1
13859,RETURN,-1,,return 0;,3,1123,23
13873,RETURN,1,,return ARES_EBADRESP;,5,1130,1
13937,RETURN,1,,return status;,5,1142,1
13944,RETURN,-1,,return 0;,3,1145,17
13958,RETURN,1,,return ARES_EBADRESP;,5,1152,1
14028,RETURN,1,,return status;,5,1165,1
14035,RETURN,-1,,return 0;,3,1168,19
14049,RETURN,1,,return ARES_EBADRESP;,5,1175,1
14113,RETURN,1,,return status;,5,1188,1
14120,RETURN,-1,,return 0;,3,1191,17
14134,RETURN,1,,return ARES_EBADRESP;,5,1198,1
14204,RETURN,1,,return status;,5,1211,1
14211,RETURN,-1,,return 0;,3,1214,19
14225,RETURN,1,,return ARES_EBADRESP;,5,1221,1
14289,RETURN,1,,return status;,5,1233,1
14296,RETURN,-1,,return 0;,3,1236,17
14310,RETURN,1,,return ARES_EBADRESP;,5,1243,1
14374,RETURN,1,,return status;,5,1255,1
14381,RETURN,-1,,return 0;,3,1258,17
14395,RETURN,1,,return ARES_EBADRESP;,5,1265,1
14465,RETURN,1,,return status;,5,1279,1
14472,RETURN,-1,,return 0;,3,1282,19
14486,RETURN,1,,return ARES_EBADRESP;,5,1289,1
14550,RETURN,1,,return status;,5,1301,1
14557,RETURN,-1,,return 0;,3,1304,17
14571,RETURN,1,,return ARES_EBADRESP;,5,1311,1
14622,RETURN,1,,return status;,5,1324,1
14821,RETURN,-1,,return 0;,3,1355,26
14868,RETURN,-1,,return UV_EINVAL;,5,1369,1
14904,RETURN,-1,,return 0;,3,1384,7
14919,RETURN,1,,return ARES_EBADRESP;,5,1391,1
14956,RETURN,-1,,return 0;,3,1399,11
15181,RETURN,1,,return;,7,1479,1
15195,RETURN,1,,return;,9,1482,1
15410,RETURN,1,,return;,5,1544,1
15975,RETURN,-1,,return;,7,1677,1
16011,RETURN,-1,,return args.GetReturnValue().Set(DNS_ESETSRVPENDING);,5,1691,1
16060,RETURN,-1,,return args.GetReturnValue().Set(rv);,5,1702,3
16479,RETURN,-1,,return;,5,1794,2
16520,RETURN,-1,,return;,9,1804,2
16550,RETURN,-1,,return;,9,1811,2
16564,RETURN,-1,,return;,7,1817,2
17322,RETURN,-1,,return a.insertion_order_counter_ > b.insertion_order_counter_;,15,20,1
17407,RETURN,-1,,return std::hash<void*>()(cb.arg_);,3,37,1
17422,RETURN,-1,,return a.fn_ == b.fn_ && a.arg_ == b.arg_;,3,42,1
17591,RETURN,1,,return;,7,54,1
17611,RETURN,1,,return;,7,64,1
17887,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,61,1
17911,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,69,1
17949,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,82,1
17994,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,11,96,1
18063,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,124,1
18105,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,144,1
18138,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,152,1
18170,RETURN,1,,return WebCryptoCipherStatus::FAILED;,7,163,1
18189,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,170,33
18199,RETURN,-1,,return a == 0 ? 0 : 1 + (a - 1) / b;,3,179,1
18247,RETURN,-1,,"return BignumPointer(BN_bin2bn(
        data + params.iv.size() - byte_length,
        byte_length,
        nullptr));",5,188,3
18300,RETURN,-1,,"return BignumPointer(BN_bin2bn(counter.data(), counter.size(), nullptr));",3,202,11
18384,RETURN,-1,,return new_counter_block;,3,220,13
18425,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,241,1
18456,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,252,1
18473,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,256,1
18490,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,260,1
18494,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,262,14
18523,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,274,1
18549,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,281,1
18566,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,286,1
18589,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,292,1
18648,RETURN,-1,,return status;,5,309,4
18697,RETURN,1,,return status;,5,325,1
18754,RETURN,-1,,return status;,3,342,27
18778,RETURN,-1,,return false;,5,353,2
18796,RETURN,-1,,return true;,3,358,5
18845,RETURN,-1,,return false;,5,371,2
18847,RETURN,-1,,return true;,3,373,4
18871,RETURN,-1,,return false;,9,386,2
18887,RETURN,-1,,return false;,9,391,2
18918,RETURN,-1,,return false;,9,401,2
18940,RETURN,-1,,return false;,9,406,2
18945,RETURN,-1,,return true;,3,413,2
18973,RETURN,-1,,return false;,7,426,2
18991,RETURN,-1,,return true;,3,432,2
19025,RETURN,1,,return *this;,23,450,1
19032,RETURN,-1,,return *new (this) AESCipherConfig(std::move(other));,3,452,3
19153,RETURN,-1,,return Nothing<bool>();,9,485,1
19183,RETURN,-1,,return Nothing<bool>();,9,492,1
19213,RETURN,-1,,return Nothing<bool>();,9,499,1
19233,RETURN,1,,return Nothing<bool>();,9,505,1
19253,RETURN,1,,return Nothing<bool>();,9,510,1
19273,RETURN,1,,return Nothing<bool>();,9,515,1
19340,RETURN,-1,,return Nothing<bool>();,9,534,1
19383,RETURN,-1,,return Nothing<bool>();,9,542,1
19426,RETURN,-1,,return Nothing<bool>();,9,550,1
19449,RETURN,-1,,return Nothing<bool>();,5,561,2
19468,RETURN,-1,,return Nothing<bool>();,5,567,2
19470,RETURN,-1,,return Just(true);,3,570,11
19563,RETURN,-1,,return method;,5,233,10
19615,RETURN,-1,,return bio;,3,39,3
19658,RETURN,-1,,return BIOPointer();,5,50,1
19660,RETURN,-1,,return bio;,3,53,4
19674,RETURN,-1,,return 1;,3,61,3
19686,RETURN,1,,return 0;,5,67,1
19707,RETURN,-1,,return 1;,3,76,3
19750,RETURN,-1,,return bytes;,3,93,7
19767,RETURN,-1,,return read_head_->data_ + read_head_->read_pos_;,3,99,2
19864,RETURN,-1,,return total;,3,126,10
19882,RETURN,-1,,return len;,3,135,3
19890,RETURN,-1,,"return Write(bio, str, strlen(str));",3,140,1
19916,RETURN,1,,return 0;,5,148,1
19965,RETURN,-1,,return i;,3,165,10
20086,RETURN,-1,,return ret;,3,218,6
20097,RETURN,-1,,return method;,3,236,3
20234,RETURN,-1,,return bytes_read;,3,289,13
20245,RETURN,1,,return;,5,295,1
20261,RETURN,1,,return;,5,298,1
20277,RETURN,1,,return;,5,301,1
20409,RETURN,-1,,return bytes_read;,7,342,1
20430,RETURN,-1,,return max;,3,352,11
20571,RETURN,-1,,return write_head_->data_ + write_head_->write_pos_;,3,405,5
20730,RETURN,1,,return;,5,461,1
20787,RETURN,1,,return;,5,479,1
20822,RETURN,-1,,return static_cast<NodeBIO*>(BIO_get_data(bio));,3,495,2
20870,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,854,1
20899,RETURN,-1,,return;,7,863,2
20983,RETURN,-1,,return true;,5,36,7
20987,RETURN,-1,,return EVP_CIPHER_nid(cipher) == NID_chacha20_poly1305;,5,38,10
20993,RETURN,-1,,return false;,5,40,12
21005,RETURN,-1,,return IsSupportedAuthenticatedMode(cipher);,3,46,3
21013,RETURN,-1,,return tag_len == 4 || tag_len == 8 || (tag_len >= 12 && tag_len <= 16);,3,50,1
21121,RETURN,1,,return;,5,71,1
21246,RETURN,1,,return;,7,103,1
21276,RETURN,1,,return;,9,108,1
21314,RETURN,1,,return;,13,121,1
21331,RETURN,-1,,return;,13,131,1
21339,RETURN,1,,return;,13,136,1
21372,RETURN,-1,,return;,5,147,1
21398,RETURN,-1,,return;,5,158,1
21428,RETURN,-1,,return;,5,165,1
21461,RETURN,-1,,return;,5,174,1
21494,RETURN,-1,,return;,5,183,1
21523,RETURN,-1,,return;,5,190,1
21554,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_new"");",5,202,1
21570,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_new"");",5,207,1
22259,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error(),
                            ""Failed to initialize cipher"");",5,381,1
22278,RETURN,1,,return;,7,388,1
22292,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_KEYLEN(env());,5,393,2
22309,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error(),
                            ""Failed to initialize cipher"");",5,397,1
22331,RETURN,-1,,"return THROW_ERR_CRYPTO_UNSUPPORTED_OPERATION(env(),
        ""crypto.createCipher() is not supported in FIPS mode."");",5,412,1
22345,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_CIPHER(env());,5,418,1
22454,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""password is too large"");",5,458,1
22536,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_CIPHER(env());,5,482,1
22566,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,5,490,1
22584,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,5,498,1
22603,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,7,507,1
22681,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,535,1
22707,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""iv is too big"");",5,541,1
22786,RETURN,-1,,return false;,5,568,2
22815,RETURN,-1,,return false;,9,579,2
22845,RETURN,-1,,return false;,9,596,2
22861,RETURN,-1,,return false;,7,610,2
22878,RETURN,-1,,return false;,7,618,2
22915,RETURN,-1,,return true;,3,633,7
22937,RETURN,-1,,return false;,5,642,2
22939,RETURN,-1,,return true;,3,645,4
22946,RETURN,-1,,return IsSupportedAuthenticatedMode(ctx_.get());,3,651,2
22990,RETURN,-1,,return;,5,663,1
23058,RETURN,-1,,return args.GetReturnValue().Set(false);,5,680,1
23080,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,685,1
23149,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_AUTH_TAG(
      env, ""Invalid authentication tag length: %u"", tag_len);",5,705,1
23221,RETURN,-1,,return false;,7,725,1
23226,RETURN,-1,,return true;,3,729,2
23241,RETURN,1,,return false;,5,736,1
23266,RETURN,-1,,return false;,7,748,2
23273,RETURN,1,,return false;,7,752,1
23284,RETURN,1,,return false;,9,756,1
23299,RETURN,1,,return false;,7,761,1
23301,RETURN,-1,,"return 1 == EVP_CipherUpdate(ctx_.get(),
                               nullptr,
                               &outlen,
                               data.data(),
                               data.size());",3,764,7
23379,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,782,1
23411,RETURN,1,,return kErrorState;,5,791,1
23431,RETURN,1,,return kErrorMessageSize;,5,797,1
23459,RETURN,1,,return kErrorState;,35,806,1
23491,RETURN,-1,,return kErrorState;,5,817,1
23594,RETURN,-1,,return kSuccess;,5,841,2
23596,RETURN,-1,,return r == 1 ? kSuccess : kErrorState;,3,843,20
23624,RETURN,1,,return false;,5,874,1
23627,RETURN,-1,,"return EVP_CIPHER_CTX_set_padding(ctx_.get(), auto_padding);",3,876,3
23684,RETURN,1,,return false;,5,889,1
23752,RETURN,-1,,return false;,5,907,1
23894,RETURN,-1,,return ok;,3,946,10
23924,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_STATE(env);,5,955,1
23961,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), msg);",5,968,3
24030,RETURN,1,,return false;,5,989,1
24041,RETURN,1,,return false;,5,991,1
24053,RETURN,1,,return false;,5,993,1
24070,RETURN,1,,return false;,7,997,1
24081,RETURN,1,,return false;,57,1000,1
24107,RETURN,-1,,return false;,5,1009,1
24154,RETURN,-1,,return false;,5,1023,1
24200,RETURN,-1,,return true;,3,1032,15
24234,RETURN,1,,return;,5,1046,1
24248,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too long"");",5,1050,1
24273,RETURN,1,,return;,68,1053,1
24309,RETURN,1,,return THROW_ERR_OSSL_EVP_INVALID_DIGEST(env);,7,1060,1
24338,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""oaepLabel is too big"");",5,1066,1
24361,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error());",5,1071,1
24487,RETURN,1,,return false;,5,50,1
24534,RETURN,-1,,return false;,5,61,2
24542,RETURN,-1,,return false;,5,68,2
24544,RETURN,-1,,return true;,3,71,4
24558,RETURN,1,,return End();,23,81,1
24567,RETURN,1,,return;,5,85,1
24593,RETURN,-1,,return End();,5,98,1
24613,RETURN,1,,return End();,9,104,1
24617,RETURN,-1,,return End();,7,107,1
24636,RETURN,-1,,return End();,7,114,1
24695,RETURN,1,,return;,11,138,1
24715,RETURN,1,,return;,11,141,1
24735,RETURN,1,,return;,13,144,1
24747,RETURN,1,,return;,13,147,1
24774,RETURN,1,,return;,13,151,1
24824,RETURN,1,,return false;,5,176,1
24855,RETURN,1,,return false;,5,186,1
24884,RETURN,1,,return false;,5,194,1
24905,RETURN,1,,return false;,5,201,1
24912,RETURN,1,,return true;,5,205,1
24932,RETURN,1,,return false;,7,213,1
24974,RETURN,1,,return false;,7,221,1
24990,RETURN,1,,return false;,5,232,1
24992,RETURN,-1,,return true;,3,234,26
25136,RETURN,-1,,return result;,3,65,7
25175,RETURN,-1,,return;,5,81,1
25233,RETURN,1,,return default_value;,5,99,1
25264,RETURN,1,,return MaybeLocal<Value>();,5,106,1
25266,RETURN,-1,,return ret;,3,108,8
25274,RETURN,-1,,"return session != nullptr && SSL_set_session(ssl.get(), session.get()) == 1;",3,114,1
25296,RETURN,-1,,"return SSLSessionPointer(d2i_SSL_SESSION(nullptr, &buf, length));",3,118,1
25368,RETURN,-1,,return X509_V_OK;,7,137,1
25370,RETURN,-1,,return err;,3,140,4
25452,RETURN,-1,,return err == 1;,3,154,13
25481,RETURN,-1,,return nullptr;,5,168,1
25501,RETURN,1,,return nullptr;,23,172,1
25503,RETURN,-1,,return reinterpret_cast<const char*>(buf + 3);,3,173,7
25534,RETURN,-1,,return nullptr;,5,186,1
25554,RETURN,1,,return nullptr;,5,191,1
25571,RETURN,1,,return nullptr;,60,194,1
25580,RETURN,1,,return nullptr;,5,197,1
25602,RETURN,1,,return nullptr;,5,200,1
25604,RETURN,-1,,return reinterpret_cast<const char*>(buf + 5);,3,201,13
25615,RETURN,-1,,"return SSL_get_servername(ssl, TLSEXT_NAMETYPE_host_name);",3,205,1
25625,RETURN,-1,,"return SSL_CTX_set1_groups_list(sc->ctx().get(), groups) == 1;",3,209,1
25873,RETURN,-1,,return code;,3,248,4
25886,RETURN,1,,return Undefined(env->isolate());,5,253,1
25897,RETURN,-1,,"return OneByteString(env->isolate(), reason);",3,255,4
25915,RETURN,1,,return Undefined(env->isolate());,5,260,1
25921,RETURN,-1,,"return OneByteString(env->isolate(), X509ErrorCode(err));",3,261,2
25949,RETURN,1,,return Undefined(env->isolate());,5,268,1
25964,RETURN,-1,,return maybe_cert.FromMaybe<Value>(Local<Value>());,3,271,6
26016,RETURN,-1,,return ret.FromMaybe(Local<Value>());,3,284,5
26045,RETURN,1,,return false;,5,296,1
26053,RETURN,1,,return true;,5,300,1
26055,RETURN,-1,,"return !target->Set(context, name, value).IsNothing();",3,302,4
26078,RETURN,1,,return Undefined(env->isolate());,5,308,1
26084,RETURN,-1,,"return OneByteString(env->isolate(), getstr(cipher));",3,310,2
26198,RETURN,1,,return MaybeLocal<Object>();,9,350,1
26211,RETURN,1,,return MaybeLocal<Object>();,9,353,1
26237,RETURN,-1,,return MaybeLocal<Object>(object);,3,366,4
26320,RETURN,1,,return MaybeLocal<Object>();,7,383,1
26333,RETURN,1,,return MaybeLocal<Object>();,7,386,1
26358,RETURN,-1,,return MaybeLocal<Object>(issuer_chain);,3,398,3
26451,RETURN,-1,,"return name != nullptr ?
      MaybeLocal<Value>(OneByteString(env->isolate(), name)) :
      MaybeLocal<Value>(Undefined(env->isolate()));",3,421,3
26495,RETURN,1,,return Undefined(env->isolate());,5,432,1
26501,RETURN,-1,,"return ECPointToBuffer(
      env,
      group,
      pubkey,
      EC_KEY_get_conv_form(ec.get()),
      nullptr).FromMaybe(Local<Object>());",3,434,4
26528,RETURN,1,,return Undefined(env->isolate());,5,447,1
26544,RETURN,1,,return Undefined(env->isolate());,5,451,1
26550,RETURN,-1,,"return Integer::New(env->isolate(), bits);",3,453,5
26640,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,470,10
26671,RETURN,-1,,"return ToV8Value(env, bio);",3,479,4
26681,RETURN,-1,,"return Integer::New(env->isolate(), BN_num_bits(n));",3,483,1
26705,RETURN,-1,,"return ToV8Value(env, bio);",3,491,2
26780,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,508,9
26839,RETURN,1,,"return OneByteString(env->isolate(), buf.data<unsigned char>());",16,517,1
26849,RETURN,-1,,return Undefined(env->isolate());,3,521,2
26921,RETURN,-1,,"return Array::New(env->isolate(), ext_key_usage.out(), count);",5,541,9
26935,RETURN,-1,,return Undefined(env->isolate());,3,544,5
26947,RETURN,-1,,"return GetCipherName(env, SSL_get_current_cipher(ssl.get()));",3,549,1
26961,RETURN,-1,,"return GetCipherVersion(env, SSL_get_current_cipher(ssl.get()));",3,554,1
26991,RETURN,-1,,"return OneByteString(env->isolate(), fingerprint);",5,567,2
26998,RETURN,-1,,return Undefined(env->isolate());,3,569,5
27018,RETURN,-1,,"return ToV8Value(env, bio);",3,577,2
27036,RETURN,-1,,"return ToV8Value(env, bio);",3,585,2
27076,RETURN,-1,,return false;,7,604,9
27093,RETURN,-1,,return false;,11,611,1
27106,RETURN,-1,,return false;,11,618,1
27108,RETURN,-1,,return true;,3,623,2
27442,RETURN,-1,,return false;,7,726,1
27743,RETURN,-1,,return true;,3,814,2
27773,RETURN,1,,return false;,5,823,1
27822,RETURN,-1,,return ok;,3,839,11
27852,RETURN,1,,return false;,5,849,1
27925,RETURN,-1,,return ok;,3,872,12
27947,RETURN,1,,return Undefined(env->isolate());,5,881,1
27974,RETURN,-1,,return v8::Null(env->isolate());,5,888,2
27983,RETURN,-1,,"return ToV8Value(env, bio);",3,891,8
28007,RETURN,1,,return Undefined(env->isolate());,5,900,1
28034,RETURN,-1,,return v8::Null(env->isolate());,5,907,2
28043,RETURN,-1,,"return ToV8Value(env, bio);",3,910,8
28078,RETURN,-1,,return Undefined(env->isolate());,5,924,2
28084,RETURN,-1,,"return ToV8Value(env, bio);",3,927,4
28115,RETURN,-1,,return Undefined(env->isolate());,5,940,2
28121,RETURN,-1,,"return ToV8Value(env, bio);",3,943,2
28174,RETURN,-1,,return MaybeLocal<Value>();,5,957,1
28257,RETURN,-1,,return MaybeLocal<Value>();,7,986,1
28271,RETURN,-1,,return Undefined(env->isolate());,7,997,1
28310,RETURN,-1,,return MaybeLocal<Value>();,7,1007,1
28330,RETURN,-1,,return MaybeLocal<Value>();,7,1017,1
28359,RETURN,-1,,return MaybeLocal<Value>();,9,1021,1
28396,RETURN,-1,,return MaybeLocal<Value>();,11,1026,1
28426,RETURN,-1,,return MaybeLocal<Value>();,9,1031,1
28445,RETURN,-1,,return MaybeLocal<Value>();,7,1034,1
28447,RETURN,-1,,return result;,3,1038,10
28455,RETURN,-1,,"return Get(env, SSL_get_current_cipher(ssl.get()));",3,1044,1
28584,RETURN,-1,,return MaybeLocal<Array>();,7,1072,1
28611,RETURN,-1,,return scope.Escape(ret);,3,1077,14
28632,RETURN,1,,return MaybeLocal<Object>();,5,1083,1
28700,RETURN,-1,,return MaybeLocal<Object>();,5,1099,1
28702,RETURN,-1,,return scope.Escape(info);,3,1102,6
28752,RETURN,1,,return scope.Escape(info);,5,1112,1
28824,RETURN,-1,,return MaybeLocal<Object>();,9,1126,1
28913,RETURN,-1,,return MaybeLocal<Object>();,11,1153,1
28916,RETURN,-1,,return scope.Escape(info);,3,1159,15
28955,RETURN,-1,,return MaybeLocal<Object>();,5,1170,2
29013,RETURN,-1,,return MaybeLocal<Object>();,5,1187,2
29034,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,1191,9
29102,RETURN,1,,return Undefined(env->isolate());,5,1208,1
29124,RETURN,-1,,return maybe_cert.ToLocal(&result) ? result : MaybeLocal<Value>();,5,1214,2
29149,RETURN,1,,return Undefined(env->isolate());,5,1219,1
29182,RETURN,1,,return MaybeLocal<Value>();,5,1226,1
29215,RETURN,1,,return MaybeLocal<Value>();,5,1238,1
29238,RETURN,1,,return MaybeLocal<Value>();,5,1249,1
29266,RETURN,-1,,return MaybeLocal<Value>();,5,1257,1
29268,RETURN,-1,,return result;,3,1260,25
29389,RETURN,-1,,return MaybeLocal<Object>();,5,1292,1
29497,RETURN,-1,,return MaybeLocal<Object>();,7,1326,1
29539,RETURN,-1,,return MaybeLocal<Object>();,7,1339,1
29576,RETURN,-1,,return MaybeLocal<Object>();,9,1354,1
29619,RETURN,-1,,return MaybeLocal<Object>();,5,1375,1
29701,RETURN,-1,,return MaybeLocal<Object>();,5,1405,1
29703,RETURN,-1,,return scope.Escape(info);,3,1408,22
29785,RETURN,-1,,return store;,3,59,3
29813,RETURN,1,,return nullptr;,15,67,1
29832,RETURN,1,,return nullptr;,32,69,1
29855,RETURN,1,,return nullptr;,22,71,1
29867,RETURN,1,,return nullptr;,54,72,1
29869,RETURN,-1,,return bio;,5,73,10
29871,RETURN,-1,,return nullptr;,3,75,2
29898,RETURN,1,,return 0;,5,160,1
29911,RETURN,1,,return 0;,5,166,1
29931,RETURN,-1,,return 0;,5,177,2
29950,RETURN,-1,,return 0;,5,187,1
29952,RETURN,-1,,"return SSL_CTX_use_certificate_chain(ctx,
                                       std::move(x),
                                       extra_certs.get(),
                                       cert,
                                       issuer);",3,190,13
30073,RETURN,-1,,return store;,3,238,12
30132,RETURN,-1,,return;,7,250,1
30157,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,259,1
30478,RETURN,-1,,return tmpl;,3,328,3
30705,RETURN,-1,,return nullptr;,5,393,1
30707,RETURN,-1,,"return new SecureContext(env, obj);",3,396,3
30891,RETURN,-1,,return;,7,450,2
30910,RETURN,-1,,return;,7,455,2
31134,RETURN,-1,,return;,7,511,2
31149,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_new"");",5,517,1
31253,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Error generating ticket keys"");",5,552,1
31269,RETURN,-1,,return SSLPointer(SSL_new(ctx_.get()));,3,559,1
31338,RETURN,-1,,return Nothing<bool>();,5,582,2
31360,RETURN,-1,,return Nothing<bool>();,5,588,2
31362,RETURN,-1,,return Just(true);,3,591,4
31403,RETURN,1,,return;,5,604,1
31446,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""PEM_read_bio_PrivateKey"");",5,621,1
31465,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_use_PrivateKey"");",5,624,1
31525,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,639,1
31603,RETURN,-1,,return;,5,658,3
31612,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Failure to initialize engine"");",5,662,1
31645,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""ENGINE_load_private_key"");",5,673,1
31664,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_use_PrivateKey"");",5,676,1
31689,RETURN,1,,return Just(false);,13,684,1
31722,RETURN,-1,,return Nothing<bool>();,5,694,2
31724,RETURN,-1,,return Just(true);,3,696,6
31782,RETURN,1,,return;,13,713,1
31876,RETURN,1,,return Just(false);,13,740,1
31901,RETURN,-1,,return Nothing<bool>();,5,747,2
31940,RETURN,-1,,return Just(true);,3,760,10
32073,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""Failed to set ciphers"");",5,803,1
32149,RETURN,-1,,return;,7,825,1
32150,RETURN,-1,,"return ThrowCryptoError(env, err, ""Failed to set ciphers"");",5,827,4
32213,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to set ECDH curve"");",5,842,1
32261,RETURN,-1,,return;,5,859,2
32275,RETURN,1,,return;,7,866,1
32292,RETURN,1,,return;,5,874,1
32313,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(
        env, ""DH parameter is less than 1024 bits"");",5,880,1
32351,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Error setting temp DH parameter"");",5,888,1
32657,RETURN,1,,return;,5,968,1
32818,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(env, ""PFX certificate argument is mandatory"");",5,1015,1
32833,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Unable to load PFX certificate"");",5,1020,1
33107,RETURN,-1,,return env->ThrowError(str);,5,1082,6
33200,RETURN,-1,,return;,5,1112,3
33215,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,1117,1
33259,RETURN,1,,return;,5,1128,1
33487,RETURN,-1,,return -1;,5,1189,1
33546,RETURN,-1,,return -1;,5,1203,1
33587,RETURN,-1,,return -1;,5,1210,1
33605,RETURN,1,,return r;,5,1215,1
33658,RETURN,-1,,return -1;,5,1223,1
33723,RETURN,-1,,return -1;,7,1233,1
33788,RETURN,-1,,return r;,3,1262,32
33853,RETURN,-1,,return -1;,7,1284,1
33856,RETURN,-1,,return 1;,5,1286,3
33871,RETURN,-1,,return 0;,5,1291,1
33899,RETURN,-1,,return -1;,5,1298,1
33902,RETURN,-1,,return 1;,3,1300,6
33992,RETURN,1,,return args.GetReturnValue().SetNull();,5,1322,1
34025,RETURN,1,,return;,5,1327,1
34066,RETURN,1,,return ERR_get_error();,5,1344,1
34091,RETURN,-1,,return 0;,5,1355,1
34093,RETURN,-1,,return err;,3,1358,10
34106,RETURN,1,,return;,21,1364,1
34148,RETURN,-1,,return args.GetReturnValue().Set(extra_root_certs_loaded);,3,1382,1
34315,RETURN,-1,,return p;,5,358,3
34330,RETURN,-1,,return g;,5,366,3
34344,RETURN,-1,,return pub_key;,5,374,3
34358,RETURN,-1,,return priv_key;,5,382,3
34367,RETURN,-1,,"return DH_set0_key(dh, num, nullptr);",36,461,1
34379,RETURN,-1,,"return DH_set0_key(dh, nullptr, num);",36,467,1
34622,RETURN,1,,return false;,5,136,1
34624,RETURN,-1,,return VerifyContext();,3,137,3
34657,RETURN,-1,,"return bn_g && BN_set_word(bn_g.get(), g) &&
         DH_set0_pqg(dh_.get(), bn_p.release(), nullptr, bn_g.release()) &&
         VerifyContext();",3,148,5
34710,RETURN,-1,,return false;,5,158,2
34727,RETURN,-1,,return false;,5,163,2
34762,RETURN,-1,,return false;,5,172,3
34764,RETURN,-1,,return VerifyContext();,3,174,9
34794,RETURN,-1,,return false;,5,182,2
34811,RETURN,-1,,return false;,5,187,2
34841,RETURN,-1,,return false;,5,195,3
34867,RETURN,-1,,return false;,5,202,3
34869,RETURN,-1,,return VerifyContext();,3,204,10
34879,RETURN,-1,,return BignumPointer(p(nullptr));,3,211,1
34900,RETURN,1,,"V(""modp1"", BN_get_rfc2409_prime_768);",3,221,1
34910,RETURN,1,,"V(""modp2"", BN_get_rfc2409_prime_1024);",3,222,1
34920,RETURN,1,,"V(""modp5"", BN_get_rfc3526_prime_1536);",3,223,1
34930,RETURN,1,,"V(""modp14"", BN_get_rfc3526_prime_2048);",3,224,1
34940,RETURN,1,,"V(""modp15"", BN_get_rfc3526_prime_3072);",3,225,1
34950,RETURN,1,,"V(""modp16"", BN_get_rfc3526_prime_4096);",3,226,1
34960,RETURN,1,,"V(""modp17"", BN_get_rfc3526_prime_6144);",3,227,1
34970,RETURN,1,,"V(""modp18"", BN_get_rfc3526_prime_8192);",3,228,1
34972,RETURN,-1,,return nullptr;,3,230,9
35033,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_DH_GROUP(env);,5,246,1
35140,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""prime is too big"");",9,269,1
35190,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""generator is too big"");",11,277,1
35220,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Initialization failed"");",5,285,1
35256,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Key generation failed"");",5,297,1
35367,RETURN,1,,return;,68,318,1
35414,RETURN,1,,"return THROW_ERR_CRYPTO_INVALID_STATE(env, err_if_null);",5,333,1
35513,RETURN,1,,return;,68,350,1
35599,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""secret is too big"");",5,397,1
35693,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Invalid Key"");",7,420,1
35708,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYLEN(env,
            ""Supplied key is too small"");",9,423,1
35719,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYLEN(env,
            ""Supplied key is too large"");",9,426,1
35723,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_KEYTYPE(env);,5,431,5
35784,RETURN,1,,return;,68,441,1
35835,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buf is too big"");",5,453,1
35926,RETURN,1,,return false;,5,483,1
35931,RETURN,-1,,return true;,3,485,4
35981,RETURN,-1,,return Nothing<bool>();,7,514,2
36033,RETURN,-1,,return Nothing<bool>();,9,525,2
36061,RETURN,-1,,return Nothing<bool>();,9,532,2
36112,RETURN,-1,,return Just(true);,3,543,4
36146,RETURN,1,,return EVPKeyCtxPointer();,7,552,1
36184,RETURN,-1,,return EVPKeyCtxPointer();,7,558,1
36283,RETURN,-1,,return EVPKeyCtxPointer();,7,579,1
36312,RETURN,1,,return EVPKeyCtxPointer();,5,589,1
36314,RETURN,-1,,return ctx;,3,591,6
36323,RETURN,-1,,return Just(true);,3,598,1
36353,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,611,1
36357,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,612,4
36374,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,615,1
36378,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,616,8
36438,RETURN,1,,return ByteSource();,5,633,1
36458,RETURN,-1,,return ByteSource();,5,637,1
36470,RETURN,-1,,return std::move(out).release();,3,641,9
36584,RETURN,1,,return;,31,662,1
36594,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""diffieHellman failed"");",5,665,1
36680,RETURN,-1,,return Nothing<bool>();,5,689,2
36698,RETURN,-1,,return Just(true);,3,695,12
36717,RETURN,-1,,return Just(!result->IsEmpty());,3,704,2
36747,RETURN,-1,,return true;,3,714,2
36770,RETURN,-1,,return Just(true);,3,723,4
36860,RETURN,-1,,return EVPKeyCtxPointer();,5,49,1
36901,RETURN,-1,,return EVPKeyCtxPointer();,7,55,1
36914,RETURN,1,,return EVPKeyCtxPointer();,5,60,1
36939,RETURN,1,,return EVPKeyCtxPointer();,5,66,1
36941,RETURN,-1,,return key_ctx;,3,68,13
37015,RETURN,-1,,return Just(true);,3,95,7
37025,RETURN,-1,,return Just(true);,3,102,1
37047,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,7,115,3
37061,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,118,1
37065,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,119,7
37082,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,122,1
37086,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,123,11
37212,RETURN,-1,,return Nothing<bool>();,5,161,1
37214,RETURN,-1,,return Just(true);,3,164,19
37274,RETURN,-1,,"return OneByteString(env->isolate(), OBJ_nid2sn(curve.nid));",5,116,1
37341,RETURN,-1,,return nid;,3,45,4
37400,RETURN,-1,,return nid;,3,61,3
37930,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_CURVE(env);,5,146,1
37941,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
      ""Failed to create key using named curve"");",5,150,1
37988,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to generate key"");",5,163,1
38011,RETURN,-1,,return pub;,5,175,2
38027,RETURN,-1,,return ECPointPointer();,5,181,2
38050,RETURN,1,,return ECPointPointer();,5,190,1
38052,RETURN,-1,,return pub;,3,192,10
38088,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_KEYPAIR(env);,5,206,1
38121,RETURN,-1,,return;,5,216,2
38185,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to compute ECDH key"");",5,230,1
38232,RETURN,1,,return;,68,234,1
38293,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to get ECDH public key"");",5,250,1
38343,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, error);",5,260,1
38391,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to get ECDH private key"");",5,272,1
38483,RETURN,1,,return;,68,286,1
38526,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,298,1
38546,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to BN"");",5,303,1
38558,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYTYPE(env,
        ""Private key is not valid for specified curve."");",5,308,1
38593,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert BN to a private key"");",5,319,1
38634,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to generate ECDH public key"");",5,334,1
38650,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to set generated public key"");",5,339,1
38718,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to EC_POINT"");",5,361,1
38740,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to set EC_POINT as the public key"");",5,367,1
38762,RETURN,-1,,return false;,5,378,1
38769,RETURN,-1,,"return EC_GROUP_get_order(group_, order.get(), nullptr) &&
         BN_cmp(private_key.get(), order.get()) < 0;",3,382,7
38797,RETURN,-1,,return 1 == EC_KEY_check_key(key_.get());,3,389,3
38843,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,402,1
38855,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,404,1
38883,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_CURVE(env);,5,410,1
38895,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to get EC_GROUP"");",5,415,1
38918,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to EC_POINT"");",5,423,1
38974,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, error);",5,434,1
39019,RETURN,-1,,return Just(!result->IsEmpty());,3,449,2
39119,RETURN,-1,,return Nothing<bool>();,5,474,2
39144,RETURN,-1,,return Just(true);,3,481,16
39240,RETURN,-1,,return false;,9,505,1
39260,RETURN,-1,,return false;,9,511,1
39318,RETURN,1,,return false;,9,530,1
39365,RETURN,-1,,return false;,9,542,1
39378,RETURN,-1,,return true;,3,549,8
39472,RETURN,-1,,return EVPKeyCtxPointer();,9,574,1
39502,RETURN,-1,,return key_ctx;,3,584,4
39568,RETURN,-1,,return Nothing<bool>();,5,610,2
39608,RETURN,-1,,return Nothing<bool>();,5,617,2
39614,RETURN,-1,,return Just(true);,3,622,12
39704,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,654,1
39726,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,657,1
39752,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,661,1
39784,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,7,669,1
39809,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,7,674,1
39827,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,680,11
39838,RETURN,-1,,return Just(true);,3,688,1
39860,RETURN,-1,,"return EC_Raw_Export(key_data.get(), params, out);",7,700,3
39878,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,703,1
39882,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,704,7
39900,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,707,1
39920,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",9,711,1
39973,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,24,725,1
39998,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,24,729,1
40078,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,11,745,1
40090,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,9,747,33
40188,RETURN,-1,,return Nothing<void>();,5,779,2
40211,RETURN,-1,,return Nothing<void>();,5,786,1
40246,RETURN,-1,,return Nothing<void>();,5,801,1
40312,RETURN,-1,,return Nothing<void>();,7,822,2
40332,RETURN,-1,,return Nothing<void>();,5,829,1
40347,RETURN,-1,,"return SetEncodedValue(
      env,
      target,
      env->jwk_d_string(),
      pvt,
      degree_bytes).IsJust() ? JustVoid() : Nothing<void>();",5,834,3
40363,RETURN,-1,,return JustVoid();,3,842,30
40446,RETURN,-1,,return Nothing<bool>();,5,873,1
40473,RETURN,1,,return Nothing<bool>();,5,881,1
40556,RETURN,-1,,return Nothing<bool>();,7,894,2
40628,RETURN,-1,,return Nothing<bool>();,5,906,2
40651,RETURN,-1,,return Nothing<bool>();,5,913,1
40653,RETURN,-1,,return Just(true);,3,916,19
40696,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,930,2
40774,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,940,1
40807,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,947,2
40833,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,955,2
40887,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,966,2
40927,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,973,2
40946,RETURN,-1,,"return KeyObjectData::CreateAsymmetric(type, ManagedEVPPKey(std::move(pkey)));",3,980,26
41006,RETURN,-1,,"return target->Set(
      env->context(),
      env->named_curve_string(),
      OneByteString(env->isolate(), OBJ_nid2sn(nid)));",3,997,13
41057,RETURN,-1,,return BN_num_bytes(order.get());,3,1014,9
41109,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,145,1
41434,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(),
                            ""Digest method not supported"");",5,103,1
41460,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Digest copy error"");",5,109,1
41494,RETURN,-1,,return false;,5,117,2
41524,RETURN,-1,,return false;,7,126,2
41532,RETURN,-1,,return true;,3,131,5
41544,RETURN,1,,return false;,5,136,1
41546,RETURN,-1,,"return EVP_DigestUpdate(mdctx_.get(), data, len) == 1;",3,137,2
41688,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",7,191,1
41753,RETURN,-1,,return;,5,202,3
41782,RETURN,1,,return *this;,23,214,1
41789,RETURN,-1,,return *new (this) HashConfig(std::move(other));,3,216,3
41834,RETURN,-1,,return Just(!result->IsEmpty());,3,231,2
41898,RETURN,-1,,return Nothing<bool>();,5,248,2
41918,RETURN,-1,,return Nothing<bool>();,5,254,2
41998,RETURN,-1,,return Nothing<bool>();,9,270,2
42000,RETURN,-1,,return Just(true);,3,275,17
42050,RETURN,-1,,return false;,5,288,1
42111,RETURN,1,,return false;,7,303,1
42124,RETURN,-1,,return true;,3,308,5
42182,RETURN,1,,return *this;,23,29,1
42189,RETURN,-1,,return *new (this) HKDFConfig(std::move(other));,3,31,3
42215,RETURN,-1,,return Just(!result->IsEmpty());,3,40,2
42310,RETURN,-1,,return Nothing<bool>();,5,62,2
42355,RETURN,-1,,return Nothing<bool>();,5,74,2
42368,RETURN,-1,,return Nothing<bool>();,5,78,2
42439,RETURN,-1,,return Nothing<bool>();,5,97,2
42441,RETURN,-1,,return Just(true);,3,100,30
42498,RETURN,-1,,return false;,5,113,1
42561,RETURN,-1,,return false;,5,141,1
42581,RETURN,-1,,return false;,5,145,1
42607,RETURN,1,,return false;,5,151,1
42620,RETURN,-1,,return true;,3,154,17
42694,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,107,1
42902,RETURN,1,,"return THROW_ERR_CRYPTO_INVALID_DIGEST(
        env(), ""Invalid digest: %s"", hash_type);",5,74,1
42939,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error());",5,82,2
43003,RETURN,-1,,"return ctx_ && HMAC_Update(ctx_.get(),
                             reinterpret_cast<const unsigned char*>(data),
                             len) == 1;",3,97,1
43106,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Failed to finalize HMAC"");",7,131,1
43157,RETURN,-1,,return;,5,145,3
43186,RETURN,1,,return *this;,23,159,1
43193,RETURN,-1,,return *new (this) HmacConfig(std::move(other));,3,161,3
43331,RETURN,-1,,return Nothing<bool>();,5,193,2
43369,RETURN,-1,,return Nothing<bool>();,5,203,2
43416,RETURN,-1,,return Nothing<bool>();,7,213,2
43434,RETURN,-1,,return Just(true);,3,220,20
43474,RETURN,-1,,return false;,5,236,1
43496,RETURN,-1,,return false;,5,243,1
43516,RETURN,-1,,return false;,5,250,1
43530,RETURN,-1,,return true;,3,255,10
43612,RETURN,-1,,return Just(!result->IsEmpty());,3,276,2
43699,RETURN,-1,,return Just(true);,3,43,4
43730,RETURN,1,,return EVPKeyCtxPointer();,5,50,1
43732,RETURN,-1,,return ctx;,3,52,4
43788,RETURN,-1,,return Just(true);,3,68,6
43815,RETURN,1,,return KeyGenJobStatus::FAILED;,5,75,1
43831,RETURN,-1,,return KeyGenJobStatus::OK;,3,77,5
43861,RETURN,-1,,"return Just(KeyObjectHandle::Create(env, data).ToLocal(result));",3,85,2
43933,RETURN,-1,,"return d2i_PUBKEY(nullptr, p, l);",9,116,1
43946,RETURN,-1,,"return d2i_PublicKey(EVP_PKEY_RSA, nullptr, p, l);",9,125,1
43965,RETURN,-1,,return x509 ? X509_get_pubkey(x509.get()) : nullptr;,9,135,3
44184,RETURN,1,,return ParseKeyResult::kParseKeyNotRecognized;,7,92,1
44203,RETURN,-1,,"return *pkey ? ParseKeyResult::kParseKeyOk :
                 ParseKeyResult::kParseKeyFailed;",3,100,8
44231,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,5,109,1
44250,RETURN,1,,return ret;,5,119,1
44272,RETURN,1,,return ret;,5,128,1
44280,RETURN,-1,,"return TryParsePublicKey(pkey, bp, ""CERTIFICATE"",
      [](const unsigned char** p, long l) {  // NOLINT(runtime/int)
        X509Pointer x509(d2i_X509(nullptr, p, l));
        return x509 ? X509_get_pubkey(x509.get()) : nullptr;
      });",3,132,11
44301,RETURN,-1,,"return ParsePublicKeyPEM(pkey, key, key_len);",5,144,1
44358,RETURN,-1,,"return *pkey ? ParseKeyResult::kParseKeyOk :
                   ParseKeyResult::kParseKeyFailed;",5,156,5
44387,RETURN,1,,return false;,5,164,1
44417,RETURN,1,,return false;,7,170,1
44487,RETURN,-1,,return true;,3,182,3
44507,RETURN,1,,return false;,5,189,1
44509,RETURN,-1,,"return len >= 3 &&
         data[offset] == 2 &&
         data[offset + 1] == 1 &&
         !(data[offset + 2] & 0xfe);",3,196,4
44554,RETURN,1,,return false;,5,206,1
44556,RETURN,-1,,"return len >= 1 &&
         data[offset] != 2;",3,210,4
44599,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,7,223,1
44670,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,9,238,1
44759,RETURN,1,,return ParseKeyResult::kParseKeyOk;,5,264,1
44782,RETURN,1,,return ParseKeyResult::kParseKeyNeedPassphrase;,7,268,1
44786,RETURN,-1,,return ParseKeyResult::kParseKeyFailed;,3,270,9
44807,RETURN,-1,,"return String::NewFromUtf8(env->isolate(), bptr->data,
                               NewStringType::kNormal,
                               bptr->length).FromMaybe(Local<Value>());",5,281,1
44834,RETURN,-1,,"return Buffer::Copy(env, bptr->data, bptr->length)
        .FromMaybe(Local<Value>());",5,287,2
45121,RETURN,-1,,return MaybeLocal<Value>();,5,389,2
45123,RETURN,-1,,"return BIOToStringOrBuffer(env, bio.get(), config.format_);",3,391,14
45165,RETURN,-1,,"return PEM_write_bio_RSAPublicKey(bio.get(), rsa.get()) == 1;",7,403,1
45184,RETURN,-1,,"return i2d_RSAPublicKey_bio(bio.get(), rsa.get()) == 1;",7,407,2
45213,RETURN,-1,,"return PEM_write_bio_PUBKEY(bio.get(), pkey) == 1;",7,413,1
45229,RETURN,-1,,"return i2d_PUBKEY_bio(bio.get(), pkey) == 1;",7,417,2
45263,RETURN,-1,,return MaybeLocal<Value>();,5,430,2
45265,RETURN,-1,,"return BIOToStringOrBuffer(env, bio.get(), config.format_);",3,432,4
45343,RETURN,-1,,return Nothing<bool>();,5,453,3
45354,RETURN,1,,return Nothing<bool>();,5,456,1
45394,RETURN,-1,,return Nothing<bool>();,5,466,1
45396,RETURN,-1,,return Just(true);,3,469,8
45439,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,479,2
45462,RETURN,-1,,return KeyObjectData::CreateSecret(std::move(key_data));,3,484,6
45496,RETURN,1,,"return ExportJWKRsaKey(env, key, target);",25,494,1
45504,RETURN,-1,,"return ExportJWKRsaKey(env, key, target);",24,497,6
45511,RETURN,-1,,"return ExportJWKEcKey(env, key, target).IsJust() ?
                               Just(true) : Nothing<bool>();",23,498,9
45531,RETURN,-1,,"return ExportJWKEdKey(env, key, target);",25,506,18
45538,RETURN,-1,,return Just(false);,3,509,3
45557,RETURN,-1,,"return ImportJWKRsaKey(env, jwk, args, offset);",5,519,1
45572,RETURN,-1,,"return ImportJWKEcKey(env, jwk, args, offset);",5,521,1
45582,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,3,525,3
45603,RETURN,-1,,"return target->Set(env->context(),
                     env->length_string(),
                     Number::New(env->isolate(), static_cast<double>(length)));",3,536,3
45648,RETURN,-1,,"return GetRsaKeyDetail(env, key, target);",28,548,5
45655,RETURN,-1,,"return GetDsaKeyDetail(env, key, target);",24,549,8
45662,RETURN,-1,,"return GetEcKeyDetail(env, key, target);",23,550,11
45669,RETURN,-1,,"return GetDhKeyDetail(env, key, target);",23,551,14
45676,RETURN,-1,,return Nothing<bool>();,3,554,3
45724,RETURN,-1,,return *this;,3,575,6
45731,RETURN,-1,,return !!pkey_;,3,579,1
45739,RETURN,-1,,return pkey_.get();,3,583,1
45748,RETURN,-1,,return mutex_.get();,3,587,1
45780,RETURN,-1,,"return (pkey_ && EVP_PKEY_get_raw_private_key(
      pkey_.get(), nullptr, &len) == 1) ? len : 0;",3,599,3
45804,RETURN,-1,,"return (pkey_ && EVP_PKEY_get_raw_public_key(
      pkey_.get(), nullptr, &len) == 1) ? len : 0;",3,605,3
45825,RETURN,-1,,return b ? Just(true) : Nothing<bool>();,3,611,1
45847,RETURN,-1,,"return ExportJWKSecretKey(env, key, result.As<Object>());",7,620,3
45859,RETURN,-1,,"return ExportJWKAsymmetricKey(
        env, key, result.As<Object>(), handleRsaPss);",7,624,8
45882,RETURN,1,,return Nothing<bool>();,15,635,1
45904,RETURN,-1,,"return Tristate(KeyObjectHandle::Create(env, data).ToLocal(out));",5,641,2
45951,RETURN,-1,,"return ExportJWKInner(env, data, *out, false);",5,646,3
45958,RETURN,-1,,"return Tristate(WritePublicKey(env, get(), config).ToLocal(out));",3,649,3
45980,RETURN,1,,return Nothing<bool>();,15,656,1
46002,RETURN,-1,,"return Tristate(KeyObjectHandle::Create(env, data).ToLocal(out));",5,660,2
46049,RETURN,-1,,"return ExportJWKInner(env, data, *out, false);",5,665,3
46056,RETURN,-1,,"return Tristate(WritePrivateKey(env, get(), config).ToLocal(out));",3,668,3
46147,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>();,11,692,2
46203,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>();,9,707,2
46233,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>(std::move(result));,3,717,7
46257,RETURN,-1,,return result;,3,726,3
46318,RETURN,1,,return ManagedEVPPKey();,7,739,1
46339,RETURN,-1,,"return GetParsedKey(env, std::move(pkey), ret,
                        ""Failed to read private key"");",5,744,10
46386,RETURN,-1,,return key->Data()->GetAsymmetricKey();,5,752,6
46433,RETURN,-1,,return ManagedEVPPKey();,7,764,2
46451,RETURN,1,,return ManagedEVPPKey();,7,769,1
46581,RETURN,-1,,"return ManagedEVPPKey::GetParsedKey(
        env, std::move(pkey), ret, ""Failed to read asymmetric key"");",5,808,13
46633,RETURN,-1,,return key->Data()->GetAsymmetricKey();,5,816,7
46672,RETURN,-1,,return ManagedEVPPKey(std::move(pkey));,3,836,2
46728,RETURN,-1,,return std::shared_ptr<KeyObjectData>(new KeyObjectData(std::move(key)));,3,863,1
46750,RETURN,-1,,"return std::shared_ptr<KeyObjectData>(new KeyObjectData(key_type, pkey));",3,870,2
46765,RETURN,-1,,return key_type_;,3,874,1
46774,RETURN,-1,,return asymmetric_key_;,3,879,2
46783,RETURN,-1,,return symmetric_key_.data<char>();,3,884,2
46795,RETURN,-1,,return symmetric_key_.size();,3,889,2
46816,RETURN,-1,,return !t.IsEmpty() && t->HasInstance(value);,3,894,2
46926,RETURN,-1,,return templ->GetFunction(env->context()).ToLocalChecked();,3,920,3
47047,RETURN,1,,return MaybeLocal<Object>();,5,945,1
47064,RETURN,-1,,return obj;,3,950,9
47070,RETURN,-1,,return data_;,3,954,1
47196,RETURN,1,,return;,7,993,1
47234,RETURN,1,,return;,7,1003,1
47320,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_JWK(env);,5,1028,1
47351,RETURN,-1,,return;,7,1038,1
47371,RETURN,-1,,return;,7,1044,1
47437,RETURN,1,,return args.GetReturnValue().Set(false);,5,1064,1
47483,RETURN,-1,,return args.GetReturnValue().Set(false);,5,1072,1
47651,RETURN,1,,return args.GetReturnValue().Set(false);,9,1116,1
47837,RETURN,-1,,return THROW_ERR_CRYPTO_UNSUPPORTED_OPERATION(env);,9,1167,3
47919,RETURN,1,,return;,9,1191,1
47939,RETURN,1,,return;,9,1197,1
47973,RETURN,-1,,return env()->crypto_rsa_string();,5,1210,3
47980,RETURN,-1,,return env()->crypto_rsa_pss_string();,5,1212,6
47987,RETURN,-1,,return env()->crypto_dsa_string();,5,1214,9
47994,RETURN,-1,,return env()->crypto_dh_string();,5,1216,12
48001,RETURN,-1,,return env()->crypto_ec_string();,5,1218,15
48008,RETURN,-1,,return env()->crypto_ed25519_string();,5,1220,18
48015,RETURN,-1,,return env()->crypto_ed448_string();,5,1222,21
48022,RETURN,-1,,return env()->crypto_x25519_string();,5,1224,24
48029,RETURN,-1,,return env()->crypto_x448_string();,5,1226,27
48035,RETURN,-1,,return Undefined(env()->isolate());,5,1228,29
48199,RETURN,1,,return;,7,1271,1
48255,RETURN,-1,,"return Buffer::Copy(env(), buf, len).FromMaybe(Local<Value>());",3,1283,5
48272,RETURN,-1,,"return WritePublicKey(env(), data_->GetAsymmetricKey().get(), config);",3,1288,1
48288,RETURN,-1,,"return WritePrivateKey(env(), data_->GetAsymmetricKey().get(), config);",3,1293,1
48526,RETURN,1,,return;,5,1347,1
48566,RETURN,-1,,return;,5,1353,1
48594,RETURN,1,,return;,52,1356,1
48620,RETURN,1,,return;,52,1358,1
48646,RETURN,1,,return;,52,1360,1
48680,RETURN,-1,,return {};,5,1371,2
48700,RETURN,1,,return {};,5,1376,1
48739,RETURN,-1,,return {};,5,1384,1
48796,RETURN,1,,return {};,5,1402,1
48797,RETURN,-1,,return BaseObjectPtr<BaseObject>(Unwrap<KeyObjectHandle>(key.As<Object>()));,3,1404,10
48814,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,1408,1
48824,RETURN,-1,,return std::make_unique<KeyObjectTransferData>(handle_data_);,3,1413,1
48877,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,5,1425,1
48889,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,1428,10
48945,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,5,1442,1
48957,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,1445,12
51044,RETURN,1,,return *this;,23,29,1
51051,RETURN,-1,,return *new (this) PBKDF2Config(std::move(other));,3,31,3
51105,RETURN,-1,,return Just(!result->IsEmpty());,3,48,2
51156,RETURN,-1,,return Nothing<bool>();,5,72,2
51169,RETURN,-1,,return Nothing<bool>();,5,77,2
51256,RETURN,-1,,return Nothing<bool>();,5,95,2
51284,RETURN,-1,,return Nothing<bool>();,5,101,2
51316,RETURN,-1,,return Nothing<bool>();,5,108,2
51318,RETURN,-1,,return Just(true);,3,111,23
51375,RETURN,-1,,return false;,5,132,1
51388,RETURN,-1,,return true;,3,135,5
51449,RETURN,-1,,return Just(!result->IsEmpty());,3,34,2
51548,RETURN,-1,,return Just(true);,3,56,14
51558,RETURN,-1,,"return CSPRNG(params.buffer, params.size).is_ok();",3,63,1
51646,RETURN,-1,,return Just(true);,3,83,6
51748,RETURN,-1,,return Nothing<bool>();,7,104,2
51793,RETURN,-1,,return Nothing<bool>();,7,113,2
51823,RETURN,-1,,return Nothing<bool>();,7,128,2
51850,RETURN,-1,,return Nothing<bool>();,9,136,2
51878,RETURN,-1,,return Nothing<bool>();,5,146,2
51880,RETURN,-1,,return Just(true);,3,149,20
51930,RETURN,-1,,return false;,5,166,1
51932,RETURN,-1,,return true;,3,169,3
52009,RETURN,-1,,return Just(true);,3,194,7
52045,RETURN,1,,return false;,16,209,1
52069,RETURN,-1,,return true;,3,213,10
52098,RETURN,-1,,return Just(true);,3,222,2
52222,RETURN,1,,return EVPKeyCtxPointer();,5,41,1
52238,RETURN,-1,,return EVPKeyCtxPointer();,5,46,1
52281,RETURN,1,,return EVPKeyCtxPointer();,7,56,1
52318,RETURN,-1,,return EVPKeyCtxPointer();,7,64,1
52362,RETURN,-1,,return EVPKeyCtxPointer();,7,80,1
52407,RETURN,-1,,return EVPKeyCtxPointer();,7,92,1
52409,RETURN,-1,,return ctx;,3,96,7
52601,RETURN,-1,,return Nothing<bool>();,9,157,2
52660,RETURN,-1,,return Nothing<bool>();,9,168,2
52714,RETURN,-1,,return Nothing<bool>();,9,179,2
52720,RETURN,-1,,return Just(true);,3,186,13
52731,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,3,194,1
52784,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,212,1
52800,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,215,1
52833,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,221,1
52845,RETURN,1,,return WebCryptoCipherStatus::FAILED;,44,224,1
52873,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,233,1
52903,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,243,1
52919,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,247,19
52952,RETURN,-1,,return Just(true);,3,258,3
52974,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,7,271,3
52980,RETURN,-1,,"return RSA_JWK_Export(key_data.get(), params, out);",7,273,6
52998,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,276,1
53002,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,277,10
53019,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,280,1
53023,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,281,14
53149,RETURN,-1,,return Nothing<bool>();,9,321,2
53177,RETURN,-1,,return Nothing<bool>();,11,328,2
53191,RETURN,-1,,return Nothing<bool>();,7,336,6
53193,RETURN,-1,,return Just(true);,3,339,9
53217,RETURN,-1,,"return RSA_Cipher<EVP_PKEY_encrypt_init, EVP_PKEY_encrypt>(
          env, key_data.get(), params, in, out);",7,352,4
53235,RETURN,-1,,"return RSA_Cipher<EVP_PKEY_decrypt_init, EVP_PKEY_decrypt>(
          env, key_data.get(), params, in, out);",7,356,8
53245,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,3,359,2
53349,RETURN,-1,,return Nothing<bool>();,5,395,1
53376,RETURN,-1,,return Nothing<bool>();,5,400,1
53473,RETURN,-1,,return Nothing<bool>();,7,412,1
53475,RETURN,-1,,return Just(true);,3,416,23
53574,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,434,2
53595,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,439,2
53663,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,455,2
53797,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,471,2
53836,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,480,2
53982,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,498,2
54001,RETURN,-1,,"return KeyObjectData::CreateAsymmetric(type, ManagedEVPPKey(std::move(pkey)));",3,505,19
54118,RETURN,-1,,return Nothing<bool>();,5,540,1
54195,RETURN,-1,,return Nothing<bool>();,5,559,1
54267,RETURN,-1,,return Nothing<bool>();,9,589,1
54326,RETURN,-1,,return Nothing<bool>();,11,608,1
54349,RETURN,-1,,return Nothing<bool>();,11,615,2
54379,RETURN,-1,,return Nothing<bool>();,9,625,1
54381,RETURN,-1,,return Just<bool>(true);,3,630,22
54496,RETURN,1,,return *this;,23,34,1
54503,RETURN,-1,,return *new (this) ScryptConfig(std::move(other));,3,36,3
54557,RETURN,-1,,return Just(!result->IsEmpty());,3,52,2
54608,RETURN,-1,,return Nothing<bool>();,5,69,2
54621,RETURN,-1,,return Nothing<bool>();,5,74,2
54789,RETURN,-1,,return Nothing<bool>();,5,108,2
54811,RETURN,-1,,return Just(true);,3,114,24
54873,RETURN,-1,,return false;,5,135,1
54886,RETURN,-1,,return true;,3,138,5
54924,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,380,1
54971,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,497,1
55063,RETURN,-1,,"return (L == 1024 && N == 160) ||
           (L == 2048 && N == 224) ||
           (L == 2048 && N == 256) ||
           (L == 3072 && N == 256);",5,48,11
55095,RETURN,-1,,return true;,3,54,2
55137,RETURN,1,,return false;,7,65,1
55159,RETURN,1,,return false;,9,68,1
55161,RETURN,-1,,return true;,3,72,2
55185,RETURN,1,,return nullptr;,5,84,1
55322,RETURN,-1,,return sig;,5,106,3
55324,RETURN,-1,,return nullptr;,3,109,14
55331,RETURN,-1,,"return EVP_PKEY_id(m_pkey.get()) == EVP_PKEY_RSA_PSS ? RSA_PKCS1_PSS_PADDING :
                                                         RSA_PKCS1_PADDING;",3,113,1
55400,RETURN,-1,,return kNoDsaSignature;,5,129,1
55402,RETURN,-1,,return (bits + 7) / 8;,3,132,5
55427,RETURN,1,,return false;,5,142,1
55445,RETURN,-1,,"return BN_bn2binpad(pr, out, n) > 0 && BN_bn2binpad(ps, out + n, n) > 0;",3,147,8
55478,RETURN,1,,return std::move(signature);,5,155,1
55532,RETURN,1,,return std::move(signature);,5,165,1
55538,RETURN,-1,,return buf;,3,167,7
55557,RETURN,1,,return ByteSource();,5,177,1
55594,RETURN,1,,return ByteSource();,5,185,1
55596,RETURN,-1,,return std::move(out).release();,3,187,10
55621,RETURN,1,,return std::move(out);,5,195,1
55644,RETURN,1,,return ByteSource();,5,200,1
55705,RETURN,1,,return ByteSource();,5,216,1
55709,RETURN,-1,,"return ByteSource::Allocated(data, len);",3,220,25
55737,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_DIGEST(env);,7,228,3
55746,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_STATE(env, ""Not initialised"");",7,231,6
55756,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Malformed signature"");",7,234,9
55792,RETURN,1,,"return ThrowCryptoError(env, err);",11,243,1
55805,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""EVP_SignInit_ex failed"");",13,246,3
55815,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""EVP_SignUpdate failed"");",13,249,6
55825,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""PEM_read_bio_PrivateKey failed"");",13,252,9
55835,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""PEM_read_bio_PUBKEY failed"");",13,255,12
55847,RETURN,-1,,return;,7,263,21
55864,RETURN,-1,,return true;,7,271,5
55867,RETURN,-1,,return false;,7,273,7
55886,RETURN,-1,,return dsa_encoding == kSigEncP1363;,7,282,5
55891,RETURN,-1,,return false;,7,284,7
55925,RETURN,1,,return kSignUnknownDigest;,5,299,1
55949,RETURN,-1,,return kSignInit;,5,304,2
55951,RETURN,-1,,return kSignOk;,3,307,8
55964,RETURN,1,,return kSignNotInitialised;,5,312,1
55976,RETURN,1,,return kSignUpdate;,5,314,1
55978,RETURN,-1,,return kSignOk;,3,315,3
56210,RETURN,1,,return SignResult(kSignNotInitialised);,5,392,1
56229,RETURN,1,,return SignResult(kSignPrivateKey);,5,397,1
56281,RETURN,-1,,"return SignResult(error, std::move(buffer));",3,406,9
56330,RETURN,1,,return;,5,419,1
56444,RETURN,1,,"return crypto::CheckThrow(env, ret.error);",5,444,1
56669,RETURN,1,,return kSignNotInitialised;,5,509,1
56696,RETURN,1,,return kSignPublicKey;,5,517,1
56767,RETURN,-1,,return kSignOk;,3,530,11
56809,RETURN,1,,return;,5,544,1
56823,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,548,1
56956,RETURN,1,,"return crypto::CheckThrow(env, Error::kSignMalformedSignature);",7,570,1
56984,RETURN,1,,"return crypto::CheckThrow(env, err);",5,577,1
57015,RETURN,1,,return *this;,23,595,1
57022,RETURN,-1,,return *new (this) SignConfiguration(std::move(other));,3,597,3
57151,RETURN,1,,return Nothing<bool>();,5,631,1
57176,RETURN,-1,,return Nothing<bool>();,5,637,2
57234,RETURN,-1,,return Nothing<bool>();,7,648,2
57343,RETURN,-1,,return Nothing<bool>();,7,667,2
57372,RETURN,-1,,return Nothing<bool>();,7,675,2
57422,RETURN,-1,,return Just(true);,3,691,22
57479,RETURN,-1,,return false;,9,711,2
57516,RETURN,-1,,return false;,9,722,2
57573,RETURN,-1,,return false;,5,740,2
57625,RETURN,-1,,return false;,11,754,2
57666,RETURN,-1,,return false;,11,763,2
57723,RETURN,-1,,return false;,11,774,2
57752,RETURN,-1,,return false;,11,780,2
57862,RETURN,-1,,return true;,3,807,13
57916,RETURN,-1,,return Just(!result->IsEmpty());,3,825,2
57984,RETURN,1,,return false;,5,30,1
57998,RETURN,1,,return false;,5,34,1
58000,RETURN,-1,,"return NETSCAPE_SPKI_verify(spki.get(), pkey.get()) > 0;",3,36,9
58038,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,43,1
58054,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,46,1
58082,RETURN,1,,return ByteSource();,13,54,1
58103,RETURN,1,,return ByteSource();,14,65,1
58116,RETURN,1,,return ByteSource();,14,68,1
58131,RETURN,1,,return ByteSource();,57,70,1
58133,RETURN,-1,,return ByteSource::FromBIO(bio);,3,72,12
58165,RETURN,1,,return args.GetReturnValue().SetEmptyString();,26,79,1
58181,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,82,1
58195,RETURN,1,,return args.GetReturnValue().SetEmptyString();,14,85,1
58243,RETURN,1,,return ByteSource();,5,101,1
58260,RETURN,-1,,"return (buf_size >= 0) ? ByteSource::Allocated(buf, buf_size) : ByteSource();",3,105,10
58298,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,113,1
58314,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,116,1
58327,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,120,1
58470,RETURN,-1,,return;,5,28,2
58481,RETURN,-1,,return;,5,34,2
58505,RETURN,-1,,return;,5,42,2
58506,RETURN,-1,,"return args.GetReturnValue().Set(
      CRYPTO_memcmp(buf1.data(), buf2.data(), buf1.size()) == 0);",3,45,10
58578,RETURN,-1,,return 0;,9,311,2
58604,RETURN,-1,,return c == ' ' ? '_' : ToUpper(c);,39,769,1
58698,RETURN,-1,,return w->ReleaseSession();,3,74,4
58875,RETURN,-1,,return;,5,107,1
58955,RETURN,1,,return;,5,124,1
59019,RETURN,1,,return 0;,5,138,1
59035,RETURN,1,,return 0;,5,143,1
59060,RETURN,1,,return 0;,5,148,1
59112,RETURN,1,,return 0;,5,164,1
59142,RETURN,-1,,return 0;,3,178,27
59170,RETURN,1,,return 1;,5,185,1
59178,RETURN,1,,return -1;,5,190,1
59302,RETURN,-1,,return 1;,5,210,1
59320,RETURN,-1,,return w->is_cert_cb_running() ? -1 : 1;,3,216,21
59357,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,28,229,1
59377,RETURN,-1,,"return status == OPENSSL_NPN_NEGOTIATED ? SSL_TLSEXT_ERR_OK
                                          : SSL_TLSEXT_ERR_ALERT_FATAL;",3,243,8
59447,RETURN,-1,,return 1;,5,262,3
59470,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,269,1
59503,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,3,282,17
59542,RETURN,1,,return ignore_null;,5,298,1
59544,RETURN,-1,,"return !target->Set(
      env->context(),
      name,
      OneByteString(env->isolate(), value))
          .IsNothing();",3,299,2
59575,RETURN,-1,,return ret;,3,314,3
59638,RETURN,1,,return MaybeLocal<ArrayBufferView>();,5,351,1
59640,RETURN,-1,,"return PersistentToLocal::Default(env()->isolate(), ocsp_response_);",3,352,2
59662,RETURN,-1,,return next_sess_.release();,3,360,1
59682,RETURN,1,,return;,5,366,1
59936,RETURN,-1,,return;,5,452,1
60109,RETURN,1,,return;,5,500,1
60285,RETURN,-1,,return;,5,546,2
60294,RETURN,-1,,return;,5,552,2
60301,RETURN,-1,,return;,5,558,2
60320,RETURN,-1,,return;,5,569,2
60367,RETURN,-1,,return;,5,596,3
60448,RETURN,-1,,return;,5,614,2
60520,RETURN,-1,,return;,5,638,7
60541,RETURN,-1,,return;,7,650,2
60544,RETURN,-1,,return;,5,655,3
60577,RETURN,-1,,return;,5,674,2
60584,RETURN,-1,,return;,5,680,2
60593,RETURN,-1,,return;,5,685,2
60669,RETURN,-1,,return;,9,714,2
60714,RETURN,-1,,return;,9,738,4
60744,RETURN,1,,return;,44,746,1
60775,RETURN,1,,return;,44,750,1
60790,RETURN,1,,return;,42,752,1
60810,RETURN,1,,return;,66,754,1
60858,RETURN,1,,return;,68,761,1
60895,RETURN,1,,return;,72,771,1
60898,RETURN,-1,,return;,9,776,12
60935,RETURN,-1,,return;,5,794,2
60944,RETURN,-1,,return;,5,799,2
60959,RETURN,-1,,return;,5,805,2
61033,RETURN,-1,,return;,5,819,2
61065,RETURN,-1,,return;,5,830,4
61101,RETURN,-1,,return name;,3,843,5
61107,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,847,1
61115,RETURN,-1,,return underlying_stream()->IsIPCPipe();,3,851,1
61124,RETURN,-1,,return underlying_stream()->GetFD();,3,855,1
61133,RETURN,-1,,"return ssl_ &&
      underlying_stream() != nullptr &&
      underlying_stream()->IsAlive();",3,859,1
61148,RETURN,-1,,return underlying_stream()->IsClosing();,3,865,1
61168,RETURN,1,,return underlying_stream()->ReadStart();,5,871,1
61173,RETURN,-1,,return 0;,3,872,3
61182,RETURN,-1,,return underlying_stream() != nullptr ? underlying_stream()->ReadStop() : 0;,3,877,2
61196,RETURN,-1,,return error_.empty() ? nullptr : error_.c_str();,3,881,1
61237,RETURN,-1,,return UV_EPROTO;,5,900,3
61342,RETURN,-1,,return 0;,7,940,7
61361,RETURN,-1,,return 0;,5,951,2
61575,RETURN,-1,,return UV_EPROTO;,7,1004,3
61604,RETURN,-1,,return 0;,3,1020,27
61629,RETURN,-1,,"return uv_buf_init(base, size);",3,1028,6
61646,RETURN,1,,return;,5,1036,1
61663,RETURN,-1,,return;,5,1048,4
61711,RETURN,-1,,"return hello_parser_.Parse(data, avail);",5,1070,7
61724,RETURN,-1,,return underlying_stream()->CreateShutdownWrap(req_wrap_object);,3,1078,1
61759,RETURN,-1,,return underlying_stream()->DoShutdown(req_wrap);,3,1090,6
61886,RETURN,1,,return;,5,1133,1
62009,RETURN,1,,return;,5,1190,1
62282,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,1268,1
62322,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,1274,1
62360,RETURN,-1,,return SSL_TLSEXT_ERR_NOACK;,5,1280,3
62413,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,3,1291,22
62441,RETURN,1,,return err;,5,1298,1
62463,RETURN,-1,,return 1;,3,1305,6
62633,RETURN,1,,return 0;,5,1349,1
62647,RETURN,1,,return 0;,34,1353,1
62697,RETURN,1,,return 0;,5,1364,1
62710,RETURN,1,,return 0;,5,1369,1
62722,RETURN,-1,,return psk_buf.length();,3,1372,20
62815,RETURN,1,,return 0;,7,1397,1
62856,RETURN,1,,return 0;,5,1406,1
62903,RETURN,1,,return 0;,5,1413,1
62916,RETURN,1,,return 0;,5,1417,1
62953,RETURN,1,,return 0;,5,1422,1
62970,RETURN,1,,return 0;,5,1427,1
62990,RETURN,-1,,return psk_buf.length();,3,1432,25
63014,RETURN,1,,return info.GetReturnValue().Set(0);,5,1442,1
63169,RETURN,1,,return;,5,1471,1
63229,RETURN,-1,,"return ThrowCryptoError(env, err, ""CertCbDone"");",7,1484,3
63267,RETURN,-1,,return;,5,1490,3
63334,RETURN,1,,"return env->ThrowTypeError(""Must give a Buffer as first argument"");",5,1511,1
63673,RETURN,1,,return;,5,1587,1
63762,RETURN,1,,return;,68,1600,1
63811,RETURN,1,,return;,5,1618,1
63900,RETURN,1,,return;,68,1631,1
63945,RETURN,1,,return;,5,1643,1
63957,RETURN,1,,return;,5,1647,1
64041,RETURN,1,,return;,68,1660,1
64079,RETURN,1,,"return THROW_ERR_MISSING_ARGS(env, ""Session argument is mandatory"");",5,1671,1
64111,RETURN,1,,return;,5,1677,1
64120,RETURN,1,,"return env->ThrowError(""SSL_set_session error"");",5,1680,1
64191,RETURN,1,,return args.GetReturnValue().SetNull();,5,1704,1
64700,RETURN,-1,,"return ThrowCryptoError(
         env,
         ERR_get_error(),
         ""SSL_export_keying_material"");",5,1852,1
64748,RETURN,1,,return;,68,1860,1
64801,RETURN,1,,"return ThrowCryptoError(w->env(), ERR_get_error());",5,1875,1
64843,RETURN,1,,return;,5,1885,1
64927,RETURN,1,,"return THROW_ERR_MISSING_ARGS(env, ""OCSP response argument is mandatory"");",5,1911,1
65005,RETURN,1,,return args.GetReturnValue().SetNull();,5,1934,1
65201,RETURN,1,,return;,5,1980,1
65948,RETURN,-1,,return 1;,3,60,1
66000,RETURN,1,,return {true};,9,75,1
66004,RETURN,-1,,return {false};,3,94,4
66043,RETURN,1,,return -1;,7,103,1
66053,RETURN,-1,,return len;,5,105,7
66055,RETURN,-1,,return -1;,3,108,4
66066,RETURN,-1,,return 0;,3,117,1
66090,RETURN,1,,return FIPS_mode_set(1);,27,133,1
66093,RETURN,-1,,return true;,3,137,2
66129,RETURN,-1,,return false;,5,146,2
66131,RETURN,-1,,return true;,3,148,7
66302,RETURN,1,,return;,5,240,1
66312,RETURN,-1,,"return ThrowCryptoError(env, err);",5,248,3
66380,RETURN,-1,,return errors_.empty();,3,285,1
66455,RETURN,-1,,return MaybeLocal<Value>();,7,306,1
66463,RETURN,-1,,"return copy.ToException(env, exception_string);",5,309,9
66542,RETURN,-1,,return MaybeLocal<Value>();,7,322,1
66544,RETURN,-1,,return exception_v;,3,326,5
66597,RETURN,-1,,return *this;,3,348,2
66637,RETURN,-1,,return ptr;,3,365,7
66653,RETURN,-1,,"return ArrayBuffer::New(env->isolate(), std::move(store));",3,370,2
66680,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength());",3,375,2
66723,RETURN,-1,,return std::move(out).release();,3,384,7
66797,RETURN,-1,,return out;,3,400,5
66805,RETURN,-1,,"return IsAnyByteSource(value) ? FromBuffer(value)
                                : FromString(env, value.As<String>());",3,405,1
66882,RETURN,-1,,return std::move(out).release();,3,418,12
66900,RETURN,-1,,return ntc ? buf.ToNullTerminatedCopy() : buf.ToByteSource();,3,423,3
66917,RETURN,-1,,"return value->IsString() || IsAnyByteSource(value) ?
           ByteSource::FromStringOrBuffer(env, value) :
           ByteSource::FromSymmetricKeyObjectHandle(value);",3,432,1
66943,RETURN,-1,,"return Buffer::HasInstance(value) ? FromBuffer(value, true)
                                    : FromString(env, value.As<String>(), true);",3,439,1
66983,RETURN,-1,,"return Foreign(key->Data()->GetSymmetricKey(),
                 key->Data()->GetSymmetricKeySize());",3,447,5
67005,RETURN,-1,,"return ByteSource(data, data, size);",3,452,1
67016,RETURN,-1,,"return ByteSource(data, nullptr, size);",3,456,1
67034,RETURN,1,,return Just(true);,17,462,1
67091,RETURN,-1,,return Nothing<bool>();,7,474,1
67115,RETURN,-1,,return Nothing<bool>();,7,480,1
67139,RETURN,-1,,return Nothing<bool>();,7,486,1
67448,RETURN,1,,return Nothing<bool>();,7,559,1
67450,RETURN,-1,,return Just(true);,3,562,14
67520,RETURN,1,,return;,5,581,1
67566,RETURN,-1,,return;,5,587,1
67649,RETURN,-1,,return engine;,3,615,6
67669,RETURN,1,,return false;,5,622,1
67689,RETURN,-1,,return false;,5,627,2
67691,RETURN,-1,,return true;,3,630,6
67739,RETURN,1,,return;,57,637,1
67785,RETURN,-1,,"return StringBytes::Encode(
      env->isolate(),
      reinterpret_cast<const char*>(buf.data()),
      buf.size(),
      BASE64URL,
      error);",3,652,3
67865,RETURN,-1,,return Nothing<bool>();,5,674,2
67867,RETURN,-1,,"return target->Set(env->context(), name, value);",3,676,6
67928,RETURN,-1,,return false;,7,688,2
67930,RETURN,-1,,return true;,3,691,2
67955,RETURN,-1,,return static_cast<CryptoJobMode>(mode);,3,698,5
68000,RETURN,-1,,return;,5,715,1
68481,RETURN,-1,,return *this;,3,45,3
68726,RETURN,-1,,return tmpl;,3,101,3
68734,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(object);,3,105,1
68763,RETURN,1,,return MaybeLocal<Object>();,5,139,1
68769,RETURN,-1,,"return New(env, std::move(ptr));",3,142,7
68835,RETURN,1,,return MaybeLocal<Object>();,5,158,1
68860,RETURN,-1,,"return sk_X509_num(ssl_certs)
      ? New(env, std::move(cert), ssl_certs)
      : New(env, std::move(cert));",3,167,11
68933,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,183,1
68968,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",7,195,1
68990,RETURN,1,,return;,7,198,1
69011,RETURN,-1,,return;,5,200,1
69743,RETURN,-1,,return args.GetReturnValue().Set(ret);,7,355,3
69754,RETURN,-1,,return;,7,358,6
69758,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid name"");",7,360,9
69763,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,362,11
69838,RETURN,-1,,return args.GetReturnValue().Set(args[0]);,7,383,3
69851,RETURN,-1,,return;,7,385,6
69855,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid name"");",7,387,9
69860,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,389,11
69931,RETURN,-1,,return args.GetReturnValue().Set(args[0]);,7,406,3
69944,RETURN,-1,,return;,7,408,6
69948,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid IP"");",7,410,9
69953,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,412,11
70252,RETURN,-1,,return {};,5,516,2
70272,RETURN,1,,return {};,5,521,1
70273,RETURN,-1,,"return BaseObjectPtr<BaseObject>(
      Unwrap<X509Certificate>(handle.As<Object>()));",3,523,4
70290,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,529,1
70300,RETURN,-1,,return std::make_unique<X509CertificateTransferData>(cert_);,3,534,1
70608,RETURN,-1,,return;,13,273,6
70759,RETURN,-1,,return;,13,433,6
70809,RETURN,-1,,return std::make_unique<EmptyEntry>();,9,640,1
70814,RETURN,-1,,"return std::make_unique<InMemoryEntry>(backing_store_, start, len);",7,643,2
70925,RETURN,-1,,return true;,7,1039,1
70947,RETURN,-1,,return true;,7,1050,1
70949,RETURN,-1,,return false;,5,1053,3
71052,RETURN,1,,return nullptr;,45,68,1
71180,RETURN,-1,,"return std::make_shared<DataQueueImpl>(std::move(slices), len);",5,103,14
71199,RETURN,-1,,return size_;,51,106,1
71205,RETURN,-1,,return idempotent_;,41,108,1
71211,RETURN,-1,,return capped_size_.has_value();,37,110,1
71224,RETURN,1,,return std::nullopt;,22,113,1
71232,RETURN,1,,return false;,17,114,1
71280,RETURN,-1,,return false;,9,125,1
71303,RETURN,-1,,return true;,5,135,5
71313,RETURN,1,,return;,26,139,1
71331,RETURN,-1,,return;,7,144,2
71364,RETURN,-1,,return capped_size > size ? capped_size - size : 0UL;,7,155,5
71373,RETURN,-1,,return std::nullopt;,5,157,2
71487,RETURN,-1,,return bob::Status::STATUS_EOS;,7,212,2
71525,RETURN,-1,,return bob::Status::STATUS_EOS;,9,225,3
71553,RETURN,-1,,return UV_EINVAL;,7,241,2
71580,RETURN,1,,return bob::Status::STATUS_CONTINUE;,20,286,1
71586,RETURN,-1,,return status;,5,305,12
71630,RETURN,-1,,return current_reader_.get();,5,318,4
71724,RETURN,-1,,return bob::Status::STATUS_EOS;,7,365,2
71759,RETURN,-1,,return bob::STATUS_BLOCK;,9,378,2
71802,RETURN,-1,,return bob::STATUS_BLOCK;,11,391,2
71826,RETURN,-1,,return bob::STATUS_EOS;,7,404,6
71849,RETURN,-1,,return UV_EINVAL;,7,410,2
71876,RETURN,1,,return bob::Status::STATUS_CONTINUE;,20,447,1
71882,RETURN,-1,,return status;,5,466,12
71922,RETURN,-1,,return current_reader_.get();,5,476,4
71951,RETURN,-1,,return std::make_shared<IdempotentDataQueueReader>(shared_from_this());,5,492,1
71962,RETURN,1,,return nullptr;,26,495,1
71967,RETURN,-1,,return std::make_shared<NonIdempotentDataQueueReader>(shared_from_this());,3,498,4
72006,RETURN,-1,,return bob::Status::STATUS_EOS;,9,517,2
72029,RETURN,-1,,return bob::Status::STATUS_CONTINUE;,7,523,6
72064,RETURN,-1,,return std::make_shared<EmptyReader>();,5,543,1
72080,RETURN,1,,return nullptr;,21,549,1
72082,RETURN,-1,,return std::make_unique<EmptyEntry>();,5,550,2
72091,RETURN,-1,,return 0;,51,553,1
72097,RETURN,-1,,return true;,41,555,1
72145,RETURN,-1,,return bob::Status::STATUS_EOS;,9,587,2
72192,RETURN,-1,,return bob::Status::STATUS_CONTINUE;,7,601,8
72246,RETURN,-1,,return std::make_shared<InMemoryReader>(*this);,5,631,1
72307,RETURN,-1,,"return makeEntry(start, end - start);",7,657,4
72313,RETURN,-1,,"return makeEntry(start, byte_length_ - start);",5,662,6
72323,RETURN,-1,,return byte_length_;,51,665,1
72329,RETURN,-1,,return true;,41,667,1
72383,RETURN,-1,,return std::make_shared<ReaderImpl>(data_queue_->get_reader());,5,702,1
72418,RETURN,1,,return nullptr;,18,708,1
72420,RETURN,-1,,return std::make_unique<DataQueueEntry>(std::move(sliced));,5,710,3
72436,RETURN,-1,,return data_queue_->size();,51,719,1
72445,RETURN,-1,,return data_queue_->is_idempotent();,41,727,1
72466,RETURN,-1,,return *data_queue_;,31,734,1
72493,RETURN,-1,,"return inner_->Pull(
          std::move(next), options, data, count, max_count_hint);",7,754,3
72551,RETURN,1,,return nullptr;,61,794,1
72553,RETURN,-1,,"return std::make_unique<FdEntry>(
        env, std::move(buf), req.statbuf, 0, req.statbuf.st_size);",5,796,8
72590,RETURN,-1,,return ReaderImpl::Create(this);,5,812,1
72637,RETURN,-1,,"return std::make_unique<FdEntry>(env_, path_, stat_, new_start, new_end);",5,826,8
72655,RETURN,-1,,return end_ - start_;,51,829,1
72663,RETURN,-1,,return true;,41,831,1
72669,RETURN,-1,,return env_;,30,833,1
72681,RETURN,-1,,"return other.st_size != stat_.st_size ||
           other.st_mtim.tv_nsec != stat_.st_mtim.tv_nsec;",5,847,1
72725,RETURN,1,,return true;,54,860,1
72727,RETURN,-1,,return entry->is_modified(req.statbuf);,5,861,6
72779,RETURN,-1,,return nullptr;,9,875,2
72791,RETURN,-1,,"return std::make_shared<ReaderImpl>(
          BaseObjectPtr<fs::FileHandle>(fs::FileHandle::New(
              realm->GetBindingData<fs::BindingData>(realm->context()),
              file,
              Local<Object>(),
              entry->start_,
              entry->end_ - entry->start_)),
          entry);",7,878,9
72881,RETURN,-1,,return env_->allocate_managed_buffer(suggested_size);,7,901,1
72916,RETURN,-1,,return;,9,912,2
72944,RETURN,-1,,return;,9,922,3
72983,RETURN,-1,,return DrainAndClose();,9,932,2
73067,RETURN,-1,,return bob::STATUS_EOS;,9,954,2
73093,RETURN,-1,,return UV_EINVAL;,9,960,3
73116,RETURN,-1,,return bob::STATUS_WAIT;,7,968,5
73149,RETURN,1,,return;,19,996,1
73214,RETURN,-1,,return std::move(pending_pulls_.front());,7,1019,4
73272,RETURN,-1,,return nullptr;,5,1057,1
73274,RETURN,-1,,"return std::make_shared<DataQueueImpl>(std::move(list), size);",3,1060,6
73294,RETURN,-1,,return std::make_shared<DataQueueImpl>(capped);,3,1064,1
73317,RETURN,-1,,return nullptr;,5,1075,1
73352,RETURN,-1,,"return CreateInMemoryEntryFromBackingStore(std::move(store), offset, length);",3,1081,9
73380,RETURN,-1,,return nullptr;,5,1089,1
73382,RETURN,-1,,"return std::make_unique<InMemoryEntry>(std::move(store), offset, length);",3,1091,3
73403,RETURN,-1,,return std::make_unique<DataQueueEntry>(std::move(data_queue));,3,1096,1
73421,RETURN,-1,,"return FdEntry::Create(env, path);",3,1101,1
73802,RETURN,-1,,"return NameAndDisplacement(pSymbol->Name, dwDisplacement);",7,180,1
73814,RETURN,-1,,return NameAndDisplacement();,5,190,9
73863,RETURN,-1,,return sym;,5,225,8
73879,RETURN,-1,,return szUndName;,7,238,1
73887,RETURN,-1,,return nullptr;,5,246,3
73938,RETURN,-1,,return ret;,5,256,7
73957,RETURN,1,,return false;,7,263,1
73959,RETURN,-1,,return info.State == MEM_COMMIT && info.Protect != 0;,5,265,3
73977,RETURN,-1,,"return CaptureStackBackTrace(0, count, frames, nullptr);",5,269,1
74008,RETURN,-1,,"return std::unique_ptr<NativeSymbolDebuggingContext>(
      new Win32SymbolDebuggingContext());",3,285,1
74059,RETURN,-1,,return oss.str();,3,303,6
74137,RETURN,1,,return;,33,318,1
74189,RETURN,-1,,return list;,3,473,2
74209,RETURN,-1,,return;,5,484,2
74352,RETURN,-1,,return true;,3,61,4
74371,RETURN,-1,,return info;,3,68,5
74734,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        env->isolate(),
        ""The \""list\"" argument must be an instance of SharedArrayBuffer, ""
        ""ArrayBuffer or ArrayBufferView."");",5,152,1
74798,RETURN,-1,,"return node::THROW_ERR_ENCODING_INVALID_ENCODED_DATA(
          env->isolate(), ""The encoded data was not valid for encoding utf-8"");",7,170,1
74835,RETURN,1,,return args.GetReturnValue().SetEmptyString();,20,182,1
74895,RETURN,-1,,return;,5,192,3
75193,RETURN,-1,,return el.IsEmpty();,51,218,1
75395,RETURN,-1,,return true;,9,1166,2
75397,RETURN,-1,,return false;,5,1169,6
75425,RETURN,-1,,return;,7,1219,1
75740,RETURN,1,,return false;,45,131,1
75874,RETURN,-1,,return fields_[kStackLength] > 0;,3,169,10
76234,RETURN,-1,,return output;,3,268,4
76267,RETURN,-1,,return output;,3,281,2
76329,RETURN,-1,,return output;,3,296,2
76388,RETURN,-1,,return info;,3,343,21
76642,RETURN,-1,,return;,5,550,1
76651,RETURN,-1,,return;,5,554,1
76687,RETURN,1,,return;,5,564,1
76827,RETURN,-1,,return cwd;,5,614,2
76833,RETURN,-1,,"return exec_path.substr(0, exec_path.find_last_of(kPathSeparator));",3,620,9
76924,RETURN,-1,,return buf;,3,638,7
76977,RETURN,-1,,return bs;,3,650,3
77022,RETURN,-1,,return exec_path;,3,676,6
77868,RETURN,1,,return;,24,1050,1
77904,RETURN,-1,,"return handle_scope.EscapeMaybe(snapshot_serialize_callback()->Call(
        context(), v8::Undefined(isolate()), 0, nullptr));",5,1065,3
77921,RETURN,-1,,return handle_scope.Escape(Undefined(isolate()));,3,1068,4
77945,RETURN,-1,,"return handle_scope.EscapeMaybe(snapshot_deserialize_main()->Call(
        context(), v8::Undefined(isolate()), 0, nullptr));",5,1075,3
77962,RETURN,-1,,return handle_scope.Escape(Undefined(isolate()));,3,1078,4
78220,RETURN,-1,,return;,5,1209,2
78235,RETURN,1,,return;,25,1227,1
78249,RETURN,1,,return;,25,1232,1
78287,RETURN,1,,return;,5,1246,1
78381,RETURN,1,,return;,5,1272,1
78501,RETURN,1,,return;,5,1312,1
78561,RETURN,1,,return;,25,1328,1
78587,RETURN,-1,,return now;,3,1343,6
78602,RETURN,1,,"return Integer::NewFromUnsigned(isolate(), static_cast<uint32_t>(now));",5,1349,1
78613,RETURN,1,,"return Number::New(isolate(), static_cast<double>(now));",5,1351,1
78836,RETURN,1,,return;,5,1401,1
78891,RETURN,-1,,"return {fields_.Serialize(context, creator)};",3,1419,1
78917,RETURN,-1,,return output;,3,1429,2
78936,RETURN,-1,,"return {fields_.Serialize(context, creator)};",3,1438,1
78962,RETURN,-1,,return output;,3,1448,2
79194,RETURN,-1,,return output;,3,1530,2
79344,RETURN,-1,,return info;,3,1565,12
79543,RETURN,1,,return nullptr;,36,1634,1
79545,RETURN,-1,,return worker_context()->env();,3,1635,2
79559,RETURN,1,,return;,32,1639,1
79587,RETURN,1,,return;,32,1648,1
79738,RETURN,-1,,return info;,3,1682,14
79946,RETURN,-1,,return free_in_system;,5,1734,1
79958,RETURN,-1,,return free_in_system;,5,1739,1
79965,RETURN,-1,,return free_in_system;,5,1743,1
79967,RETURN,-1,,return allowed - rss;,3,1746,11
80112,RETURN,-1,,return new_limit;,5,1827,2
80130,RETURN,-1,,return new_limit;,5,1840,3
80255,RETURN,-1,,return new_limit;,3,1884,43
80283,RETURN,-1,,return size;,3,1897,7
80833,RETURN,-1,,return args.GetReturnValue().Set(err);,5,161,1
80867,RETURN,-1,,return args.GetReturnValue().Set(err);,5,169,2
81215,RETURN,1,,return;,5,74,1
81276,RETURN,-1,,"return IsWeakOrDetached() ||
         !HandleWrap::HasRef(this) ||
         !uv_is_active(GetHandle());",3,103,1
81455,RETURN,-1,,return GetConstructorTemplate(env->isolate_data());,3,158,1
81546,RETURN,-1,,return tmpl;,3,176,3
81621,RETURN,-1,,"return ""<JS Node>"";",33,48,1
81627,RETURN,-1,,return 0;,35,49,1
81633,RETURN,-1,,return false;,36,50,1
81639,RETURN,-1,,return PersistentToLocal::Strong(persistent_);,28,51,1
81662,RETURN,1,,return v.As<Object>()->GetIdentityHash();,24,55,1
81676,RETURN,1,,return v.As<v8::Name>()->GetIdentityHash();,22,56,1
81690,RETURN,1,,return v.As<v8::Int32>()->Value();,23,57,1
81698,RETURN,-1,,return 0;,5,58,5
81718,RETURN,-1,,return static_cast<size_t>(n->IdentityHash());,7,68,1
81732,RETURN,-1,,return a->JSValue()->SameValue(b->JSValue());,7,74,1
81783,RETURN,1,,return *it;,7,90,1
81794,RETURN,-1,,return AddNode(std::unique_ptr<Node>(n.release()));,5,92,7
81827,RETURN,-1,,return n;,5,98,4
82118,RETURN,-1,,return MaybeLocal<Array>();,11,150,1
82133,RETURN,1,,return MaybeLocal<Array>();,11,153,1
82165,RETURN,1,,return MaybeLocal<Array>();,13,157,1
82217,RETURN,1,,return MaybeLocal<Array>();,9,168,1
82256,RETURN,-1,,return MaybeLocal<Array>();,9,176,1
82324,RETURN,-1,,return MaybeLocal<Array>();,13,189,1
82377,RETURN,-1,,return MaybeLocal<Array>();,11,197,1
82379,RETURN,-1,,return handle_scope.Escape(nodes);,5,202,19
82455,RETURN,-1,,return 65536;,5,228,1
82512,RETURN,-1,,return kAbort;,9,248,2
82527,RETURN,-1,,return kContinue;,5,254,6
82533,RETURN,-1,,return status_;,24,257,1
82563,RETURN,-1,,return 65536;,5,283,1
82629,RETURN,-1,,return kContinue;,5,303,4
82646,RETURN,-1,,return 0;,5,309,3
82652,RETURN,-1,,return 0;,5,313,1
82673,RETURN,-1,,return snapshot_ != nullptr;,29,327,1
82681,RETURN,-1,,return snapshot_ == nullptr;,31,328,1
82689,RETURN,-1,,return this;,40,329,1
82789,RETURN,-1,,return Nothing<void>();,5,370,2
82819,RETURN,-1,,return Nothing<void>();,5,377,2
82845,RETURN,-1,,return Nothing<void>();,5,384,2
82847,RETURN,-1,,return JustVoid();,3,387,14
82966,RETURN,-1,,return {};,5,414,1
82967,RETURN,-1,,"return MakeBaseObject<HeapSnapshotStream>(env, std::move(snapshot), obj);",3,416,6
83055,RETURN,-1,,return result;,3,432,8
83190,RETURN,1,,return;,57,457,1
83213,RETURN,-1,,return;,5,461,5
83231,RETURN,1,,return;,55,466,1
83232,RETURN,-1,,return args.GetReturnValue().Set(filename_v);,3,467,14
84182,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""value is out of range"");",5,206,1
84295,RETURN,-1,,return BaseObjectPtr<HistogramBase>();,5,233,1
84297,RETURN,-1,,"return MakeBaseObject<HistogramBase>(env, obj, options);",3,236,3
84341,RETURN,-1,,return BaseObjectPtr<HistogramBase>();,5,247,1
84343,RETURN,-1,,"return MakeBaseObject<HistogramBase>(env, obj, std::move(histogram));",3,249,3
84688,RETURN,-1,,return tmpl;,3,317,3
84815,RETURN,-1,,"return Create(env, std::move(histogram_));",3,356,1
84827,RETURN,-1,,return std::make_unique<HistogramTransferData>(this);,3,360,1
84995,RETURN,-1,,return tmpl;,3,400,3
85138,RETURN,-1,,return BaseObjectPtr<IntervalHistogram>();,5,452,1
85140,RETURN,-1,,"return MakeBaseObject<IntervalHistogram>(
      env,
      obj,
      AsyncWrap::PROVIDER_ELDHISTOGRAM,
      interval,
      std::move(on_interval),
      options);",3,455,3
85210,RETURN,1,,return;,38,478,1
85246,RETURN,1,,return;,39,487,1
85864,RETURN,-1,,return std::make_unique<HistogramBase::HistogramTransferData>(histogram());,3,634,1
85973,RETURN,-1,,"return
        static_cast<DeletableWrapper<T>*>(thread->GetObject(id))->object_.get();",5,25,1
85992,RETURN,-1,,"return std::unique_ptr<DeletableWrapper<T>>(
      new DeletableWrapper<T>(std::move(object)));",3,35,1
86036,RETURN,-1,,"return std::unique_ptr<Request>(
      new CreateObjectRequest<Factory>(object_id, std::move(factory)));",3,56,1
86211,RETURN,-1,,"return std::make_unique<MainThreadSessionState>(thread, prevent_shutdown);",5,139,1
86414,RETURN,-1,,return true;,3,230,3
86423,RETURN,1,,return;,5,235,1
86511,RETURN,-1,,return handle_;,3,259,2
86554,RETURN,-1,,return pointer;,3,277,4
86577,RETURN,-1,,return nullptr;,5,283,1
86579,RETURN,-1,,return iterator->second.get();,3,285,4
86637,RETURN,-1,,return StringBuffer::create(view);,3,295,9
86649,RETURN,-1,,"return std::unique_ptr<InspectorSession>(
      new CrossThreadInspectorSession(++next_session_id_,
                                      shared_from_this(),
                                      std::move(delegate),
                                      prevent_shutdown));",3,301,1
86679,RETURN,1,,return false;,5,311,1
86690,RETURN,-1,,return true;,3,313,5
86722,RETURN,-1,,"return std::unique_ptr<InspectorSessionDelegate>(
      new ThreadSafeDelegate(shared_from_this(), id));",3,326,4
86740,RETURN,-1,,return main_thread_ == nullptr;,3,332,3
86813,RETURN,-1,,return ++next_object_id_;,5,54,1
86881,RETURN,-1,,return agent_;,5,83,1
87035,RETURN,1,,return nullptr;,5,39,1
87079,RETURN,1,,return nullptr;,26,48,1
87084,RETURN,-1,,"return parseJSONCharacters(reinterpret_cast<const uint16_t*>(buffer.out()),
                             utf16_length);",3,50,10
87106,RETURN,1,,return nullptr;,5,56,1
87114,RETURN,1,,"return parseJSONCharacters(string.characters8(), string.length());",5,58,1
87124,RETURN,-1,,"return parseJSONCharacters(string.characters16(), string.length());",3,59,3
87147,RETURN,1,,"return """";",5,64,1
87155,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(view.characters8()),
                       view.length());",5,66,1
87218,RETURN,-1,,"return String(buffer.out(), utf8_length);",3,82,12
87244,RETURN,-1,,return stream.str();,3,89,4
87286,RETURN,-1,,return d;,3,98,7
87297,RETURN,-1,,"return Value::parseBinary(
        reinterpret_cast<const uint8_t*>(message.data()),
        message.length());",5,104,1
87312,RETURN,-1,,return parseJSON(message);,3,108,2
87320,RETURN,-1,,return message;,3,112,1
87327,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(message.data()),
                     message.size());",3,116,1
87348,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(data), length);",3,121,1
87402,RETURN,-1,,"return String(buffer.out(), utf8_length);",3,137,10
87414,RETURN,-1,,return reinterpret_cast<const uint8_t*>(s.data());,3,141,1
87426,RETURN,-1,,"return simdutf::utf32_length_from_utf8(s.data(), s.length());",3,149,1
87522,RETURN,-1,,"return string.substr(start, count);",3,50,1
87534,RETURN,-1,,return std::to_string(n);,3,53,1
87545,RETURN,-1,,return builder.str();,3,56,1
87556,RETURN,-1,,return string.find(substring);,3,59,1
87633,RETURN,-1,,return nullptr;,3,82,1
87640,RETURN,-1,,return nullptr;,3,85,1
87726,RETURN,-1,,return DispatchResponse::OK();,3,20,2
87742,RETURN,-1,,return true;,5,26,2
87744,RETURN,-1,,return false;,3,28,2
87813,RETURN,-1,,return frontend_.lock().get();,34,25,1
87899,RETURN,1,,return;,38,70,1
87959,RETURN,1,,return;,7,97,1
88091,RETURN,-1,,"return DispatchResponse::Error(
        ""Call NodeTracing::end to stop tracing before updating the config"");",5,139,1
88104,RETURN,-1,,"return DispatchResponse::Error(
        ""Tracing properties can only be changed through main thread sessions"");",5,143,1
88163,RETURN,1,,"return DispatchResponse::Error(""At least one category should be enabled"");",5,154,1
88203,RETURN,-1,,return DispatchResponse::OK();,3,164,10
88220,RETURN,-1,,return DispatchResponse::OK();,3,170,3
88354,RETURN,-1,,return DispatchResponse::OK();,3,198,23
88546,RETURN,-1,,"return NodeWorker::WorkerInfo::create()
      .setWorkerId(id)
      .setTitle(title)
      .setUrl(url)
      .setType(""worker"").build();",3,72,1
88636,RETURN,-1,,return DispatchResponse::OK();,3,96,2
88657,RETURN,-1,,return DispatchResponse::OK();,5,102,1
88687,RETURN,-1,,return DispatchResponse::OK();,3,110,6
88700,RETURN,-1,,return DispatchResponse::OK();,3,115,2
88715,RETURN,-1,,return DispatchResponse::OK();,3,120,2
88739,RETURN,1,,return;,5,129,1
88859,RETURN,1,,return;,5,152,1
88983,RETURN,-1,,"return ""[worker "" + std::to_string(id) + ""]"" +
           (name == """" ? """" : "" "" + name);",5,29,1
89110,RETURN,-1,,"return parent_thread_->Connect(std::move(delegate), prevent_shutdown);",3,85,1
89146,RETURN,1,,return;,5,96,1
89178,RETURN,-1,,"return std::make_unique<ParentInspectorHandle>(
      thread_id, url, thread_, wait, name);",3,106,3
89242,RETURN,-1,,"return std::make_unique<WorkerManagerEventHandle>(shared_from_this(), id);",3,124,7
89376,RETURN,-1,,"return std::make_unique<ParentInspectorHandle>(
        thread_id, url, parent_thread_, wait_, name);",5,64,1
89400,RETURN,-1,,return wait_;,5,70,1
89406,RETURN,-1,,return url_;,36,72,1
89464,RETURN,-1,,return thread_;,5,99,1
89638,RETURN,-1,,"return StringBuffer::create(StringView(*buffer, buffer.length()));",3,68,3
89683,RETURN,-1,,return result.str();,3,208,3
89933,RETURN,-1,,return prevent_shutdown_;,5,275,1
89945,RETURN,-1,,return retaining_context_;,5,280,2
89951,RETURN,-1,,return retaining_context_;,5,284,1
90145,RETURN,-1,,return !path.empty() && path[0] == '/';,3,382,1
90272,RETURN,-1,,return;,7,430,1
90421,RETURN,-1,,return session_id;,5,481,4
90444,RETURN,1,,return;,7,487,1
90474,RETURN,1,,return;,11,493,1
90507,RETURN,-1,,return env_->context();,5,506,1
90825,RETURN,1,,return true;,9,593,1
90827,RETURN,-1,,return false;,5,595,2
90852,RETURN,-1,,return retaining_context;,5,604,4
90874,RETURN,-1,,return interface_->GetHandle();,5,612,2
90887,RETURN,-1,,return nullptr;,7,617,1
90903,RETURN,-1,,return worker_manager_;,5,623,3
90909,RETURN,-1,,return !channels_.empty();,5,627,1
90922,RETURN,1,,return true;,7,633,1
90929,RETURN,-1,,return hasConnectedSessions();,7,635,1
90931,RETURN,-1,,return false;,5,637,3
90940,RETURN,1,,return;,7,642,1
90965,RETURN,-1,,return env_->isolate_data()->platform()->CurrentClockTimeMillis();,5,654,1
90996,RETURN,1,,return nullptr;,7,662,1
91008,RETURN,-1,,return Utf8ToStringView(url);,5,665,6
91170,RETURN,-1,,return false;,5,740,1
91199,RETURN,-1,,return true;,3,751,12
91210,RETURN,1,,return true;,5,756,1
91223,RETURN,-1,,return false;,5,760,2
91246,RETURN,-1,,return false;,5,770,1
91249,RETURN,-1,,return true;,3,773,7
91276,RETURN,-1,,return std::unique_ptr<InspectorSession>{};,5,785,2
91293,RETURN,-1,,"return std::unique_ptr<InspectorSession>(
      new SameThreadInspectorSession(session_id, client_));",3,792,5
91321,RETURN,-1,,return std::unique_ptr<InspectorSession>{};,5,801,2
91341,RETURN,-1,,"return parent_handle_->Connect(std::move(thread_safe_delegate),
                                 prevent_shutdown);",3,808,6
91367,RETURN,-1,,return;,5,815,2
91439,RETURN,1,,return;,5,839,1
91607,RETURN,1,,return;,41,895,1
91723,RETURN,-1,,return;,5,935,1
91747,RETURN,1,,return;,5,949,1
91763,RETURN,1,,return false;,5,955,1
91765,RETURN,-1,,return io_ != nullptr || client_->IsActive();,3,956,2
91804,RETURN,-1,,return std::unique_ptr<ParentInspectorHandle>{};,5,968,2
91812,RETURN,-1,,"return client_->getWorkerManager()->NewParentHandle(thread_id, url, name);",5,973,1
91825,RETURN,-1,,"return parent_handle_->NewParentInspectorHandle(thread_id, url, name);",5,975,1
91848,RETURN,-1,,return;,5,982,2
91869,RETURN,-1,,return std::unique_ptr<WorkerManager>{};,5,992,2
91873,RETURN,-1,,return client_->getWorkerManager();,3,996,3
91887,RETURN,1,,"return """";",5,1001,1
91889,RETURN,-1,,return io_->GetWsUrl();,3,1002,2
92091,RETURN,-1,,return script_path;,3,42,3
92147,RETURN,-1,,return uuid;,3,61,5
92298,RETURN,-1,,return handle_;,5,135,1
92317,RETURN,-1,,return messages;,5,145,5
92328,RETURN,1,,return;,7,150,1
92400,RETURN,-1,,return data_ == nullptr;,5,184,3
92525,RETURN,-1,,return nullptr;,5,249,1
92527,RETURN,-1,,return io;,3,251,4
92738,RETURN,-1,,"return FormatWsAddress(host_port->host(), host_port->port(), id_, true);",3,324,3
92848,RETURN,-1,,return { target_id_ };,3,360,1
92854,RETURN,-1,,return script_name_.empty() ? GetHumanReadableProcessName() : script_name_;,3,364,1
92867,RETURN,-1,,"return ""file://"" + script_path_;",3,368,1
92949,RETURN,-1,,"return StringBuffer::create(StringView(*buffer, buffer.length()));",3,38,3
92968,RETURN,-1,,"return inspector->Connect(std::move(delegate), false);",5,44,1
92984,RETURN,-1,,"return FIXED_ONE_BYTE_STRING(env->isolate(), ""Connection"");",5,48,1
92998,RETURN,-1,,"return inspector->ConnectToMainThread(std::move(delegate), true);",5,55,1
93014,RETURN,-1,,"return FIXED_ONE_BYTE_STRING(env->isolate(), ""MainThreadConnection"");",5,59,1
93079,RETURN,1,,return;,73,82,1
93355,RETURN,-1,,return true;,5,161,1
93371,RETURN,-1,,return agent->IsActive();,3,171,3
93609,RETURN,1,,return;,9,215,1
93650,RETURN,-1,,return reinterpret_cast<void*>(asyncId << 1);,3,236,1
94082,RETURN,-1,,return;,5,313,1
94523,RETURN,-1,,return id;,3,65,16
94558,RETURN,-1,,return;,5,76,4
94641,RETURN,-1,,return;,5,99,2
94680,RETURN,-1,,return;,5,111,2
94727,RETURN,-1,,return;,5,122,4
94758,RETURN,-1,,return;,5,129,4
94787,RETURN,-1,,return;,5,142,2
94799,RETURN,-1,,return;,5,148,2
94859,RETURN,-1,,return false;,5,167,4
94861,RETURN,-1,,return true;,3,169,5
94875,RETURN,-1,,"return SPrintF(""coverage-%s-%s-%s.json"",
      uv_os_getpid(),
      timestamp,
      env()->thread_id());",3,175,3
94914,RETURN,-1,,return;,5,187,1
94940,RETURN,-1,,return;,5,193,2
94957,RETURN,-1,,return;,5,200,1
95020,RETURN,-1,,return;,5,223,1
95036,RETURN,-1,,return;,5,229,1
95077,RETURN,-1,,return;,9,242,1
95138,RETURN,-1,,return;,5,258,2
95155,RETURN,-1,,return;,5,265,1
95186,RETURN,-1,,return result;,3,276,1
95192,RETURN,-1,,return env()->coverage_directory();,3,280,1
95234,RETURN,-1,,return;,5,302,1
95243,RETURN,-1,,return env()->cpu_prof_dir();,3,309,1
95252,RETURN,-1,,return env()->cpu_prof_name();,3,313,1
95292,RETURN,-1,,return MaybeLocal<Object>();,5,323,2
95304,RETURN,-1,,return MaybeLocal<Object>();,5,327,2
95306,RETURN,-1,,return profile_v.As<Object>();,3,329,4
95356,RETURN,-1,,return;,5,346,1
95368,RETURN,-1,,return env()->heap_prof_dir();,3,353,1
95377,RETURN,-1,,return env()->heap_prof_name();,3,357,1
95417,RETURN,-1,,return MaybeLocal<Object>();,5,367,2
95429,RETURN,-1,,return MaybeLocal<Object>();,5,371,2
95431,RETURN,-1,,return profile_v.As<Object>();,3,373,4
95479,RETURN,-1,,return;,5,389,1
96048,RETURN,-1,,return b == 0;,61,204,1
96103,RETURN,-1,,return &tcp_;,5,31,1
96115,RETURN,-1,,"return node::ContainerOf(&TcpHolder::tcp_,
                             reinterpret_cast<uv_tcp_t*>(handle));",5,37,1
96196,RETURN,-1,,return inspector_;,5,67,1
96231,RETURN,-1,,"return node::ContainerOf(&WriteRequest::req, req);",5,117,1
96367,RETURN,1,,return host;,5,159,1
96390,RETURN,1,,"return host.substr(0, last_colon_pos);",5,162,1
96397,RETURN,-1,,return host;,3,163,7
96417,RETURN,1,,return false;,45,174,1
96451,RETURN,1,,return false;,48,182,1
96466,RETURN,1,,return false;,46,186,1
96503,RETURN,1,,return false;,54,193,1
96517,RETURN,-1,,return false;,7,205,1
96519,RETURN,-1,,return true;,5,210,9
96533,RETURN,1,,return false;,55,219,1
96542,RETURN,1,,return false;,21,226,1
96544,RETURN,-1,,return true;,3,229,6
96746,RETURN,-1,,return frame;,3,281,9
96769,RETURN,1,,return FRAME_INCOMPLETE;,5,291,1
96848,RETURN,1,,return FRAME_ERROR;,5,306,1
96875,RETURN,-1,,return FRAME_ERROR;,7,320,17
96883,RETURN,-1,,return FRAME_ERROR;,5,325,1
96917,RETURN,-1,,return FRAME_ERROR;,7,336,1
96929,RETURN,1,,return FRAME_INCOMPLETE;,7,339,1
96975,RETURN,-1,,return FRAME_ERROR;,5,352,1
96993,RETURN,1,,return FRAME_INCOMPLETE;,5,357,1
97050,RETURN,-1,,return closed ? FRAME_CLOSE : FRAME_OK;,3,367,46
97281,RETURN,-1,,return bytes_consumed;,5,459,9
97512,RETURN,-1,,return;,9,550,2
97542,RETURN,-1,,return;,9,555,2
97633,RETURN,-1,,return 0;,5,582,5
97671,RETURN,-1,,return 0;,5,592,5
97693,RETURN,-1,,return 0;,5,598,4
97700,RETURN,-1,,"return node::ContainerOf(&HttpHandler::parser_, parser);",5,602,1
97768,RETURN,-1,,return 0;,5,617,8
97807,RETURN,1,,"return """";",11,627,1
97817,RETURN,-1,,return value;,5,632,5
97829,RETURN,-1,,"return host.empty() || IsIPAddress(host)
           || node::StringEqualNoCase(host.data(), ""localhost"");",5,637,3
97873,RETURN,-1,,"return tcp_->WriteRaw(buffer, write_cb);",3,662,1
97884,RETURN,-1,,return tcp_->delegate();,3,666,1
97919,RETURN,1,,"return """";",5,677,1
97963,RETURN,1,,"return """";",5,686,1
97965,RETURN,-1,,return ip;,3,687,10
98034,RETURN,-1,,return TcpHolder::Pointer(result);,5,710,1
98044,RETURN,-1,,return nullptr;,5,713,2
98096,RETURN,-1,,return err < 0;,3,734,8
98104,RETURN,-1,,return delegate_.get();,3,738,1
98262,RETURN,-1,,return InspectorSocket::Pointer(inspector);,5,792,4
98270,RETURN,-1,,return InspectorSocket::Pointer(nullptr);,5,794,1
98298,RETURN,-1,,return protocol_handler_->GetHost();,3,807,1
98451,RETURN,-1,,return url.str();,3,45,8
98477,RETURN,-1,,return url.str();,3,55,4
98528,RETURN,-1,,return json.str();,3,70,7
98567,RETURN,-1,,return json.str();,3,85,7
98596,RETURN,1,,return path + len + 1;,27,91,1
98609,RETURN,1,,return path + len;,28,92,1
98613,RETURN,-1,,return nullptr;,3,94,4
98811,RETURN,-1,,"return FormatAddress(FormatHostPort(host, port), target_id, include_protocol);",3,151,1
98855,RETURN,-1,,return id_;,20,164,1
98861,RETURN,-1,,return server_port_;,5,166,1
98867,RETURN,-1,,return ws_socket_.get();,5,169,1
98928,RETURN,-1,,return server_->Session(session_id_);,7,192,1
98965,RETURN,-1,,return port_;,22,213,1
98972,RETURN,-1,,"return node::ContainerOf(&ServerSocket::tcp_socket_,
                             reinterpret_cast<uv_tcp_t*>(socket));",5,218,1
99035,RETURN,-1,,return;,5,241,1
99102,RETURN,-1,,return it == connected_sessions_.end() ? nullptr : it->second.second.get();,3,274,3
99140,RETURN,-1,,return;,5,283,2
99170,RETURN,-1,,return;,5,292,1
99265,RETURN,-1,,return true;,5,322,2
99281,RETURN,1,,return false;,5,326,1
99298,RETURN,-1,,return true;,5,330,2
99309,RETURN,-1,,return true;,5,333,2
99320,RETURN,-1,,return true;,5,336,2
99322,RETURN,-1,,return false;,3,338,10
99487,RETURN,-1,,return frontend_url.str();,3,383,6
99577,RETURN,-1,,return false;,5,405,2
99653,RETURN,-1,,return false;,5,424,2
99677,RETURN,-1,,return true;,3,434,21
99690,RETURN,1,,return;,5,439,1
99755,RETURN,-1,,return found != target_ids.end();,3,455,5
99773,RETURN,-1,,return server_sockets_[0]->port();,5,460,1
99780,RETURN,-1,,return port_;,3,462,2
100008,RETURN,1,,return err;,5,527,1
100040,RETURN,-1,,return err;,3,534,10
100088,RETURN,-1,,return err;,3,549,8
101182,RETURN,-1,,return;,29,318,1
101257,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,69,1
101272,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,69,1
101310,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,69,1
101359,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, property_value->IsName(), napi_name_expected)",5,74,1
101371,RETURN,-1,,return napi_ok;,3,78,2
101446,RETURN,-1,,return static_cast<v8::PropertyAttribute>(attribute_flags);,3,100,6
101455,RETURN,-1,,return reinterpret_cast<napi_deferred>(local);,3,105,1
101464,RETURN,-1,,return reinterpret_cast<v8impl::Persistent<v8::Value>*>(local);,3,110,1
101485,RETURN,-1,,return escape_called_;,32,130,1
101495,RETURN,-1,,return scope.Escape(handle);,5,134,2
101508,RETURN,-1,,return reinterpret_cast<napi_handle_scope>(s);,3,143,1
101517,RETURN,-1,,return reinterpret_cast<HandleScopeWrapper*>(s);,3,147,1
101526,RETURN,-1,,return reinterpret_cast<napi_escapable_handle_scope>(s);,3,153,1
101535,RETURN,-1,,return reinterpret_cast<EscapableHandleScopeWrapper*>(s);,3,159,1
101557,RETURN,-1,,NAPI_PREAMBLE(env),3,166,1
101571,RETURN,-1,,NAPI_PREAMBLE(env),3,166,1
101585,RETURN,-1,,NAPI_PREAMBLE(env),3,166,1
101614,RETURN,-1,,"CHECK_ARG(env, result)",3,167,1
101718,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, success.FromMaybe(false), napi_generic_failure)",3,185,1
101723,RETURN,-1,,return GET_RETURN_STATUS(env);,3,187,18
101758,RETURN,-1,,NAPI_PREAMBLE(env),3,196,1
101772,RETURN,-1,,NAPI_PREAMBLE(env),3,196,1
101786,RETURN,-1,,NAPI_PREAMBLE(env),3,196,1
101815,RETURN,-1,,"CHECK_ARG(env, js_object)",3,197,1
101837,RETURN,-1,,"CHECK_ARG(env, result)",5,199,1
101888,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsObject(), napi_invalid_arg)",3,205,1
101948,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsExternal(), napi_invalid_arg)",3,210,1
102020,RETURN,-1,,return GET_RETURN_STATUS(env);,3,229,20
102095,RETURN,-1,,return cbdata;,5,255,8
102142,RETURN,-1,,return _this;,23,279,1
102148,RETURN,-1,,return _args_length;,25,281,1
102154,RETURN,-1,,return _data;,18,283,1
102292,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure)",5,344,1
102334,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_function, napi_generic_failure)",5,348,1
102346,RETURN,-1,,return napi_clear_last_error(env);,5,351,6
102396,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure)",5,361,1
102416,RETURN,-1,,return napi_clear_last_error(env);,5,364,4
102434,RETURN,-1,,return v8impl::JsValueFromV8LocalValue(_cbinfo.NewTarget());,7,373,1
102445,RETURN,-1,,return nullptr;,7,375,1
102568,RETURN,-1,,NAPI_PREAMBLE(env),3,410,1
102582,RETURN,-1,,NAPI_PREAMBLE(env),3,410,1
102596,RETURN,-1,,NAPI_PREAMBLE(env),3,410,1
102625,RETURN,-1,,"CHECK_ARG(env, js_object)",3,411,1
102676,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsObject(), napi_invalid_arg)",3,416,1
102723,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env,
      !obj->HasPrivate(context, NAPI_PRIVATE_KEY(context, wrapper)).FromJust(),
      napi_invalid_arg)",3,420,1
102749,RETURN,-1,,"CHECK_ARG(env, finalize_cb)",5,431,1
102837,RETURN,-1,,return GET_RETURN_STATUS(env);,3,457,17
102856,RETURN,-1,,return value->IsObject() || value->IsSymbol();,3,469,1
102922,RETURN,-1,,"return new RefBase(env,
                     initial_refcount,
                     ownership,
                     finalize_callback,
                     finalize_data,
                     finalize_hint);",3,508,1
102935,RETURN,-1,,return finalize_data_;,3,517,1
102941,RETURN,-1,,return ++refcount_;,3,521,1
102953,RETURN,-1,,return 0;,5,526,1
102955,RETURN,-1,,return --refcount_;,3,528,2
102962,RETURN,-1,,return refcount_;,3,532,1
103039,RETURN,-1,,"return new Reference(env,
                       value,
                       initial_refcount,
                       ownership,
                       finalize_callback,
                       finalize_data,
                       finalize_hint);",3,585,1
103059,RETURN,-1,,return 0;,5,598,1
103079,RETURN,-1,,return refcount;,3,604,5
103091,RETURN,-1,,return 0;,5,611,1
103114,RETURN,-1,,return refcount;,3,618,7
103126,RETURN,-1,,return v8::Local<v8::Value>();,5,623,1
103133,RETURN,-1,,"return v8::Local<v8::Value>::New(env_->isolate, persistent_);",5,625,1
103255,RETURN,-1,,CHECK_ENV(env),3,690,1
103270,RETURN,-1,,"CHECK_ARG(env, result)",3,691,1
103331,RETURN,-1,,return napi_ok;,3,710,10
103353,RETURN,-1,,NAPI_PREAMBLE(env),3,719,1
103367,RETURN,-1,,NAPI_PREAMBLE(env),3,719,1
103381,RETURN,-1,,NAPI_PREAMBLE(env),3,719,1
103410,RETURN,-1,,"CHECK_ARG(env, result)",3,720,1
103427,RETURN,-1,,"CHECK_ARG(env, cb)",3,721,1
103479,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
      env, cb, callback_data, &fn))",3,726,1
103532,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,732,1
103545,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,732,1
103581,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,732,1
103606,RETURN,-1,,return GET_RETURN_STATUS(env);,3,738,17
103642,RETURN,-1,,NAPI_PREAMBLE(env),3,750,1
103656,RETURN,-1,,NAPI_PREAMBLE(env),3,750,1
103670,RETURN,-1,,NAPI_PREAMBLE(env),3,750,1
103699,RETURN,-1,,"CHECK_ARG(env, result)",3,751,1
103716,RETURN,-1,,"CHECK_ARG(env, constructor)",3,752,1
103738,RETURN,-1,,"CHECK_ARG(env, properties)",5,755,1
103785,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
      env, constructor, callback_data, &tpl))",3,762,1
103826,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,766,1
103839,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,766,1
103875,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,766,1
103956,RETURN,1,,"STATUS_CALL(v8impl::V8NameFromPropertyDescriptor(env, p, &property_name))",5,780,1
104033,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
            env, p->getter, p->data, &getter_tpl))",9,793,1
104071,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
            env, p->setter, p->data, &setter_tpl))",9,797,1
104144,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
          env, p->method, p->data, &t, v8::Signature::New(isolate, tpl)))",7,808,1
104288,RETURN,1,,"STATUS_CALL(napi_define_properties(
        env, *result, static_descriptors.size(), static_descriptors.data()))",5,833,1
104291,RETURN,-1,,return GET_RETURN_STATUS(env);,3,837,25
104312,RETURN,-1,,"return napi_get_all_property_names(
      env,
      object,
      napi_key_include_prototypes,
      static_cast<napi_key_filter>(napi_key_enumerable | napi_key_skip_symbols),
      napi_key_numbers_to_strings,
      result);",3,843,1
104344,RETURN,-1,,NAPI_PREAMBLE(env),3,859,1
104358,RETURN,-1,,NAPI_PREAMBLE(env),3,859,1
104372,RETURN,-1,,NAPI_PREAMBLE(env),3,859,1
104401,RETURN,-1,,"CHECK_ARG(env, result)",3,860,1
104446,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,864,1
104473,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,864,1
104599,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,898,10
104627,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,909,10
104669,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(
      env, maybe_all_propertynames, napi_generic_failure)",3,919,1
104691,RETURN,-1,,return GET_RETURN_STATUS(env);,3,924,25
104723,RETURN,-1,,NAPI_PREAMBLE(env),3,931,1
104737,RETURN,-1,,NAPI_PREAMBLE(env),3,931,1
104751,RETURN,-1,,NAPI_PREAMBLE(env),3,931,1
104780,RETURN,-1,,"CHECK_ARG(env, key)",3,932,1
104797,RETURN,-1,,"CHECK_ARG(env, value)",3,933,1
104842,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,938,1
104869,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,938,1
104940,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,945,1
104945,RETURN,-1,,return GET_RETURN_STATUS(env);,3,946,17
104977,RETURN,-1,,NAPI_PREAMBLE(env),3,953,1
104991,RETURN,-1,,NAPI_PREAMBLE(env),3,953,1
105005,RETURN,-1,,NAPI_PREAMBLE(env),3,953,1
105034,RETURN,-1,,"CHECK_ARG(env, result)",3,954,1
105051,RETURN,-1,,"CHECK_ARG(env, key)",3,955,1
105096,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,960,1
105123,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,960,1
105174,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,965,1
105187,RETURN,-1,,return GET_RETURN_STATUS(env);,3,968,17
105219,RETURN,-1,,NAPI_PREAMBLE(env),3,975,1
105233,RETURN,-1,,NAPI_PREAMBLE(env),3,975,1
105247,RETURN,-1,,NAPI_PREAMBLE(env),3,975,1
105276,RETURN,-1,,"CHECK_ARG(env, key)",3,976,1
105293,RETURN,-1,,"CHECK_ARG(env, result)",3,977,1
105353,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,983,1
105380,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,983,1
105416,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,987,1
105443,RETURN,-1,,return GET_RETURN_STATUS(env);,3,991,18
105475,RETURN,-1,,NAPI_PREAMBLE(env),3,998,1
105489,RETURN,-1,,NAPI_PREAMBLE(env),3,998,1
105503,RETURN,-1,,NAPI_PREAMBLE(env),3,998,1
105532,RETURN,-1,,"CHECK_ARG(env, key)",3,999,1
105592,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1005,1
105619,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1005,1
105655,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, delete_maybe, napi_generic_failure)",3,1007,1
105673,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1011,16
105705,RETURN,-1,,NAPI_PREAMBLE(env),3,1018,1
105719,RETURN,-1,,NAPI_PREAMBLE(env),3,1018,1
105733,RETURN,-1,,NAPI_PREAMBLE(env),3,1018,1
105762,RETURN,-1,,"CHECK_ARG(env, key)",3,1019,1
105779,RETURN,-1,,"CHECK_ARG(env, result)",3,1020,1
105824,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1025,1
105851,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1025,1
105895,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, k->IsName(), napi_name_expected)",3,1027,1
105927,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1029,1
105940,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1032,18
105972,RETURN,-1,,NAPI_PREAMBLE(env),3,1039,1
105986,RETURN,-1,,NAPI_PREAMBLE(env),3,1039,1
106000,RETURN,-1,,NAPI_PREAMBLE(env),3,1039,1
106029,RETURN,-1,,"CHECK_ARG(env, value)",3,1040,1
106074,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1045,1
106101,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1045,1
106150,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1048,1
106163,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1048,1
106199,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1048,1
106255,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1054,1
106260,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1055,17
106292,RETURN,-1,,NAPI_PREAMBLE(env),3,1062,1
106306,RETURN,-1,,NAPI_PREAMBLE(env),3,1062,1
106320,RETURN,-1,,NAPI_PREAMBLE(env),3,1062,1
106349,RETURN,-1,,"CHECK_ARG(env, result)",3,1063,1
106394,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1068,1
106421,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1068,1
106470,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1071,1
106483,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1071,1
106519,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1071,1
106555,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1075,1
106568,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1078,17
106600,RETURN,-1,,NAPI_PREAMBLE(env),3,1085,1
106614,RETURN,-1,,NAPI_PREAMBLE(env),3,1085,1
106628,RETURN,-1,,NAPI_PREAMBLE(env),3,1085,1
106657,RETURN,-1,,"CHECK_ARG(env, result)",3,1086,1
106713,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1091,1
106726,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1091,1
106762,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1091,1
106800,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1095,1
106827,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1095,1
106863,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1099,1
106890,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1103,18
106922,RETURN,-1,,NAPI_PREAMBLE(env),3,1110,1
106936,RETURN,-1,,NAPI_PREAMBLE(env),3,1110,1
106950,RETURN,-1,,NAPI_PREAMBLE(env),3,1110,1
106979,RETURN,-1,,"CHECK_ARG(env, value)",3,1111,1
107024,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1116,1
107051,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1116,1
107107,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1121,1
107112,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1123,15
107144,RETURN,-1,,NAPI_PREAMBLE(env),3,1130,1
107158,RETURN,-1,,NAPI_PREAMBLE(env),3,1130,1
107172,RETURN,-1,,NAPI_PREAMBLE(env),3,1130,1
107201,RETURN,-1,,"CHECK_ARG(env, result)",3,1131,1
107246,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1136,1
107273,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1136,1
107309,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1140,1
107322,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1143,15
107354,RETURN,-1,,NAPI_PREAMBLE(env),3,1150,1
107368,RETURN,-1,,NAPI_PREAMBLE(env),3,1150,1
107382,RETURN,-1,,NAPI_PREAMBLE(env),3,1150,1
107411,RETURN,-1,,"CHECK_ARG(env, result)",3,1151,1
107456,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1156,1
107483,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1156,1
107519,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1160,1
107535,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1163,15
107567,RETURN,-1,,NAPI_PREAMBLE(env),3,1170,1
107581,RETURN,-1,,NAPI_PREAMBLE(env),3,1170,1
107595,RETURN,-1,,NAPI_PREAMBLE(env),3,1170,1
107652,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1175,1
107679,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1175,1
107715,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, delete_maybe, napi_generic_failure)",3,1177,1
107733,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1181,14
107765,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
107779,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
107793,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
107827,RETURN,-1,,"CHECK_ARG(env, properties)",5,1191,1
107872,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1197,1
107899,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1197,1
107960,RETURN,1,,"STATUS_CALL(v8impl::V8NameFromPropertyDescriptor(env, p, &property_name))",5,1203,1
108029,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
            env, p->getter, p->data, &local_getter))",9,1210,1
108067,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
            env, p->setter, p->data, &local_setter))",9,1214,1
108114,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",9,1226,1
108164,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
          env, p->method, p->data, &method))",7,1230,1
108217,RETURN,-1,,"return napi_set_last_error(env, napi_generic_failure);",9,1241,1
108290,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",9,1255,1
108294,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1260,12
108324,RETURN,-1,,NAPI_PREAMBLE(env),3,1264,1
108338,RETURN,-1,,NAPI_PREAMBLE(env),3,1264,1
108352,RETURN,-1,,NAPI_PREAMBLE(env),3,1264,1
108409,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1269,1
108436,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1269,1
108480,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, set_frozen.FromMaybe(false), napi_generic_failure)",3,1274,1
108491,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1277,13
108521,RETURN,-1,,NAPI_PREAMBLE(env),3,1281,1
108535,RETURN,-1,,NAPI_PREAMBLE(env),3,1281,1
108549,RETURN,-1,,NAPI_PREAMBLE(env),3,1281,1
108606,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1286,1
108633,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1286,1
108677,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, set_sealed.FromMaybe(false), napi_generic_failure)",3,1291,1
108688,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1294,13
108719,RETURN,-1,,CHECK_ENV(env),3,1300,1
108734,RETURN,-1,,"CHECK_ARG(env, value)",3,1301,1
108751,RETURN,-1,,"CHECK_ARG(env, result)",3,1302,1
108778,RETURN,-1,,return napi_clear_last_error(env);,3,1307,6
108798,RETURN,-1,,NAPI_PREAMBLE(env),3,1313,1
108812,RETURN,-1,,NAPI_PREAMBLE(env),3,1313,1
108826,RETURN,-1,,NAPI_PREAMBLE(env),3,1313,1
108855,RETURN,-1,,"CHECK_ARG(env, value)",3,1314,1
108872,RETURN,-1,,"CHECK_ARG(env, result)",3,1315,1
108909,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsArray(), napi_array_expected)",3,1318,1
108935,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1323,13
108967,RETURN,-1,,NAPI_PREAMBLE(env),3,1330,1
108981,RETURN,-1,,NAPI_PREAMBLE(env),3,1330,1
108995,RETURN,-1,,NAPI_PREAMBLE(env),3,1330,1
109024,RETURN,-1,,"CHECK_ARG(env, lhs)",3,1331,1
109041,RETURN,-1,,"CHECK_ARG(env, rhs)",3,1332,1
109058,RETURN,-1,,"CHECK_ARG(env, result)",3,1333,1
109101,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1339,13
109132,RETURN,-1,,NAPI_PREAMBLE(env),3,1345,1
109146,RETURN,-1,,NAPI_PREAMBLE(env),3,1345,1
109160,RETURN,-1,,NAPI_PREAMBLE(env),3,1345,1
109189,RETURN,-1,,"CHECK_ARG(env, result)",3,1346,1
109234,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1351,1
109261,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1351,1
109295,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1355,13
109325,RETURN,-1,,CHECK_ENV(env),3,1359,1
109340,RETURN,-1,,"CHECK_ARG(env, result)",3,1360,1
109361,RETURN,-1,,return napi_clear_last_error(env);,3,1364,4
109380,RETURN,-1,,CHECK_ENV(env),3,1368,1
109395,RETURN,-1,,"CHECK_ARG(env, result)",3,1369,1
109416,RETURN,-1,,return napi_clear_last_error(env);,3,1373,4
109436,RETURN,-1,,CHECK_ENV(env),3,1379,1
109451,RETURN,-1,,"CHECK_ARG(env, result)",3,1380,1
109473,RETURN,-1,,return napi_clear_last_error(env);,3,1385,4
109494,RETURN,-1,,CHECK_ENV(env),3,1392,1
109514,RETURN,-1,,"CHECK_ARG(env, str)",19,1393,1
109531,RETURN,-1,,"CHECK_ARG(env, result)",3,1394,1
109552,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, (length == NAPI_AUTO_LENGTH) || length <= INT_MAX, napi_invalid_arg)",3,1395,1
109597,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, str_maybe, napi_generic_failure)",3,1404,1
109613,RETURN,-1,,return napi_clear_last_error(env);,3,1407,11
109634,RETURN,-1,,CHECK_ENV(env),3,1414,1
109654,RETURN,-1,,"CHECK_ARG(env, str)",19,1415,1
109671,RETURN,-1,,"CHECK_ARG(env, result)",3,1416,1
109692,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, (length == NAPI_AUTO_LENGTH) || length <= INT_MAX, napi_invalid_arg)",3,1417,1
109737,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, str_maybe, napi_generic_failure)",3,1423,1
109753,RETURN,-1,,return napi_clear_last_error(env);,3,1425,11
109774,RETURN,-1,,CHECK_ENV(env),3,1432,1
109794,RETURN,-1,,"CHECK_ARG(env, str)",19,1433,1
109811,RETURN,-1,,"CHECK_ARG(env, result)",3,1434,1
109832,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, (length == NAPI_AUTO_LENGTH) || length <= INT_MAX, napi_invalid_arg)",3,1435,1
109877,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, str_maybe, napi_generic_failure)",3,1444,1
109893,RETURN,-1,,return napi_clear_last_error(env);,3,1447,11
109913,RETURN,-1,,CHECK_ENV(env),3,1453,1
109928,RETURN,-1,,"CHECK_ARG(env, result)",3,1454,1
109950,RETURN,-1,,return napi_clear_last_error(env);,3,1459,4
109970,RETURN,-1,,CHECK_ENV(env),3,1465,1
109985,RETURN,-1,,"CHECK_ARG(env, result)",3,1466,1
110007,RETURN,-1,,return napi_clear_last_error(env);,3,1471,4
110027,RETURN,-1,,CHECK_ENV(env),3,1477,1
110042,RETURN,-1,,"CHECK_ARG(env, result)",3,1478,1
110064,RETURN,-1,,return napi_clear_last_error(env);,3,1483,4
110084,RETURN,-1,,CHECK_ENV(env),3,1489,1
110099,RETURN,-1,,"CHECK_ARG(env, result)",3,1490,1
110123,RETURN,-1,,return napi_clear_last_error(env);,3,1495,4
110143,RETURN,-1,,CHECK_ENV(env),3,1501,1
110158,RETURN,-1,,"CHECK_ARG(env, result)",3,1502,1
110180,RETURN,-1,,return napi_clear_last_error(env);,3,1507,4
110200,RETURN,-1,,CHECK_ENV(env),3,1513,1
110215,RETURN,-1,,"CHECK_ARG(env, result)",3,1514,1
110237,RETURN,-1,,return napi_clear_last_error(env);,3,1519,4
110259,RETURN,-1,,NAPI_PREAMBLE(env),3,1527,1
110273,RETURN,-1,,NAPI_PREAMBLE(env),3,1527,1
110287,RETURN,-1,,NAPI_PREAMBLE(env),3,1527,1
110316,RETURN,-1,,"CHECK_ARG(env, words)",3,1528,1
110333,RETURN,-1,,"CHECK_ARG(env, result)",3,1529,1
110364,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, word_count <= INT_MAX, napi_invalid_arg)",3,1533,1
110404,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, b, napi_generic_failure)",3,1538,1
110426,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1541,14
110457,RETURN,-1,,CHECK_ENV(env),3,1547,1
110472,RETURN,-1,,"CHECK_ARG(env, result)",3,1548,1
110512,RETURN,-1,,return napi_clear_last_error(env);,3,1558,6
110532,RETURN,-1,,CHECK_ENV(env),3,1564,1
110547,RETURN,-1,,"CHECK_ARG(env, result)",3,1565,1
110611,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, desc->IsString(), napi_string_expected)",5,1573,1
110634,RETURN,-1,,return napi_clear_last_error(env);,3,1579,6
110655,RETURN,-1,,CHECK_ENV(env),3,1586,1
110670,RETURN,-1,,"CHECK_ARG(env, result)",3,1587,1
110695,RETURN,1,,"STATUS_CALL(napi_create_string_utf8(
      env, utf8description, length, &js_description_string))",3,1590,1
110733,RETURN,-1,,return napi_clear_last_error(env);,3,1598,7
110825,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, code_value->IsString(), napi_string_expected)",7,1612,1
110860,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1614,1
110873,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1614,1
110909,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1614,1
110958,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1618,1
110971,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1618,1
111007,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1618,1
111048,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
        env, set_maybe.FromMaybe(false), napi_generic_failure)",5,1621,1
111053,RETURN,-1,,return napi_ok;,3,1624,2
111073,RETURN,-1,,CHECK_ENV(env),3,1631,1
111088,RETURN,-1,,"CHECK_ARG(env, msg)",3,1632,1
111105,RETURN,-1,,"CHECK_ARG(env, result)",3,1633,1
111142,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1636,1
111185,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1640,1
111196,RETURN,-1,,return napi_clear_last_error(env);,3,1644,9
111217,RETURN,-1,,CHECK_ENV(env),3,1651,1
111232,RETURN,-1,,"CHECK_ARG(env, msg)",3,1652,1
111249,RETURN,-1,,"CHECK_ARG(env, result)",3,1653,1
111286,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1656,1
111329,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1660,1
111340,RETURN,-1,,return napi_clear_last_error(env);,3,1664,9
111361,RETURN,-1,,CHECK_ENV(env),3,1671,1
111376,RETURN,-1,,"CHECK_ARG(env, msg)",3,1672,1
111393,RETURN,-1,,"CHECK_ARG(env, result)",3,1673,1
111430,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1676,1
111473,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1680,1
111484,RETURN,-1,,return napi_clear_last_error(env);,3,1684,9
111505,RETURN,-1,,CHECK_ENV(env),3,1691,1
111520,RETURN,-1,,"CHECK_ARG(env, msg)",3,1692,1
111537,RETURN,-1,,"CHECK_ARG(env, result)",3,1693,1
111574,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1696,1
111617,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1700,1
111628,RETURN,-1,,return napi_clear_last_error(env);,3,1704,9
111648,RETURN,-1,,CHECK_ENV(env),3,1712,1
111663,RETURN,-1,,"CHECK_ARG(env, value)",3,1713,1
111680,RETURN,-1,,"CHECK_ARG(env, result)",3,1714,1
111820,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",5,1744,1
111824,RETURN,-1,,return napi_clear_last_error(env);,3,1747,6
111843,RETURN,-1,,CHECK_ENV(env),3,1751,1
111858,RETURN,-1,,"CHECK_ARG(env, result)",3,1752,1
111877,RETURN,-1,,return napi_clear_last_error(env);,3,1756,4
111896,RETURN,-1,,CHECK_ENV(env),3,1760,1
111911,RETURN,-1,,"CHECK_ARG(env, result)",3,1761,1
111930,RETURN,-1,,return napi_clear_last_error(env);,3,1765,4
111953,RETURN,-1,,CHECK_ENV(env),3,1777,1
111968,RETURN,-1,,"CHECK_ARG(env, cbinfo)",3,1778,1
111996,RETURN,-1,,"CHECK_ARG(env, argc)",5,1784,1
112044,RETURN,-1,,return napi_clear_last_error(env);,3,1797,9
112064,RETURN,-1,,CHECK_ENV(env),3,1803,1
112079,RETURN,-1,,"CHECK_ARG(env, cbinfo)",3,1804,1
112096,RETURN,-1,,"CHECK_ARG(env, result)",3,1805,1
112114,RETURN,-1,,return napi_clear_last_error(env);,3,1811,7
112137,RETURN,-1,,NAPI_PREAMBLE(env),3,1820,1
112151,RETURN,-1,,NAPI_PREAMBLE(env),3,1820,1
112165,RETURN,-1,,NAPI_PREAMBLE(env),3,1820,1
112194,RETURN,-1,,"CHECK_ARG(env, recv)",3,1821,1
112216,RETURN,-1,,"CHECK_ARG(env, argv)",5,1823,1
112274,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,1831,1
112303,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,1831,1
112336,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,1840,1
112362,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",7,1843,1
112378,RETURN,-1,,return napi_clear_last_error(env);,5,1846,2
112397,RETURN,-1,,CHECK_ENV(env),3,1851,1
112412,RETURN,-1,,"CHECK_ARG(env, result)",3,1852,1
112431,RETURN,-1,,return napi_clear_last_error(env);,3,1856,4
112450,RETURN,-1,,NAPI_PREAMBLE(env),3,1860,1
112464,RETURN,-1,,NAPI_PREAMBLE(env),3,1860,1
112478,RETURN,-1,,NAPI_PREAMBLE(env),3,1860,1
112507,RETURN,-1,,"CHECK_ARG(env, error)",3,1861,1
112527,RETURN,-1,,return napi_clear_last_error(env);,3,1868,11
112547,RETURN,-1,,NAPI_PREAMBLE(env),3,1874,1
112561,RETURN,-1,,NAPI_PREAMBLE(env),3,1874,1
112575,RETURN,-1,,NAPI_PREAMBLE(env),3,1874,1
112635,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1878,1
112648,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1878,1
112684,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1878,1
112731,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,1881,1
112739,RETURN,-1,,return napi_clear_last_error(env);,3,1886,14
112759,RETURN,-1,,NAPI_PREAMBLE(env),3,1892,1
112773,RETURN,-1,,NAPI_PREAMBLE(env),3,1892,1
112787,RETURN,-1,,NAPI_PREAMBLE(env),3,1892,1
112847,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1896,1
112860,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1896,1
112896,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1896,1
112943,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,1899,1
112951,RETURN,-1,,return napi_clear_last_error(env);,3,1904,14
112971,RETURN,-1,,NAPI_PREAMBLE(env),3,1910,1
112985,RETURN,-1,,NAPI_PREAMBLE(env),3,1910,1
112999,RETURN,-1,,NAPI_PREAMBLE(env),3,1910,1
113059,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1914,1
113072,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1914,1
113108,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1914,1
113155,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,1917,1
113163,RETURN,-1,,return napi_clear_last_error(env);,3,1922,14
113183,RETURN,-1,,NAPI_PREAMBLE(env),3,1928,1
113197,RETURN,-1,,NAPI_PREAMBLE(env),3,1928,1
113211,RETURN,-1,,NAPI_PREAMBLE(env),3,1928,1
113271,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1932,1
113284,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1932,1
113320,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1932,1
113367,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,1935,1
113375,RETURN,-1,,return napi_clear_last_error(env);,3,1940,14
113395,RETURN,-1,,CHECK_ENV(env),3,1948,1
113410,RETURN,-1,,"CHECK_ARG(env, value)",3,1949,1
113427,RETURN,-1,,"CHECK_ARG(env, result)",3,1950,1
113454,RETURN,-1,,return napi_clear_last_error(env);,3,1955,6
113474,RETURN,-1,,CHECK_ENV(env),3,1963,1
113489,RETURN,-1,,"CHECK_ARG(env, value)",3,1964,1
113506,RETURN,-1,,"CHECK_ARG(env, result)",3,1965,1
113543,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",3,1968,1
113558,RETURN,-1,,return napi_clear_last_error(env);,3,1972,7
113578,RETURN,-1,,CHECK_ENV(env),3,1980,1
113593,RETURN,-1,,"CHECK_ARG(env, value)",3,1981,1
113610,RETURN,-1,,"CHECK_ARG(env, result)",3,1982,1
113665,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",5,1989,1
113690,RETURN,-1,,return napi_clear_last_error(env);,3,1996,6
113710,RETURN,-1,,CHECK_ENV(env),3,2004,1
113725,RETURN,-1,,"CHECK_ARG(env, value)",3,2005,1
113742,RETURN,-1,,"CHECK_ARG(env, result)",3,2006,1
113797,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",5,2013,1
113822,RETURN,-1,,return napi_clear_last_error(env);,3,2020,6
113842,RETURN,-1,,CHECK_ENV(env),3,2028,1
113857,RETURN,-1,,"CHECK_ARG(env, value)",3,2029,1
113874,RETURN,-1,,"CHECK_ARG(env, result)",3,2030,1
113910,RETURN,-1,,return napi_clear_last_error(env);,5,2037,2
113930,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",3,2040,1
113978,RETURN,-1,,return napi_clear_last_error(env);,3,2054,10
113999,RETURN,-1,,CHECK_ENV(env),3,2061,1
114014,RETURN,-1,,"CHECK_ARG(env, value)",3,2062,1
114031,RETURN,-1,,"CHECK_ARG(env, result)",3,2063,1
114048,RETURN,-1,,"CHECK_ARG(env, lossless)",3,2064,1
114085,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2068,1
114101,RETURN,-1,,return napi_clear_last_error(env);,3,2072,8
114122,RETURN,-1,,CHECK_ENV(env),3,2079,1
114137,RETURN,-1,,"CHECK_ARG(env, value)",3,2080,1
114154,RETURN,-1,,"CHECK_ARG(env, result)",3,2081,1
114171,RETURN,-1,,"CHECK_ARG(env, lossless)",3,2082,1
114208,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2086,1
114224,RETURN,-1,,return napi_clear_last_error(env);,3,2090,8
114246,RETURN,-1,,CHECK_ENV(env),3,2098,1
114261,RETURN,-1,,"CHECK_ARG(env, value)",3,2099,1
114278,RETURN,-1,,"CHECK_ARG(env, word_count)",3,2100,1
114315,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2104,1
114368,RETURN,-1,,"CHECK_ARG(env, sign_bit)",5,2113,1
114385,RETURN,-1,,"CHECK_ARG(env, words)",5,2114,1
114402,RETURN,-1,,return napi_clear_last_error(env);,3,2120,11
114422,RETURN,-1,,CHECK_ENV(env),3,2128,1
114437,RETURN,-1,,"CHECK_ARG(env, value)",3,2129,1
114454,RETURN,-1,,"CHECK_ARG(env, result)",3,2130,1
114491,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBoolean(), napi_boolean_expected)",3,2133,1
114506,RETURN,-1,,return napi_clear_last_error(env);,3,2137,7
114528,RETURN,-1,,CHECK_ENV(env),3,2150,1
114543,RETURN,-1,,"CHECK_ARG(env, value)",3,2151,1
114580,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2154,1
114601,RETURN,-1,,"CHECK_ARG(env, result)",5,2157,1
114673,RETURN,-1,,return napi_clear_last_error(env);,3,2175,6
114695,RETURN,-1,,CHECK_ENV(env),3,2188,1
114710,RETURN,-1,,"CHECK_ARG(env, value)",3,2189,1
114747,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2192,1
114768,RETURN,-1,,"CHECK_ARG(env, result)",5,2195,1
114847,RETURN,-1,,return napi_clear_last_error(env);,3,2213,6
114869,RETURN,-1,,CHECK_ENV(env),3,2229,1
114884,RETURN,-1,,"CHECK_ARG(env, value)",3,2230,1
114921,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2233,1
114942,RETURN,-1,,"CHECK_ARG(env, result)",5,2236,1
115014,RETURN,-1,,return napi_clear_last_error(env);,3,2254,6
115034,RETURN,-1,,NAPI_PREAMBLE(env),3,2260,1
115048,RETURN,-1,,NAPI_PREAMBLE(env),3,2260,1
115062,RETURN,-1,,NAPI_PREAMBLE(env),3,2260,1
115091,RETURN,-1,,"CHECK_ARG(env, value)",3,2261,1
115108,RETURN,-1,,"CHECK_ARG(env, result)",3,2262,1
115146,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2268,13
115174,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2287,1
115188,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2287,1
115202,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2287,1
115227,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2287,1
115240,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2287,1
115278,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2287,1
115305,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2287,1
115325,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2287,13
115350,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2288,1
115364,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2288,1
115378,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2288,1
115403,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2288,1
115416,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2288,1
115454,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2288,1
115481,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2288,1
115501,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2288,13
115526,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2289,1
115540,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2289,1
115554,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2289,1
115579,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2289,1
115592,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2289,1
115630,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2289,1
115657,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2289,1
115677,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2289,13
115698,RETURN,-1,,"return v8impl::Wrap(
      env, js_object, native_object, finalize_cb, finalize_hint, result);",3,2299,1
115716,RETURN,-1,,"return v8impl::Unwrap(env, obj, result, v8impl::KeepWrap);",3,2306,1
115734,RETURN,-1,,"return v8impl::Unwrap(env, obj, result, v8impl::RemoveWrap);",3,2312,1
115764,RETURN,-1,,NAPI_PREAMBLE(env),3,2320,1
115778,RETURN,-1,,NAPI_PREAMBLE(env),3,2320,1
115792,RETURN,-1,,NAPI_PREAMBLE(env),3,2320,1
115821,RETURN,-1,,"CHECK_ARG(env, result)",3,2321,1
115878,RETURN,-1,,return napi_clear_last_error(env);,3,2341,13
115898,RETURN,-1,,NAPI_PREAMBLE(env),3,2347,1
115912,RETURN,-1,,NAPI_PREAMBLE(env),3,2347,1
115926,RETURN,-1,,NAPI_PREAMBLE(env),3,2347,1
115983,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2350,1
116016,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2350,1
116046,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, type_tag)",3,2351,1
116097,RETURN,-1,,"CHECK_MAYBE_NOTHING_WITH_PREAMBLE(env, maybe_has, napi_generic_failure)",3,2355,1
116127,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, !maybe_has.FromJust(), napi_invalid_arg)",3,2356,1
116168,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, tag, napi_generic_failure)",3,2361,1
116207,RETURN,-1,,"CHECK_MAYBE_NOTHING_WITH_PREAMBLE(env, maybe_set, napi_generic_failure)",3,2364,1
116235,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, maybe_set.FromJust(), napi_generic_failure)",3,2365,1
116246,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2368,24
116278,RETURN,-1,,NAPI_PREAMBLE(env),3,2375,1
116292,RETURN,-1,,NAPI_PREAMBLE(env),3,2375,1
116306,RETURN,-1,,NAPI_PREAMBLE(env),3,2375,1
116363,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2378,1
116396,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2378,1
116426,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, type_tag)",3,2379,1
116449,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, result)",3,2380,1
116496,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, maybe_value, napi_generic_failure)",3,2384,1
116624,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2409,18
116655,RETURN,-1,,CHECK_ENV(env),3,2415,1
116670,RETURN,-1,,"CHECK_ARG(env, value)",3,2416,1
116687,RETURN,-1,,"CHECK_ARG(env, result)",3,2417,1
116724,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsExternal(), napi_invalid_arg)",3,2420,1
116750,RETURN,-1,,return napi_clear_last_error(env);,3,2425,8
116771,RETURN,-1,,CHECK_ENV(env),3,2435,1
116786,RETURN,-1,,"CHECK_ARG(env, value)",3,2436,1
116803,RETURN,-1,,"CHECK_ARG(env, result)",3,2437,1
116849,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,2443,1
116876,RETURN,-1,,return napi_clear_last_error(env);,3,2451,9
116895,RETURN,-1,,CHECK_ENV(env),3,2459,1
116910,RETURN,-1,,"CHECK_ARG(env, ref)",3,2460,1
116919,RETURN,-1,,return napi_clear_last_error(env);,3,2464,4
116939,RETURN,-1,,CHECK_ENV(env),3,2477,1
116954,RETURN,-1,,"CHECK_ARG(env, ref)",3,2478,1
116981,RETURN,-1,,return napi_clear_last_error(env);,3,2487,8
117001,RETURN,-1,,CHECK_ENV(env),3,2499,1
117016,RETURN,-1,,"CHECK_ARG(env, ref)",3,2500,1
117035,RETURN,-1,,"return napi_set_last_error(env, napi_generic_failure);",5,2505,1
117055,RETURN,-1,,return napi_clear_last_error(env);,3,2514,9
117075,RETURN,-1,,CHECK_ENV(env),3,2525,1
117090,RETURN,-1,,"CHECK_ARG(env, ref)",3,2526,1
117107,RETURN,-1,,"CHECK_ARG(env, result)",3,2527,1
117129,RETURN,-1,,return napi_clear_last_error(env);,3,2532,7
117148,RETURN,-1,,CHECK_ENV(env),3,2539,1
117163,RETURN,-1,,"CHECK_ARG(env, result)",3,2540,1
117184,RETURN,-1,,return napi_clear_last_error(env);,3,2545,5
117203,RETURN,-1,,CHECK_ENV(env),3,2552,1
117218,RETURN,-1,,"CHECK_ARG(env, scope)",3,2553,1
117230,RETURN,-1,,return napi_handle_scope_mismatch;,5,2555,1
117242,RETURN,-1,,return napi_clear_last_error(env);,3,2560,6
117261,RETURN,-1,,CHECK_ENV(env),3,2567,1
117276,RETURN,-1,,"CHECK_ARG(env, result)",3,2568,1
117297,RETURN,-1,,return napi_clear_last_error(env);,3,2573,5
117316,RETURN,-1,,CHECK_ENV(env),3,2580,1
117331,RETURN,-1,,"CHECK_ARG(env, scope)",3,2581,1
117343,RETURN,-1,,return napi_handle_scope_mismatch;,5,2583,1
117355,RETURN,-1,,return napi_clear_last_error(env);,3,2588,6
117376,RETURN,-1,,CHECK_ENV(env),3,2597,1
117391,RETURN,-1,,"CHECK_ARG(env, scope)",3,2598,1
117408,RETURN,-1,,"CHECK_ARG(env, escapee)",3,2599,1
117425,RETURN,-1,,"CHECK_ARG(env, result)",3,2600,1
117461,RETURN,-1,,return napi_clear_last_error(env);,5,2607,2
117464,RETURN,-1,,"return napi_set_last_error(env, napi_escape_called_twice);",3,2609,8
117487,RETURN,-1,,NAPI_PREAMBLE(env),3,2617,1
117501,RETURN,-1,,NAPI_PREAMBLE(env),3,2617,1
117515,RETURN,-1,,NAPI_PREAMBLE(env),3,2617,1
117544,RETURN,-1,,"CHECK_ARG(env, constructor)",3,2618,1
117566,RETURN,-1,,"CHECK_ARG(env, argv)",5,2620,1
117583,RETURN,-1,,"CHECK_ARG(env, result)",3,2622,1
117626,RETURN,-1,,"CHECK_TO_FUNCTION(env, ctor, constructor)",3,2627,1
117655,RETURN,-1,,"CHECK_TO_FUNCTION(env, ctor, constructor)",3,2627,1
117696,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_pending_exception)",3,2634,1
117712,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2637,17
117744,RETURN,-1,,NAPI_PREAMBLE(env),3,2644,1
117758,RETURN,-1,,NAPI_PREAMBLE(env),3,2644,1
117772,RETURN,-1,,NAPI_PREAMBLE(env),3,2644,1
117801,RETURN,-1,,"CHECK_ARG(env, object)",3,2645,1
117818,RETURN,-1,,"CHECK_ARG(env, result)",3,2646,1
117867,RETURN,-1,,"CHECK_TO_OBJECT(env, context, ctor, constructor)",3,2653,1
117894,RETURN,-1,,"CHECK_TO_OBJECT(env, context, ctor, constructor)",3,2653,1
117917,RETURN,-1,,"return napi_set_last_error(env, napi_function_expected);",5,2659,2
117964,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, maybe_result, status)",3,2666,1
117976,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2668,21
118006,RETURN,-1,,CHECK_ENV(env),3,2675,1
118021,RETURN,-1,,"CHECK_ARG(env, result)",3,2676,1
118036,RETURN,-1,,return napi_clear_last_error(env);,3,2679,4
118055,RETURN,-1,,CHECK_ENV(env),3,2686,1
118070,RETURN,-1,,"CHECK_ARG(env, result)",3,2687,1
118083,RETURN,-1,,"return napi_get_undefined(env, result);",5,2690,1
118120,RETURN,-1,,return napi_clear_last_error(env);,3,2697,4
118140,RETURN,-1,,CHECK_ENV(env),3,2703,1
118155,RETURN,-1,,"CHECK_ARG(env, value)",3,2704,1
118172,RETURN,-1,,"CHECK_ARG(env, result)",3,2705,1
118199,RETURN,-1,,return napi_clear_last_error(env);,3,2710,6
118220,RETURN,-1,,NAPI_PREAMBLE(env),3,2717,1
118234,RETURN,-1,,NAPI_PREAMBLE(env),3,2717,1
118248,RETURN,-1,,NAPI_PREAMBLE(env),3,2717,1
118277,RETURN,-1,,"CHECK_ARG(env, result)",3,2718,1
118326,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2731,13
118372,RETURN,1,,"STATUS_CALL(napi_create_external_buffer(
      env, byte_length, external_data, finalize_cb, finalize_hint, &buffer))",3,2745,1
118375,RETURN,-1,,"return napi_get_typedarray_info(
      env, buffer, nullptr, nullptr, nullptr, result, nullptr);",3,2747,3
118402,RETURN,-1,,CHECK_ENV(env),3,2755,1
118417,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2756,1
118454,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2759,1
118497,RETURN,-1,,return napi_clear_last_error(env);,3,2771,8
118517,RETURN,-1,,CHECK_ENV(env),3,2777,1
118532,RETURN,-1,,"CHECK_ARG(env, value)",3,2778,1
118549,RETURN,-1,,"CHECK_ARG(env, result)",3,2779,1
118576,RETURN,-1,,return napi_clear_last_error(env);,3,2784,6
118599,RETURN,-1,,NAPI_PREAMBLE(env),3,2793,1
118613,RETURN,-1,,NAPI_PREAMBLE(env),3,2793,1
118627,RETURN,-1,,NAPI_PREAMBLE(env),3,2793,1
118656,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2794,1
118673,RETURN,-1,,"CHECK_ARG(env, result)",3,2795,1
118710,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2798,1
118772,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int8Array, 1, buffer, byte_offset, length, typedArray)",7,2805,2
118796,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int8Array, 1, buffer, byte_offset, length, typedArray)",7,2805,2
118845,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8Array, 1, buffer, byte_offset, length, typedArray)",7,2809,2
118869,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8Array, 1, buffer, byte_offset, length, typedArray)",7,2809,2
118918,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8ClampedArray, 1, buffer, byte_offset, length, typedArray)",7,2813,2
118942,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8ClampedArray, 1, buffer, byte_offset, length, typedArray)",7,2813,2
118991,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int16Array, 2, buffer, byte_offset, length, typedArray)",7,2817,2
119015,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int16Array, 2, buffer, byte_offset, length, typedArray)",7,2817,2
119064,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint16Array, 2, buffer, byte_offset, length, typedArray)",7,2821,2
119088,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint16Array, 2, buffer, byte_offset, length, typedArray)",7,2821,2
119137,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int32Array, 4, buffer, byte_offset, length, typedArray)",7,2825,2
119161,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int32Array, 4, buffer, byte_offset, length, typedArray)",7,2825,2
119210,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint32Array, 4, buffer, byte_offset, length, typedArray)",7,2829,2
119234,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint32Array, 4, buffer, byte_offset, length, typedArray)",7,2829,2
119283,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float32Array, 4, buffer, byte_offset, length, typedArray)",7,2833,2
119307,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float32Array, 4, buffer, byte_offset, length, typedArray)",7,2833,2
119356,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float64Array, 8, buffer, byte_offset, length, typedArray)",7,2837,2
119380,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float64Array, 8, buffer, byte_offset, length, typedArray)",7,2837,2
119429,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigInt64Array, 8, buffer, byte_offset, length, typedArray)",7,2841,2
119453,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigInt64Array, 8, buffer, byte_offset, length, typedArray)",7,2841,2
119502,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigUint64Array, 8, buffer, byte_offset, length, typedArray)",7,2845,2
119526,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigUint64Array, 8, buffer, byte_offset, length, typedArray)",7,2845,2
119545,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,2849,46
119557,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2853,15
119592,RETURN,-1,,CHECK_ENV(env),3,2863,1
119607,RETURN,-1,,"CHECK_ARG(env, typedarray)",3,2864,1
119644,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsTypedArray(), napi_invalid_arg)",3,2867,1
119878,RETURN,-1,,return napi_clear_last_error(env);,3,2920,13
119900,RETURN,-1,,NAPI_PREAMBLE(env),3,2928,1
119914,RETURN,-1,,NAPI_PREAMBLE(env),3,2928,1
119928,RETURN,-1,,NAPI_PREAMBLE(env),3,2928,1
119957,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2929,1
119974,RETURN,-1,,"CHECK_ARG(env, result)",3,2930,1
120011,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2933,1
120044,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,2941,2
120075,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2947,15
120106,RETURN,-1,,CHECK_ENV(env),3,2953,1
120121,RETURN,-1,,"CHECK_ARG(env, value)",3,2954,1
120138,RETURN,-1,,"CHECK_ARG(env, result)",3,2955,1
120165,RETURN,-1,,return napi_clear_last_error(env);,3,2960,6
120188,RETURN,-1,,CHECK_ENV(env),3,2969,1
120203,RETURN,-1,,"CHECK_ARG(env, dataview)",3,2970,1
120240,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsDataView(), napi_invalid_arg)",3,2973,1
120339,RETURN,-1,,return napi_clear_last_error(env);,3,3000,12
120358,RETURN,-1,,CHECK_ENV(env),3,3004,1
120373,RETURN,-1,,"CHECK_ARG(env, result)",3,3005,1
120384,RETURN,-1,,return napi_clear_last_error(env);,3,3007,4
120404,RETURN,-1,,NAPI_PREAMBLE(env),3,3013,1
120418,RETURN,-1,,NAPI_PREAMBLE(env),3,3013,1
120432,RETURN,-1,,NAPI_PREAMBLE(env),3,3013,1
120461,RETURN,-1,,"CHECK_ARG(env, deferred)",3,3014,1
120478,RETURN,-1,,"CHECK_ARG(env, promise)",3,3015,1
120513,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,3018,1
120557,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3026,19
120578,RETURN,-1,,"return v8impl::ConcludeDeferred(env, deferred, resolution, true);",3,3032,1
120594,RETURN,-1,,"return v8impl::ConcludeDeferred(env, deferred, resolution, false);",3,3038,1
120620,RETURN,-1,,CHECK_ENV(env),3,3044,1
120635,RETURN,-1,,"CHECK_ARG(env, value)",3,3045,1
120652,RETURN,-1,,"CHECK_ARG(env, is_promise)",3,3046,1
120668,RETURN,-1,,return napi_clear_last_error(env);,3,3050,5
120688,RETURN,-1,,NAPI_PREAMBLE(env),3,3056,1
120702,RETURN,-1,,NAPI_PREAMBLE(env),3,3056,1
120716,RETURN,-1,,NAPI_PREAMBLE(env),3,3056,1
120745,RETURN,-1,,"CHECK_ARG(env, result)",3,3057,1
120786,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_date, napi_generic_failure)",3,3060,1
120802,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3064,11
120833,RETURN,-1,,CHECK_ENV(env),3,3070,1
120848,RETURN,-1,,"CHECK_ARG(env, value)",3,3071,1
120865,RETURN,-1,,"CHECK_ARG(env, is_date)",3,3072,1
120881,RETURN,-1,,return napi_clear_last_error(env);,3,3076,5
120901,RETURN,-1,,NAPI_PREAMBLE(env),3,3082,1
120915,RETURN,-1,,NAPI_PREAMBLE(env),3,3082,1
120929,RETURN,-1,,NAPI_PREAMBLE(env),3,3082,1
120958,RETURN,-1,,"CHECK_ARG(env, value)",3,3083,1
120975,RETURN,-1,,"CHECK_ARG(env, result)",3,3084,1
121012,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsDate(), napi_date_expected)",3,3087,1
121038,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3092,13
121069,RETURN,-1,,NAPI_PREAMBLE(env),3,3098,1
121083,RETURN,-1,,NAPI_PREAMBLE(env),3,3098,1
121097,RETURN,-1,,NAPI_PREAMBLE(env),3,3098,1
121126,RETURN,-1,,"CHECK_ARG(env, script)",3,3099,1
121143,RETURN,-1,,"CHECK_ARG(env, result)",3,3100,1
121170,RETURN,-1,,"return napi_set_last_error(env, napi_string_expected);",5,3105,1
121217,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_script, napi_generic_failure)",3,3111,1
121248,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, script_result, napi_generic_failure)",3,3114,1
121264,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3117,19
121298,RETURN,-1,,CHECK_ENV(env),3,3128,1
121313,RETURN,-1,,"CHECK_ARG(env, js_object)",3,3129,1
121330,RETURN,-1,,"CHECK_ARG(env, finalize_cb)",3,3130,1
121367,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, v8_value->IsObject(), napi_invalid_arg)",3,3133,1
121416,RETURN,-1,,return napi_clear_last_error(env);,3,3146,11
121436,RETURN,-1,,CHECK_ENV(env),3,3152,1
121451,RETURN,-1,,"CHECK_ARG(env, adjusted_value)",3,3153,1
121466,RETURN,-1,,return napi_clear_last_error(env);,3,3158,4
121487,RETURN,-1,,CHECK_ENV(env),3,3165,1
121525,RETURN,-1,,return napi_clear_last_error(env);,3,3177,6
121544,RETURN,-1,,CHECK_ENV(env),3,3181,1
121559,RETURN,-1,,"CHECK_ARG(env, data)",3,3182,1
121584,RETURN,-1,,return napi_clear_last_error(env);,3,3188,6
121603,RETURN,-1,,CHECK_ENV(env),3,3193,1
121618,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3194,1
121655,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, value->IsArrayBuffer(), napi_arraybuffer_expected)",3,3197,1
121691,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, it->IsDetachable(), napi_detachable_arraybuffer_expected)",3,3201,1
121707,RETURN,-1,,return napi_clear_last_error(env);,3,3206,8
121727,RETURN,-1,,CHECK_ENV(env),3,3212,1
121742,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3213,1
121759,RETURN,-1,,"CHECK_ARG(env, result)",3,3214,1
121794,RETURN,-1,,return napi_clear_last_error(env);,3,3221,6
121940,RETURN,-1,,return v8impl::PersistentToLocal::Strong(context_persistent);,5,63,1
121969,RETURN,-1,,return true;,43,71,1
121983,RETURN,-1,,return;,7,75,1
121995,RETURN,-1,,return this->isolate->IsExecutionTerminating() || !can_call_into_js();,5,82,1
122171,RETURN,-1,,return napi_ok;,3,163,5
122202,RETURN,-1,,return error_code;,3,173,4
122217,RETURN,-1,,return reinterpret_cast<napi_value>(*local);,3,298,1
122245,RETURN,-1,,return local;,3,304,3
122268,RETURN,-1,,"return new Finalizer(env, finalize_callback, finalize_data, finalize_hint);",5,326,1
122279,RETURN,-1,,return finalize_callback_;,30,329,1
122285,RETURN,-1,,return finalize_data_;,18,330,1
122291,RETURN,-1,,return finalize_hint_;,18,331,1
122373,RETURN,-1,,return ownership_;,27,390,1
122483,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,35,1
122491,RETURN,-1,,return true;,3,40,1
122553,RETURN,-1,,return true;,5,52,2
122555,RETURN,-1,,return value->IsTrue();,3,54,9
122639,RETURN,-1,,return value_int;,3,69,11
122720,RETURN,-1,,return value_int;,3,84,11
122811,RETURN,-1,,return value_int;,3,106,13
122957,RETURN,-1,,return value_int;,3,140,17
123274,RETURN,-1,,return this;,40,38,1
123401,RETURN,-1,,return value_int;,3,73,11
123484,RETURN,-1,,return value_int;,3,87,11
123583,RETURN,1,,return value_int;,52,108,1
123663,RETURN,-1,,return value_int;,3,122,20
123680,RETURN,-1,,return ret;,3,128,3
123697,RETURN,-1,,return ret;,3,134,3
124124,RETURN,-1,,return isolate;,3,23,8
124234,RETURN,-1,,return false;,5,54,1
124248,RETURN,-1,,return true;,3,58,12
124314,RETURN,-1,,return {};,5,72,1
124335,RETURN,-1,,return {};,5,76,1
124340,RETURN,-1,,return utf8_value.ToString();,3,79,13
124410,RETURN,-1,,return {};,5,93,1
124425,RETURN,-1,,return {};,5,96,1
124430,RETURN,-1,,return false;,5,99,1
124452,RETURN,-1,,return {};,5,103,1
124453,RETURN,-1,,return value->BooleanValue(isolate);,3,105,14
124634,RETURN,-1,,return ret;,3,43,10
124647,RETURN,1,,return str;,26,47,1
124712,RETURN,-1,,return out;,3,66,8
124771,RETURN,-1,,return ENOTSUP;,3,437,1
124783,RETURN,-1,,"return ""Mapping to large pages is not supported."";",7,444,3
124787,RETURN,-1,,"return ""Large pages are not enabled."";",7,447,6
124791,RETURN,-1,,"return ""failed to find text region"";",7,450,9
124796,RETURN,-1,,"return ""Mapping code to large pages failed. Reverting to default page ""
          ""size."";",7,453,12
124800,RETURN,-1,,"return ""OK"";",7,457,15
124803,RETURN,-1,,"return ""Unknown error"";",7,460,17
124868,RETURN,-1,,return result;,5,388,3
125043,RETURN,1,,return {};,22,82,1
125044,RETURN,-1,,return obj.As<Object>()->GetCreationContext().ToLocalChecked();,3,83,3
125099,RETURN,-1,,return it->second;,7,91,1
125103,RETURN,-1,,return nullptr;,3,94,4
125131,RETURN,-1,,return nullptr;,5,100,1
125133,RETURN,-1,,return module_wrap_it->second;,3,102,4
125634,RETURN,-1,,return;,9,214,2
125656,RETURN,-1,,return;,9,221,3
125674,RETURN,-1,,return;,5,227,1
125846,RETURN,-1,,return assertions;,3,265,3
125901,RETURN,1,,return;,5,281,1
126064,RETURN,-1,,return;,7,313,1
126086,RETURN,-1,,return;,7,320,2
126249,RETURN,-1,,return;,5,351,5
126483,RETURN,1,,return;,7,411,1
126521,RETURN,-1,,return;,5,426,2
126596,RETURN,-1,,"return env->ThrowError(
          ""cannot get namespace, module has not been instantiated"");",7,443,5
126888,RETURN,-1,,return MaybeLocal<Module>();,5,509,4
126924,RETURN,-1,,return MaybeLocal<Module>();,5,521,2
126941,RETURN,-1,,return MaybeLocal<Module>();,5,527,2
126972,RETURN,-1,,return MaybeLocal<Module>();,5,536,2
127003,RETURN,-1,,return MaybeLocal<Module>();,5,543,2
127011,RETURN,-1,,return module->module_.Get(isolate);,3,548,20
127050,RETURN,-1,,return MaybeLocal<Promise>();,5,561,2
127107,RETURN,1,,return {};,62,572,1
127128,RETURN,-1,,return handle_scope.Escape(resolver->GetPromise());,5,578,4
127319,RETURN,-1,,return handle_scope.Escape(result.As<Promise>());,5,621,2
127328,RETURN,-1,,return MaybeLocal<Promise>();,3,624,22
127408,RETURN,1,,return;,5,645,1
127420,RETURN,-1,,return;,5,649,1
127654,RETURN,-1,,return MaybeLocal<Value>();,5,700,4
127678,RETURN,-1,,return MaybeLocal<Value>();,5,705,1
127690,RETURN,-1,,return resolver->GetPromise();,3,709,17
128606,RETURN,-1,,return scope.EscapeMaybe(realm->ExecuteBootstrapper(main_script_id));,3,268,6
128676,RETURN,-1,,"return scope.EscapeMaybe(StartExecution(env, entry));",5,290,8
128694,RETURN,-1,,return env->RunSnapshotDeserializeMain();,5,298,1
128707,RETURN,-1,,"return StartExecution(env, ""internal/main/worker_thread"");",5,302,1
128736,RETURN,-1,,"return StartExecution(env, ""internal/main/inspect"");",5,311,1
128749,RETURN,-1,,"return StartExecution(env, ""internal/main/mksnapshot"");",5,315,1
128760,RETURN,-1,,"return StartExecution(env, ""internal/main/print_help"");",5,319,1
128772,RETURN,-1,,"return StartExecution(env, ""internal/main/prof_process"");",5,324,1
128792,RETURN,-1,,"return StartExecution(env, ""internal/main/eval_string"");",5,329,1
128804,RETURN,-1,,"return StartExecution(env, ""internal/main/check_syntax"");",5,333,1
128816,RETURN,-1,,"return StartExecution(env, ""internal/main/test_runner"");",5,337,1
128828,RETURN,-1,,"return StartExecution(env, ""internal/main/watch_mode"");",5,341,1
128843,RETURN,-1,,"return StartExecution(env, ""internal/main/run_main_module"");",5,345,1
128860,RETURN,-1,,"return StartExecution(env, ""internal/main/repl"");",5,349,1
128864,RETURN,-1,,"return StartExecution(env, ""internal/main/eval_stdin"");",3,352,18
128918,RETURN,-1,,return;,5,614,1
128965,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,25,689,1
129001,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument2;,7,697,2
129035,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument2;,5,706,2
129214,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,5,747,1
129218,RETURN,-1,,return ExitCode::kNoFailure;,3,749,18
129230,RETURN,-1,,"return static_cast<int>(
      ProcessGlobalArgsInternal(args, exec_args, errors, settings));",3,756,1
129342,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,29,810,1
129375,RETURN,1,,return exit_code;,46,817,1
129400,RETURN,1,,return exit_code;,44,825,1
129425,RETURN,-1,,return ExitCode::kNoFailure;,3,880,12
129437,RETURN,-1,,"return static_cast<int>(
      InitializeNodeWithArgsInternal(argv, exec_argv, errors, flags));",3,887,1
129513,RETURN,-1,,return result;,7,912,2
129602,RETURN,-1,,return result;,7,930,4
129636,RETURN,-1,,return result;,7,938,6
129665,RETURN,-1,,return result;,7,945,4
129728,RETURN,-1,,return result;,3,1072,14
129736,RETURN,-1,,"return InitializeOncePerProcessInternal(args, flags);",3,1078,1
129851,RETURN,-1,,return exit_code;,7,1131,3
129898,RETURN,-1,,return exit_code;,7,1142,1
129964,RETURN,-1,,return exit_code;,3,1165,10
130027,RETURN,-1,,return exit_code;,7,1180,3
130059,RETURN,-1,,return exit_code;,7,1189,2
130123,RETURN,-1,,return exit_code;,3,1210,8
130182,RETURN,-1,,return result->exit_code_enum();,5,1226,1
130221,RETURN,-1,,return sea::BuildSingleExecutableBlob(sea_config);,5,1245,1
130250,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument;,7,1254,2
130254,RETURN,-1,,"return GenerateAndWriteSnapshotData(&snapshot_data, result.get());",5,1256,2
130262,RETURN,-1,,"return LoadSnapshotDataAndRun(&snapshot_data, result.get());",3,1260,17
130289,RETURN,-1,,"return static_cast<int>(StartInternal(argc, argv));",3,1267,2
130306,RETURN,-1,,return 0;,3,1272,2
130319,RETURN,-1,,"return CreateEnvironment(
            setup->isolate_data(), setup->context(),
            std::forward<EnvironmentArgs>(env_args)...);",9,905,1
130344,RETURN,-1,,"return CreateEnvironment(setup->isolate_data(),
                                 setup->context(),
                                 std::forward<EnvironmentArgs>(env_args)...);",9,927,1
130420,RETURN,-1,,"NODE_DEPRECATED(""Use ErrnoException(isolate, ...)"",
                inline v8::Local<v8::Value> ErrnoException(
      int errorno,
      const char* syscall = nullptr,
      const char* message = nullptr,
      const char* path = nullptr) {
  return ErrnoException(v8::Isolate::GetCurrent(),
                        errorno,
                        syscall,
                        message,
                        path);
})",1,151,1
130440,RETURN,-1,,"NODE_DEPRECATED(""Use UVException(isolate, ...)"",
                inline v8::Local<v8::Value> UVException(int errorno,
                                        const char* syscall = nullptr,
                                        const char* message = nullptr,
                                        const char* path = nullptr) {
  return UVException(v8::Isolate::GetCurrent(),
                     errorno,
                     syscall,
                     message,
                     path);
})",1,164,1
130684,RETURN,-1,,"return InitializeOncePerProcess(
      args, static_cast<ProcessInitializationFlags::Flags>(flags_accum));",3,359,4
131428,RETURN,-1,,return ret;,3,910,4
131466,RETURN,-1,,return ret;,3,932,4
131473,RETURN,-1,,"NODE_DEPRECATED(""Use v8::Date::New() directly"",
                inline v8::Local<v8::Value> NODE_UNIXTIME_V8(double time) {
                  return v8::Date::New(
                             v8::Isolate::GetCurrent()->GetCurrentContext(),
                             1000 * time)
                      .ToLocalChecked();
                })",1,936,1
131500,RETURN,-1,,"NODE_DEPRECATED(""Use v8::Date::ValueOf() directly"",
                inline double NODE_V8_UNIXTIME(v8::Local<v8::Date> date) {
  return date->ValueOf() / 1000;
})",1,944,1
131967,RETURN,-1,,"return AsyncCleanupHookHandle(AddEnvironmentCleanupHookInternal(isolate, fun,
      arg));",3,1293,1
132203,RETURN,-1,,return;,7,93,1
132227,RETURN,-1,,return;,7,104,2
132412,RETURN,-1,,return node_env()->can_call_into_js();,3,36,1
132546,RETURN,-1,,"return new BufferFinalizer(
        env, finalize_callback, finalize_data, finalize_hint);",5,123,1
132578,RETURN,1,,return;,51,133,1
132713,RETURN,-1,,return nullptr;,5,181,5
132733,RETURN,-1,,return result;,3,196,5
132818,RETURN,-1,,return napi_queue_full;,9,242,1
132833,RETURN,-1,,return napi_invalid_arg;,9,249,1
132839,RETURN,-1,,return napi_closing;,9,252,2
132849,RETURN,-1,,return napi_ok;,7,257,3
132863,RETURN,-1,,return napi_closing;,7,265,1
132867,RETURN,-1,,return napi_ok;,5,270,5
132884,RETURN,-1,,return napi_invalid_arg;,7,277,1
132919,RETURN,-1,,return napi_ok;,5,292,6
132992,RETURN,-1,,return napi_ok;,9,313,1
133011,RETURN,-1,,return napi_generic_failure;,5,332,7
133022,RETURN,-1,,return napi_ok;,5,338,2
133033,RETURN,-1,,return napi_ok;,5,344,2
133039,RETURN,-1,,return context;,28,347,1
133239,RETURN,-1,,return has_more;,5,419,9
133298,RETURN,-1,,return;,7,441,1
133333,RETURN,-1,,return;,7,458,1
133374,RETURN,-1,,return;,9,476,2
133397,RETURN,-1,,return;,9,483,2
133558,RETURN,-1,,"return node::InternalMakeCallback(node_env(),
                                      resource(),
                                      recv,
                                      callback,
                                      argc,
                                      argv,
                                      {async_id_, trigger_async_id_});",5,570,2
133589,RETURN,-1,,return it;,5,584,5
133629,RETURN,-1,,return env_->node_env();,42,596,1
133638,RETURN,-1,,return resource_.Get(node_env()->isolate());,5,598,1
133651,RETURN,-1,,"return {async_id_, trigger_async_id_};",5,601,1
133758,RETURN,-1,,return node_api_context_register_func<NODE_API_DEFAULT_MODULE_API_VERSION>;,5,680,1
133767,RETURN,-1,,return node_api_context_register_func<9>;,5,682,1
133778,RETURN,-1,,return node_api_context_register_func<NAPI_VERSION_EXPERIMENTAL>;,5,684,1
133789,RETURN,-1,,return nullptr;,5,687,2
133825,RETURN,-1,,return;,5,701,3
133944,RETURN,-1,,"return {
      -1,
      mod->nm_flags | NM_F_DELETEME,
      nullptr,
      mod->nm_filename,
      nullptr,
      napi_module_register_cb,
      mod->nm_modname,
      const_cast<napi_module*>(mod),  // priv
      nullptr,
  };",3,742,1
133982,RETURN,-1,,CHECK_ENV(env),3,766,1
133997,RETURN,-1,,"CHECK_ARG(env, fun)",3,767,1
134011,RETURN,-1,,return napi_ok;,3,771,4
134030,RETURN,-1,,CHECK_ENV(env),3,777,1
134045,RETURN,-1,,"CHECK_ARG(env, fun)",3,778,1
134059,RETURN,-1,,return napi_ok;,3,782,4
134191,RETURN,-1,,CHECK_ENV(env),3,825,1
134206,RETURN,-1,,"CHECK_ARG(env, hook)",3,826,1
134228,RETURN,-1,,return napi_clear_last_error(env);,3,833,6
134241,RETURN,1,,return napi_invalid_arg;,33,838,1
134245,RETURN,-1,,return napi_ok;,3,842,3
134263,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134277,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134291,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134320,RETURN,-1,,"CHECK_ARG(env, err)",3,847,1
134347,RETURN,-1,,return napi_clear_last_error(env);,3,852,10
134442,RETURN,-1,,CHECK_ENV(env),3,884,1
134457,RETURN,-1,,"CHECK_ARG(env, result)",3,885,1
134475,RETURN,-1,,return napi_clear_last_error(env);,3,892,6
134494,RETURN,-1,,CHECK_ENV(env),3,899,1
134509,RETURN,-1,,"CHECK_ARG(env, scope)",3,900,1
134521,RETURN,-1,,return napi_callback_scope_mismatch;,5,902,1
134533,RETURN,-1,,return napi_clear_last_error(env);,3,908,5
134554,RETURN,-1,,CHECK_ENV(env),3,915,1
134569,RETURN,-1,,"CHECK_ARG(env, async_resource_name)",3,916,1
134586,RETURN,-1,,"CHECK_ARG(env, result)",3,917,1
134643,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8_resource, async_resource)",5,925,1
134670,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8_resource, async_resource)",5,925,1
134725,RETURN,-1,,"CHECK_TO_STRING(env, context, v8_resource_name, async_resource_name)",3,933,1
134752,RETURN,-1,,"CHECK_TO_STRING(env, context, v8_resource_name, async_resource_name)",3,933,1
134781,RETURN,-1,,return napi_clear_last_error(env);,3,943,15
134800,RETURN,-1,,CHECK_ENV(env),3,948,1
134815,RETURN,-1,,"CHECK_ARG(env, async_context)",3,949,1
134828,RETURN,-1,,return napi_clear_last_error(env);,3,956,6
134852,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
134866,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
134880,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
134909,RETURN,-1,,"CHECK_ARG(env, recv)",3,967,1
134931,RETURN,-1,,"CHECK_ARG(env, argv)",5,969,1
134976,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8recv, recv)",3,975,1
135003,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8recv, recv)",3,975,1
135039,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,978,1
135068,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,978,1
135142,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,1001,1
135163,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, callback_result, napi_generic_failure)",5,1003,1
135184,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1010,17
135216,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135230,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135244,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135273,RETURN,-1,,"CHECK_ARG(env, result)",3,1018,1
135313,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1022,1
135355,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1032,13
135389,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135403,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135417,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135446,RETURN,-1,,"CHECK_ARG(env, result)",3,1042,1
135512,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1061,1
135528,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1064,15
135561,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
135575,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
135589,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
135618,RETURN,-1,,"CHECK_ARG(env, result)",3,1077,1
135661,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1082,1
135703,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1091,13
135734,RETURN,-1,,CHECK_ENV(env),3,1097,1
135749,RETURN,-1,,"CHECK_ARG(env, value)",3,1098,1
135766,RETURN,-1,,"CHECK_ARG(env, result)",3,1099,1
135785,RETURN,-1,,return napi_clear_last_error(env);,3,1102,5
135806,RETURN,-1,,CHECK_ENV(env),3,1109,1
135821,RETURN,-1,,"CHECK_ARG(env, value)",3,1110,1
135871,RETURN,-1,,return napi_clear_last_error(env);,3,1121,6
135890,RETURN,-1,,CHECK_ENV(env),3,1126,1
135905,RETURN,-1,,"CHECK_ARG(env, result)",3,1127,1
135931,RETURN,-1,,return napi_clear_last_error(env);,3,1131,6
135946,RETURN,-1,,return napi_ok;,7,1140,3
135950,RETURN,-1,,return napi_invalid_arg;,7,1142,6
135954,RETURN,-1,,return napi_cancelled;,7,1144,9
135957,RETURN,-1,,return napi_generic_failure;,7,1146,11
135983,RETURN,-1,,"return new Work(
        env, async_resource, async_resource_name, execute, complete, data);",5,1178,1
136015,RETURN,1,,return;,31,1187,1
136054,RETURN,-1,,CHECK_ENV(env),3,1230,1
136069,RETURN,-1,,"CHECK_ARG(env, execute)",3,1231,1
136086,RETURN,-1,,"CHECK_ARG(env, result)",3,1232,1
136136,RETURN,-1,,"CHECK_TO_OBJECT(env, context, resource, async_resource)",5,1238,1
136163,RETURN,-1,,"CHECK_TO_OBJECT(env, context, resource, async_resource)",5,1238,1
136214,RETURN,-1,,"CHECK_TO_STRING(env, context, resource_name, async_resource_name)",3,1244,1
136241,RETURN,-1,,"CHECK_TO_STRING(env, context, resource_name, async_resource_name)",3,1244,1
136276,RETURN,-1,,return napi_clear_last_error(env);,3,1255,12
136295,RETURN,-1,,CHECK_ENV(env),3,1260,1
136310,RETURN,-1,,"CHECK_ARG(env, work)",3,1261,1
136324,RETURN,-1,,return napi_clear_last_error(env);,3,1265,4
136343,RETURN,-1,,CHECK_ENV(env),3,1269,1
136358,RETURN,-1,,"CHECK_ARG(env, loop)",3,1270,1
136375,RETURN,-1,,return napi_clear_last_error(env);,3,1272,4
136394,RETURN,-1,,CHECK_ENV(env),3,1277,1
136409,RETURN,-1,,"CHECK_ARG(env, work)",3,1278,1
136435,RETURN,1,,"STATUS_CALL(napi_get_uv_event_loop(env, &event_loop))",3,1281,1
136448,RETURN,-1,,return napi_clear_last_error(env);,3,1287,9
136467,RETURN,-1,,CHECK_ENV(env),3,1292,1
136482,RETURN,-1,,"CHECK_ARG(env, work)",3,1293,1
136524,RETURN,-1,,"CALL_UV(env, w->CancelWork())",3,1297,1
136530,RETURN,-1,,return napi_clear_last_error(env);,3,1299,6
136558,RETURN,-1,,CHECK_ENV(env),3,1314,1
136573,RETURN,-1,,"CHECK_ARG(env, async_resource_name)",3,1315,1
136590,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, initial_thread_count > 0, napi_invalid_arg)",3,1316,1
136607,RETURN,-1,,"CHECK_ARG(env, result)",3,1317,1
136642,RETURN,-1,,"CHECK_ARG(env, call_js_cb)",5,1323,1
136664,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8_func, func)",5,1325,1
136693,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8_func, func)",5,1325,1
136763,RETURN,-1,,"CHECK_TO_OBJECT(env, v8_context, v8_resource, async_resource)",5,1334,1
136790,RETURN,-1,,"CHECK_TO_OBJECT(env, v8_context, v8_resource, async_resource)",5,1334,1
136828,RETURN,-1,,"CHECK_TO_STRING(env, v8_context, v8_name, async_resource_name)",3,1338,1
136855,RETURN,-1,,"CHECK_TO_STRING(env, v8_context, v8_name, async_resource_name)",3,1338,1
136911,RETURN,-1,,"return napi_set_last_error(env, status);",3,1362,17
136934,RETURN,-1,,return napi_ok;,3,1371,4
136945,RETURN,-1,,"return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Push(data,
                                                                   is_blocking);",3,1379,2
136961,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Acquire();,3,1386,2
136976,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Release(mode);,3,1392,2
136992,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Unref();,3,1398,2
137007,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Ref();,3,1404,2
137030,RETURN,-1,,CHECK_ENV(env),3,1409,1
137045,RETURN,-1,,"CHECK_ARG(env, result)",3,1410,1
137059,RETURN,-1,,return napi_clear_last_error(env);,3,1413,4
137384,RETURN,-1,,return node::Environment::GetCurrent(context());,5,31,1
137396,RETURN,-1,,return filename.c_str();,44,33,1
137495,RETURN,-1,,return false;,7,475,5
137521,RETURN,-1,,return false;,11,483,3
137549,RETURN,-1,,return true;,9,491,2
137582,RETURN,-1,,return true;,9,499,5
137612,RETURN,-1,,return false;,11,506,3
137640,RETURN,-1,,return true;,9,518,2
137659,RETURN,-1,,return false;,7,536,6
137715,RETURN,-1,,return false;,7,549,3
137717,RETURN,-1,,return true;,5,552,16
138090,RETURN,1,,return nullptr;,27,295,1
138098,RETURN,-1,,return it->second.module;,5,297,8
138131,RETURN,1,,return;,27,305,1
138206,RETURN,-1,,return true;,5,363,2
138214,RETURN,-1,,return false;,3,367,6
138225,RETURN,1,,return;,27,371,1
138254,RETURN,1,,return address;,45,380,1
138256,RETURN,-1,,return nullptr;,3,381,3
138279,RETURN,-1,,return global_handle_map.get_and_increase_refcount(handle_);,3,392,2
138297,RETURN,-1,,return reinterpret_cast<InitializerCallback>(dlib->GetSymbolAddress(name));,3,401,5
138317,RETURN,-1,,"return reinterpret_cast<napi_addon_register_func>(
      dlib->GetSymbolAddress(name));",3,407,5
138330,RETURN,-1,,"return reinterpret_cast<node_api_addon_get_api_version_func>(
      dlib->GetSymbolAddress(STRINGIFY(NODE_API_MODULE_GET_API_VERSION)));",3,413,1
138357,RETURN,-1,,"return THROW_ERR_DLOPEN_DISABLED(
      env, ""Cannot load native addon because loading addons is disabled."");",5,427,1
138377,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(
        env, ""process.dlopen needs at least 2 arguments"");",5,436,1
138409,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env, ""flag argument must be an integer."");",5,442,1
138471,RETURN,-1,,return;,5,451,1
138532,RETURN,-1,,return mp;,3,569,4
138577,RETURN,-1,,return obj;,3,602,6
138645,RETURN,-1,,return scope.Escape(exports);,3,615,9
138818,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(isolate, ""No such binding: %s"", *module_v);",5,648,1
138930,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(
        env, ""No such binding was linked: %s"", *module_name_v);",5,678,1
139032,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(
        env, ""Linked binding has no declared entry point."");",5,694,1
139185,RETURN,-1,,"return DataQueue::CreateInMemoryEntryFromBackingStore(
            store, byte_offset, byte_length);",9,185,3
139235,RETURN,-1,,"return DataQueue::CreateInMemoryEntryFromBackingStore(
          store, 0, byte_length);",7,194,6
139426,RETURN,-1,,return;,7,363,11
139552,RETURN,1,,return;,55,58,1
139757,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Unabled to open file as blob"");",5,90,1
139996,RETURN,-1,,return tmpl;,3,144,3
140004,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(object);,3,148,1
140045,RETURN,1,,return BaseObjectPtr<Blob>();,5,157,1
140068,RETURN,1,,return BaseObjectPtr<Blob>();,5,161,1
140070,RETURN,-1,,"return MakeBaseObject<Blob>(env, obj, data_queue);",3,163,7
140165,RETURN,-1,,return;,7,176,1
140449,RETURN,-1,,"return Create(env,
                this->data_queue_->slice(start, static_cast<uint64_t>(end)));",3,256,1
140484,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,277,1
140557,RETURN,-1,,return tmpl;,3,291,3
140590,RETURN,-1,,return BaseObjectPtr<Blob::Reader>();,5,301,1
140593,RETURN,-1,,"return MakeBaseObject<Blob::Reader>(env, obj, std::move(blob));",3,304,3
140685,RETURN,-1,,return args.GetReturnValue().Set(bob::STATUS_EOS);,5,319,3
140773,RETURN,-1,,return {};,5,384,2
140774,RETURN,-1,,"return Blob::Create(env, data_queue);",3,386,2
140785,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,390,1
140795,RETURN,-1,,return std::make_unique<BlobTransferData>(data_queue_);,3,394,1
140994,RETURN,-1,,return;,5,431,1
141166,RETURN,-1,,return;,7,463,1
141273,RETURN,-1,,return;,5,512,1
141310,RETURN,1,,return BlobBindingData::StoredDataObject {};,5,522,1
141313,RETURN,-1,,return entry->second;,3,523,4
141365,RETURN,-1,,return true;,3,543,1
141387,RETURN,-1,,return info;,3,550,4
141536,RETURN,-1,,return status;,5,23,3
141562,RETURN,-1,,return status;,3,30,5
141645,RETURN,-1,,return eos_;,25,90,1
141898,RETURN,-1,,return ab;,3,138,8
142054,RETURN,1,,return;,29,196,1
142066,RETURN,-1,,return val->IsArrayBufferView();,3,238,1
142076,RETURN,-1,,return obj->IsArrayBufferView();,3,243,1
142101,RETURN,-1,,return static_cast<char*>(ui->Buffer()->Data()) + ui->ByteOffset();,3,250,3
142121,RETURN,-1,,return Data(obj.As<Value>());,3,255,1
142147,RETURN,-1,,return ui->ByteLength();,3,262,3
142172,RETURN,-1,,return ui->ByteLength();,3,269,3
142228,RETURN,1,,return MaybeLocal<Uint8Array>();,5,282,1
142230,RETURN,-1,,return ui;,3,283,6
142255,RETURN,-1,,return MaybeLocal<Uint8Array>();,5,293,2
142257,RETURN,-1,,"return New(env, ab, byte_offset, length);",3,295,4
142289,RETURN,1,,return Local<Object>();,5,306,1
142322,RETURN,-1,,return Local<Object>();,7,315,2
142403,RETURN,1,,return MaybeLocal<Object>();,9,332,1
142405,RETURN,-1,,return scope.Escape(obj);,7,333,5
142411,RETURN,-1,,"return scope.EscapeMaybe(New(isolate, 0));",3,337,9
142448,RETURN,-1,,return MaybeLocal<Object>();,5,347,2
142463,RETURN,1,,return handle_scope.Escape(obj);,5,350,1
142469,RETURN,-1,,return Local<Object>();,3,351,8
142497,RETURN,-1,,return Local<Object>();,5,362,2
142556,RETURN,-1,,return scope.EscapeMaybe(obj);,3,380,9
142587,RETURN,-1,,return MaybeLocal<Object>();,5,389,2
142608,RETURN,1,,return handle_scope.Escape(obj);,5,393,1
142614,RETURN,-1,,return Local<Object>();,3,394,8
142643,RETURN,-1,,return Local<Object>();,5,405,2
142709,RETURN,-1,,return scope.EscapeMaybe(obj);,3,425,9
142745,RETURN,-1,,return MaybeLocal<Object>();,5,439,3
142747,RETURN,-1,,"return handle_scope.EscapeMaybe(
      Buffer::New(env, data, length, callback, hint));",3,441,6
142796,RETURN,-1,,return Local<Object>();,5,456,3
142835,RETURN,-1,,return Local<Object>();,5,464,1
142865,RETURN,1,,return MaybeLocal<Object>();,5,470,1
142867,RETURN,-1,,return scope.Escape(ui);,3,472,9
142900,RETURN,-1,,return MaybeLocal<Object>();,5,483,3
142921,RETURN,1,,return handle_scope.Escape(obj);,5,487,1
142927,RETURN,-1,,return Local<Object>();,3,488,8
142961,RETURN,-1,,return Local<Object>();,7,503,5
143032,RETURN,1,,return handle_scope.Escape(obj);,5,519,1
143038,RETURN,-1,,return Local<Object>();,3,520,10
143154,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,545,1
143192,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[0], 0, &start))",3,549,1
143200,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[0], 0, &start))",3,549,1
143233,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], buffer.length(), &end))",3,550,1
143241,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], buffer.length(), &end))",3,550,1
143278,RETURN,1,,THROW_AND_RETURN_IF_OOB(Just(end <= buffer.length())),3,552,1
143286,RETURN,1,,THROW_AND_RETURN_IF_OOB(Just(end <= buffer.length())),3,552,1
143351,RETURN,-1,,return;,5,566,3
143451,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,585,1
143459,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,585,1
143489,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,586,1
143497,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,586,1
143530,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], source.length(),
                                          &source_end))",3,587,1
143538,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], source.length(),
                                          &source_end))",3,587,1
143555,RETURN,1,,return args.GetReturnValue().Set(0);,5,592,1
143572,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""sourceStart\"" is out of range."");",5,595,1
143700,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &start))",3,618,1
143708,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &start))",3,618,1
143739,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &end))",3,620,1
143747,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &end))",3,620,1
143779,RETURN,1,,return args.GetReturnValue().Set(-2);,5,629,1
143843,RETURN,1,,return;,46,643,1
143856,RETURN,-1,,return;,5,646,6
143991,RETURN,1,,return;,5,678,1
143997,RETURN,1,,return args.GetReturnValue().Set(-1);,5,686,1
144139,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], 0, &offset))",3,717,1
144147,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], 0, &offset))",3,717,1
144160,RETURN,-1,,"return node::THROW_ERR_BUFFER_OUT_OF_BOUNDS(
        env, ""\""offset\"" is outside of buffer bounds"");",5,719,1
144191,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], ts_obj_length - offset,
                                          &max_length))",3,723,1
144199,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], ts_obj_length - offset,
                                          &max_length))",3,723,1
144222,RETURN,1,,return args.GetReturnValue().Set(0);,5,729,1
144342,RETURN,-1,,return result;,3,753,9
144366,RETURN,1,,return 1;,7,764,1
144375,RETURN,1,,return -1;,7,766,1
144385,RETURN,1,,return 1;,7,769,1
144389,RETURN,1,,return -1;,7,771,1
144392,RETURN,-1,,return val;,3,773,2
144479,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,789,1
144487,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,789,1
144517,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,790,1
144525,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,790,1
144558,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], target.length(),
                                          &target_end))",3,791,1
144566,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], target.length(),
                                          &target_end))",3,791,1
144599,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[5], source.length(),
                                          &source_end))",3,793,1
144607,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[5], source.length(),
                                          &source_end))",3,793,1
144623,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""sourceStart\"" is out of range."");",5,797,1
144635,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""targetStart\"" is out of range."");",5,800,1
144828,RETURN,-1,,return length_i64 + offset_i64;,7,848,1
144841,RETURN,-1,,return 0;,7,851,1
144845,RETURN,-1,,return -1;,7,854,1
144857,RETURN,-1,,return offset_i64;,7,859,1
144866,RETURN,-1,,return length_i64;,7,862,1
144873,RETURN,-1,,return -1;,7,865,1
144878,RETURN,-1,,return length_i64 - 1;,7,868,1
145035,RETURN,1,,return;,68,897,1
145059,RETURN,-1,,return;,5,907,2
145065,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,911,1
145081,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,915,1
145113,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,921,1
145142,RETURN,1,,return args.GetReturnValue().Set(-1);,7,929,1
145164,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,932,1
145190,RETURN,1,,return;,57,937,1
145205,RETURN,1,,return args.GetReturnValue().Set(-1);,9,942,1
145278,RETURN,1,,return args.GetReturnValue().Set(-1);,7,962,1
145324,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,973,1
145543,RETURN,-1,,return;,5,1019,2
145549,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1023,1
145565,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1027,1
145597,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1033,1
145625,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,1040,1
145796,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1079,1
146061,RETURN,-1,,"return node::THROW_ERR_INVALID_STATE(
        env, ""Cannot validate on a detached buffer"");",5,1130,1
146138,RETURN,-1,,"return node::THROW_ERR_INVALID_STATE(
        env, ""Cannot validate on a detached buffer"");",5,1145,1
146476,RETURN,-1,,"return {pointer, byte_length};",3,1220,4
147119,RETURN,1,,return false;,5,79,1
147128,RETURN,1,,return false;,5,83,1
147130,RETURN,-1,,return true;,3,86,3
147172,RETURN,-1,,return source->find(id) != source->end();,3,58,3
147201,RETURN,-1,,return result.second;,3,63,3
147276,RETURN,-1,,return out;,3,74,7
147283,RETURN,-1,,return config_.ToStringChecked(isolate);,3,78,1
147329,RETURN,-1,,return ids;,3,88,6
147472,RETURN,-1,,return builtin_categories;,3,153,9
147509,RETURN,-1,,return source_it->second.ToStringChecked(isolate);,3,182,6
147701,RETURN,-1,,return {};,5,259,1
147854,RETURN,-1,,return MaybeLocal<Function>();,5,311,1
147945,RETURN,-1,,return scope.Escape(fun);,3,350,28
148053,RETURN,-1,,return maybe;,3,407,8
148128,RETURN,-1,,return MaybeLocal<Value>();,7,429,1
148156,RETURN,-1,,"return CompileAndCall(context, id, arguments.size(), arguments.data(), realm);",3,454,5
148202,RETURN,-1,,return MaybeLocal<Value>();,5,467,1
148215,RETURN,-1,,"return fn->Call(context, undefined, argc, argv);",3,470,5
148309,RETURN,-1,,return all_succeeded;,3,491,7
148493,RETURN,1,,return;,5,533,1
148508,RETURN,1,,return;,5,539,1
148522,RETURN,1,,return;,5,542,1
148537,RETURN,-1,,return;,5,548,1
148615,RETURN,-1,,return;,5,564,1
148630,RETURN,-1,,return;,5,571,1
148644,RETURN,-1,,return;,5,576,1
148659,RETURN,-1,,return;,5,583,1
148673,RETURN,-1,,return;,5,588,1
148688,RETURN,-1,,return;,5,595,1
149990,RETURN,-1,,return result;,5,1057,3
150030,RETURN,-1,,"return Uint32::New(context->GetIsolate(), index)->ToString(context)
      .ToLocalChecked();",3,106,1
150133,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,130,1
150135,RETURN,-1,,"return New(v8_context, env, sandbox_obj, options);",3,132,11
150370,RETURN,-1,,return MaybeLocal<Context>();,7,224,1
150394,RETURN,-1,,return MaybeLocal<Context>();,5,233,1
150396,RETURN,-1,,return scope.Escape(ctx);,3,236,5
150423,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,250,1
150588,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,7,295,1
150613,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,7,302,1
150646,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,315,1
150648,RETURN,-1,,return result;,3,318,20
150969,RETURN,-1,,return;,5,391,2
151077,RETURN,-1,,return Unwrap<ContextifyContext>(context_global.As<Object>());,5,424,1
151086,RETURN,-1,,return nullptr;,3,426,3
151093,RETURN,-1,,return Get(args.This());,3,431,1
151121,RETURN,-1,,return nullptr;,5,437,1
151131,RETURN,-1,,return nullptr;,5,440,1
151133,RETURN,-1,,"return static_cast<ContextifyContext*>(
      context->GetAlignedPointerFromEmbedderData(
          ContextEmbedderIndex::kContextifyContext));",3,442,4
151148,RETURN,-1,,return ctx == nullptr || ctx->context_.IsEmpty();,3,448,1
151177,RETURN,1,,return;,33,458,1
151278,RETURN,1,,return;,33,486,1
151357,RETURN,1,,return;,5,505,1
151397,RETURN,1,,return;,5,525,1
151407,RETURN,1,,return;,45,527,1
151423,RETURN,1,,return;,66,528,1
151526,RETURN,1,,return;,33,554,1
151602,RETURN,1,,return;,33,576,1
151660,RETURN,1,,return;,5,593,1
151783,RETURN,1,,return;,33,636,1
151806,RETURN,1,,return;,5,641,1
151832,RETURN,1,,return;,33,654,1
151857,RETURN,1,,return;,5,659,1
151884,RETURN,1,,return;,33,671,1
151915,RETURN,1,,return;,33,685,1
151946,RETURN,1,,return;,33,698,1
151977,RETURN,1,,return;,33,712,1
152008,RETURN,1,,return;,33,725,1
152031,RETURN,1,,return;,5,730,1
152581,RETURN,-1,,return;,5,865,5
152630,RETURN,-1,,return;,5,881,1
152655,RETURN,1,,return;,5,889,1
152688,RETURN,-1,,return Nothing<bool>();,5,903,1
152725,RETURN,-1,,return Nothing<bool>();,7,912,1
152776,RETURN,-1,,return Nothing<bool>();,9,924,1
152801,RETURN,-1,,return Nothing<bool>();,7,932,1
152803,RETURN,-1,,return Just(true);,3,935,5
152812,RETURN,-1,,"return !value.IsEmpty() &&
         env->script_context_constructor_template()->HasInstance(value);",3,940,1
153024,RETURN,1,,return;,28,985,1
153143,RETURN,1,,return false;,5,1028,1
153160,RETURN,-1,,return false;,5,1033,2
153310,RETURN,1,,return false;,7,1076,1
153370,RETURN,-1,,return false;,5,1102,3
153383,RETURN,-1,,return true;,3,1106,24
153860,RETURN,1,,return;,67,1232,1
153924,RETURN,1,,return;,55,1243,1
154011,RETURN,-1,,return;,5,1265,2
154033,RETURN,-1,,return;,5,1271,1
154077,RETURN,1,,return;,5,1278,1
154093,RETURN,1,,return;,5,1281,1
154115,RETURN,1,,return;,5,1287,1
154153,RETURN,-1,,return;,5,1300,1
154363,RETURN,1,,return;,68,1349,1
154427,RETURN,-1,,return microtask_queue_;,3,1372,1
154817,RETURN,-1,,return false;,3,44,1
154912,RETURN,-1,,return true;,5,102,13
154962,RETURN,-1,,return true;,7,121,2
154969,RETURN,-1,,return false;,3,127,6
155018,RETURN,1,,return;,65,136,1
155111,RETURN,-1,,return;,5,79,1
155499,RETURN,-1,,"FS_TYPE_TO_NAME(OPENDIR, ""opendir"")",5,51,3
155505,RETURN,-1,,"FS_TYPE_TO_NAME(READDIR, ""readdir"")",5,52,6
155511,RETURN,-1,,"FS_TYPE_TO_NAME(CLOSEDIR, ""closedir"")",5,53,9
155514,RETURN,-1,,"return ""unknow"";",7,56,11
155564,RETURN,-1,,return nullptr;,5,112,1
155566,RETURN,-1,,"return new DirHandle(env, obj, dir);",3,115,3
155611,RETURN,1,,return;,16,137,1
155837,RETURN,-1,,return;,5,161,2
156446,RETURN,-1,,return MaybeLocal<Array>();,7,230,2
156472,RETURN,-1,,"return Array::New(env->isolate(), entries.out(), j);",3,237,6
156630,RETURN,-1,,return;,5,246,1
156669,RETURN,-1,,return;,5,257,4
156716,RETURN,-1,,return req_wrap->Reject(error);,5,273,2
157175,RETURN,-1,,return;,7,315,1
157201,RETURN,-1,,return;,7,322,3
157271,RETURN,-1,,return;,7,337,3
157418,RETURN,-1,,return;,5,350,1
157859,RETURN,-1,,return;,7,389,1
158247,RETURN,-1,,"return Just(std::string(*val, init_sz));",5,118,1
158256,RETURN,-1,,return Nothing<std::string>();,3,121,10
158293,RETURN,-1,,"return String::NewFromUtf8(
        isolate, val.data(), NewStringType::kNormal, val.size());",5,131,3
158310,RETURN,-1,,return MaybeLocal<String>();,3,135,5
158371,RETURN,-1,,return -1;,5,161,1
158374,RETURN,-1,,return 0;,3,172,9
158386,RETURN,-1,,return Query(*key);,3,177,3
158480,RETURN,-1,,return Local<Array>();,7,206,2
158491,RETURN,-1,,"return Array::New(isolate, env_v.out(), env_v_index);",3,211,13
158597,RETURN,-1,,return copy;,3,228,9
158615,RETURN,-1,,return it == map_.end() ? Nothing<std::string>() : Just(it->second);,3,234,5
158656,RETURN,1,,return Local<String>();,26,240,1
158665,RETURN,-1,,"return String::NewFromUtf8(
      isolate, val.data(), NewStringType::kNormal, val.size());",3,242,7
158749,RETURN,-1,,return map_.find(key) == map_.end() ? -1 : 0;,3,258,3
158774,RETURN,-1,,return Query(*str);,3,263,3
158861,RETURN,-1,,"return Array::New(isolate, values.data(), values.size());",3,282,6
158880,RETURN,-1,,return std::make_shared<MapKVStore>(*this);,3,286,1
158893,RETURN,-1,,return std::make_shared<MapKVStore>();,3,290,1
158932,RETURN,1,,return Nothing<bool>();,5,299,1
158972,RETURN,1,,return Nothing<bool>();,7,304,1
159018,RETURN,-1,,return Nothing<bool>();,7,311,1
159027,RETURN,-1,,return Just(true);,3,316,10
159134,RETURN,1,,return Nothing<bool>();,14,334,1
159136,RETURN,-1,,return Just(true);,3,336,7
159164,RETURN,-1,,return info.GetReturnValue().SetUndefined();,5,344,1
159276,RETURN,1,,return;,7,373,1
159318,RETURN,-1,,return;,5,380,1
159550,RETURN,-1,,"return EnvSetter(property, desc.value(), info);",7,442,1
159598,RETURN,1,,return;,54,461,1
159810,RETURN,-1,,return maybe_value.ToLocal(&decorated) && decorated->IsTrue();,5,43,5
159822,RETURN,-1,,return false;,3,45,2
159939,RETURN,-1,,return std::string();,5,76,2
159951,RETURN,-1,,return std::string();,5,79,1
159967,RETURN,-1,,return *error_source_utf8;,3,83,21
160021,RETURN,-1,,return sourceline;,5,96,1
160081,RETURN,-1,,return source;,7,109,1
160207,RETURN,-1,,return buf;,5,161,1
160300,RETURN,-1,,"return buf + std::string(underline_buf, off);",3,185,42
160509,RETURN,-1,,return result;,3,234,3
160606,RETURN,-1,,return result;,3,265,8
160620,RETURN,-1,,"return FormatCaughtException(
      isolate, context, try_catch.Exception(), try_catch.Message());",3,272,2
160658,RETURN,1,,return;,26,286,1
160722,RETURN,1,,return;,7,297,1
160746,RETURN,-1,,return;,5,304,1
160793,RETURN,1,,return;,31,315,1
160809,RETURN,-1,,return;,5,321,7
161585,RETURN,-1,,"return {
      codegen_allowed,
      {},
  };",3,586,9
161676,RETURN,-1,,"return """";",7,932,2
162208,RETURN,1,,return;,31,1071,1
162224,RETURN,1,,return;,43,1075,1
162291,RETURN,-1,,return;,5,1085,1
162307,RETURN,-1,,return;,5,1089,1
162503,RETURN,-1,,return;,5,1142,3
162569,RETURN,-1,,return;,5,1169,1
162577,RETURN,-1,,return;,5,1179,1
162610,RETURN,-1,,return;,5,1196,1
162644,RETURN,-1,,return;,5,1214,1
162714,RETURN,-1,,return external_references_;,3,15,2
162964,RETURN,1,,return;,44,487,1
163556,RETURN,-1,,return;,17,1734,9
163970,RETURN,-1,,"return str.substr(start_pos, str_size);",3,110,9
163982,RETURN,-1,,return IsSafeJsInt(value) ? value.As<Integer>()->Value() : -1;,3,114,1
164007,RETURN,-1,,"FS_TYPE_TO_NAME(OPEN, ""open"")",5,122,3
164013,RETURN,-1,,"FS_TYPE_TO_NAME(CLOSE, ""close"")",5,123,6
164019,RETURN,-1,,"FS_TYPE_TO_NAME(READ, ""read"")",5,124,9
164025,RETURN,-1,,"FS_TYPE_TO_NAME(WRITE, ""write"")",5,125,12
164031,RETURN,-1,,"FS_TYPE_TO_NAME(SENDFILE, ""sendfile"")",5,126,15
164037,RETURN,-1,,"FS_TYPE_TO_NAME(STAT, ""stat"")",5,127,18
164043,RETURN,-1,,"FS_TYPE_TO_NAME(LSTAT, ""lstat"")",5,128,21
164049,RETURN,-1,,"FS_TYPE_TO_NAME(FSTAT, ""fstat"")",5,129,24
164055,RETURN,-1,,"FS_TYPE_TO_NAME(FTRUNCATE, ""ftruncate"")",5,130,27
164061,RETURN,-1,,"FS_TYPE_TO_NAME(UTIME, ""utime"")",5,131,30
164067,RETURN,-1,,"FS_TYPE_TO_NAME(FUTIME, ""futime"")",5,132,33
164073,RETURN,-1,,"FS_TYPE_TO_NAME(ACCESS, ""access"")",5,133,36
164079,RETURN,-1,,"FS_TYPE_TO_NAME(CHMOD, ""chmod"")",5,134,39
164085,RETURN,-1,,"FS_TYPE_TO_NAME(FCHMOD, ""fchmod"")",5,135,42
164091,RETURN,-1,,"FS_TYPE_TO_NAME(FSYNC, ""fsync"")",5,136,45
164097,RETURN,-1,,"FS_TYPE_TO_NAME(FDATASYNC, ""fdatasync"")",5,137,48
164103,RETURN,-1,,"FS_TYPE_TO_NAME(UNLINK, ""unlink"")",5,138,51
164109,RETURN,-1,,"FS_TYPE_TO_NAME(RMDIR, ""rmdir"")",5,139,54
164115,RETURN,-1,,"FS_TYPE_TO_NAME(MKDIR, ""mkdir"")",5,140,57
164121,RETURN,-1,,"FS_TYPE_TO_NAME(MKDTEMP, ""mkdtemp"")",5,141,60
164127,RETURN,-1,,"FS_TYPE_TO_NAME(RENAME, ""rename"")",5,142,63
164133,RETURN,-1,,"FS_TYPE_TO_NAME(SCANDIR, ""scandir"")",5,143,66
164139,RETURN,-1,,"FS_TYPE_TO_NAME(LINK, ""link"")",5,144,69
164145,RETURN,-1,,"FS_TYPE_TO_NAME(SYMLINK, ""symlink"")",5,145,72
164151,RETURN,-1,,"FS_TYPE_TO_NAME(READLINK, ""readlink"")",5,146,75
164157,RETURN,-1,,"FS_TYPE_TO_NAME(CHOWN, ""chown"")",5,147,78
164163,RETURN,-1,,"FS_TYPE_TO_NAME(FCHOWN, ""fchown"")",5,148,81
164169,RETURN,-1,,"FS_TYPE_TO_NAME(REALPATH, ""realpath"")",5,149,84
164175,RETURN,-1,,"FS_TYPE_TO_NAME(COPYFILE, ""copyfile"")",5,150,87
164181,RETURN,-1,,"FS_TYPE_TO_NAME(LCHOWN, ""lchown"")",5,151,90
164187,RETURN,-1,,"FS_TYPE_TO_NAME(STATFS, ""statfs"")",5,152,93
164193,RETURN,-1,,"FS_TYPE_TO_NAME(MKSTEMP, ""mkstemp"")",5,153,96
164199,RETURN,-1,,"FS_TYPE_TO_NAME(LUTIME, ""lutime"")",5,154,99
164202,RETURN,-1,,"return ""unknow"";",7,157,101
164288,RETURN,-1,,return nullptr;,5,256,1
164326,RETURN,-1,,return handle;,3,261,8
164467,RETURN,-1,,return UV_ENOSYS;,3,294,1
164484,RETURN,-1,,"return reading_ || closing_ || closed_ ?
      TransferMode::kUntransferable : TransferMode::kTransferable;",3,302,1
164519,RETURN,-1,,return ret;,3,310,5
164765,RETURN,1,,return {};,22,331,1
164774,RETURN,-1,,"return BaseObjectPtr<BaseObject> { FileHandle::New(bd, fd) };",3,335,7
164792,RETURN,1,,return;,28,343,1
165021,RETURN,-1,,return;,5,371,2
165183,RETURN,-1,,return Unwrap<FileHandle>(obj);,3,420,7
165300,RETURN,-1,,return close_resolver.As<Promise>();,5,459,2
165376,RETURN,-1,,return MaybeLocal<Promise>();,5,474,1
165530,RETURN,-1,,return scope.Escape(promise);,3,505,29
165566,RETURN,1,,return;,42,512,1
165601,RETURN,-1,,return fd;,3,527,4
165662,RETURN,1,,return UV_EOF;,5,549,1
165670,RETURN,1,,return 0;,5,554,1
165683,RETURN,-1,,return 0;,5,560,2
165790,RETURN,-1,,return UV_EBUSY;,9,587,1
165950,RETURN,-1,,return 0;,3,662,14
165959,RETURN,-1,,return 0;,3,667,2
165967,RETURN,-1,,"return new FileHandleCloseWrap(this, object);",3,673,1
165987,RETURN,-1,,return 1;,5,679,2
166109,RETURN,-1,,return 0;,3,698,8
166243,RETURN,1,,return;,15,747,1
166320,RETURN,-1,,return false;,5,777,1
166330,RETURN,-1,,return false;,5,782,2
166332,RETURN,-1,,return true;,3,784,3
167111,RETURN,1,,return;,24,837,1
167277,RETURN,1,,return req_wrap->Resolve(Undefined(req_wrap->env()->isolate()));,7,863,1
167332,RETURN,-1,,return req_wrap->Reject(error);,7,870,1
167338,RETURN,-1,,return req_wrap->Resolve(path);,5,872,8
167864,RETURN,-1,,return;,5,922,1
167931,RETURN,-1,,"return req_wrap->Reject(
          UVException(isolate, r, nullptr, req_wrap->syscall(), req->path));",7,942,1
167974,RETURN,-1,,return req_wrap->Reject(error);,7,949,1
168921,RETURN,-1,,return;,5,1036,2
168954,RETURN,-1,,return;,5,1044,2
169035,RETURN,-1,,return;,7,1071,2
169775,RETURN,-1,,return;,7,1169,1
170200,RETURN,-1,,return;,7,1203,1
170620,RETURN,-1,,return;,7,1235,1
171045,RETURN,-1,,return;,7,1275,1
172380,RETURN,-1,,return;,7,1401,1
172445,RETURN,-1,,return;,7,1413,3
174907,RETURN,-1,,return 0;,13,1613,1
174919,RETURN,-1,,return err;,11,1620,1
175047,RETURN,-1,,return UV_ENOTDIR;,15,1642,1
175049,RETURN,-1,,return UV_EEXIST;,13,1644,3
175056,RETURN,1,,return err;,24,1646,1
175062,RETURN,-1,,return 0;,3,1654,5
175139,RETURN,-1,,return err;,3,1749,8
175246,RETURN,-1,,return err;,3,1768,5
175670,RETURN,-1,,return;,11,1812,3
176186,RETURN,-1,,return;,7,1850,1
176251,RETURN,-1,,return;,7,1863,3
176684,RETURN,-1,,return;,7,1908,1
176786,RETURN,-1,,return;,9,1928,4
176843,RETURN,-1,,return;,9,1940,3
176998,RETURN,-1,,return JustVoid();,3,1992,9
177082,RETURN,1,,return;,59,2010,1
177546,RETURN,1,,return;,59,2048,1
177897,RETURN,-1,,return;,7,2064,1
177912,RETURN,1,,return;,24,2067,1
179575,RETURN,1,,return;,66,2267,1
179782,RETURN,1,,return;,9,2297,1
184836,RETURN,-1,,return;,7,2724,3
185132,RETURN,-1,,return true;,3,2819,8
185151,RETURN,-1,,return info;,3,2826,5
185671,RETURN,-1,,return binding_data_.get();,3,2942,1
186031,RETURN,-1,,return;,9,1633,1
186107,RETURN,-1,,return code == NGHTTP2_CANCEL;,5,2276,1
186175,RETURN,-1,,return observers[performance::NODE_PERFORMANCE_ENTRY_TYPE_HTTP2] != 0;,3,56,3
186205,RETURN,1,,return;,18,82,1
186221,RETURN,-1,,return;,5,88,2
186234,RETURN,1,,return;,18,94,1
186455,RETURN,-1,,return count;,3,231,9
186486,RETURN,-1,,return callback_.Get(env()->isolate());,3,250,1
186510,RETURN,-1,,"return Pack(session_->env(), count_, entries_);",3,261,1
186530,RETURN,-1,,"return Pack(state->env(), count, entries);",3,267,4
186595,RETURN,-1,,return scope.Escape(Undefined(env->isolate()));,5,284,1
186624,RETURN,-1,,"return scope.Escape(Buffer::New(env, ab, 0, ab->ByteLength())
                          .FromMaybe(Local<Value>()));",3,287,7
186826,RETURN,-1,,"return ""server"";",34,358,3
186830,RETURN,-1,,"return ""client"";",34,359,6
186856,RETURN,-1,,return;,5,374,2
186990,RETURN,-1,,return;,7,410,6
187337,RETURN,-1,,"return std::string(""Http2Session "") + TypeName() + "" ("" +
      std::to_string(static_cast<int64_t>(get_async_id())) + "")"";",3,550,1
187412,RETURN,-1,,"SET(bytes_read_string, received_bytes)",3,569,1
187449,RETURN,-1,,"SET(bytes_written_string, sent_bytes)",3,570,1
187486,RETURN,-1,,"SET(id_string, id)",3,571,1
187529,RETURN,-1,,"SET(time_to_first_byte_string, first_byte)",3,585,1
187572,RETURN,-1,,"SET(time_to_first_byte_sent_string, first_byte_sent)",3,586,1
187615,RETURN,-1,,"SET(time_to_first_header_string, first_header)",3,587,1
187617,RETURN,-1,,return obj;,3,590,8
187674,RETURN,-1,,"SET(bytes_written_string, data_sent)",3,608,1
187711,RETURN,-1,,"SET(bytes_read_string, data_received)",3,609,1
187748,RETURN,-1,,"SET(frames_received_string, frame_count)",3,610,1
187785,RETURN,-1,,"SET(frames_sent_string, frame_sent)",3,611,1
187822,RETURN,-1,,"SET(max_concurrent_streams_string, max_concurrent_streams)",3,612,1
187859,RETURN,-1,,"SET(ping_rtt_string, ping_rtt)",3,613,1
187896,RETURN,-1,,"SET(stream_average_duration_string, stream_average_duration)",3,614,1
187933,RETURN,-1,,"SET(stream_count_string, stream_count)",3,615,1
187968,RETURN,-1,,return MaybeLocal<Object>();,5,624,1
187970,RETURN,-1,,return obj;,3,628,11
187983,RETURN,1,,return;,5,634,1
188042,RETURN,1,,return;,5,654,1
188103,RETURN,1,,return;,5,677,1
188213,RETURN,-1,,return s != streams_.end() ? s->second : BaseObjectPtr<Http2Stream>();,3,731,3
188252,RETURN,-1,,"return streams_.size() < maxSize &&
         has_available_session_memory(sizeof(Http2Stream));",3,742,5
188325,RETURN,1,,return stream;,5,759,1
188343,RETURN,-1,,return stream;,3,765,5
188364,RETURN,1,,return frameLen;,15,775,1
188386,RETURN,-1,,return pad;,3,784,8
188398,RETURN,-1,,return maxPayloadLen;,3,792,2
188578,RETURN,-1,,"return (frame->hd.type == NGHTTP2_PUSH_PROMISE) ?
      frame->push_promise.promised_stream_id :
      frame->hd.stream_id;",3,872,1
188669,RETURN,1,,return NGHTTP2_ERR_CALLBACK_FAILURE;,9,898,1
188679,RETURN,-1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,7,905,3
188704,RETURN,-1,,return 0;,3,912,8
188743,RETURN,1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,5,931,1
188766,RETURN,-1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,5,938,2
188768,RETURN,-1,,return 0;,3,940,8
188806,RETURN,-1,,return session->HandleDataFrame(frame);,7,955,3
188872,RETURN,-1,,return 0;,3,982,6
188917,RETURN,-1,,return 1;,5,999,2
188980,RETURN,-1,,return 0;,3,1013,8
189049,RETURN,-1,,return NGHTTP2_STREAM_CLOSED;,5,1034,3
189053,RETURN,-1,,return NGHTTP2_COMPRESSION_ERROR;,5,1036,6
189057,RETURN,-1,,return NGHTTP2_FRAME_SIZE_ERROR;,5,1038,9
189061,RETURN,-1,,return NGHTTP2_FLOW_CONTROL_ERROR;,5,1040,12
189065,RETURN,-1,,return NGHTTP2_REFUSED_STREAM;,5,1042,15
189073,RETURN,-1,,return NGHTTP2_PROTOCOL_ERROR;,5,1046,22
189076,RETURN,-1,,return NGHTTP2_INTERNAL_ERROR;,5,1048,24
189126,RETURN,-1,,return 0;,5,1076,2
189170,RETURN,-1,,return 0;,3,1092,16
189192,RETURN,-1,,return 0;,3,1100,4
189263,RETURN,1,,return 0;,5,1119,1
189323,RETURN,-1,,return 0;,3,1135,17
189335,RETURN,-1,,return 0;,3,1149,1
189377,RETURN,1,,return 0;,5,1171,1
189404,RETURN,1,,return 0;,5,1181,1
189533,RETURN,-1,,return NGHTTP2_ERR_PAUSE;,5,1230,4
189535,RETURN,-1,,return 0;,3,1233,15
189589,RETURN,-1,,return padding;,3,1256,6
189668,RETURN,-1,,return 0;,3,1279,5
189675,RETURN,-1,,"return uv_buf_init(nullptr, size);",3,1285,1
189724,RETURN,-1,,return;,5,1297,2
189873,RETURN,1,,return;,5,1338,1
189985,RETURN,1,,return;,49,1381,1
190115,RETURN,-1,,return 1;,7,1421,3
190117,RETURN,-1,,return 0;,3,1424,6
190216,RETURN,1,,return;,68,1460,1
190471,RETURN,-1,,return;,7,1523,3
190482,RETURN,-1,,return;,5,1527,4
190493,RETURN,1,,return;,66,1530,1
190557,RETURN,1,,return;,7,1545,1
190565,RETURN,-1,,return;,5,1548,4
190581,RETURN,-1,,return;,5,1556,2
190685,RETURN,-1,,return;,5,1600,5
190712,RETURN,1,,return;,5,1621,1
190751,RETURN,1,,return;,45,1650,1
190943,RETURN,1,,return 0;,5,1732,1
190950,RETURN,1,,return 1;,5,1737,1
190994,RETURN,-1,,return 0;,5,1761,2
191010,RETURN,-1,,return 0;,5,1769,2
191119,RETURN,-1,,return 0;,3,1803,30
191156,RETURN,1,,return 0;,16,1820,1
191311,RETURN,-1,,return 0;,3,1861,10
191377,RETURN,-1,,return stream;,3,1884,11
191384,RETURN,-1,,return env()->allocate_managed_buffer(suggested_size);,3,1888,1
191442,RETURN,-1,,return;,5,1905,2
191616,RETURN,1,,return true;,7,1964,1
191618,RETURN,-1,,return false;,3,1966,2
191771,RETURN,-1,,return nullptr;,5,2015,1
191773,RETURN,-1,,"return new Http2Stream(session, obj, id, category, options);",3,2017,3
191899,RETURN,-1,,"return ""HttpStream "" + std::to_string(id()) + "" ("" +
         std::to_string(static_cast<int64_t>(get_async_id())) + "") ["" + sname +
         ""]"";",3,2073,5
191957,RETURN,-1,,return stream();,50,2089,1
191963,RETURN,-1,,"return nghttp2_session_find_stream(session_->session(), id_);",3,2092,1
191994,RETURN,-1,,return nullptr;,3,2105,1
192004,RETURN,1,,return UV_EPIPE;,5,2110,1
192022,RETURN,-1,,return 1;,3,2120,3
192031,RETURN,1,,return;,5,2129,1
192147,RETURN,-1,,return ret;,3,2191,12
192193,RETURN,-1,,return ret;,3,2209,8
192306,RETURN,-1,,return ret;,3,2247,8
192351,RETURN,-1,,return ret;,3,2266,8
192384,RETURN,-1,,return;,7,2289,2
192398,RETURN,-1,,return;,5,2299,2
192407,RETURN,1,,return;,5,2307,1
192487,RETURN,-1,,return stream;,3,2338,10
192516,RETURN,-1,,return 0;,3,2358,8
192532,RETURN,1,,return 0;,5,2365,1
192538,RETURN,-1,,return 0;,3,2368,5
192559,RETURN,-1,,return UV_EOF;,5,2388,1
192615,RETURN,-1,,return 0;,3,2404,8
192637,RETURN,1,,return true;,5,2418,1
192675,RETURN,-1,,return false;,5,2427,1
192706,RETURN,-1,,return true;,3,2437,12
192829,RETURN,1,,return 0;,16,2478,1
192996,RETURN,-1,,"return OnRead(handle, id, buf, length, flags, source, user_data);",7,2515,1
193005,RETURN,-1,,return NGHTTP2_ERR_DEFERRED;,5,2517,5
193049,RETURN,-1,,return amount;,3,2530,15
193220,RETURN,-1,,return args.GetReturnValue().Set(false);,5,2582,2
193657,RETURN,-1,,return args.GetReturnValue().Set(ret);,5,2706,2
193695,RETURN,1,,return;,5,2721,1
194231,RETURN,-1,,return args.GetReturnValue().Set(ret);,5,2859,2
194569,RETURN,1,,return;,5,2948,1
194855,RETURN,-1,,return ping;,3,3011,3
194887,RETURN,-1,,return false;,5,3019,1
194908,RETURN,1,,return false;,5,3025,1
194923,RETURN,-1,,return false;,5,3029,2
194943,RETURN,-1,,return true;,3,3040,9
194979,RETURN,-1,,return settings;,3,3050,3
195010,RETURN,-1,,return false;,5,3058,1
195032,RETURN,1,,return false;,5,3064,1
195047,RETURN,-1,,return false;,5,3068,2
195066,RETURN,-1,,return true;,3,3074,9
195099,RETURN,-1,,return callback_.Get(env()->isolate());,3,3092,1
195567,RETURN,1,,return;,25,3184,1
197400,RETURN,-1,,return;,5,27,2
197532,RETURN,-1,,return;,7,55,6
197604,RETURN,-1,,"return std::max(max_header_pairs, min_header_pairs);",3,71,3
197620,RETURN,-1,,"return std::max(max_header_pairs, min_header_pairs);",3,76,3
197641,RETURN,-1,,return ret;,3,84,5
197649,RETURN,-1,,"return IsZeroLength(-1, name, value);",3,91,1
197673,RETURN,1,,return true;,5,101,1
197683,RETURN,-1,,"return header_name != nullptr ||
      NgHeader<T>::rcbufferpointer_t::IsZeroLength(name);",3,104,4
197850,RETURN,-1,,return str;,7,166,3
197852,RETURN,-1,,return eternal.Get(env_->isolate());,5,168,5
197861,RETURN,-1,,"return rcbufferpointer_t::External::New(allocator, name_);",3,170,4
197875,RETURN,-1,,"return rcbufferpointer_t::External::New(allocator, value_);",3,176,1
197888,RETURN,-1,,return name_.str();,3,181,1
197897,RETURN,-1,,return value_.str();,3,186,1
197906,RETURN,-1,,return name_.len() + value_.len();,3,191,1
197920,RETURN,-1,,return flags_;,3,196,1
198059,RETURN,-1,,return c == ' ' || c == '\t';,3,91,1
198225,RETURN,1,,"return OneByteString(env->isolate(), str_, size_);",7,170,1
198235,RETURN,1,,return String::Empty(env->isolate());,7,172,1
198263,RETURN,-1,,return ToString(env);,5,181,2
198371,RETURN,-1,,return rv;,7,292,1
198379,RETURN,-1,,return 0;,5,296,5
198397,RETURN,-1,,return rv;,7,303,1
198405,RETURN,-1,,return 0;,5,307,5
198423,RETURN,-1,,return rv;,7,314,1
198470,RETURN,-1,,return 0;,5,334,8
198488,RETURN,-1,,return rv;,7,341,1
198522,RETURN,-1,,return 0;,5,355,8
198573,RETURN,1,,return 0;,7,385,1
198820,RETURN,-1,,return -1;,7,444,2
198823,RETURN,-1,,return static_cast<int>(val);,5,447,24
198838,RETURN,1,,return 0;,7,453,1
198878,RETURN,1,,return 0;,7,461,1
198923,RETURN,-1,,return HPE_USER;,7,470,3
198925,RETURN,-1,,return 0;,5,473,11
199001,RETURN,1,,return 0;,7,501,1
199050,RETURN,-1,,return -1;,7,513,2
199053,RETURN,-1,,return 0;,5,516,13
199062,RETURN,-1,,return 0;,5,522,2
199071,RETURN,-1,,return 0;,5,529,2
199648,RETURN,1,,return;,7,700,1
199728,RETURN,-1,,return;,7,724,2
199781,RETURN,1,,"return uv_buf_init(Malloc(suggested_size), suggested_size);",7,746,1
199806,RETURN,-1,,"return uv_buf_init(binding_data_->parser_buffer.data(), kAllocBufferSize);",5,752,4
199838,RETURN,-1,,return;,7,770,2
199844,RETURN,1,,return;,7,775,1
199862,RETURN,1,,return;,7,781,1
199888,RETURN,1,,return;,7,787,1
199998,RETURN,1,,return scope.Escape(Local<Value>());,7,839,1
200182,RETURN,-1,,return scope.Escape(e);,7,870,11
200193,RETURN,-1,,return scope.Escape(Local<Value>());,7,875,1
200199,RETURN,-1,,return scope.Escape(nread_obj);,5,877,18
200258,RETURN,-1,,"return Array::New(env()->isolate(), headers_v, num_values_ * 2);",5,889,3
200313,RETURN,1,,return;,7,901,1
200438,RETURN,-1,,return HPE_USER;,7,950,2
200440,RETURN,-1,,return 0;,5,952,3
200450,RETURN,-1,,return 0;,7,958,1
200459,RETURN,-1,,return HPE_PAUSED;,5,963,4
200465,RETURN,-1,,return true;,5,971,1
200527,RETURN,-1,,return rv;,7,1006,6
200581,RETURN,-1,,return lhs < rhs;,5,1020,1
200594,RETURN,-1,,return true;,5,1022,1
200605,RETURN,-1,,return false;,5,1024,1
200607,RETURN,-1,,return lhs->last_message_start_ < rhs->last_message_start_;,3,1027,2
200701,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1050,8
200782,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1069,8
200856,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1086,8
200952,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, 0));",5,1104,1
201099,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1138,25
201215,RETURN,1,,return;,32,1197,1
201817,RETURN,-1,,"return node::Start(argc, argv);",3,97,1
201939,RETURN,-1,,return;,5,68,1
201993,RETURN,-1,,return exit_code;,3,87,14
202143,RETURN,-1,,return env;,3,145,8
202269,RETURN,-1,,return BaseObject::TransferMode::kUntransferable;,3,51,1
202279,RETURN,-1,,return CloneForMessaging();,3,55,1
202285,RETURN,-1,,return {};,3,59,1
202290,RETURN,-1,,return Just(BaseObjectList {});,3,63,1
202300,RETURN,-1,,return Just(true);,3,68,1
202310,RETURN,-1,,return Just(true);,3,75,1
202322,RETURN,-1,,return main_message_buf_.data == nullptr;,3,82,1
202355,RETURN,1,,return MaybeLocal<Object>();,7,107,1
202368,RETURN,-1,,return host_objects_[id]->object(isolate);,7,110,2
202407,RETURN,1,,return MaybeLocal<Object>();,7,116,1
202414,RETURN,-1,,return scope.Escape(object.As<Object>());,5,118,10
202435,RETURN,-1,,return shared_array_buffers_[clone_id];,5,124,2
202451,RETURN,-1,,"return WasmModuleObject::FromCompiledModule(
        isolate, wasm_modules_[transfer_id]);",5,130,2
202470,RETURN,-1,,return &shared_value_conveyor_.value();,5,136,2
202600,RETURN,1,,return {};,27,182,1
202659,RETURN,-1,,return {};,11,195,1
202792,RETURN,1,,return {};,5,231,1
202811,RETURN,1,,return {};,5,234,1
202828,RETURN,1,,return {};,7,238,1
202833,RETURN,-1,,return handle_scope.Escape(return_value);,3,242,25
202881,RETURN,-1,,return wasm_modules_.size() - 1;,3,256,2
202950,RETURN,-1,,return MaybeLocal<Function>();,5,273,1
202957,RETURN,-1,,return emit_message_val.As<Function>();,3,276,7
203009,RETURN,-1,,return MaybeLocal<Function>();,5,287,1
203026,RETURN,-1,,return domexception_ctor;,3,291,8
203084,RETURN,-1,,return;,5,303,1
203119,RETURN,-1,,"return WriteHostObject(
          BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(object) });",7,322,1
203180,RETURN,-1,,"return serializer->WriteValue(env_->context(), normal_object);",7,338,6
203195,RETURN,-1,,return Nothing<bool>();,5,342,6
203229,RETURN,-1,,return Just(i);,9,352,1
203248,RETURN,-1,,return Just(i);,5,359,5
203257,RETURN,-1,,return Just(msg_->AddWASMModule(module->GetCompiledModule()));,5,364,1
203282,RETURN,-1,,return true;,5,370,2
203349,RETURN,1,,return Nothing<bool>();,18,381,1
203362,RETURN,1,,return Nothing<bool>();,9,383,1
203373,RETURN,-1,,return Just(true);,5,386,2
203435,RETURN,1,,return Nothing<bool>();,9,402,1
203463,RETURN,-1,,return Just(true);,5,411,2
203493,RETURN,-1,,return Nothing<bool>();,7,421,2
203522,RETURN,-1,,return Just(true);,9,427,2
203536,RETURN,-1,,return Nothing<bool>();,7,433,2
203570,RETURN,-1,,return Just(true);,5,442,12
203692,RETURN,-1,,return Nothing<bool>();,9,483,1
203750,RETURN,-1,,return Nothing<bool>();,9,508,2
203807,RETURN,-1,,return Nothing<bool>();,9,524,2
203854,RETURN,-1,,return Nothing<bool>();,9,536,2
203905,RETURN,-1,,return Nothing<bool>();,9,548,2
203929,RETURN,-1,,return Nothing<bool>();,5,558,5
203940,RETURN,1,,return Nothing<bool>();,5,561,1
203957,RETURN,-1,,return Nothing<bool>();,5,565,1
204002,RETURN,1,,return Nothing<bool>();,5,577,1
204026,RETURN,-1,,return Just(true);,3,584,22
204197,RETURN,1,,return;,5,656,1
204227,RETURN,1,,return;,7,661,1
204243,RETURN,1,,return;,5,666,1
204263,RETURN,-1,,return data_ == nullptr || IsHandleClosing();,3,674,1
204276,RETURN,1,,return;,26,678,1
204370,RETURN,1,,return nullptr;,5,715,1
204388,RETURN,-1,,return nullptr;,5,720,1
204442,RETURN,-1,,return port;,3,739,11
204499,RETURN,-1,,return env()->no_message_symbol();,7,762,1
204525,RETURN,-1,,return env()->no_message_symbol();,5,771,2
204537,RETURN,1,,return MaybeLocal<Value>();,35,774,1
204539,RETURN,-1,,"return received->Deserialize(env(), context, port_list);",3,776,5
204632,RETURN,-1,,return;,7,808,2
204800,RETURN,-1,,return;,7,854,4
204830,RETURN,-1,,return std::move(data_);,3,871,5
204843,RETURN,1,,return BaseObject::TransferMode::kUntransferable;,5,876,1
204849,RETURN,-1,,return BaseObject::TransferMode::kTransferable;,3,877,2
204860,RETURN,-1,,return Detach();,3,882,2
204869,RETURN,-1,,"return BaseObjectPtr<MessagePort> { MessagePort::New(
      env, context,
      static_unique_pointer_cast<MessagePortData>(std::move(self))) };",3,889,1
204939,RETURN,-1,,return serialization_maybe;,5,909,1
204947,RETURN,-1,,return Nothing<bool>();,5,912,1
204966,RETURN,1,,return res;,5,918,1
204981,RETURN,-1,,return res;,3,923,14
205002,RETURN,-1,,return Nothing<bool>();,5,932,2
205004,RETURN,-1,,"return group_->Dispatch(this, message, error);",3,934,2
205027,RETURN,1,,return Just(false);,28,942,1
205086,RETURN,1,,return Nothing<bool>();,9,950,1
205088,RETURN,-1,,return Just(true);,5,952,6
205124,RETURN,1,,return Nothing<bool>();,35,958,1
205133,RETURN,1,,return Just(false);,39,959,1
205160,RETURN,1,,return Nothing<bool>();,28,963,1
205169,RETURN,1,,return Just(false);,30,964,1
205197,RETURN,1,,return Nothing<bool>();,5,968,1
205206,RETURN,1,,return Just(false);,28,969,1
205248,RETURN,1,,return Nothing<bool>();,28,975,1
205257,RETURN,1,,return Just(false);,30,976,1
205285,RETURN,1,,return Nothing<bool>();,7,980,1
205320,RETURN,1,,return Nothing<bool>();,7,985,1
205351,RETURN,-1,,return Just(true);,3,991,18
205398,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(env, ""Not enough arguments to ""
                                       ""MessagePort.postMessage"");",5,1000,1
205419,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""Optional transferList argument must be an iterable"");",5,1007,1
205448,RETURN,1,,return;,7,1015,1
205480,RETURN,1,,return;,39,1019,1
205501,RETURN,1,,return;,33,1022,1
205506,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
              ""Optional options.transfer argument must be an iterable"");",11,1024,1
205544,RETURN,-1,,return;,5,1038,3
205629,RETURN,-1,,return;,5,1063,1
205662,RETURN,-1,,return;,5,1073,1
205751,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""The \""port\"" argument must be a MessagePort instance"");",5,1094,1
205788,RETURN,-1,,return;,5,1102,2
205864,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""The \""port\"" argument must be a MessagePort instance"");",5,1116,1
205900,RETURN,-1,,return;,5,1123,4
205932,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env, ""Invalid context argument"");",5,1131,1
206073,RETURN,1,,return templ;,5,1163,1
206140,RETURN,-1,,return GetMessagePortConstructorTemplate(env);,3,1179,4
206205,RETURN,-1,,return TransferMode::kUntransferable;,5,1200,1
206209,RETURN,-1,,return has_clone ? TransferMode::kCloneable : TransferMode::kTransferable;,3,1203,7
206222,RETURN,-1,,return TransferOrClone(TransferMode::kTransferable);,3,1207,1
206231,RETURN,-1,,return TransferOrClone(TransferMode::kCloneable);,3,1211,1
206299,RETURN,-1,,return {};,5,1227,1
206330,RETURN,-1,,return {};,7,1233,1
206390,RETURN,-1,,return {};,9,1243,1
206404,RETURN,1,,return {};,45,1246,1
206405,RETURN,-1,,"return std::make_unique<Data>(
          *deserialize_info_str, Global<Value>(env()->isolate(), data));",7,1247,8
206434,RETURN,1,,return TransferOrClone(TransferMode::kCloneable);,5,1253,1
206441,RETURN,1,,return {};,5,1255,1
206494,RETURN,-1,,return Nothing<BaseObjectList>();,5,1267,1
206503,RETURN,1,,return Just(BaseObjectList {});,30,1269,1
206531,RETURN,-1,,return Nothing<BaseObjectList>();,5,1274,1
206540,RETURN,1,,return Just(BaseObjectList {});,27,1276,1
206589,RETURN,1,,return Nothing<BaseObjectList>();,7,1283,1
206615,RETURN,-1,,return Just(ret);,3,1287,14
206648,RETURN,1,,return Nothing<bool>();,57,1296,1
206679,RETURN,-1,,return Nothing<bool>();,5,1301,1
206688,RETURN,1,,return Just(true);,30,1303,1
206708,RETURN,-1,,return Nothing<bool>();,5,1306,1
206710,RETURN,-1,,return Just(true);,3,1308,10
206736,RETURN,-1,,return {};,5,1328,2
206759,RETURN,1,,return {};,62,1332,1
206814,RETURN,-1,,return {};,5,1340,1
206815,RETURN,-1,,return BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(ret) };,3,1343,9
206852,RETURN,-1,,return ret;,3,1351,6
206918,RETURN,-1,,return group;,3,1364,7
207006,RETURN,-1,,return Nothing<bool>();,5,1394,2
207013,RETURN,1,,return Just(false);,5,1399,1
207035,RETURN,-1,,return Nothing<bool>();,5,1406,2
207071,RETURN,-1,,return Just(true);,9,1419,2
207079,RETURN,-1,,return Just(true);,3,1425,7
207225,RETURN,-1,,return;,5,1469,2
207259,RETURN,1,,return;,25,1476,1
207278,RETURN,-1,,return;,5,1480,2
207872,RETURN,1,,return;,7,40,1
207913,RETURN,-1,,return static_cast<T*>(wrap);,5,54,7
207921,RETURN,-1,,return handle(v8::Isolate::GetCurrent());,5,59,1
207934,RETURN,-1,,"return v8::Local<v8::Object>::New(isolate, persistent());",5,64,1
207953,RETURN,-1,,return handle_;,5,70,1
208118,RETURN,-1,,"return credentials::SafeGetenv(name, &text) ? text : """";",5,1283,2
208611,RETURN,1,,return;,34,298,1
209804,RETURN,1,,"return host.substr(1, host.size() - 2);",5,996,1
209818,RETURN,1,,return host;,5,998,1
209868,RETURN,-1,,return static_cast<int>(result);,3,1011,6
209894,RETURN,1,,"return HostPort{host, DebugOptions::kDefaultInspectorPort};",5,1020,1
209931,RETURN,-1,,"return HostPort{arg, DebugOptions::kDefaultInspectorPort};",9,1028,1
209938,RETURN,-1,,"return HostPort { """", ParseAndValidatePort(arg, errors) };",5,1031,2
209945,RETURN,-1,,"return HostPort { RemoveBrackets(arg.substr(0, colon)),
                    ParseAndValidatePort(arg.substr(colon + 1), errors) };",3,1034,7
210047,RETURN,-1,,return out.str();,3,1073,11
210077,RETURN,-1,,"return env->ThrowError(
        ""Should not query options before bootstrapping is done"");",5,1083,1
210176,RETURN,-1,,return;,5,1107,1
210330,RETURN,-1,,return;,11,1145,1
210355,RETURN,-1,,return;,11,1152,1
210440,RETURN,-1,,return;,11,1166,1
210610,RETURN,-1,,return;,7,1197,1
210629,RETURN,1,,return;,71,1202,1
210647,RETURN,-1,,return;,5,1207,1
210688,RETURN,-1,,return;,5,1213,1
210717,RETURN,-1,,"return env->ThrowError(
        ""Should not query options before bootstrapping is done"");",5,1223,1
210776,RETURN,1,,return;,21,1233,1
210802,RETURN,1,,return;,21,1238,1
211055,RETURN,-1,,return env_argv;,9,1315,2
211125,RETURN,-1,,return env_argv;,3,1339,8
211232,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,70,3
211304,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,85,3
211423,RETURN,1,,return;,5,109,1
211659,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,156,2
211767,RETURN,1,,return args.GetReturnValue().SetUndefined();,5,186,1
211798,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,192,3
212191,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,261,3
212295,RETURN,1,,return;,9,283,1
212339,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,296,3
212498,RETURN,-1,,return;,5,323,3
212765,RETURN,-1,,return;,5,377,3
213130,RETURN,-1,,return info;,3,70,3
213187,RETURN,-1,,return o;,3,88,2
213334,RETURN,-1,,return;,5,129,1
213402,RETURN,-1,,return MaybeLocal<Object>();,5,146,1
213435,RETURN,-1,,return MaybeLocal<Object>();,5,155,1
213437,RETURN,-1,,return obj;,3,158,4
213466,RETURN,-1,,return;,5,170,1
213484,RETURN,1,,return;,5,175,1
213716,RETURN,-1,,return val;,3,233,3
215428,RETURN,-1,,return delayed.get() == task;,11,438,1
215593,RETURN,-1,,"return std::max(thread_pool_size, 1);",3,52,2
215642,RETURN,-1,,return t;,5,71,8
215930,RETURN,-1,,return task;,5,161,5
216106,RETURN,-1,,return threads_.size();,3,226,1
216142,RETURN,-1,,return shared_from_this();,3,240,1
216177,RETURN,-1,,return;,5,256,1
216199,RETURN,-1,,return;,5,267,1
216292,RETURN,1,,return;,5,298,1
216536,RETURN,-1,,return;,5,396,2
216560,RETURN,1,,return;,23,403,1
216580,RETURN,-1,,return worker_thread_task_runner_->NumberOfWorkerThreads();,3,414,1
216596,RETURN,1,,return;,43,418,1
216724,RETURN,1,,return;,21,452,1
216865,RETURN,-1,,return did_work;,3,496,6
216915,RETURN,-1,,return data.first;,3,514,6
216937,RETURN,-1,,return data.second;,3,522,6
216960,RETURN,1,,return false;,21,527,1
216962,RETURN,-1,,return per_isolate->FlushForegroundTasksInternal();,3,528,3
216973,RETURN,-1,,"return v8::platform::NewDefaultJobHandle(
      this, priority, std::move(job_task), NumberOfWorkerThreads());",3,533,1
216993,RETURN,-1,,return ForIsolate(isolate)->IdleTasksEnabled();,3,538,1
217004,RETURN,-1,,return ForIsolate(isolate)->GetForegroundTaskRunner();,3,543,1
217014,RETURN,-1,,return uv_hrtime() / 1e9;,3,548,1
217022,RETURN,-1,,return SystemClockTimeMillis();,3,552,1
217029,RETURN,-1,,return tracing_controller_;,3,557,2
217035,RETURN,-1,,"return []() {
    fprintf(stderr, ""\n"");
    DumpBacktrace(stderr);
    fflush(stderr);
  };",3,561,1
217041,RETURN,-1,,return page_allocator_;,3,569,1
217084,RETURN,-1,,return std::unique_ptr<T>(nullptr);,5,589,1
217112,RETURN,-1,,return result;,3,593,6
217138,RETURN,-1,,return std::unique_ptr<T>(nullptr);,5,603,1
217166,RETURN,-1,,return result;,3,607,7
217241,RETURN,-1,,return result;,3,638,5
217429,RETURN,-1,,return 1;,3,68,15
217506,RETURN,1,,return MaybeLocal<Value>();,32,28,1
217524,RETURN,-1,,"return MakeCallback(isolate, process, ""emit"", arraysize(argv), argv, {0, 0});",3,32,8
217550,RETURN,1,,return Just(false);,33,39,1
217600,RETURN,-1,,return Nothing<bool>();,5,48,1
217609,RETURN,1,,return Just(false);,36,51,1
217643,RETURN,1,,return Nothing<bool>();,5,59,1
217672,RETURN,-1,,return Nothing<bool>();,7,65,1
217700,RETURN,-1,,return Nothing<bool>();,7,71,1
217721,RETURN,-1,,return Nothing<bool>();,5,80,1
217723,RETURN,-1,,return Just(true);,3,82,16
217745,RETURN,1,,return Nothing<bool>();,5,91,1
217760,RETURN,-1,,"return ProcessEmitWarningGeneric(env, message.c_str(), ""ExperimentalWarning"");",3,96,6
217775,RETURN,-1,,"return ProcessEmitWarningGeneric(
      env, warning, ""DeprecationWarning"", deprecation_code);",3,102,1
217915,RETURN,-1,,"return env->ThrowUVException(err, ""chdir"", nullptr, buf, *path);",5,91,5
217958,RETURN,-1,,return arr->Buffer();,3,102,4
217986,RETURN,1,,"return env->ThrowUVException(err, ""uv_getrusage"");",5,117,1
218084,RETURN,1,,"return env->ThrowUVException(err, ""uv_cwd"");",5,135,1
218171,RETURN,1,,return;,47,153,1
218188,RETURN,1,,return;,47,155,1
218259,RETURN,1,,"return env->ThrowUVException(err, ""uv_resident_set_memory"");",5,176,1
218342,RETURN,1,,"return env->ThrowUVException(err, ""uv_resident_set_memory"");",5,199,1
218936,RETURN,1,,"return env->ThrowUVException(err, ""uv_getrusage"");",5,324,1
219334,RETURN,-1,,"return static_cast<BindingData*>(
      v8_object->GetAlignedPointerFromInternalField(BaseObject::kSlot));",3,501,2
219485,RETURN,-1,,return true;,3,551,2
219507,RETURN,-1,,return info;,3,558,4
219828,RETURN,-1,,return a.first < b.first;,36,129,1
220006,RETURN,-1,,"return THROW_ERR_OUT_OF_RANGE(
      env,
      ""process.debugPort must be 0 or in range 1024 to 65535"");",5,67,1
220119,RETURN,-1,,return MaybeLocal<Object>();,5,92,1
220148,RETURN,-1,,return {};,5,101,1
220308,RETURN,-1,,return scope.Escape(process);,3,174,29
220596,RETURN,1,,return;,51,268,1
221026,RETURN,-1,,return info;,3,112,10
221140,RETURN,-1,,return scope.EscapeMaybe(result);,3,172,6
221179,RETURN,-1,,return MaybeLocal<Value>();,5,183,1
221182,RETURN,-1,,return scope.Escape(result);,3,188,7
221328,RETURN,1,,return;,47,265,1
221335,RETURN,-1,,return PersistentToLocal::Strong(context_);,3,278,1
221370,RETURN,-1,,return MaybeLocal<Value>();,5,307,1
221392,RETURN,-1,,return MaybeLocal<Value>();,7,315,1
221411,RETURN,-1,,return MaybeLocal<Value>();,5,324,1
221430,RETURN,-1,,return MaybeLocal<Value>();,5,332,1
221479,RETURN,-1,,return MaybeLocal<Value>();,5,340,1
221481,RETURN,-1,,return v8::True(isolate_);,3,343,15
221558,RETURN,-1,,return !std::iswspace(ch);,17,533,1
221572,RETURN,-1,,return a.first < b.first;,36,811,1
222762,RETURN,-1,,return writer->json_objectend();,7,389,1
222896,RETURN,-1,,return Nothing<std::string>();,5,416,1
222999,RETURN,-1,,return Nothing<std::string>();,5,435,1
223006,RETURN,-1,,"return Just<>(std::string(*sv, sv.length()));",3,438,8
223067,RETURN,-1,,return;,5,458,2
223135,RETURN,-1,,return;,5,481,2
223245,RETURN,-1,,"return PrintJavaScriptStack(writer, isolate, trigger);",5,509,1
223284,RETURN,-1,,return;,5,518,2
224527,RETURN,-1,,"return """";",7,901,4
224591,RETURN,-1,,return filename;,3,925,11
224618,RETURN,-1,,"return TriggerNodeReport(isolate, env, message, trigger, name, error);",3,938,4
224635,RETURN,-1,,"return TriggerNodeReport(env != nullptr ? env->isolate() : nullptr,
                           env,
                           message,
                           trigger,
                           name,
                           error);",3,947,1
225742,RETURN,-1,,return;,5,18,2
226742,RETURN,-1,,"return {blob, size};",5,125,4
226772,RETURN,-1,,return deserializer.Read<SeaResource>();,5,144,6
226816,RETURN,-1,,"return static_cast<SeaFlags>(static_cast<uint32_t>(x) |
                               static_cast<uint32_t>(y));",3,40,1
226832,RETURN,-1,,"return static_cast<SeaFlags>(static_cast<uint32_t>(x) &
                               static_cast<uint32_t>(y));",3,45,1
226848,RETURN,-1,,return x = x | y;,3,50,1
226940,RETURN,-1,,return written_total;,3,81,12
226998,RETURN,-1,,"return {flags, code};",3,108,12
227025,RETURN,-1,,return result;,3,131,5
227036,RETURN,-1,,return sea_resource;,3,146,3
227042,RETURN,-1,,return postject_has_resource();,3,150,1
227061,RETURN,-1,,return;,5,156,2
227138,RETURN,-1,,"return {argc, argv};",3,177,2
227184,RETURN,-1,,return std::nullopt;,5,198,4
227202,RETURN,-1,,return std::nullopt;,5,205,2
227234,RETURN,-1,,return std::nullopt;,5,214,2
227266,RETURN,-1,,return std::nullopt;,5,223,2
227289,RETURN,-1,,return std::nullopt;,5,232,2
227306,RETURN,-1,,return result;,3,238,16
227343,RETURN,-1,,return ExitCode::kGenericUserError;,5,248,4
227404,RETURN,-1,,return ExitCode::kGenericUserError;,5,261,4
227414,RETURN,-1,,return ExitCode::kNoFailure;,3,267,14
227442,RETURN,-1,,return code;,5,277,3
227444,RETURN,-1,,return ExitCode::kGenericUserError;,3,280,4
227721,RETURN,1,,return;,24,118,1
227775,RETURN,-1,,"return ValueSerializer::Delegate::GetSharedArrayBufferId(
        isolate, shared_array_buffer);",5,132,1
227811,RETURN,1,,return Nothing<uint32_t>();,21,142,1
227813,RETURN,-1,,return id.ToLocalChecked()->Uint32Value(env()->context());,3,144,6
227872,RETURN,-1,,"return ValueSerializer::Delegate::WriteHostObject(isolate, input);",5,157,1
227904,RETURN,1,,return Nothing<bool>();,5,166,1
227906,RETURN,-1,,return Just(true);,3,168,7
227929,RETURN,-1,,"return THROW_ERR_CONSTRUCT_CALL_REQUIRED(
        env, ""Class constructor Serializer cannot be invoked without 'new'"");",5,174,1
228141,RETURN,1,,return;,23,227,1
228151,RETURN,1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        ctx->env(), ""arrayBuffer must be an ArrayBuffer"");",5,230,1
228184,RETURN,-1,,return;,3,235,8
228223,RETURN,1,,return;,26,243,1
228296,RETURN,1,,return;,5,255,1
228357,RETURN,1,,return;,26,267,1
228390,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        ctx->env(), ""source must be a TypedArray or a DataView"");",5,277,1
228476,RETURN,-1,,return ValueDeserializer::Delegate::ReadHostObject(isolate);,5,303,1
228513,RETURN,1,,return MaybeLocal<Object>();,5,314,1
228537,RETURN,-1,,return MaybeLocal<Object>();,5,319,2
228539,RETURN,-1,,return return_value.As<Object>();,3,322,9
228564,RETURN,-1,,"return THROW_ERR_CONSTRUCT_CALL_REQUIRED(
        env, ""Class constructor Deserializer cannot be invoked without 'new'"");",5,328,1
228577,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        env, ""buffer must be a TypedArray or a DataView"");",5,333,1
228728,RETURN,1,,return;,23,364,1
228760,RETURN,-1,,return;,5,369,3
228792,RETURN,-1,,return;,5,375,3
228793,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
      ctx->env(), ""arrayBuffer must be an ArrayBuffer or SharedArrayBuffer"");",3,378,7
228858,RETURN,1,,"return ctx->env()->ThrowError(""ReadUint32() failed"");",12,396,1
228867,RETURN,-1,,return args.GetReturnValue().Set(value);,3,397,7
228905,RETURN,1,,"return ctx->env()->ThrowError(""ReadUint64() failed"");",12,406,1
228954,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, ret, arraysize(ret)));",3,417,15
228999,RETURN,1,,"return ctx->env()->ThrowError(""ReadDouble() failed"");",12,426,1
229008,RETURN,-1,,return args.GetReturnValue().Set(value);,3,427,7
229055,RETURN,1,,return;,31,436,1
229080,RETURN,1,,"return ctx->env()->ThrowError(""ReadRawBytes() failed"");",12,441,1
229537,RETURN,-1,,return nullptr;,5,25,2
229539,RETURN,-1,,return realm;,3,27,7
229567,RETURN,-1,,return realm->context();,5,36,1
229572,RETURN,-1,,return MaybeLocal<Context>();,3,38,6
229658,RETURN,-1,,return ctx;,3,72,3
229683,RETURN,-1,,return MaybeLocal<Value>();,7,113,1
229685,RETURN,-1,,return v8::True(isolate_);,3,117,4
229725,RETURN,-1,,return nullptr;,3,10,1
229771,RETURN,-1,,return;,7,1208,1
230017,RETURN,-1,,return output;,3,58,2
230038,RETURN,-1,,return output;,3,68,4
230061,RETURN,-1,,return output;,3,78,4
230086,RETURN,-1,,return output;,3,88,4
230123,RETURN,-1,,return output;,3,94,2
230148,RETURN,-1,,return output;,3,104,4
230197,RETURN,-1,,return output;,3,120,2
230276,RETURN,-1,,return output;,3,142,2
230338,RETURN,-1,,"return v8::StartupData{buf.release(), raw_size};",3,190,9
230382,RETURN,-1,,return written_total;,3,203,7
230437,RETURN,-1,,return result;,3,225,11
230491,RETURN,-1,,return written_total;,3,241,7
230529,RETURN,-1,,return result;,3,264,7
230578,RETURN,-1,,return written_total;,3,279,7
230626,RETURN,-1,,return result;,3,306,9
230696,RETURN,-1,,return written_total;,3,325,9
230724,RETURN,-1,,return result;,3,342,5
230758,RETURN,-1,,return written_total;,3,355,5
230786,RETURN,-1,,return result;,3,370,5
230820,RETURN,-1,,return written_total;,3,384,5
230858,RETURN,-1,,return result;,3,403,7
230910,RETURN,-1,,return written_total;,3,420,7
230943,RETURN,-1,,return result;,3,439,6
230986,RETURN,-1,,return written_total;,3,453,6
231016,RETURN,-1,,return result;,3,464,7
231079,RETURN,-1,,return written_total;,3,481,8
231137,RETURN,-1,,return result;,3,498,12
231232,RETURN,-1,,return written_total;,3,522,13
231282,RETURN,-1,,return result;,3,549,9
231371,RETURN,-1,,return written_total;,3,573,14
231467,RETURN,-1,,return w.sink;,3,606,16
231506,RETURN,-1,,return data != nullptr ? data->impl_ : nullptr;,3,618,1
231519,RETURN,-1,,"return EmbedderSnapshotData::Pointer{new EmbedderSnapshotData(this, false)};",3,622,1
231532,RETURN,-1,,"return FromBlob(out, ReadFileSync(in));",3,626,1
231543,RETURN,-1,,"return FromBlob(out, std::string_view(in.data(), in.size()));",3,630,1
231612,RETURN,-1,,return false;,5,646,1
231664,RETURN,-1,,return true;,3,657,19
231693,RETURN,-1,,return false;,5,667,2
231716,RETURN,-1,,return false;,5,676,2
231739,RETURN,-1,,return false;,5,685,2
231768,RETURN,-1,,return false;,5,700,2
231770,RETURN,-1,,return true;,3,704,7
231884,RETURN,-1,,"return std::string(buf) + std::string(""_cache_data"");",3,729,7
231952,RETURN,-1,,return buf;,3,742,4
232142,RETURN,-1,,return registry->external_references();,3,888,3
232232,RETURN,-1,,return ExitCode::kBootstrapFailure;,5,909,2
232306,RETURN,-1,,return ExitCode::kGenericUserError;,11,945,1
232328,RETURN,-1,,return exit_code;,11,953,1
232330,RETURN,-1,,"return CreateSnapshot(out, setup.get(), static_cast<uint8_t>(snapshot_type));",3,959,10
232442,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,9,987,1
232460,RETURN,-1,,return ExitCode::kBootstrapFailure;,7,996,1
232577,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,5,1050,1
232653,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,5,1069,1
232657,RETURN,-1,,return ExitCode::kNoFailure;,3,1071,17
232684,RETURN,-1,,return exit_code;,5,1080,1
232690,RETURN,-1,,return exit_code;,3,1083,6
232732,RETURN,-1,,return;,5,1109,2
232764,RETURN,-1,,return;,5,1119,2
232816,RETURN,-1,,"return StartupData{nullptr, 0};",5,1170,1
232901,RETURN,-1,,"return StartupData{reinterpret_cast<const char*>(info),
                     static_cast<int>(info->length)};",3,1193,13
232967,RETURN,1,,return;,37,1236,1
233332,RETURN,-1,,return true;,3,1340,4
233351,RETURN,-1,,return info;,3,1347,5
233608,RETURN,-1,,return addr;,3,36,5
233623,RETURN,-1,,"return uv_ip4_addr(
          host,
          port,
          reinterpret_cast<sockaddr_in*>(addr)) == 0;",7,47,3
233634,RETURN,-1,,"return uv_ip6_addr(
          host,
          port,
          reinterpret_cast<sockaddr_in6*>(addr)) == 0;",7,52,6
233652,RETURN,-1,,"return New(AF_INET, host, port, addr) || New(AF_INET6, host, port, addr);",3,65,1
233672,RETURN,-1,,"return ToSockAddr(family, host, port,
                    reinterpret_cast<sockaddr_storage*>(addr->storage()));",3,73,1
233758,RETURN,-1,,return hash;,3,97,4
233765,RETURN,-1,,"return FromUVHandle(uv_tcp_getsockname, handle);",3,101,1
233774,RETURN,-1,,"return FromUVHandle(uv_udp_getsockname, handle);",3,105,1
233783,RETURN,-1,,"return FromUVHandle(uv_tcp_getpeername, handle);",3,109,1
233792,RETURN,-1,,"return FromUVHandle(uv_udp_getpeername, handle);",3,113,1
233837,RETURN,-1,,"return memcmp(&one_in->sin_addr, &two_in->sin_addr, sizeof(uint32_t)) == 0;",3,126,5
233875,RETURN,-1,,"return memcmp(&one_in->sin6_addr, &two_in->sin6_addr, 16) == 0;",3,136,5
233921,RETURN,-1,,"return memcmp(ptr, mask, sizeof(mask)) == 0 &&
         memcmp(ptr + sizeof(mask),
                &check_ipv4->sin_addr,
                sizeof(uint32_t)) == 0;",3,150,7
233990,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,167,1
234003,RETURN,1,,return SocketAddress::CompareResult::SAME;,5,169,1
234011,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,171,1
234059,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,183,1
234072,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,185,1
234078,RETURN,-1,,return SocketAddress::CompareResult::SAME;,3,186,8
234126,RETURN,1,,return SocketAddress::CompareResult::NOT_COMPARABLE;,5,201,1
234151,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,209,1
234164,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,211,1
234170,RETURN,-1,,return SocketAddress::CompareResult::SAME;,3,212,11
234213,RETURN,-1,,"return (htonl(ip_in->sin_addr.s_addr) & mask) ==
         (htonl(net_in->sin_addr.s_addr) & mask);",3,226,7
234243,RETURN,1,,"return compare_ipv6(ip, net) == SocketAddress::CompareResult::SAME;",5,237,1
234311,RETURN,1,,return false;,5,249,1
234333,RETURN,-1,,return (p1[len] & mask) == (p2[len] & mask);,3,256,17
234357,RETURN,1,,"return compare_ipv4_ipv6(ip, net) == SocketAddress::CompareResult::SAME;",5,265,1
234455,RETURN,1,,return false;,5,281,1
234470,RETURN,-1,,return (ptr[0] & mask) == (p2[len] & mask);,3,287,21
234494,RETURN,1,,"return compare_ipv4_ipv6(net, ip) == SocketAddress::CompareResult::SAME;",5,295,1
234552,RETURN,1,,return false;,5,308,1
234563,RETURN,-1,,return (check & m) == (htonl(net_in->sin_addr.s_addr) & m);,3,313,14
234594,RETURN,-1,,"return is_match_ipv4(*this, other);",23,325,3
234601,RETURN,-1,,"return is_match_ipv4_ipv6(*this, other);",24,326,6
234617,RETURN,-1,,"return is_match_ipv4_ipv6(other, *this);",23,331,3
234624,RETURN,-1,,"return is_match_ipv6(*this, other);",24,332,6
234630,RETURN,-1,,return false;,3,336,2
234650,RETURN,-1,,"return compare_ipv4(*this, other);",23,344,3
234657,RETURN,-1,,"return compare_ipv4_ipv6(*this, other);",24,345,6
234696,RETURN,-1,,return c;,15,356,5
234704,RETURN,-1,,return SocketAddress::CompareResult::LESS_THAN;,15,358,8
234716,RETURN,-1,,return SocketAddress::CompareResult::GREATER_THAN;,15,360,11
234725,RETURN,-1,,"return compare_ipv6(*this, other);",24,364,6
234731,RETURN,-1,,return SocketAddress::CompareResult::NOT_COMPARABLE;,3,368,2
234756,RETURN,-1,,"return in_network_ipv4(*this, other, prefix);",23,378,3
234764,RETURN,-1,,"return in_network_ipv4_ipv6(*this, other, prefix);",24,379,6
234781,RETURN,-1,,"return in_network_ipv6_ipv4(*this, other, prefix);",23,384,3
234789,RETURN,-1,,"return in_network_ipv6(*this, other, prefix);",24,385,6
234796,RETURN,-1,,return false;,3,390,2
234979,RETURN,1,,return true;,7,439,1
234981,RETURN,-1,,return parent_ ? parent_->Apply(address) : false;,3,441,4
235012,RETURN,-1,,return this->address->is_match(*address.get());,3,462,1
235052,RETURN,-1,,return ret;,3,470,6
235059,RETURN,-1,,"return *address.get() >= *start.get() &&
         *address.get() <= *end.get();",3,475,1
235120,RETURN,-1,,return ret;,3,486,8
235127,RETURN,-1,,"return address->is_in_network(*network.get(), prefix);",3,491,1
235175,RETURN,-1,,return ret;,3,500,7
235201,RETURN,1,,return MaybeLocal<Array>();,5,507,1
235203,RETURN,-1,,"return Array::New(env->isolate(), rules.data(), rules.size());",3,508,5
235237,RETURN,1,,return false;,5,515,1
235261,RETURN,1,,return false;,7,519,1
235268,RETURN,-1,,return true;,3,522,3
235360,RETURN,-1,,return BaseObjectPtr<SocketAddressBlockListWrap>();,5,560,1
235377,RETURN,-1,,return wrap;,3,565,5
235412,RETURN,-1,,return BaseObjectPtr<SocketAddressBlockListWrap>();,5,575,1
235434,RETURN,-1,,return wrap;,3,583,5
235588,RETURN,1,,return args.GetReturnValue().Set(false);,5,624,1
235682,RETURN,-1,,return;,5,647,1
235847,RETURN,-1,,return std::make_unique<TransferData>(this);,3,688,1
235861,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,694,1
235951,RETURN,-1,,return tmpl;,3,712,3
235997,RETURN,-1,,"return New(env, std::move(blocklist_));",3,738,1
236021,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,747,1
236101,RETURN,-1,,return tmpl;,3,764,3
236152,RETURN,-1,,return BaseObjectPtr<SocketAddressBase>();,5,782,1
236154,RETURN,-1,,"return MakeBaseObject<SocketAddressBase>(env, obj, std::move(address));",3,785,3
236286,RETURN,1,,return THROW_ERR_INVALID_ADDRESS(env);,5,804,1
236370,RETURN,1,,return;,5,821,1
236554,RETURN,1,,return;,53,852,1
236586,RETURN,-1,,return std::make_unique<TransferData>(this);,3,871,1
236612,RETURN,-1,,"return SocketAddressBase::Create(env, std::move(address_));",3,882,1
237073,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,5,39,1
237081,RETURN,-1,,"return maybe_async_id->IsNumber()
      ? maybe_async_id->NumberValue(env->context())
      : v8::Just(AsyncWrap::kInvalidAsyncId);",3,41,3
237151,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,7,58,1
237159,RETURN,-1,,"return maybe_async_id->IsNumber()
        ? maybe_async_id->NumberValue(env->context())
        : v8::Just(AsyncWrap::kInvalidAsyncId);",5,60,3
237182,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,7,64,1
237248,RETURN,1,,return;,51,78,1
237357,RETURN,-1,,return;,5,107,1
237405,RETURN,1,,return;,27,121,1
237421,RETURN,1,,return;,35,123,1
237450,RETURN,1,,return;,31,130,1
237466,RETURN,1,,return;,39,133,1
238281,RETURN,-1,,return categories_;,56,41,1
238393,RETURN,1,,return;,59,69,1
238406,RETURN,1,,return;,16,71,1
239693,RETURN,-1,,return true;,3,52,2
239715,RETURN,-1,,return info;,3,59,4
239805,RETURN,-1,,"return args.GetReturnValue().Set(FIXED_ONE_BYTE_STRING(env->isolate(), """"));",5,80,1
239841,RETURN,-1,,"return args.GetReturnValue().Set(FIXED_ONE_BYTE_STRING(env->isolate(), """"));",5,89,1
239946,RETURN,-1,,"return args.GetReturnValue().Set(
        String::NewFromUtf8(env->isolate(), """").ToLocalChecked());",5,108,1
240116,RETURN,-1,,"return ada::can_parse(std::string_view(input.data, input.length));",3,145,1
240423,RETURN,-1,,return args.GetReturnValue().Set(false);,7,211,1
240461,RETURN,-1,,return args.GetReturnValue().Set(false);,5,219,1
240736,RETURN,-1,,return args.GetReturnValue().Set(false);,5,295,1
241006,RETURN,-1,,return ada::href_from_file(escaped_file_path);,3,357,3
241178,RETURN,1,,return;,5,101,1
241270,RETURN,1,,return;,5,119,1
241381,RETURN,-1,,return;,5,145,4
241404,RETURN,1,,return;,5,152,1
241438,RETURN,1,,return;,5,158,1
241447,RETURN,1,,return args.GetReturnValue().Set(entries);,5,161,1
241470,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(env->isolate(), ret, arraysize(ret)));",3,167,10
241599,RETURN,-1,,return true;,5,206,2
241630,RETURN,-1,,return true;,3,223,6
241662,RETURN,-1,,return info;,3,232,6
241839,RETURN,1,,return;,36,269,1
241906,RETURN,1,,return;,36,279,1
241972,RETURN,1,,return;,53,288,1
243019,RETURN,-1,,return true;,3,148,6
243087,RETURN,-1,,return info;,3,169,5
243587,RETURN,-1,,"return ""Scavenge"";",7,244,3
243595,RETURN,-1,,"return ""MarkSweepCompact"";",7,246,6
243603,RETURN,-1,,"return ""IncrementalMarking"";",7,248,9
243611,RETURN,-1,,"return ""ProcessWeakCallbacks"";",7,250,12
243614,RETURN,-1,,"return ""Unknown"";",7,252,14
243847,RETURN,-1,,return;,5,304,1
243909,RETURN,-1,,return;,5,322,1
243997,RETURN,-1,,return &writer_;,3,356,1
244004,RETURN,-1,,return &out_stream_;,3,360,1
244064,RETURN,-1,,return;,5,374,1
244190,RETURN,-1,,return;,5,399,1
244334,RETURN,1,,return;,32,427,1
245260,RETURN,1,,return MaybeLocal<Value>();,5,63,1
245310,RETURN,-1,,return MaybeLocal<Value>();,5,70,1
245312,RETURN,-1,,return e;,3,73,16
245363,RETURN,1,,return;,7,87,1
246099,RETURN,-1,,return UVWASI_EINVAL;,3,233,1
246128,RETURN,1,,return EinvalError<R>();,34,247,1
246150,RETURN,-1,,return EinvalError<R>();,5,252,2
246166,RETURN,-1,,"return F(*wasi,
           {reinterpret_cast<char*>(memory), options.wasm_memory->length()},
           args...);",3,257,8
246197,RETURN,-1,,return value->IsUint32();,3,271,1
246207,RETURN,-1,,return value.As<Uint32>()->Value();,3,276,1
246220,RETURN,-1,,return value->IsBigInt();,3,281,1
246241,RETURN,-1,,return js_value->Uint64Value(&lossless);,3,288,3
246253,RETURN,-1,,return value->IsBigInt();,3,293,1
246274,RETURN,-1,,return js_value->Int64Value(&lossless);,3,300,3
246288,RETURN,-1,,return CheckType<T>(info[i]);,3,305,1
246308,RETURN,1,,return false;,37,313,1
246310,RETURN,-1,,"return CheckTypes<Ts...>(info, i + 1, args...);",3,314,2
246322,RETURN,-1,,"return CheckTypes<Args...>(info, 0, Args()...);",3,319,1
246332,RETURN,-1,,return true;,3,324,1
246395,RETURN,-1,,return;,5,361,2
246409,RETURN,-1,,return;,5,365,2
246432,RETURN,-1,,return;,5,372,2
246538,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, argv_buf_offset, wasi.uvw_.argv_buf_size)",3,402,1
246564,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, argv_offset, wasi.uvw_.argc * UVWASI_SERDES_SIZE_uint32_t)",3,403,1
246641,RETURN,-1,,return err;,3,418,11
246674,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, argc_offset, UVWASI_SERDES_SIZE_size_t)",3,426,1
246695,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, argv_buf_offset, UVWASI_SERDES_SIZE_size_t)",3,427,1
246729,RETURN,-1,,return err;,3,437,9
246762,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, resolution_ptr, UVWASI_SERDES_SIZE_timestamp_t)",3,445,1
246788,RETURN,-1,,return err;,3,452,7
246823,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, time_ptr, UVWASI_SERDES_SIZE_timestamp_t)",3,461,1
246850,RETURN,-1,,return err;,3,468,7
246891,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, environ_buf_offset, wasi.uvw_.env_buf_size)",3,476,1
246917,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size,
                         environ_offset,
                         wasi.uvw_.envc * UVWASI_SERDES_SIZE_uint32_t)",3,478,1
246994,RETURN,-1,,return err;,3,498,11
247027,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, envc_offset, UVWASI_SERDES_SIZE_size_t)",3,506,1
247048,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, env_buf_offset, UVWASI_SERDES_SIZE_size_t)",3,507,1
247082,RETURN,-1,,return err;,3,518,9
247101,RETURN,-1,,"return uvwasi_fd_advise(&wasi.uvw_, fd, offset, len, advice);",3,528,2
247126,RETURN,-1,,"return uvwasi_fd_allocate(&wasi.uvw_, fd, offset, len);",3,534,2
247146,RETURN,-1,,"return uvwasi_fd_close(&wasi.uvw_, fd);",3,539,2
247164,RETURN,-1,,"return uvwasi_fd_datasync(&wasi.uvw_, fd);",3,544,2
247202,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_fdstat_t)",3,552,1
247229,RETURN,-1,,return err;,3,559,7
247244,RETURN,-1,,"return uvwasi_fd_fdstat_set_flags(&wasi.uvw_, fd, flags);",3,567,2
247267,RETURN,-1,,"return uvwasi_fd_fdstat_set_rights(
      &wasi.uvw_, fd, fs_rights_base, fs_rights_inheriting);",3,580,2
247307,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_filestat_t)",3,589,1
247334,RETURN,-1,,return err;,3,596,7
247349,RETURN,-1,,"return uvwasi_fd_filestat_set_size(&wasi.uvw_, fd, st_size);",3,604,2
247374,RETURN,-1,,"return uvwasi_fd_filestat_set_times(
      &wasi.uvw_, fd, st_atim, st_mtim, fst_flags);",3,619,2
247422,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_iovec_t)",3,637,1
247443,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nread_ptr, UVWASI_SERDES_SIZE_size_t)",3,639,1
247475,RETURN,-1,,return err;,5,646,1
247505,RETURN,-1,,return err;,3,654,11
247538,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_prestat_t)",3,662,1
247565,RETURN,-1,,return err;,3,669,7
247600,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,678,1
247603,RETURN,-1,,"return uvwasi_fd_prestat_dir_name(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,679,3
247655,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_ciovec_t)",3,697,1
247676,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nwritten_ptr, UVWASI_SERDES_SIZE_size_t)",3,699,1
247708,RETURN,-1,,return err;,5,706,1
247738,RETURN,-1,,return err;,3,715,11
247776,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_iovec_t)",3,725,1
247797,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nread_ptr, UVWASI_SERDES_SIZE_size_t)",3,727,1
247829,RETURN,-1,,return err;,5,734,1
247858,RETURN,-1,,return err;,3,742,11
247897,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,759,1
247918,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, bufused_ptr, UVWASI_SERDES_SIZE_size_t)",3,760,1
247952,RETURN,-1,,return err;,3,767,8
247967,RETURN,-1,,"return uvwasi_fd_renumber(&wasi.uvw_, from, to);",3,772,2
248010,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, newoffset_ptr, UVWASI_SERDES_SIZE_filesize_t)",3,782,1
248038,RETURN,-1,,return err;,3,790,7
248051,RETURN,-1,,"return uvwasi_fd_sync(&wasi.uvw_, fd);",3,795,2
248089,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, offset_ptr, UVWASI_SERDES_SIZE_filesize_t)",3,803,1
248115,RETURN,-1,,return err;,3,811,7
248153,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_ciovec_t)",3,826,1
248174,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nwritten_ptr, UVWASI_SERDES_SIZE_size_t)",3,828,1
248206,RETURN,-1,,return err;,5,835,1
248235,RETURN,-1,,return err;,3,843,11
248270,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,852,1
248289,RETURN,-1,,return err;,3,855,5
248326,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,870,1
248347,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, UVWASI_SERDES_SIZE_filestat_t)",3,871,1
248382,RETURN,-1,,return err;,3,878,8
248425,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,899,1
248428,RETURN,-1,,"return uvwasi_path_filestat_set_times(&wasi.uvw_,
                                        fd,
                                        flags,
                                        &memory.data[path_ptr],
                                        path_len,
                                        st_atim,
                                        st_mtim,
                                        fst_flags);",3,900,3
248487,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,928,1
248508,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,929,1
248511,RETURN,-1,,"return uvwasi_path_link(&wasi.uvw_,
                          old_fd,
                          old_flags,
                          &memory.data[old_path_ptr],
                          old_path_len,
                          new_fd,
                          &memory.data[new_path_ptr],
                          new_path_len);",3,930,4
248579,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,962,1
248600,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, fd_ptr, UVWASI_SERDES_SIZE_fd_t)",3,963,1
248642,RETURN,-1,,return err;,3,978,8
248683,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,997,1
248704,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,998,1
248725,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, bufused_ptr, UVWASI_SERDES_SIZE_size_t)",3,999,1
248765,RETURN,-1,,return err;,3,1011,9
248800,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,1020,1
248803,RETURN,-1,,"return uvwasi_path_remove_directory(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,1021,3
248856,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,1041,1
248877,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,1042,1
248880,RETURN,-1,,"return uvwasi_path_rename(&wasi.uvw_,
                            old_fd,
                            &memory.data[old_path_ptr],
                            old_path_len,
                            new_fd,
                            &memory.data[new_path_ptr],
                            new_path_len);",3,1043,4
248939,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,1066,1
248960,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,1067,1
248963,RETURN,-1,,"return uvwasi_path_symlink(&wasi.uvw_,
                             &memory.data[old_path_ptr],
                             old_path_len,
                             fd,
                             &memory.data[new_path_ptr],
                             new_path_len);",3,1068,4
249017,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,1082,1
249020,RETURN,-1,,"return uvwasi_path_unlink_file(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,1083,3
249070,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, in_ptr, nsubscriptions * UVWASI_SERDES_SIZE_subscription_t)",3,1099,1
249092,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, out_ptr, nsubscriptions * UVWASI_SERDES_SIZE_event_t)",3,1101,1
249113,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nevents_ptr, UVWASI_SERDES_SIZE_size_t)",3,1103,1
249211,RETURN,-1,,return err;,3,1124,12
249241,RETURN,-1,,"return uvwasi_proc_raise(&wasi.uvw_, sig);",3,1134,2
249279,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,1142,1
249282,RETURN,-1,,"return uvwasi_random_get(&wasi.uvw_, &memory.data[buf_ptr], buf_len);",3,1143,3
249304,RETURN,-1,,return uvwasi_sched_yield(&wasi.uvw_);,3,1148,2
249349,RETURN,-1,,return err;,3,1163,6
249391,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, ri_data_ptr, ri_data_len * UVWASI_SERDES_SIZE_iovec_t)",3,1182,1
249412,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, ro_datalen_ptr, 4)",3,1184,1
249433,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, ro_flags_ptr, 4)",3,1185,1
249465,RETURN,-1,,return err;,5,1190,1
249504,RETURN,-1,,return err;,3,1207,13
249544,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, si_data_ptr, si_data_len * UVWASI_SERDES_SIZE_ciovec_t)",3,1224,1
249565,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, so_datalen_ptr, UVWASI_SERDES_SIZE_size_t)",3,1226,1
249597,RETURN,-1,,return err;,5,1232,1
249627,RETURN,-1,,return err;,3,1241,11
249642,RETURN,-1,,"return uvwasi_sock_shutdown(&wasi.uvw_, sock, how);",3,1249,2
249678,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        wasi->env(),
        ""\""instance.exports.memory\"" property must be a WebAssembly.Memory ""
        ""object"");",5,1257,1
250320,RETURN,-1,,return templ;,5,26,1
250387,RETURN,-1,,return function;,3,41,14
250462,RETURN,-1,,return MaybeLocal<Object>();,5,64,1
250486,RETURN,-1,,return obj;,3,73,10
250679,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        Environment::GetCurrent(args),
        ""chunk must be an ArrayBufferView or an ArrayBuffer"");",5,118,1
250820,RETURN,-1,,return;,5,164,1
251261,RETURN,-1,,return SignalPropagation::kStopPropagation;,3,122,3
251466,RETURN,-1,,return SignalPropagation::kContinuePropagation;,3,197,3
251477,RETURN,-1,,return;,5,203,1
251488,RETURN,-1,,return;,5,207,1
251575,RETURN,-1,,return TRUE;,5,259,2
251579,RETURN,-1,,return FALSE;,5,261,1
251648,RETURN,-1,,return is_stopping;,3,289,7
251663,RETURN,-1,,return 0;,5,297,1
251676,RETURN,-1,,return 0;,3,326,5
251702,RETURN,-1,,return had_pending_signal;,7,341,2
251717,RETURN,-1,,return had_pending_signal;,3,373,8
251726,RETURN,-1,,return has_pending_signal_;,3,380,3
251862,RETURN,1,,return;,18,298,1
251902,RETURN,-1,,"return env_vars->Get(name).FromMaybe("""");",7,524,1
252155,RETURN,-1,,return;,5,73,1
252263,RETURN,1,,return env_->is_stopping();,5,101,1
252268,RETURN,-1,,return stopped_;,3,102,4
252403,RETURN,-1,,return;,7,146,4
252464,RETURN,-1,,return;,7,164,2
252651,RETURN,-1,,return !loop_init_failed_;,33,238,1
252725,RETURN,-1,,return new_limit;,3,269,11
252778,RETURN,1,,return;,28,282,1
252815,RETURN,1,,return;,23,310,1
252899,RETURN,-1,,return;,11,342,2
252903,RETURN,1,,return;,25,346,1
252948,RETURN,1,,return;,27,358,1
252972,RETURN,1,,return;,23,367,1
252990,RETURN,1,,return;,25,371,1
253000,RETURN,-1,,return;,11,374,1
253019,RETURN,1,,return;,11,379,1
253131,RETURN,-1,,return child_port;,3,419,8
253144,RETURN,1,,return;,5,424,1
253349,RETURN,-1,,return;,5,483,2
253673,RETURN,1,,return;,65,549,1
253700,RETURN,-1,,return;,9,555,5
253772,RETURN,-1,,return;,9,570,1
253794,RETURN,-1,,return;,9,574,1
253904,RETURN,-1,,return;,9,599,1
253931,RETURN,-1,,return;,7,606,5
254453,RETURN,-1,,"return Float64Array::New(ab, 0, kTotalResourceLimitCount);",3,754,3
254511,RETURN,-1,,return true;,3,784,1
254590,RETURN,-1,,return;,5,810,1
254675,RETURN,1,,return args.GetReturnValue().Set(-1);,5,866,1
254736,RETURN,1,,return args.GetReturnValue().Set(-1);,5,881,1
255784,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255791,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255798,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255805,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255812,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255819,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255826,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255833,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255840,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
255842,RETURN,-1,,"return ""Z_UNKNOWN_ERROR"";",3,94,10
255884,RETURN,-1,,return code != nullptr;,33,127,1
256259,RETURN,-1,,return;,7,277,2
256355,RETURN,1,,return;,52,308,1
256437,RETURN,1,,return;,55,327,1
256453,RETURN,1,,return;,55,328,1
256510,RETURN,1,,return;,54,336,1
256526,RETURN,1,,return;,54,337,1
256629,RETURN,-1,,return;,7,373,5
256673,RETURN,1,,return true;,25,395,1
256677,RETURN,-1,,return false;,5,397,5
256703,RETURN,-1,,return;,7,411,2
256730,RETURN,1,,return;,7,421,1
256890,RETURN,-1,,return &ctx_;,35,470,1
256928,RETURN,-1,,"return AllocForBrotli(data, real_size);",5,488,3
256959,RETURN,1,,return nullptr;,38,495,1
256977,RETURN,-1,,return memory + sizeof(size_t);,5,499,9
256994,RETURN,1,,return;,39,503,1
257049,RETURN,1,,return;,22,517,1
257269,RETURN,1,,return;,58,595,1
257286,RETURN,1,,return;,51,598,1
257303,RETURN,1,,return;,56,601,1
257320,RETURN,1,,return;,55,604,1
257504,RETURN,1,,return;,51,638,1
257521,RETURN,1,,return;,54,640,1
257569,RETURN,-1,,return this->CompressionStream<CompressionContext>::context();,5,664,1
257726,RETURN,-1,,return;,7,697,3
257815,RETURN,-1,,return;,9,711,3
257854,RETURN,-1,,return;,7,738,3
257934,RETURN,-1,,return;,5,762,1
258205,RETURN,-1,,"return CompressionError { message, ZlibStrerror(err_), err_ };",3,890,2
258234,RETURN,-1,,"return ErrorForMessage(""unexpected end of file"");",7,900,1
258248,RETURN,1,,"return ErrorForMessage(""Missing dictionary"");",7,907,1
258253,RETURN,1,,"return ErrorForMessage(""Bad dictionary"");",7,909,1
258257,RETURN,-1,,"return ErrorForMessage(""Zlib error"");",5,912,13
258260,RETURN,-1,,return CompressionError {};,3,915,2
258278,RETURN,-1,,"return ErrorForMessage(""Failed to init stream before reset"");",5,922,1
258318,RETURN,1,,"return ErrorForMessage(""Failed to reset stream"");",5,943,1
258321,RETURN,-1,,return SetDictionary();,3,945,7
258505,RETURN,-1,,return false;,5,1008,1
258556,RETURN,-1,,return true;,5,1035,3
258562,RETURN,-1,,return true;,3,1040,8
258574,RETURN,1,,return CompressionError {};,5,1046,1
258624,RETURN,-1,,"return ErrorForMessage(""Failed to set dictionary"");",5,1069,1
258627,RETURN,-1,,return CompressionError {};,3,1072,5
258647,RETURN,-1,,"return ErrorForMessage(""Failed to init stream before set parameters"");",5,1079,1
258679,RETURN,-1,,"return ErrorForMessage(""Failed to set parameters"");",5,1094,1
258682,RETURN,-1,,return CompressionError {};,3,1097,7
258807,RETURN,-1,,"return CompressionError(""Could not initialize Brotli instance"",
                            ""ERR_ZLIB_INITIALIZATION_FAILED"",
                            -1);",5,1150,1
258815,RETURN,-1,,return CompressionError {};,5,1154,1
258822,RETURN,-1,,"return Init(alloc_, free_, alloc_opaque_);",3,1159,1
258845,RETURN,-1,,"return CompressionError(""Setting parameter failed"",
                            ""ERR_BROTLI_PARAM_SET_FAILED"",
                            -1);",5,1166,1
258853,RETURN,-1,,return CompressionError {};,5,1170,1
258864,RETURN,-1,,"return CompressionError(""Compression failed"",
                            ""ERR_BROTLI_COMPRESSION_FAILED"",
                            -1);",5,1176,1
258872,RETURN,-1,,return CompressionError {};,5,1180,1
258970,RETURN,-1,,"return CompressionError(""Could not initialize Brotli instance"",
                            ""ERR_ZLIB_INITIALIZATION_FAILED"",
                            -1);",5,1215,1
258978,RETURN,-1,,return CompressionError {};,5,1219,1
258985,RETURN,-1,,"return Init(alloc_, free_, alloc_opaque_);",3,1224,1
259008,RETURN,-1,,"return CompressionError(""Setting parameter failed"",
                            ""ERR_BROTLI_PARAM_SET_FAILED"",
                            -1);",5,1231,1
259016,RETURN,-1,,return CompressionError {};,5,1235,1
259028,RETURN,-1,,"return CompressionError(""Decompression failed"",
                            error_string_.c_str(),
                            static_cast<int>(error_));",5,1241,1
259049,RETURN,-1,,"return CompressionError(""unexpected end of file"",
                            ""Z_BUF_ERROR"",
                            Z_BUF_ERROR);",5,1247,1
259056,RETURN,-1,,return CompressionError {};,5,1251,1
269911,RETURN,-1,,return deny_all_ == false;,3,19,1
270000,RETURN,-1,,"return res + ""*"";",9,24,1
270004,RETURN,-1,,"return res + node::kPathSeparator + ""*"";",7,26,2
270015,RETURN,-1,,return res;,3,30,6
270027,RETURN,-1,,return;,5,36,1
270065,RETURN,-1,,"return granted_tree->Lookup(param, true);",3,65,1
270112,RETURN,-1,,return;,7,86,2
270172,RETURN,-1,,return allow_all_in_ && allow_all_out_;,7,107,3
270180,RETURN,-1,,"return !deny_all_in_ &&
             ((param.empty() && allow_all_in_) || allow_all_in_ ||
              is_tree_granted(&granted_in_fs_, param));",7,109,6
270201,RETURN,-1,,"return !deny_all_out_ &&
             ((param.empty() && allow_all_out_) || allow_all_out_ ||
              is_tree_granted(&granted_out_fs_, param));",7,113,9
270219,RETURN,-1,,return false;,7,117,11
270250,RETURN,-1,,return when_empty_return;,5,131,1
270284,RETURN,-1,,return true;,7,140,1
270300,RETURN,-1,,return false;,7,145,1
270326,RETURN,-1,,return true;,7,152,1
270496,RETURN,-1,,return;,5,37,1
270517,RETURN,-1,,return args.GetReturnValue().Set(false);,5,43,1
270554,RETURN,-1,,return;,7,49,1
270555,RETURN,-1,,"return args.GetReturnValue().Set(
        env->permission()->is_granted(scope, *utf8_arg));",5,51,4
270573,RETURN,-1,,return args.GetReturnValue().Set(env->permission()->is_granted(scope));,3,55,15
270596,RETURN,-1,,return nullptr;,3,64,3
270605,RETURN,-1,,return PermissionScope::kPermissionsRoot;,3,72,3
270763,RETURN,1,,return;,5,117,1
270914,RETURN,-1,,return deny_all_ == false;,3,18,1
271023,RETURN,-1,,"return handle_scope.EscapeMaybe(
      constructor->NewInstance(env->context(), 1, &type_value));",3,61,9
271940,RETURN,1,,return;,58,202,1
272001,RETURN,1,,return;,53,217,1
272284,RETURN,-1,,return stream;,5,100,6
273601,RETURN,1,,return false;,59,18,1
273623,RETURN,-1,,return true;,3,23,4
273659,RETURN,1,,return false;,59,32,1
273681,RETURN,-1,,return true;,3,37,4
273717,RETURN,1,,return false;,59,46,1
273785,RETURN,-1,,return false;,9,59,4
273805,RETURN,-1,,return true;,3,66,4
273844,RETURN,-1,,return stats->*member;,3,90,1
274427,RETURN,1,,return;,59,110,1
274558,RETURN,-1,,return handled_signals.find(signum) != handled_signals.end();,3,173,3
274644,RETURN,-1,,return used();,3,71,2
274650,RETURN,-1,,return sizeof data_ - used();,3,76,1
274659,RETURN,-1,,return used_;,3,81,1
274665,RETURN,-1,,return next_;,3,86,1
274741,RETURN,1,,return r;,5,134,1
274751,RETURN,-1,,return 0;,3,139,7
274793,RETURN,1,,return r;,9,160,1
274808,RETURN,1,,return r;,7,165,1
274825,RETURN,1,,return r;,7,171,1
274827,RETURN,-1,,return 0;,3,174,5
274877,RETURN,-1,,return js_buffer;,3,191,5
274883,RETURN,-1,,return readable_;,3,196,1
274889,RETURN,-1,,return writable_;,3,201,1
274911,RETURN,-1,,return static_cast<uv_stdio_flags>(flags);,3,214,5
274922,RETURN,-1,,return &uv_pipe_;,3,220,2
274929,RETURN,-1,,return reinterpret_cast<uv_stream_t*>(uv_pipe());,3,225,1
274937,RETURN,-1,,return reinterpret_cast<uv_handle_t*>(uv_pipe());,3,230,1
274970,RETURN,-1,,return size;,3,241,5
275302,RETURN,1,,return;,41,377,1
275341,RETURN,-1,,return env_;,3,431,1
275369,RETURN,1,,return MaybeLocal<Object>();,22,441,1
275378,RETURN,-1,,return scope.Escape(result);,3,445,9
275406,RETURN,-1,,return Just(false);,5,459,2
275425,RETURN,-1,,return Just(false);,5,467,4
275438,RETURN,1,,return Nothing<bool>();,38,470,1
275447,RETURN,-1,,return Just(false);,5,474,2
275468,RETURN,-1,,return Just(false);,7,481,2
275499,RETURN,-1,,return Just(false);,7,496,2
275522,RETURN,-1,,return Just(false);,5,504,2
275552,RETURN,-1,,return Just(false);,9,513,2
275569,RETURN,-1,,return Just(true);,3,525,19
275703,RETURN,1,,return;,5,602,1
275767,RETURN,1,,return SetError(static_cast<int>(exit_status));,5,645,1
275793,RETURN,1,,return error_;,5,660,1
275797,RETURN,1,,return pipe_error_;,5,662,1
276065,RETURN,-1,,return scope.Escape(js_result);,3,724,10
276150,RETURN,-1,,"return scope.Escape(
      Array::New(env()->isolate(), js_output.out(), js_output.length()));",3,743,8
276194,RETURN,1,,return Just<int>(UV_EINVAL);,30,752,1
276247,RETURN,1,,return Nothing<int>();,53,759,1
276254,RETURN,1,,return Just(r);,14,760,1
276292,RETURN,1,,return Nothing<int>();,58,765,1
276299,RETURN,1,,return Just(r);,14,766,1
276343,RETURN,1,,return Nothing<int>();,53,772,1
276350,RETURN,1,,return Just(r);,16,773,1
276392,RETURN,1,,return Nothing<int>();,7,781,1
276399,RETURN,1,,return Just(r);,16,782,1
276751,RETURN,1,,return Just(r);,14,849,1
276754,RETURN,-1,,return Just(0);,3,851,41
276780,RETURN,1,,return UV_EINVAL;,5,860,1
276854,RETURN,1,,return UV_EINVAL;,7,877,1
276870,RETURN,1,,return r;,7,881,1
276882,RETURN,-1,,return 0;,3,887,15
276928,RETURN,-1,,return AddStdioIgnore(child_fd);,5,898,1
277063,RETURN,-1,,return UV_EINVAL;,9,923,1
277065,RETURN,-1,,"return AddStdioPipe(child_fd, readable, writable, buf);",5,927,12
277114,RETURN,-1,,"return AddStdioInheritFD(child_fd, inherit_fd);",5,933,3
277142,RETURN,-1,,return 0;,3,947,4
277190,RETURN,-1,,return r;,5,964,2
277223,RETURN,-1,,return 0;,3,972,10
277255,RETURN,-1,,return 0;,3,983,5
277262,RETURN,-1,,return !value->IsUndefined() && !value->IsNull();,3,988,1
277328,RETURN,1,,return Nothing<int>();,5,1002,1
277345,RETURN,1,,return Nothing<int>();,5,1006,1
277375,RETURN,-1,,return Just(0);,3,1015,14
277409,RETURN,1,,return Just<int>(UV_EINVAL);,29,1027,1
277507,RETURN,1,,return Nothing<int>();,9,1049,1
277538,RETURN,1,,return Nothing<int>();,33,1058,1
277632,RETURN,-1,,return Just(0);,3,1083,23
277782,RETURN,-1,,return UV_EBUSY;,7,52,1
277865,RETURN,-1,,return UV_EBUSY;,7,74,1
277868,RETURN,-1,,return err;,3,79,18
277933,RETURN,-1,,"return StreamWriteResult{false, err, nullptr, total_bytes, {}};",7,97,1
277972,RETURN,-1,,"return StreamWriteResult{false, UV_EBUSY, nullptr, 0, {}};",7,107,1
278058,RETURN,-1,,"return StreamWriteResult{false, UV_EBUSY, nullptr, 0, {}};",7,131,1
278067,RETURN,-1,,"return StreamWriteResult{
      async, err, req_wrap, total_bytes, std::move(req_wrap_ptr)};",3,136,24
278084,RETURN,-1,,return ReadStart();,3,151,1
278091,RETURN,-1,,return ReadStop();,3,156,1
278128,RETURN,-1,,return 0;,3,164,5
278154,RETURN,-1,,return Shutdown(req_wrap_obj);,3,171,3
278329,RETURN,1,,return -1;,9,207,1
278355,RETURN,1,,return -1;,9,216,1
278381,RETURN,1,,return -1;,9,219,1
278431,RETURN,-1,,return -1;,9,227,1
278442,RETURN,1,,return UV_ENOBUFS;,7,233,1
278477,RETURN,1,,return -1;,9,238,1
278568,RETURN,1,,return -1;,9,255,1
278645,RETURN,1,,return -1;,9,272,1
278671,RETURN,1,,return -1;,9,275,1
278741,RETURN,-1,,return res.err;,3,292,27
278780,RETURN,-1,,return 0;,5,303,2
278875,RETURN,-1,,return -1;,7,324,1
278889,RETURN,-1,,return res.err;,3,331,15
279013,RETURN,-1,,return -1;,5,356,1
279021,RETURN,1,,return UV_ENOBUFS;,5,360,1
279113,RETURN,-1,,return err;,7,390,2
279252,RETURN,-1,,return -1;,7,431,1
279290,RETURN,-1,,return res.err;,3,442,34
279402,RETURN,-1,,"return wrap->MakeCallback(onread.As<Function>(), arraysize(argv), argv);",3,476,15
279418,RETURN,-1,,return false;,3,481,1
279424,RETURN,-1,,return -1;,3,486,1
279431,RETURN,-1,,return GetAsyncWrap()->object();,3,491,1
279653,RETURN,1,,return;,22,575,1
279765,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,24,601,1
279781,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,25,603,1
279825,RETURN,1,,return args.GetReturnValue().Set(0);,24,610,1
279870,RETURN,1,,return args.GetReturnValue().Set(0);,24,618,1
279915,RETURN,1,,return;,24,626,1
279963,RETURN,1,,return;,24,635,1
279971,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,25,637,1
280004,RETURN,-1,,return 0;,3,645,1
280010,RETURN,-1,,return nullptr;,3,650,1
280031,RETURN,-1,,return env->allocate_managed_buffer(suggested_size);,3,662,4
280102,RETURN,-1,,return;,5,677,2
280144,RETURN,-1,,return buffer_;,3,688,1
280195,RETURN,-1,,return;,5,705,2
280282,RETURN,1,,return;,33,726,1
280583,RETURN,-1,,return wrap;,3,825,4
280601,RETURN,-1,,return wrap;,3,832,4
280657,RETURN,-1,,return;,7,845,1
280728,RETURN,1,,return;,7,78,1
280746,RETURN,-1,,return;,7,81,1
280819,RETURN,-1,,return;,7,92,1
280895,RETURN,-1,,return;,7,103,1
280950,RETURN,-1,,return static_cast<StreamBase*>(readable_listener_.stream());,3,42,1
280961,RETURN,-1,,return static_cast<StreamBase*>(writable_listener_.stream());,3,46,1
280976,RETURN,1,,return;,5,51,1
281011,RETURN,1,,return;,23,65,1
281058,RETURN,-1,,return pipe->env()->allocate_managed_buffer(size);,3,112,6
281143,RETURN,-1,,return;,5,135,8
281293,RETURN,1,,return;,9,167,1
281299,RETURN,-1,,return;,5,170,2
281331,RETURN,-1,,return;,5,179,7
281352,RETURN,-1,,return;,5,187,6
281480,RETURN,1,,return;,5,224,1
281514,RETURN,-1,,return previous_listener_->OnStreamAlloc(suggested_size);,3,234,2
281527,RETURN,-1,,"return previous_listener_->OnStreamRead(nread, buf);",3,240,2
281581,RETURN,-1,,return Nothing<StreamPipe*>();,5,255,1
281604,RETURN,-1,,return Nothing<StreamPipe*>();,5,260,1
281627,RETURN,-1,,return Nothing<StreamPipe*>();,5,264,1
281650,RETURN,-1,,return Nothing<StreamPipe*>();,5,269,1
281652,RETURN,-1,,return Just(stream_pipe.release());,3,272,8
281723,RETURN,1,,return;,63,282,1
282728,RETURN,-1,,return tmpl;,3,160,3
282758,RETURN,-1,,return Unwrap<LibuvStreamWrap>(object);,3,167,3
282784,RETURN,-1,,return fd;,3,178,4
282790,RETURN,-1,,return HandleWrap::IsAlive(this);,3,184,1
282800,RETURN,-1,,return uv_is_closing(reinterpret_cast<uv_handle_t*>(stream()));,3,189,1
282809,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,194,1
282817,RETURN,-1,,return is_named_pipe_ipc();,3,199,1
282823,RETURN,-1,,"return uv_read_start(
      stream(),
      [](uv_handle_t* handle, size_t suggested_size, uv_buf_t* buf) {
        static_cast<LibuvStreamWrap*>(handle->data)
            ->OnUvAlloc(suggested_size, buf);
      },
      [](uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {
        LibuvStreamWrap* wrap = static_cast<LibuvStreamWrap*>(stream->data);
        TryCatchScope try_catch(wrap->env());
        try_catch.SetVerbose(true);
        wrap->OnUvRead(nread, buf);
      });",3,203,1
282832,RETURN,-1,,return uv_read_stop(stream());,3,219,1
282905,RETURN,1,,return Local<Object>();,5,241,1
282937,RETURN,-1,,return scope.Escape(wrap_obj);,3,251,13
283086,RETURN,-1,,return Nothing<void>();,7,289,1
283092,RETURN,-1,,return JustVoid();,3,294,11
283123,RETURN,-1,,return;,5,304,2
283167,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,5,318,1
283205,RETURN,-1,,"return new LibuvShutdownWrap(this, object);",3,328,1
283215,RETURN,-1,,"return new LibuvWriteWrap(this, object);",3,332,1
283231,RETURN,-1,,"return req_wrap->Dispatch(uv_shutdown, stream(), AfterUvShutdown);",3,338,3
283313,RETURN,1,,return 0;,5,364,1
283320,RETURN,1,,return err;,5,366,1
283380,RETURN,-1,,return 0;,3,388,14
283396,RETURN,-1,,"return w->Dispatch(uv_write2,
                     stream(),
                     bufs,
                     count,
                     send_handle,
                     AfterUvWrite);",3,397,3
283506,RETURN,-1,,return data_;,5,64,1
283512,RETURN,-1,,return length_;,5,68,1
283518,RETURN,-1,,return length() * sizeof(*data());,5,72,1
283537,RETURN,1,,return String::Empty(isolate);,7,80,1
283550,RETURN,1,,"return NewSimpleFromCopy(isolate, data, length, error);",7,83,1
283579,RETURN,-1,,return MaybeLocal<Value>();,7,88,2
283589,RETURN,-1,,"return ExternString<ResourceType, TypeName>::New(isolate,
                                                     new_data,
                                                     length,
                                                     error);",5,92,7
283611,RETURN,1,,return String::Empty(isolate);,7,104,1
283637,RETURN,-1,,return str;,7,109,3
283680,RETURN,-1,,return MaybeLocal<Value>();,7,121,3
283682,RETURN,-1,,return str.ToLocalChecked();,5,124,8
283691,RETURN,-1,,return isolate_;,37,127,1
283725,RETURN,-1,,"return String::NewExternalOneByte(isolate, h_str).FromMaybe(Local<Value>());",3,156,1
283742,RETURN,-1,,"return String::NewExternalTwoByte(isolate, h_str).FromMaybe(Local<Value>());",3,163,1
283795,RETURN,-1,,return MaybeLocal<Value>();,5,178,2
283797,RETURN,-1,,return str.ToLocalChecked();,3,180,3
283842,RETURN,-1,,return MaybeLocal<Value>();,5,196,2
283844,RETURN,-1,,return str.ToLocalChecked();,3,198,3
284798,RETURN,-1,,return unhex_table[x];,3,244,1
284865,RETURN,1,,return i;,7,257,1
284876,RETURN,-1,,return i;,3,261,3
284906,RETURN,-1,,return 0;,5,270,1
284933,RETURN,-1,,return nchars * sizeof(*dst);,5,277,2
284966,RETURN,-1,,return 0;,5,285,1
285021,RETURN,-1,,return nchars * sizeof(*dst);,3,299,20
285260,RETURN,-1,,return nbytes;,3,374,9
285295,RETURN,-1,,return Just(Buffer::Length(val));,5,388,1
285323,RETURN,1,,return Nothing<size_t>();,5,393,1
285401,RETURN,-1,,return Just(data_size);,3,428,11
285429,RETURN,1,,return Just(Buffer::Length(val));,5,437,1
285457,RETURN,1,,return Nothing<size_t>();,5,441,1
285466,RETURN,-1,,return Just<size_t>(str->Length());,7,446,5
285479,RETURN,-1,,return Just<size_t>(str->Utf8Length(isolate));,7,450,10
285491,RETURN,-1,,return Just(str->Length() * sizeof(uint16_t));,7,453,13
285509,RETURN,-1,,"return Just(base64_decoded_size(*value, value.length()));",7,459,3
285520,RETURN,-1,,return Just<size_t>(str->Length() / 2);,7,463,21
285576,RETURN,-1,,return;,5,479,2
285639,RETURN,-1,,return;,7,496,2
285785,RETURN,-1,,return dlen;,3,538,4
285811,RETURN,-1,,return dst;,3,545,6
285842,RETURN,-1,,CHECK_BUFLEN_IN_RANGE(buflen),3,562,2
285853,RETURN,-1,,return String::Empty(isolate);,5,565,1
285904,RETURN,-1,,return buf;,9,578,5
285939,RETURN,-1,,return MaybeLocal<Value>();,11,587,2
285945,RETURN,-1,,"return ExternOneByteString::New(isolate, out, buflen, error);",9,590,5
285956,RETURN,-1,,"return ExternOneByteString::NewFromCopy(isolate, buf, buflen, error);",9,592,1
286004,RETURN,-1,,return str;,9,605,4
286008,RETURN,-1,,"return ExternOneByteString::NewFromCopy(isolate, buf, buflen, error);",7,609,12
286046,RETURN,-1,,return MaybeLocal<Value>();,9,616,2
286059,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,622,9
286100,RETURN,-1,,return MaybeLocal<Value>();,9,630,2
286116,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,636,9
286155,RETURN,-1,,return MaybeLocal<Value>();,9,644,2
286168,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,649,9
286216,RETURN,-1,,return MaybeLocal<Value>();,11,658,2
286270,RETURN,-1,,"return ExternTwoByteString::New(isolate, dst, str_len, error);",9,667,5
286309,RETURN,-1,,return MaybeLocal<Value>();,11,674,2
286315,RETURN,-1,,"return ExternTwoByteString::New(
            isolate, reinterpret_cast<uint16_t*>(dst), str_len, error);",9,677,5
286326,RETURN,-1,,"return ExternTwoByteString::NewFromCopy(
          isolate, reinterpret_cast<const uint16_t*>(buf), str_len, error);",7,680,5
286353,RETURN,1,,return String::Empty(isolate);,20,694,1
286379,RETURN,-1,,CHECK_BUFLEN_IN_RANGE(buflen),3,695,2
286408,RETURN,-1,,return MaybeLocal<Value>();,7,705,2
286426,RETURN,-1,,"return ExternTwoByteString::New(isolate, dst, buflen, error);",5,710,8
286437,RETURN,-1,,"return ExternTwoByteString::NewFromCopy(isolate, buf, buflen, error);",5,712,1
286459,RETURN,-1,,"return Encode(isolate, buf, len, encoding, error);",3,721,3
286563,RETURN,-1,,return MaybeLocal<String>();,7,41,2
286567,RETURN,-1,,return utf8_string;,7,43,1
286613,RETURN,-1,,return ret.FromMaybe(Local<Value>()).As<String>();,3,60,6
286768,RETURN,-1,,return MaybeLocal<String>();,11,124,1
287061,RETURN,1,,return MaybeLocal<String>();,11,220,1
287078,RETURN,-1,,return body;,7,227,1
287082,RETURN,-1,,"return String::Concat(isolate, prepend, body);",7,229,1
287104,RETURN,-1,,"return MakeString(isolate, data, nread, Encoding());",5,233,2
287158,RETURN,1,,return String::Empty(isolate);,5,250,1
287185,RETURN,-1,,return ret;,3,261,7
287703,RETURN,-1,,"return uv_ip4_addr(ip_address, port, addr);",7,301,1
287717,RETURN,-1,,"return uv_ip6_addr(ip_address, port, addr);",7,313,1
287818,RETURN,-1,,"return handle_scope.EscapeMaybe(
      constructor->NewInstance(env->context(), 1, &type_value));",3,67,9
288603,RETURN,1,,return;,57,203,1
288679,RETURN,1,,return;,5,230,1
288775,RETURN,1,,return;,55,253,1
288798,RETURN,-1,,return;,5,256,1
288909,RETURN,1,,return;,58,287,1
289001,RETURN,1,,return;,55,310,1
289224,RETURN,1,,return 0;,31,372,1
289273,RETURN,-1,,return err;,3,382,6
289391,RETURN,-1,,return {};,9,415,2
289574,RETURN,-1,,return scope.Escape(info);,3,447,9
289641,RETURN,1,,return;,31,11,1
289694,RETURN,1,,return;,31,27,1
289712,RETURN,1,,return;,31,32,1
289729,RETURN,1,,return;,31,37,1
289762,RETURN,1,,return timer_->Stop();,5,48,1
289979,RETURN,-1,,return GetLibuvNowImpl(FromJSObject<BindingData>(receiver));,3,37,1
289991,RETURN,-1,,return static_cast<double>(data->env()->GetNowUint64());,3,41,1
290165,RETURN,-1,,return true;,3,93,1
290187,RETURN,-1,,return info;,3,100,4
290338,RETURN,1,,return;,32,156,1
290560,RETURN,1,,return;,28,24,1
290614,RETURN,-1,,return result;,3,43,3
290714,RETURN,1,,return;,5,88,1
290857,RETURN,-1,,"return AgentWriterHandle(this, id);",3,134,15
290865,RETURN,-1,,"return AgentWriterHandle(this, kDefaultHandleId);",3,138,1
290877,RETURN,1,,return;,5,143,1
290903,RETURN,1,,return;,35,155,1
290947,RETURN,1,,return;,5,167,1
291037,RETURN,1,,return nullptr;,5,187,1
291057,RETURN,-1,,return trace_config;,3,192,5
291082,RETURN,-1,,return categories;,3,202,3
291281,RETURN,-1,,return uv_hrtime() / 1000;,5,40,1
291321,RETURN,-1,,return agent_ == nullptr;,31,60,1
291347,RETURN,-1,,return agent_;,27,68,1
291404,RETURN,-1,,return controller;,5,92,4
291545,RETURN,-1,,return *this;,3,169,5
291597,RETURN,-1,,return agent_ != nullptr && id_ == Agent::kDefaultHandleId;,3,185,1
291611,RETURN,-1,,return agent_ != nullptr ? agent_->GetTracingController() : nullptr;,3,189,1
291786,RETURN,-1,,return trace_object;,3,31,10
291801,RETURN,-1,,return nullptr;,5,38,1
291826,RETURN,-1,,return nullptr;,5,47,1
291842,RETURN,-1,,return nullptr;,5,52,1
291844,RETURN,-1,,return chunk->GetEventAt(event_index);,3,54,13
291937,RETURN,-1,,"return ((static_cast<uint64_t>(chunk_seq) * Capacity() +
          chunk_index * TraceBufferChunk::kChunkSize + event_index) << 1) + id_;",3,83,1
292081,RETURN,-1,,return nullptr;,5,130,2
292083,RETURN,-1,,return current_buf_.load()->AddTraceEvent(handle);,3,132,2
292097,RETURN,-1,,return current_buf_.load()->GetEventByHandle(handle);,3,136,1
292120,RETURN,-1,,return true;,3,142,3
292168,RETURN,-1,,return false;,7,157,1
292170,RETURN,-1,,return true;,3,160,4
292295,RETURN,-1,,return total_chunks_ == max_chunks_ && chunks_[total_chunks_ - 1]->IsFull();,5,28,1
292312,RETURN,-1,,return flushing_;,5,31,1
292334,RETURN,-1,,return max_chunks_ * TraceBufferChunk::kChunkSize;,29,39,1
292872,RETURN,1,,return;,7,147,1
292912,RETURN,1,,return;,18,163,1
293285,RETURN,-1,,return g_agent;,3,21,1
293291,RETURN,-1,,return g_controller;,3,25,1
293305,RETURN,-1,,return tracing::TraceEventHelper::GetTracingController();,3,35,1
293412,RETURN,1,,return &disabled;,42,324,1
293415,RETURN,-1,,return controller->GetCategoryGroupEnabled(group);,5,325,6
293433,RETURN,-1,,return raw_id_;,31,338,1
293439,RETURN,-1,,return scope_;,33,339,1
293505,RETURN,-1,,return scope_;,33,363,1
293511,RETURN,-1,,return raw_id_;,31,364,1
293567,RETURN,-1,,return raw_id_;,31,384,1
293690,RETURN,-1,,return raw_id_;,29,430,1
293696,RETURN,-1,,return scope_;,31,431,1
293724,RETURN,-1,,return str_;,34,452,1
293815,RETURN,1,,return 0;,30,475,1
293817,RETURN,-1,,"return controller->AddTraceEvent(phase, category_group_enabled, name, scope, id,
                                   bind_id, num_args, arg_names, arg_types,
                                   arg_values, arg_convertibles, flags);",3,476,7
294161,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(phase, category_group_enabled, name,
                                         scope, id, bind_id, kZeroNumArgs,
                                         nullptr, nullptr, nullptr, flags);",3,589,1
294212,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(
      phase, category_group_enabled, name, scope, id, bind_id, num_args,
      &arg1_name, &arg_type, &arg_value, flags);",3,603,6
294294,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(
      phase, category_group_enabled, name, scope, id, bind_id, num_args,
      arg_names, arg_types, arg_values, flags);",3,622,9
294515,RETURN,-1,,return result;,3,86,6
294533,RETURN,-1,,"return ""\""NaN\"""";",18,91,3
294537,RETURN,-1,,"return (v < 0.0 ? ""\""-Infinity\"""" : ""\""Infinity\"""");",23,92,6
294546,RETURN,-1,,"return ""0"";",19,93,9
294563,RETURN,-1,,return stream.str();,7,99,14
294572,RETURN,-1,,return std::unique_ptr<TracedValue>(new TracedValue(false));,3,106,1
294586,RETURN,-1,,return std::unique_ptr<TracedValue>(new TracedValue(true));,3,110,1
295200,RETURN,1,,return;,53,83,1
295416,RETURN,1,,return;,53,131,1
295581,RETURN,-1,,return;,5,61,2
295614,RETURN,-1,,return;,5,67,1
295657,RETURN,-1,,return have_callback_;,3,98,1
295684,RETURN,-1,,return listener_;,3,112,2
295731,RETURN,-1,,"return static_cast<UDPWrapBase*>(
      obj->GetAlignedPointerFromInternalField(UDPWrapBase::kUDPWrapBaseField));",3,127,2
296355,RETURN,-1,,"return uv_ip4_addr(address, port, reinterpret_cast<sockaddr_in*>(addr));",7,256,3
296364,RETURN,-1,,"return uv_ip6_addr(address, port, reinterpret_cast<sockaddr_in6*>(addr));",7,258,6
296455,RETURN,1,,return;,5,278,1
296572,RETURN,1,,return;,5,306,1
296765,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,356,2
296828,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,370,2
297135,RETURN,1,,return;,26,464,1
297370,RETURN,1,,return;,58,524,1
297519,RETURN,1,,return UV_EBADF;,26,559,1
297635,RETURN,-1,,return msg_size + 1;,9,585,2
297664,RETURN,1,,return UV_ENOSYS;,30,593,1
297686,RETURN,-1,,return err;,3,610,9
297706,RETURN,-1,,return req_wrap;,3,619,4
297728,RETURN,-1,,return this;,3,634,1
297734,RETURN,-1,,return SocketAddress::FromPeerName(handle_);,3,638,1
297744,RETURN,-1,,return SocketAddress::FromSockName(handle_);,3,642,1
297789,RETURN,1,,return UV_EBADF;,26,651,1
297807,RETURN,-1,,return err;,3,656,5
297848,RETURN,1,,return UV_EBADF;,26,666,1
297850,RETURN,-1,,return uv_udp_recv_stop(&handle_);,3,667,2
297962,RETURN,-1,,return env()->allocate_managed_buffer(suggested_size);,3,695,1
298042,RETURN,-1,,return;,5,715,1
298082,RETURN,-1,,return;,5,729,2
298195,RETURN,-1,,return;,7,752,3
298291,RETURN,-1,,return;,7,771,3
298324,RETURN,-1,,return env->udp_constructor_function()->NewInstance(env->context());,3,786,4
298554,RETURN,1,,return;,72,73,1
298571,RETURN,1,,return;,70,76,1
298622,RETURN,1,,return;,5,88,1
298639,RETURN,-1,,return;,5,96,1
298661,RETURN,1,,return;,72,100,1
298706,RETURN,-1,,return;,5,118,2
298822,RETURN,1,,return default_title;,7,156,1
298843,RETURN,-1,,return buf;,3,165,5
298849,RETURN,-1,,"return SPrintF(""%s[%d]"", GetProcessTitle(""Node.js""), uv_os_getpid());",3,169,1
298877,RETURN,1,,return out;,5,177,1
298914,RETURN,-1,,return out;,3,185,6
298941,RETURN,-1,,return kMicrosecondsPerSecond * tv.tv_sec + tv.tv_usec;,3,196,5
298983,RETURN,-1,,return fd;,5,209,1
299006,RETURN,-1,,return err;,5,215,1
299019,RETURN,-1,,return err;,3,220,12
299044,RETURN,-1,,"return WriteFileSync(path, buf);",3,228,5
299076,RETURN,-1,,return req.result;,5,240,1
299130,RETURN,-1,,return req.result;,7,259,1
299151,RETURN,-1,,return 0;,3,267,15
299209,RETURN,-1,,return contents;,3,282,15
299385,RETURN,-1,,return oss.str();,3,337,15
299400,RETURN,-1,,"return v8::FunctionTemplate::New(isolate,
                                   callback,
                                   Local<v8::Value>(),
                                   signature,
                                   0,
                                   behavior,
                                   side_effect_type,
                                   c_function);",3,347,1
300406,RETURN,-1,,"return String::NewExternalOneByte(isolate, one_byte_resource_)
        .ToLocalChecked();",5,611,1
300418,RETURN,-1,,"return String::NewExternalTwoByte(isolate, two_byte_resource_)
        .ToLocalChecked();",5,614,1
300533,RETURN,1,,return;,5,71,1
300553,RETURN,1,,return;,54,74,1
300684,RETURN,-1,,return;,7,100,1
