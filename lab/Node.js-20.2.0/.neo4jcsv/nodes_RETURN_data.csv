88,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            callback, argc, argv,
                            async_context_);",3,32,1
109,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            method, argc, argv,
                            async_context_);",3,40,1
130,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            symbol, argc, argv,
                            async_context_);",3,48,1
148,RETURN,-1,,return resource_.Get(env_->isolate());,3,54,1
161,RETURN,-1,,return async_context_.async_id;,3,58,1
169,RETURN,-1,,return async_context_.trigger_async_id;,3,62,1
296,RETURN,-1,,return;,5,61,2
389,RETURN,1,,return;,16,97,1
404,RETURN,1,,return;,28,111,1
453,RETURN,1,,return;,16,123,1
464,RETURN,-1,,return;,5,126,1
479,RETURN,1,,return;,34,131,1
549,RETURN,-1,,return;,5,150,1
570,RETURN,1,,return;,34,156,1
702,RETURN,-1,,return MaybeLocal<Value>();,5,199,1
813,RETURN,-1,,return MaybeLocal<Value>();,5,220,2
825,RETURN,-1,,return MaybeLocal<Value>();,5,225,1
827,RETURN,-1,,return ret;,3,228,19
854,RETURN,-1,,"return MakeCallback(isolate, recv, method_string, argc, argv, asyncContext);",3,241,2
895,RETURN,1,,return Local<Value>();,33,254,1
919,RETURN,1,,return Local<Value>();,5,258,1
928,RETURN,-1,,return Undefined(isolate);,5,262,1
941,RETURN,-1,,"return MakeCallback(isolate, recv, callback, argc, argv, asyncContext);",3,265,9
1008,RETURN,-1,,return Undefined(isolate);,5,290,1
1011,RETURN,-1,,return ret;,3,292,8
1045,RETURN,1,,return Local<Value>();,33,307,1
1066,RETURN,-1,,"return callback->Call(context, recv, argc, argv);",5,314,1
1095,RETURN,-1,,return ret;,3,322,10
1109,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, method, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,333,3
1139,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, symbol, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,344,3
1169,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, callback, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,355,3
1228,RETURN,-1,,"return CreateEnvironment(
            setup->isolate_data(),
            setup->context(),
            args,
            exec_args,
            static_cast<EnvironmentFlags::Flags>(env_flags));",9,193,1
1310,RETURN,1,,return Nothing<ExitCode>();,27,32,1
1436,RETURN,1,,return Nothing<ExitCode>();,27,66,1
1457,RETURN,-1,,return EmitProcessExitInternal(env);,3,76,21
1526,RETURN,-1,,return;,5,108,2
1696,RETURN,-1,,return;,7,153,3
1724,RETURN,-1,,return;,7,160,2
1785,RETURN,-1,,return ret;,3,201,6
1941,RETURN,1,,return {};,42,247,1
1942,RETURN,-1,,return result;,3,249,9
1963,RETURN,-1,,return Nothing<int>();,5,255,1
1965,RETURN,-1,,return Just(static_cast<int>(result.FromJust()));,3,257,3
1977,RETURN,-1,,return &impl_->loop;,3,261,1
1986,RETURN,-1,,return impl_->allocator;,3,266,1
1994,RETURN,-1,,return impl_->isolate;,3,270,1
2002,RETURN,-1,,return impl_->isolate_data.get();,3,274,1
2013,RETURN,-1,,return impl_->env.get();,3,278,1
2024,RETURN,-1,,return impl_->main_context.Get(impl_->isolate);,3,282,1
2038,RETURN,-1,,return impl_->snapshot_creator ? &impl_->snapshot_creator.value() : nullptr;,3,286,1
2090,RETURN,-1,,"return EmbedderSnapshotData::Pointer{new EmbedderSnapshotData(
      SnapshotBuilder::GetEmbeddedSnapshotData(), false)};",3,300,1
2136,RETURN,-1,,return {};,5,311,1
2137,RETURN,-1,,return result;,3,313,7
2144,RETURN,-1,,return FromBlob(ReadFileSync(in));,3,317,1
2152,RETURN,-1,,return impl_->ToBlob();,3,321,1
2177,RETURN,-1,,return true;,3,336,1
2247,RETURN,1,,return UTF8;,11,27,1
2259,RETURN,1,,return UCS2;,11,29,1
2302,RETURN,1,,return UCS2;,11,34,1
2309,RETURN,1,,return UTF8;,9,37,1
2316,RETURN,1,,return UTF8;,9,39,1
2323,RETURN,1,,return UCS2;,9,41,1
2330,RETURN,1,,return UCS2;,9,43,1
2337,RETURN,1,,return UCS2;,9,45,1
2344,RETURN,1,,return UCS2;,9,47,1
2368,RETURN,1,,return LATIN1;,11,55,1
2375,RETURN,1,,return LATIN1;,9,58,1
2399,RETURN,1,,return LATIN1;,11,66,1
2420,RETURN,1,,return BUFFER;,11,70,1
2441,RETURN,1,,return BASE64;,11,74,1
2453,RETURN,1,,return BASE64URL;,11,76,1
2460,RETURN,1,,return LATIN1;,9,79,1
2467,RETURN,1,,return BUFFER;,9,81,1
2474,RETURN,1,,return BASE64;,9,83,1
2481,RETURN,1,,return BASE64URL;,9,85,1
2505,RETURN,1,,return ASCII;,11,93,1
2512,RETURN,1,,return ASCII;,9,96,1
2539,RETURN,1,,return HEX;,11,104,1
2546,RETURN,1,,return HEX;,9,106,1
2549,RETURN,-1,,return default_encoding;,3,109,2
2571,RETURN,1,,return default_encoding;,5,119,1
2577,RETURN,-1,,"return ParseEncoding(*encoding, default_encoding);",3,123,5
2598,RETURN,-1,,"return StringBytes::Encode(isolate, buf, len, encoding, &error)
      .ToLocalChecked();",3,132,3
2624,RETURN,-1,,"return StringBytes::Encode(isolate, buf, len, &error)
      .ToLocalChecked();",3,138,2
2647,RETURN,-1,,"return StringBytes::Size(isolate, val, encoding).FromMaybe(-1);",3,148,3
2669,RETURN,-1,,"return StringBytes::Write(isolate, buf, buflen, val, encoding);",3,157,1
2700,RETURN,-1,,"return info.run_cjs->Call(
            env->context(), Null(env->isolate()), 1, &main_script);",9,559,2
2793,RETURN,-1,,return wasm_code_gen->IsUndefined() || wasm_code_gen->IsTrue();,3,51,2
2819,RETURN,-1,,"return env != nullptr &&
         (env->is_main_thread() || !env->is_stopping()) &&
         env->abort_on_uncaught_exception() &&
         env->should_abort_on_uncaught_toggle()[0] &&
         !env->inside_should_not_abort_on_uncaught_scope();",3,57,5
2872,RETURN,-1,,return exception->ToString(context).FromMaybe(Local<Value>());,5,69,1
2923,RETURN,-1,,return exception->ToString(context).FromMaybe(Local<Value>());,5,84,1
2981,RETURN,-1,,return result;,3,101,15
3028,RETURN,-1,,return ret;,3,112,4
3057,RETURN,-1,,return ret;,3,119,4
3097,RETURN,-1,,return ret;,3,127,4
3147,RETURN,-1,,return data;,3,143,6
3168,RETURN,-1,,return data;,3,150,6
3221,RETURN,-1,,return nullptr;,5,171,2
3250,RETURN,-1,,return ret;,3,181,8
3299,RETURN,1,,return;,24,198,1
3340,RETURN,1,,return;,24,211,1
3367,RETURN,1,,return std::make_unique<DebuggingArrayBufferAllocator>();,5,218,1
3374,RETURN,1,,return std::make_unique<NodeArrayBufferAllocator>();,5,220,1
3383,RETURN,-1,,return ArrayBufferAllocator::Create().release();,3,224,1
3730,RETURN,1,,return nullptr;,27,333,1
3771,RETURN,-1,,return isolate;,3,365,9
3793,RETURN,-1,,"return NewIsolate(&params,
                    event_loop,
                    platform,
                    SnapshotData::FromEmbedderWrapper(snapshot_data),
                    settings);",3,375,3
3823,RETURN,-1,,"return NewIsolate(&params,
                    event_loop,
                    platform,
                    SnapshotData::FromEmbedderWrapper(snapshot_data),
                    settings);",3,389,3
3852,RETURN,-1,,"return new IsolateData(isolate, loop, platform, allocator, snapshot_data);",3,404,3
3971,RETURN,-1,,return nullptr;,7,464,2
4002,RETURN,-1,,return nullptr;,5,486,2
4004,RETURN,-1,,return env;,3,489,18
4088,RETURN,-1,,"return GetInspectorParentHandle(env, thread_id, url, """");",3,524,1
4127,RETURN,-1,,return nullptr;,5,533,1
4129,RETURN,-1,,return {};,3,539,5
4144,RETURN,-1,,"return StartExecution(env, cb);",3,549,3
4157,RETURN,-1,,"return LoadEnvironment(
      env, [&](const StartExecutionCallbackInfo& info) -> MaybeLocal<Value> {
        Local<Value> main_script =
            ToV8Value(env->context(), main_script_source_utf8).ToLocalChecked();
        return info.run_cjs->Call(
            env->context(), Null(env->isolate()), 1, &main_script);
      });",3,555,2
4166,RETURN,-1,,return Environment::GetCurrent(context);,3,565,1
4177,RETURN,-1,,return env->isolate_data();,3,569,1
4187,RETURN,-1,,return isolate_data->node_allocator();,3,573,1
4197,RETURN,-1,,return env->context();,3,577,1
4207,RETURN,-1,,return GetMultiIsolatePlatform(env->isolate_data());,3,581,1
4218,RETURN,-1,,return env->platform();,3,585,1
4229,RETURN,-1,,"return CreatePlatform(
      thread_pool_size,
      static_cast<v8::TracingController*>(tracing_controller));",3,591,1
4241,RETURN,-1,,"return MultiIsolatePlatform::Create(thread_pool_size,
                                      tracing_controller)
      .release();",3,599,1
4265,RETURN,-1,,"return std::make_unique<NodePlatform>(thread_pool_size,
                                        tracing_controller,
                                        page_allocator);",3,612,1
4335,RETURN,1,,return MaybeLocal<Object>();,5,627,1
4343,RETURN,1,,return handle_scope.Escape(existing_value.As<Object>());,5,629,1
4384,RETURN,1,,return MaybeLocal<Object>();,5,634,1
4386,RETURN,-1,,return handle_scope.Escape(exports);,3,635,12
4414,RETURN,1,,return context;,26,644,1
4423,RETURN,-1,,return Local<Context>();,5,647,1
4425,RETURN,-1,,return context;,3,650,5
4486,RETURN,-1,,return Just(true);,5,677,1
4535,RETURN,-1,,return Nothing<bool>();,7,693,1
4559,RETURN,-1,,return Nothing<bool>();,7,700,1
4596,RETURN,-1,,return Nothing<bool>();,7,713,1
4628,RETURN,-1,,return Nothing<bool>();,7,719,1
4656,RETURN,-1,,return Nothing<bool>();,7,728,1
4672,RETURN,-1,,return Just(true);,3,735,14
4734,RETURN,-1,,return Nothing<bool>();,7,752,1
4755,RETURN,-1,,return Nothing<bool>();,7,757,1
4757,RETURN,-1,,return Just(true);,3,760,6
4800,RETURN,-1,,return Nothing<bool>();,5,774,1
4802,RETURN,-1,,return InitializePrimordials(context);,3,776,8
4877,RETURN,-1,,return Nothing<bool>();,5,793,1
4923,RETURN,-1,,return Nothing<bool>();,7,814,1
4925,RETURN,-1,,return Just(true);,3,818,13
4940,RETURN,-1,,return Nothing<bool>();,5,824,1
4942,RETURN,-1,,return InitializeContextRuntime(context);,3,827,2
4969,RETURN,1,,return nullptr;,26,833,1
4984,RETURN,1,,return nullptr;,23,835,1
4986,RETURN,-1,,return env->event_loop();,3,836,8
5122,RETURN,-1,,return ThreadId { next_thread_id++ };,3,894,1
5481,RETURN,-1,,return e;,3,72,20
5489,RETURN,-1,,"return String::NewFromUtf8(isolate, path).ToLocalChecked();",3,87,1
5807,RETURN,-1,,return e;,3,151,23
5935,RETURN,-1,,return Nothing<bool>();,5,43,1
5957,RETURN,-1,,"return ProcessEmit(env, ""beforeExit"", exit_code).IsEmpty() ?
      Nothing<bool>() : Just(true);",3,49,11
5974,RETURN,-1,,return EmitProcessExitInternal(env).FromMaybe(ExitCode::kGenericUserError);,3,54,1
5988,RETURN,-1,,return static_cast<int>(EmitExitInternal(env));,3,58,1
6026,RETURN,-1,,return Nothing<ExitCode>();,5,70,1
6057,RETURN,-1,,return Nothing<ExitCode>();,5,77,1
6059,RETURN,-1,,return Just(env->exit_code(ExitCode::kNoFailure));,3,80,11
6087,RETURN,-1,,return Nothing<int>();,5,86,1
6089,RETURN,-1,,return Just(static_cast<int>(result.FromJust()));,3,88,3
6290,RETURN,-1,,return new ACHHandle { info };,3,161,11
6305,RETURN,1,,return;,30,166,1
6357,RETURN,1,,return -1;,23,183,1
6360,RETURN,-1,,return env->execution_async_id();,3,184,4
6383,RETURN,1,,return -1;,23,189,1
6386,RETURN,-1,,return env->trigger_async_id();,3,190,4
6420,RETURN,-1,,"return EmitAsyncInit(isolate, resource, type, trigger_async_id);",3,202,4
6481,RETURN,-1,,return context;,3,226,10
6532,RETURN,-1,,SIGNO_CASE(SIGTERM),5,74,3
6535,RETURN,-1,,"return """";",7,165,5
6652,RETURN,1,,return;,35,75,1
6706,RETURN,1,,return;,9,85,1
6746,RETURN,1,,return;,5,95,1
7283,RETURN,-1,,return;,5,221,1
7590,RETURN,1,,return;,57,277,1
7886,RETURN,-1,,return tmpl;,3,352,3
8622,RETURN,-1,,return init_hook_ran_;,3,530,1
8668,RETURN,-1,,return;,5,556,1
8793,RETURN,1,,return;,15,629,1
8847,RETURN,-1,,return;,5,647,1
8946,RETURN,-1,,return ret;,3,679,8
8952,RETURN,-1,,return provider_names[provider_type()];,3,683,1
8962,RETURN,-1,,return buf;,3,694,3
8968,RETURN,-1,,"return GetOwner(env(), object());",3,698,1
9027,RETURN,-1,,return handle_scope.Escape(obj);,7,711,1
9230,RETURN,-1,,return;,5,38,1
9265,RETURN,1,,return;,47,50,1
9311,RETURN,-1,,return MakeLazilyInitializedJSTemplate(env->isolate_data());,3,85,1
9344,RETURN,-1,,return t;,3,93,3
9376,RETURN,-1,,return pointer_data_;,3,104,3
9476,RETURN,-1,,return self->Detach();,5,130,1
9487,RETURN,-1,,return true;,3,136,1
9493,RETURN,-1,,return object();,3,140,1
9499,RETURN,-1,,return !persistent_handle_.IsWeak();,3,144,1
9509,RETURN,-1,,return IsWeakOrDetached();,3,148,1
9704,RETURN,1,,return Nothing<bool>();,11,1472,1
9708,RETURN,-1,,return Just(true);,7,1475,2
9772,RETURN,-1,,return static_cast<uint32_t>(p[0] << 8U) | (static_cast<uint32_t>(p[1]));,3,82,1
9829,RETURN,-1,,return;,5,96,2
9943,RETURN,-1,,return;,9,133,1
10078,RETURN,-1,,return scope.Escape(ret);,3,171,6
10138,RETURN,-1,,return names;,3,186,4
10178,RETURN,-1,,"return Array::New(env->isolate(), ttls.out(), naddrttls);",3,198,4
10278,RETURN,1,,return status;,5,241,1
10333,RETURN,-1,,return ARES_SUCCESS;,5,257,3
10479,RETURN,-1,,return ARES_SUCCESS;,3,281,13
10510,RETURN,1,,return status;,5,295,1
10643,RETURN,-1,,return ARES_SUCCESS;,3,316,13
10674,RETURN,1,,return status;,5,330,1
10811,RETURN,-1,,return ARES_SUCCESS;,3,352,13
10842,RETURN,1,,return status;,5,367,1
11114,RETURN,-1,,return ARES_SUCCESS;,3,415,18
11145,RETURN,1,,return status;,5,430,1
11330,RETURN,-1,,return ARES_SUCCESS;,3,457,13
11361,RETURN,1,,return status;,5,473,1
11589,RETURN,-1,,return ARES_SUCCESS;,3,510,13
11640,RETURN,-1,,return status == ARES_EBADNAME ? ARES_EBADRESP : status;,5,535,1
11661,RETURN,-1,,return ARES_EBADRESP;,5,541,1
11701,RETURN,1,,return status2 == ARES_EBADNAME ? ARES_EBADRESP : status2;,7,551,1
11723,RETURN,-1,,return ARES_EBADRESP;,7,557,1
11766,RETURN,-1,,return status3 == ARES_EBADNAME ? ARES_EBADRESP : status3;,9,573,1
11800,RETURN,-1,,return status4 == ARES_EBADNAME ? ARES_EBADRESP : status4;,9,584,1
11824,RETURN,-1,,return ARES_EBADRESP;,9,590,1
12084,RETURN,-1,,return ARES_SUCCESS;,3,634,19
12290,RETURN,-1,,return nullptr;,5,705,2
12292,RETURN,-1,,return task;,3,708,6
12347,RETURN,1,,return env()->ThrowError(ToErrorCodeString(r));,7,727,1
12381,RETURN,-1,,return env()->ThrowError(ToErrorCodeString(r));,5,739,4
12425,RETURN,-1,,return;,5,751,1
12464,RETURN,1,,return;,5,761,1
12508,RETURN,-1,,return;,5,796,1
12522,RETURN,1,,return;,27,804,1
12535,RETURN,-1,,return;,5,808,3
12579,RETURN,-1,,return;,5,818,3
12601,RETURN,-1,,return 0;,3,833,2
12616,RETURN,-1,,return 0;,3,838,2
12631,RETURN,-1,,return 0;,3,843,2
12648,RETURN,-1,,return 0;,3,848,2
12663,RETURN,-1,,return 0;,3,853,2
12678,RETURN,-1,,return 0;,3,858,2
12693,RETURN,-1,,return 0;,3,863,2
12708,RETURN,-1,,return 0;,3,868,2
12723,RETURN,-1,,return 0;,3,873,2
12738,RETURN,-1,,return 0;,3,878,2
12753,RETURN,-1,,return 0;,3,883,2
12768,RETURN,-1,,return 0;,3,888,2
12782,RETURN,1,,return ARES_EBADRESP;,5,895,1
12873,RETURN,1,,return status;,5,921,1
13124,RETURN,1,,return status;,5,966,1
13274,RETURN,1,,return status;,5,988,1
13303,RETURN,1,,return status;,5,995,1
13410,RETURN,1,,return status;,5,1011,1
13429,RETURN,1,,return status;,5,1016,1
13458,RETURN,1,,return status;,5,1023,1
13565,RETURN,1,,return status;,5,1038,1
13591,RETURN,1,,return status;,5,1044,1
13633,RETURN,1,,return status;,5,1052,1
13640,RETURN,-1,,return 0;,3,1055,61
13654,RETURN,1,,return ARES_EBADRESP;,5,1062,1
13733,RETURN,1,,return status;,5,1084,1
13756,RETURN,-1,,return 0;,3,1089,23
13770,RETURN,1,,return ARES_EBADRESP;,5,1096,1
13849,RETURN,1,,return status;,5,1118,1
13872,RETURN,-1,,return 0;,3,1123,23
13886,RETURN,1,,return ARES_EBADRESP;,5,1130,1
13950,RETURN,1,,return status;,5,1142,1
13957,RETURN,-1,,return 0;,3,1145,17
13971,RETURN,1,,return ARES_EBADRESP;,5,1152,1
14041,RETURN,1,,return status;,5,1165,1
14048,RETURN,-1,,return 0;,3,1168,19
14062,RETURN,1,,return ARES_EBADRESP;,5,1175,1
14126,RETURN,1,,return status;,5,1188,1
14133,RETURN,-1,,return 0;,3,1191,17
14147,RETURN,1,,return ARES_EBADRESP;,5,1198,1
14217,RETURN,1,,return status;,5,1211,1
14224,RETURN,-1,,return 0;,3,1214,19
14238,RETURN,1,,return ARES_EBADRESP;,5,1221,1
14302,RETURN,1,,return status;,5,1233,1
14309,RETURN,-1,,return 0;,3,1236,17
14323,RETURN,1,,return ARES_EBADRESP;,5,1243,1
14387,RETURN,1,,return status;,5,1255,1
14394,RETURN,-1,,return 0;,3,1258,17
14408,RETURN,1,,return ARES_EBADRESP;,5,1265,1
14478,RETURN,1,,return status;,5,1279,1
14485,RETURN,-1,,return 0;,3,1282,19
14499,RETURN,1,,return ARES_EBADRESP;,5,1289,1
14563,RETURN,1,,return status;,5,1301,1
14570,RETURN,-1,,return 0;,3,1304,17
14584,RETURN,1,,return ARES_EBADRESP;,5,1311,1
14635,RETURN,1,,return status;,5,1324,1
14834,RETURN,-1,,return 0;,3,1355,26
14881,RETURN,-1,,return UV_EINVAL;,5,1369,1
14917,RETURN,-1,,return 0;,3,1384,7
14932,RETURN,1,,return ARES_EBADRESP;,5,1391,1
14969,RETURN,-1,,return 0;,3,1399,11
15194,RETURN,1,,return;,7,1479,1
15208,RETURN,1,,return;,9,1482,1
15423,RETURN,1,,return;,5,1544,1
15988,RETURN,-1,,return;,7,1677,1
16024,RETURN,-1,,return args.GetReturnValue().Set(DNS_ESETSRVPENDING);,5,1691,1
16073,RETURN,-1,,return args.GetReturnValue().Set(rv);,5,1702,3
16492,RETURN,-1,,return;,5,1794,2
16533,RETURN,-1,,return;,9,1804,2
16563,RETURN,-1,,return;,9,1811,2
16577,RETURN,-1,,return;,7,1817,2
17335,RETURN,-1,,return a.insertion_order_counter_ > b.insertion_order_counter_;,15,20,1
17420,RETURN,-1,,return std::hash<void*>()(cb.arg_);,3,37,1
17435,RETURN,-1,,return a.fn_ == b.fn_ && a.arg_ == b.arg_;,3,42,1
17604,RETURN,1,,return;,7,54,1
17624,RETURN,1,,return;,7,64,1
17900,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,61,1
17924,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,69,1
17962,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,82,1
18007,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,11,96,1
18076,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,124,1
18118,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,144,1
18151,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,152,1
18183,RETURN,1,,return WebCryptoCipherStatus::FAILED;,7,163,1
18202,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,170,33
18212,RETURN,-1,,return a == 0 ? 0 : 1 + (a - 1) / b;,3,179,1
18260,RETURN,-1,,"return BignumPointer(BN_bin2bn(
        data + params.iv.size() - byte_length,
        byte_length,
        nullptr));",5,188,3
18313,RETURN,-1,,"return BignumPointer(BN_bin2bn(counter.data(), counter.size(), nullptr));",3,202,11
18397,RETURN,-1,,return new_counter_block;,3,220,13
18438,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,241,1
18469,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,252,1
18486,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,256,1
18503,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,260,1
18507,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,262,14
18536,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,274,1
18562,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,281,1
18579,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,286,1
18602,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,292,1
18661,RETURN,-1,,return status;,5,309,4
18710,RETURN,1,,return status;,5,325,1
18767,RETURN,-1,,return status;,3,342,27
18791,RETURN,-1,,return false;,5,353,2
18809,RETURN,-1,,return true;,3,358,5
18858,RETURN,-1,,return false;,5,371,2
18860,RETURN,-1,,return true;,3,373,4
18884,RETURN,-1,,return false;,9,386,2
18900,RETURN,-1,,return false;,9,391,2
18931,RETURN,-1,,return false;,9,401,2
18953,RETURN,-1,,return false;,9,406,2
18958,RETURN,-1,,return true;,3,413,2
18986,RETURN,-1,,return false;,7,426,2
19004,RETURN,-1,,return true;,3,432,2
19038,RETURN,1,,return *this;,23,450,1
19045,RETURN,-1,,return *new (this) AESCipherConfig(std::move(other));,3,452,3
19166,RETURN,-1,,return Nothing<bool>();,9,485,1
19196,RETURN,-1,,return Nothing<bool>();,9,492,1
19226,RETURN,-1,,return Nothing<bool>();,9,499,1
19246,RETURN,1,,return Nothing<bool>();,9,505,1
19266,RETURN,1,,return Nothing<bool>();,9,510,1
19286,RETURN,1,,return Nothing<bool>();,9,515,1
19353,RETURN,-1,,return Nothing<bool>();,9,534,1
19396,RETURN,-1,,return Nothing<bool>();,9,542,1
19439,RETURN,-1,,return Nothing<bool>();,9,550,1
19462,RETURN,-1,,return Nothing<bool>();,5,561,2
19481,RETURN,-1,,return Nothing<bool>();,5,567,2
19483,RETURN,-1,,return Just(true);,3,570,11
19576,RETURN,-1,,return method;,5,233,10
19628,RETURN,-1,,return bio;,3,39,3
19671,RETURN,-1,,return BIOPointer();,5,50,1
19673,RETURN,-1,,return bio;,3,53,4
19687,RETURN,-1,,return 1;,3,61,3
19699,RETURN,1,,return 0;,5,67,1
19720,RETURN,-1,,return 1;,3,76,3
19763,RETURN,-1,,return bytes;,3,93,7
19780,RETURN,-1,,return read_head_->data_ + read_head_->read_pos_;,3,99,2
19877,RETURN,-1,,return total;,3,126,10
19895,RETURN,-1,,return len;,3,135,3
19903,RETURN,-1,,"return Write(bio, str, strlen(str));",3,140,1
19929,RETURN,1,,return 0;,5,148,1
19978,RETURN,-1,,return i;,3,165,10
20099,RETURN,-1,,return ret;,3,218,6
20110,RETURN,-1,,return method;,3,236,3
20247,RETURN,-1,,return bytes_read;,3,289,13
20258,RETURN,1,,return;,5,295,1
20274,RETURN,1,,return;,5,298,1
20290,RETURN,1,,return;,5,301,1
20422,RETURN,-1,,return bytes_read;,7,342,1
20443,RETURN,-1,,return max;,3,352,11
20584,RETURN,-1,,return write_head_->data_ + write_head_->write_pos_;,3,405,5
20743,RETURN,1,,return;,5,461,1
20800,RETURN,1,,return;,5,479,1
20835,RETURN,-1,,return static_cast<NodeBIO*>(BIO_get_data(bio));,3,495,2
20883,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,854,1
20912,RETURN,-1,,return;,7,863,2
20996,RETURN,-1,,return true;,5,36,7
21000,RETURN,-1,,return EVP_CIPHER_nid(cipher) == NID_chacha20_poly1305;,5,38,10
21006,RETURN,-1,,return false;,5,40,12
21018,RETURN,-1,,return IsSupportedAuthenticatedMode(cipher);,3,46,3
21026,RETURN,-1,,return tag_len == 4 || tag_len == 8 || (tag_len >= 12 && tag_len <= 16);,3,50,1
21134,RETURN,1,,return;,5,71,1
21259,RETURN,1,,return;,7,103,1
21289,RETURN,1,,return;,9,108,1
21327,RETURN,1,,return;,13,121,1
21344,RETURN,-1,,return;,13,131,1
21352,RETURN,1,,return;,13,136,1
21385,RETURN,-1,,return;,5,147,1
21411,RETURN,-1,,return;,5,158,1
21441,RETURN,-1,,return;,5,165,1
21474,RETURN,-1,,return;,5,174,1
21507,RETURN,-1,,return;,5,183,1
21536,RETURN,-1,,return;,5,190,1
21567,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_new"");",5,202,1
21583,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_new"");",5,207,1
22272,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error(),
                            ""Failed to initialize cipher"");",5,381,1
22291,RETURN,1,,return;,7,388,1
22305,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_KEYLEN(env());,5,393,2
22322,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error(),
                            ""Failed to initialize cipher"");",5,397,1
22344,RETURN,-1,,"return THROW_ERR_CRYPTO_UNSUPPORTED_OPERATION(env(),
        ""crypto.createCipher() is not supported in FIPS mode."");",5,412,1
22358,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_CIPHER(env());,5,418,1
22467,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""password is too large"");",5,458,1
22549,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_CIPHER(env());,5,482,1
22579,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,5,490,1
22597,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,5,498,1
22616,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,7,507,1
22694,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,535,1
22720,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""iv is too big"");",5,541,1
22799,RETURN,-1,,return false;,5,568,2
22828,RETURN,-1,,return false;,9,579,2
22858,RETURN,-1,,return false;,9,596,2
22874,RETURN,-1,,return false;,7,610,2
22891,RETURN,-1,,return false;,7,618,2
22928,RETURN,-1,,return true;,3,633,7
22950,RETURN,-1,,return false;,5,642,2
22952,RETURN,-1,,return true;,3,645,4
22959,RETURN,-1,,return IsSupportedAuthenticatedMode(ctx_.get());,3,651,2
23003,RETURN,-1,,return;,5,663,1
23071,RETURN,-1,,return args.GetReturnValue().Set(false);,5,680,1
23093,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,685,1
23162,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_AUTH_TAG(
      env, ""Invalid authentication tag length: %u"", tag_len);",5,705,1
23234,RETURN,-1,,return false;,7,725,1
23239,RETURN,-1,,return true;,3,729,2
23254,RETURN,1,,return false;,5,736,1
23279,RETURN,-1,,return false;,7,748,2
23286,RETURN,1,,return false;,7,752,1
23297,RETURN,1,,return false;,9,756,1
23312,RETURN,1,,return false;,7,761,1
23314,RETURN,-1,,"return 1 == EVP_CipherUpdate(ctx_.get(),
                               nullptr,
                               &outlen,
                               data.data(),
                               data.size());",3,764,7
23392,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,782,1
23424,RETURN,1,,return kErrorState;,5,791,1
23444,RETURN,1,,return kErrorMessageSize;,5,797,1
23472,RETURN,1,,return kErrorState;,35,806,1
23504,RETURN,-1,,return kErrorState;,5,817,1
23607,RETURN,-1,,return kSuccess;,5,841,2
23609,RETURN,-1,,return r == 1 ? kSuccess : kErrorState;,3,843,20
23637,RETURN,1,,return false;,5,874,1
23640,RETURN,-1,,"return EVP_CIPHER_CTX_set_padding(ctx_.get(), auto_padding);",3,876,3
23697,RETURN,1,,return false;,5,889,1
23765,RETURN,-1,,return false;,5,907,1
23907,RETURN,-1,,return ok;,3,946,10
23937,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_STATE(env);,5,955,1
23974,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), msg);",5,968,3
24043,RETURN,1,,return false;,5,989,1
24054,RETURN,1,,return false;,5,991,1
24066,RETURN,1,,return false;,5,993,1
24083,RETURN,1,,return false;,7,997,1
24094,RETURN,1,,return false;,57,1000,1
24120,RETURN,-1,,return false;,5,1009,1
24167,RETURN,-1,,return false;,5,1023,1
24213,RETURN,-1,,return true;,3,1032,15
24247,RETURN,1,,return;,5,1046,1
24261,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too long"");",5,1050,1
24286,RETURN,1,,return;,68,1053,1
24322,RETURN,1,,return THROW_ERR_OSSL_EVP_INVALID_DIGEST(env);,7,1060,1
24351,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""oaepLabel is too big"");",5,1066,1
24374,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error());",5,1071,1
24500,RETURN,1,,return false;,5,50,1
24547,RETURN,-1,,return false;,5,61,2
24555,RETURN,-1,,return false;,5,68,2
24557,RETURN,-1,,return true;,3,71,4
24571,RETURN,1,,return End();,23,81,1
24580,RETURN,1,,return;,5,85,1
24606,RETURN,-1,,return End();,5,98,1
24626,RETURN,1,,return End();,9,104,1
24630,RETURN,-1,,return End();,7,107,1
24649,RETURN,-1,,return End();,7,114,1
24708,RETURN,1,,return;,11,138,1
24728,RETURN,1,,return;,11,141,1
24748,RETURN,1,,return;,13,144,1
24760,RETURN,1,,return;,13,147,1
24787,RETURN,1,,return;,13,151,1
24837,RETURN,1,,return false;,5,176,1
24868,RETURN,1,,return false;,5,186,1
24897,RETURN,1,,return false;,5,194,1
24918,RETURN,1,,return false;,5,201,1
24925,RETURN,1,,return true;,5,205,1
24945,RETURN,1,,return false;,7,213,1
24987,RETURN,1,,return false;,7,221,1
25003,RETURN,1,,return false;,5,232,1
25005,RETURN,-1,,return true;,3,234,26
25149,RETURN,-1,,return result;,3,65,7
25188,RETURN,-1,,return;,5,81,1
25246,RETURN,1,,return default_value;,5,99,1
25277,RETURN,1,,return MaybeLocal<Value>();,5,106,1
25279,RETURN,-1,,return ret;,3,108,8
25287,RETURN,-1,,"return session != nullptr && SSL_set_session(ssl.get(), session.get()) == 1;",3,114,1
25309,RETURN,-1,,"return SSLSessionPointer(d2i_SSL_SESSION(nullptr, &buf, length));",3,118,1
25381,RETURN,-1,,return X509_V_OK;,7,137,1
25383,RETURN,-1,,return err;,3,140,4
25465,RETURN,-1,,return err == 1;,3,154,13
25494,RETURN,-1,,return nullptr;,5,168,1
25514,RETURN,1,,return nullptr;,23,172,1
25516,RETURN,-1,,return reinterpret_cast<const char*>(buf + 3);,3,173,7
25547,RETURN,-1,,return nullptr;,5,186,1
25567,RETURN,1,,return nullptr;,5,191,1
25584,RETURN,1,,return nullptr;,60,194,1
25593,RETURN,1,,return nullptr;,5,197,1
25615,RETURN,1,,return nullptr;,5,200,1
25617,RETURN,-1,,return reinterpret_cast<const char*>(buf + 5);,3,201,13
25628,RETURN,-1,,"return SSL_get_servername(ssl, TLSEXT_NAMETYPE_host_name);",3,205,1
25638,RETURN,-1,,"return SSL_CTX_set1_groups_list(sc->ctx().get(), groups) == 1;",3,209,1
25886,RETURN,-1,,return code;,3,248,4
25899,RETURN,1,,return Undefined(env->isolate());,5,253,1
25910,RETURN,-1,,"return OneByteString(env->isolate(), reason);",3,255,4
25928,RETURN,1,,return Undefined(env->isolate());,5,260,1
25934,RETURN,-1,,"return OneByteString(env->isolate(), X509ErrorCode(err));",3,261,2
25962,RETURN,1,,return Undefined(env->isolate());,5,268,1
25977,RETURN,-1,,return maybe_cert.FromMaybe<Value>(Local<Value>());,3,271,6
26029,RETURN,-1,,return ret.FromMaybe(Local<Value>());,3,284,5
26058,RETURN,1,,return false;,5,296,1
26066,RETURN,1,,return true;,5,300,1
26068,RETURN,-1,,"return !target->Set(context, name, value).IsNothing();",3,302,4
26091,RETURN,1,,return Undefined(env->isolate());,5,308,1
26097,RETURN,-1,,"return OneByteString(env->isolate(), getstr(cipher));",3,310,2
26211,RETURN,1,,return MaybeLocal<Object>();,9,350,1
26224,RETURN,1,,return MaybeLocal<Object>();,9,353,1
26250,RETURN,-1,,return MaybeLocal<Object>(object);,3,366,4
26333,RETURN,1,,return MaybeLocal<Object>();,7,383,1
26346,RETURN,1,,return MaybeLocal<Object>();,7,386,1
26371,RETURN,-1,,return MaybeLocal<Object>(issuer_chain);,3,398,3
26464,RETURN,-1,,"return name != nullptr ?
      MaybeLocal<Value>(OneByteString(env->isolate(), name)) :
      MaybeLocal<Value>(Undefined(env->isolate()));",3,421,3
26508,RETURN,1,,return Undefined(env->isolate());,5,432,1
26514,RETURN,-1,,"return ECPointToBuffer(
      env,
      group,
      pubkey,
      EC_KEY_get_conv_form(ec.get()),
      nullptr).FromMaybe(Local<Object>());",3,434,4
26541,RETURN,1,,return Undefined(env->isolate());,5,447,1
26557,RETURN,1,,return Undefined(env->isolate());,5,451,1
26563,RETURN,-1,,"return Integer::New(env->isolate(), bits);",3,453,5
26653,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,470,10
26684,RETURN,-1,,"return ToV8Value(env, bio);",3,479,4
26694,RETURN,-1,,"return Integer::New(env->isolate(), BN_num_bits(n));",3,483,1
26718,RETURN,-1,,"return ToV8Value(env, bio);",3,491,2
26793,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,508,9
26852,RETURN,1,,"return OneByteString(env->isolate(), buf.data<unsigned char>());",16,517,1
26862,RETURN,-1,,return Undefined(env->isolate());,3,521,2
26934,RETURN,-1,,"return Array::New(env->isolate(), ext_key_usage.out(), count);",5,541,9
26948,RETURN,-1,,return Undefined(env->isolate());,3,544,5
26960,RETURN,-1,,"return GetCipherName(env, SSL_get_current_cipher(ssl.get()));",3,549,1
26974,RETURN,-1,,"return GetCipherVersion(env, SSL_get_current_cipher(ssl.get()));",3,554,1
27004,RETURN,-1,,"return OneByteString(env->isolate(), fingerprint);",5,567,2
27011,RETURN,-1,,return Undefined(env->isolate());,3,569,5
27031,RETURN,-1,,"return ToV8Value(env, bio);",3,577,2
27049,RETURN,-1,,"return ToV8Value(env, bio);",3,585,2
27089,RETURN,-1,,return false;,7,604,9
27106,RETURN,-1,,return false;,11,611,1
27119,RETURN,-1,,return false;,11,618,1
27121,RETURN,-1,,return true;,3,623,2
27455,RETURN,-1,,return false;,7,726,1
27756,RETURN,-1,,return true;,3,814,2
27786,RETURN,1,,return false;,5,823,1
27835,RETURN,-1,,return ok;,3,839,11
27865,RETURN,1,,return false;,5,849,1
27938,RETURN,-1,,return ok;,3,872,12
27960,RETURN,1,,return Undefined(env->isolate());,5,881,1
27987,RETURN,-1,,return v8::Null(env->isolate());,5,888,2
27996,RETURN,-1,,"return ToV8Value(env, bio);",3,891,8
28020,RETURN,1,,return Undefined(env->isolate());,5,900,1
28047,RETURN,-1,,return v8::Null(env->isolate());,5,907,2
28056,RETURN,-1,,"return ToV8Value(env, bio);",3,910,8
28091,RETURN,-1,,return Undefined(env->isolate());,5,924,2
28097,RETURN,-1,,"return ToV8Value(env, bio);",3,927,4
28128,RETURN,-1,,return Undefined(env->isolate());,5,940,2
28134,RETURN,-1,,"return ToV8Value(env, bio);",3,943,2
28187,RETURN,-1,,return MaybeLocal<Value>();,5,957,1
28270,RETURN,-1,,return MaybeLocal<Value>();,7,986,1
28284,RETURN,-1,,return Undefined(env->isolate());,7,997,1
28323,RETURN,-1,,return MaybeLocal<Value>();,7,1007,1
28343,RETURN,-1,,return MaybeLocal<Value>();,7,1017,1
28372,RETURN,-1,,return MaybeLocal<Value>();,9,1021,1
28409,RETURN,-1,,return MaybeLocal<Value>();,11,1026,1
28439,RETURN,-1,,return MaybeLocal<Value>();,9,1031,1
28458,RETURN,-1,,return MaybeLocal<Value>();,7,1034,1
28460,RETURN,-1,,return result;,3,1038,10
28468,RETURN,-1,,"return Get(env, SSL_get_current_cipher(ssl.get()));",3,1044,1
28597,RETURN,-1,,return MaybeLocal<Array>();,7,1072,1
28624,RETURN,-1,,return scope.Escape(ret);,3,1077,14
28645,RETURN,1,,return MaybeLocal<Object>();,5,1083,1
28713,RETURN,-1,,return MaybeLocal<Object>();,5,1099,1
28715,RETURN,-1,,return scope.Escape(info);,3,1102,6
28765,RETURN,1,,return scope.Escape(info);,5,1112,1
28837,RETURN,-1,,return MaybeLocal<Object>();,9,1126,1
28926,RETURN,-1,,return MaybeLocal<Object>();,11,1153,1
28929,RETURN,-1,,return scope.Escape(info);,3,1159,15
28968,RETURN,-1,,return MaybeLocal<Object>();,5,1170,2
29026,RETURN,-1,,return MaybeLocal<Object>();,5,1187,2
29047,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,1191,9
29115,RETURN,1,,return Undefined(env->isolate());,5,1208,1
29137,RETURN,-1,,return maybe_cert.ToLocal(&result) ? result : MaybeLocal<Value>();,5,1214,2
29162,RETURN,1,,return Undefined(env->isolate());,5,1219,1
29195,RETURN,1,,return MaybeLocal<Value>();,5,1226,1
29228,RETURN,1,,return MaybeLocal<Value>();,5,1238,1
29251,RETURN,1,,return MaybeLocal<Value>();,5,1249,1
29279,RETURN,-1,,return MaybeLocal<Value>();,5,1257,1
29281,RETURN,-1,,return result;,3,1260,25
29402,RETURN,-1,,return MaybeLocal<Object>();,5,1292,1
29510,RETURN,-1,,return MaybeLocal<Object>();,7,1326,1
29552,RETURN,-1,,return MaybeLocal<Object>();,7,1339,1
29589,RETURN,-1,,return MaybeLocal<Object>();,9,1354,1
29632,RETURN,-1,,return MaybeLocal<Object>();,5,1375,1
29714,RETURN,-1,,return MaybeLocal<Object>();,5,1405,1
29716,RETURN,-1,,return scope.Escape(info);,3,1408,22
29798,RETURN,-1,,return store;,3,59,3
29825,RETURN,-1,,"return NodeBIO::NewFixed(*s, s.length());",5,69,3
29848,RETURN,-1,,"return NodeBIO::NewFixed(buf.data(), buf.length());",5,74,3
29861,RETURN,-1,,return nullptr;,3,77,5
29888,RETURN,1,,return 0;,5,162,1
29901,RETURN,1,,return 0;,5,168,1
29921,RETURN,-1,,return 0;,5,179,2
29940,RETURN,-1,,return 0;,5,189,1
29942,RETURN,-1,,"return SSL_CTX_use_certificate_chain(ctx,
                                       std::move(x),
                                       extra_certs.get(),
                                       cert,
                                       issuer);",3,192,13
30063,RETURN,-1,,return store;,3,240,12
30122,RETURN,-1,,return;,7,252,1
30147,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,261,1
30468,RETURN,-1,,return tmpl;,3,330,3
30695,RETURN,-1,,return nullptr;,5,395,1
30697,RETURN,-1,,"return new SecureContext(env, obj);",3,398,3
30881,RETURN,-1,,return;,7,452,2
30900,RETURN,-1,,return;,7,457,2
31124,RETURN,-1,,return;,7,513,2
31139,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_new"");",5,519,1
31243,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Error generating ticket keys"");",5,554,1
31259,RETURN,-1,,return SSLPointer(SSL_new(ctx_.get()));,3,561,1
31328,RETURN,-1,,return Nothing<bool>();,5,584,2
31350,RETURN,-1,,return Nothing<bool>();,5,590,2
31352,RETURN,-1,,return Just(true);,3,593,4
31393,RETURN,1,,return;,5,606,1
31436,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""PEM_read_bio_PrivateKey"");",5,623,1
31455,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_use_PrivateKey"");",5,626,1
31515,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,641,1
31593,RETURN,-1,,return;,5,660,3
31602,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Failure to initialize engine"");",5,664,1
31635,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""ENGINE_load_private_key"");",5,675,1
31654,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_use_PrivateKey"");",5,678,1
31679,RETURN,1,,return Just(false);,13,686,1
31712,RETURN,-1,,return Nothing<bool>();,5,696,2
31714,RETURN,-1,,return Just(true);,3,698,6
31772,RETURN,1,,return;,13,715,1
31866,RETURN,1,,return Just(false);,13,742,1
31891,RETURN,-1,,return Nothing<bool>();,5,749,2
31930,RETURN,-1,,return Just(true);,3,762,10
32063,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""Failed to set ciphers"");",5,805,1
32139,RETURN,-1,,return;,7,827,1
32140,RETURN,-1,,"return ThrowCryptoError(env, err, ""Failed to set ciphers"");",5,829,4
32203,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to set ECDH curve"");",5,844,1
32251,RETURN,-1,,return;,5,861,2
32265,RETURN,1,,return;,7,868,1
32282,RETURN,1,,return;,5,876,1
32303,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(
        env, ""DH parameter is less than 1024 bits"");",5,882,1
32341,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Error setting temp DH parameter"");",5,890,1
32647,RETURN,1,,return;,5,970,1
32808,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(env, ""PFX certificate argument is mandatory"");",5,1017,1
32823,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Unable to load PFX certificate"");",5,1022,1
33097,RETURN,-1,,return env->ThrowError(str);,5,1084,6
33190,RETURN,-1,,return;,5,1114,3
33205,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,1119,1
33249,RETURN,1,,return;,5,1130,1
33477,RETURN,-1,,return -1;,5,1191,1
33536,RETURN,-1,,return -1;,5,1205,1
33577,RETURN,-1,,return -1;,5,1212,1
33595,RETURN,1,,return r;,5,1217,1
33648,RETURN,-1,,return -1;,5,1225,1
33713,RETURN,-1,,return -1;,7,1235,1
33778,RETURN,-1,,return r;,3,1264,32
33843,RETURN,-1,,return -1;,7,1286,1
33846,RETURN,-1,,return 1;,5,1288,3
33861,RETURN,-1,,return 0;,5,1293,1
33889,RETURN,-1,,return -1;,5,1300,1
33892,RETURN,-1,,return 1;,3,1302,6
33982,RETURN,1,,return args.GetReturnValue().SetNull();,5,1324,1
34015,RETURN,1,,return;,5,1329,1
34056,RETURN,1,,return ERR_get_error();,5,1346,1
34081,RETURN,-1,,return 0;,5,1357,1
34083,RETURN,-1,,return err;,3,1360,10
34096,RETURN,1,,return;,21,1366,1
34138,RETURN,-1,,return args.GetReturnValue().Set(extra_root_certs_loaded);,3,1384,1
34305,RETURN,-1,,return p;,5,358,3
34320,RETURN,-1,,return g;,5,366,3
34334,RETURN,-1,,return pub_key;,5,374,3
34348,RETURN,-1,,return priv_key;,5,382,3
34357,RETURN,-1,,"return DH_set0_key(dh, num, nullptr);",36,461,1
34369,RETURN,-1,,"return DH_set0_key(dh, nullptr, num);",36,467,1
34612,RETURN,1,,return false;,5,136,1
34614,RETURN,-1,,return VerifyContext();,3,137,3
34647,RETURN,-1,,"return bn_g && BN_set_word(bn_g.get(), g) &&
         DH_set0_pqg(dh_.get(), bn_p.release(), nullptr, bn_g.release()) &&
         VerifyContext();",3,148,5
34700,RETURN,-1,,return false;,5,158,2
34717,RETURN,-1,,return false;,5,163,2
34752,RETURN,-1,,return false;,5,172,3
34754,RETURN,-1,,return VerifyContext();,3,174,9
34784,RETURN,-1,,return false;,5,182,2
34801,RETURN,-1,,return false;,5,187,2
34831,RETURN,-1,,return false;,5,195,3
34857,RETURN,-1,,return false;,5,202,3
34859,RETURN,-1,,return VerifyContext();,3,204,10
34869,RETURN,-1,,return BignumPointer(p(nullptr));,3,211,1
34890,RETURN,1,,"V(""modp1"", BN_get_rfc2409_prime_768);",3,221,1
34900,RETURN,1,,"V(""modp2"", BN_get_rfc2409_prime_1024);",3,222,1
34910,RETURN,1,,"V(""modp5"", BN_get_rfc3526_prime_1536);",3,223,1
34920,RETURN,1,,"V(""modp14"", BN_get_rfc3526_prime_2048);",3,224,1
34930,RETURN,1,,"V(""modp15"", BN_get_rfc3526_prime_3072);",3,225,1
34940,RETURN,1,,"V(""modp16"", BN_get_rfc3526_prime_4096);",3,226,1
34950,RETURN,1,,"V(""modp17"", BN_get_rfc3526_prime_6144);",3,227,1
34960,RETURN,1,,"V(""modp18"", BN_get_rfc3526_prime_8192);",3,228,1
34962,RETURN,-1,,return nullptr;,3,230,9
35023,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_DH_GROUP(env);,5,246,1
35130,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""prime is too big"");",9,269,1
35180,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""generator is too big"");",11,277,1
35210,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Initialization failed"");",5,285,1
35246,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Key generation failed"");",5,297,1
35357,RETURN,1,,return;,68,318,1
35404,RETURN,1,,"return THROW_ERR_CRYPTO_INVALID_STATE(env, err_if_null);",5,333,1
35503,RETURN,1,,return;,68,350,1
35589,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""secret is too big"");",5,397,1
35683,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Invalid Key"");",7,420,1
35698,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYLEN(env,
            ""Supplied key is too small"");",9,423,1
35709,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYLEN(env,
            ""Supplied key is too large"");",9,426,1
35713,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_KEYTYPE(env);,5,431,5
35774,RETURN,1,,return;,68,441,1
35825,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buf is too big"");",5,453,1
35916,RETURN,1,,return false;,5,483,1
35921,RETURN,-1,,return true;,3,485,4
35971,RETURN,-1,,return Nothing<bool>();,7,514,2
36023,RETURN,-1,,return Nothing<bool>();,9,525,2
36051,RETURN,-1,,return Nothing<bool>();,9,532,2
36102,RETURN,-1,,return Just(true);,3,543,4
36136,RETURN,1,,return EVPKeyCtxPointer();,7,552,1
36174,RETURN,-1,,return EVPKeyCtxPointer();,7,558,1
36273,RETURN,-1,,return EVPKeyCtxPointer();,7,579,1
36302,RETURN,1,,return EVPKeyCtxPointer();,5,589,1
36304,RETURN,-1,,return ctx;,3,591,6
36313,RETURN,-1,,return Just(true);,3,598,1
36343,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,611,1
36347,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,612,4
36364,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,615,1
36368,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,616,8
36428,RETURN,1,,return ByteSource();,5,633,1
36448,RETURN,-1,,return ByteSource();,5,637,1
36460,RETURN,-1,,return std::move(out).release();,3,641,9
36574,RETURN,1,,return;,31,662,1
36584,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""diffieHellman failed"");",5,665,1
36670,RETURN,-1,,return Nothing<bool>();,5,689,2
36688,RETURN,-1,,return Just(true);,3,695,12
36707,RETURN,-1,,return Just(!result->IsEmpty());,3,704,2
36737,RETURN,-1,,return true;,3,714,2
36760,RETURN,-1,,return Just(true);,3,723,4
36850,RETURN,-1,,return EVPKeyCtxPointer();,5,49,1
36891,RETURN,-1,,return EVPKeyCtxPointer();,7,55,1
36904,RETURN,1,,return EVPKeyCtxPointer();,5,60,1
36929,RETURN,1,,return EVPKeyCtxPointer();,5,66,1
36931,RETURN,-1,,return key_ctx;,3,68,13
37005,RETURN,-1,,return Just(true);,3,95,7
37015,RETURN,-1,,return Just(true);,3,102,1
37037,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,7,115,3
37051,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,118,1
37055,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,119,7
37072,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,122,1
37076,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,123,11
37202,RETURN,-1,,return Nothing<bool>();,5,161,1
37204,RETURN,-1,,return Just(true);,3,164,19
37264,RETURN,-1,,"return OneByteString(env->isolate(), OBJ_nid2sn(curve.nid));",5,116,1
37331,RETURN,-1,,return nid;,3,45,4
37390,RETURN,-1,,return nid;,3,61,3
37920,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_CURVE(env);,5,146,1
37931,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
      ""Failed to create key using named curve"");",5,150,1
37978,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to generate key"");",5,163,1
38001,RETURN,-1,,return pub;,5,175,2
38017,RETURN,-1,,return ECPointPointer();,5,181,2
38040,RETURN,1,,return ECPointPointer();,5,190,1
38042,RETURN,-1,,return pub;,3,192,10
38078,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_KEYPAIR(env);,5,206,1
38111,RETURN,-1,,return;,5,216,2
38175,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to compute ECDH key"");",5,230,1
38222,RETURN,1,,return;,68,234,1
38283,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to get ECDH public key"");",5,250,1
38333,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, error);",5,260,1
38381,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to get ECDH private key"");",5,272,1
38473,RETURN,1,,return;,68,286,1
38516,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,298,1
38536,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to BN"");",5,303,1
38548,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYTYPE(env,
        ""Private key is not valid for specified curve."");",5,308,1
38583,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert BN to a private key"");",5,319,1
38624,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to generate ECDH public key"");",5,334,1
38640,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to set generated public key"");",5,339,1
38708,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to EC_POINT"");",5,361,1
38730,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to set EC_POINT as the public key"");",5,367,1
38752,RETURN,-1,,return false;,5,378,1
38759,RETURN,-1,,"return EC_GROUP_get_order(group_, order.get(), nullptr) &&
         BN_cmp(private_key.get(), order.get()) < 0;",3,382,7
38787,RETURN,-1,,return 1 == EC_KEY_check_key(key_.get());,3,389,3
38833,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,402,1
38845,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,404,1
38873,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_CURVE(env);,5,410,1
38885,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to get EC_GROUP"");",5,415,1
38908,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to EC_POINT"");",5,423,1
38964,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, error);",5,434,1
39009,RETURN,-1,,return Just(!result->IsEmpty());,3,449,2
39109,RETURN,-1,,return Nothing<bool>();,5,474,2
39134,RETURN,-1,,return Just(true);,3,481,16
39230,RETURN,-1,,return false;,9,505,1
39250,RETURN,-1,,return false;,9,511,1
39308,RETURN,1,,return false;,9,530,1
39355,RETURN,-1,,return false;,9,542,1
39368,RETURN,-1,,return true;,3,549,8
39462,RETURN,-1,,return EVPKeyCtxPointer();,9,574,1
39492,RETURN,-1,,return key_ctx;,3,584,4
39558,RETURN,-1,,return Nothing<bool>();,5,610,2
39598,RETURN,-1,,return Nothing<bool>();,5,617,2
39604,RETURN,-1,,return Just(true);,3,622,12
39694,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,654,1
39716,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,657,1
39742,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,661,1
39774,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,7,669,1
39799,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,7,674,1
39817,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,680,11
39828,RETURN,-1,,return Just(true);,3,688,1
39850,RETURN,-1,,"return EC_Raw_Export(key_data.get(), params, out);",7,700,3
39868,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,703,1
39872,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,704,7
39890,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,707,1
39910,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",9,711,1
39963,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,24,725,1
39988,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,24,729,1
40068,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,11,745,1
40080,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,9,747,33
40178,RETURN,-1,,return Nothing<void>();,5,779,2
40201,RETURN,-1,,return Nothing<void>();,5,786,1
40236,RETURN,-1,,return Nothing<void>();,5,801,1
40302,RETURN,-1,,return Nothing<void>();,7,822,2
40322,RETURN,-1,,return Nothing<void>();,5,829,1
40337,RETURN,-1,,"return SetEncodedValue(
      env,
      target,
      env->jwk_d_string(),
      pvt,
      degree_bytes).IsJust() ? JustVoid() : Nothing<void>();",5,834,3
40353,RETURN,-1,,return JustVoid();,3,842,30
40436,RETURN,-1,,return Nothing<bool>();,5,873,1
40463,RETURN,1,,return Nothing<bool>();,5,881,1
40546,RETURN,-1,,return Nothing<bool>();,7,894,2
40618,RETURN,-1,,return Nothing<bool>();,5,906,2
40641,RETURN,-1,,return Nothing<bool>();,5,913,1
40643,RETURN,-1,,return Just(true);,3,916,19
40686,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,930,2
40764,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,940,1
40797,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,947,2
40823,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,955,2
40877,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,966,2
40917,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,973,2
40936,RETURN,-1,,"return KeyObjectData::CreateAsymmetric(type, ManagedEVPPKey(std::move(pkey)));",3,980,26
40996,RETURN,-1,,"return target->Set(
      env->context(),
      env->named_curve_string(),
      OneByteString(env->isolate(), OBJ_nid2sn(nid)));",3,997,13
41047,RETURN,-1,,return BN_num_bytes(order.get());,3,1014,9
41099,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,145,1
41424,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(),
                            ""Digest method not supported"");",5,103,1
41450,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Digest copy error"");",5,109,1
41484,RETURN,-1,,return false;,5,117,2
41514,RETURN,-1,,return false;,7,126,2
41522,RETURN,-1,,return true;,3,131,5
41534,RETURN,1,,return false;,5,136,1
41536,RETURN,-1,,"return EVP_DigestUpdate(mdctx_.get(), data, len) == 1;",3,137,2
41678,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",7,191,1
41743,RETURN,-1,,return;,5,202,3
41772,RETURN,1,,return *this;,23,214,1
41779,RETURN,-1,,return *new (this) HashConfig(std::move(other));,3,216,3
41824,RETURN,-1,,return Just(!result->IsEmpty());,3,231,2
41888,RETURN,-1,,return Nothing<bool>();,5,248,2
41908,RETURN,-1,,return Nothing<bool>();,5,254,2
41988,RETURN,-1,,return Nothing<bool>();,9,270,2
41990,RETURN,-1,,return Just(true);,3,275,17
42040,RETURN,-1,,return false;,5,288,1
42101,RETURN,1,,return false;,7,303,1
42114,RETURN,-1,,return true;,3,308,5
42172,RETURN,1,,return *this;,23,29,1
42179,RETURN,-1,,return *new (this) HKDFConfig(std::move(other));,3,31,3
42205,RETURN,-1,,return Just(!result->IsEmpty());,3,40,2
42300,RETURN,-1,,return Nothing<bool>();,5,62,2
42345,RETURN,-1,,return Nothing<bool>();,5,74,2
42358,RETURN,-1,,return Nothing<bool>();,5,78,2
42429,RETURN,-1,,return Nothing<bool>();,5,97,2
42431,RETURN,-1,,return Just(true);,3,100,30
42488,RETURN,-1,,return false;,5,113,1
42551,RETURN,-1,,return false;,5,141,1
42571,RETURN,-1,,return false;,5,145,1
42597,RETURN,1,,return false;,5,151,1
42610,RETURN,-1,,return true;,3,154,17
42684,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,107,1
42892,RETURN,1,,"return THROW_ERR_CRYPTO_INVALID_DIGEST(
        env(), ""Invalid digest: %s"", hash_type);",5,74,1
42929,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error());",5,82,2
42993,RETURN,-1,,"return ctx_ && HMAC_Update(ctx_.get(),
                             reinterpret_cast<const unsigned char*>(data),
                             len) == 1;",3,97,1
43096,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Failed to finalize HMAC"");",7,131,1
43147,RETURN,-1,,return;,5,145,3
43176,RETURN,1,,return *this;,23,159,1
43183,RETURN,-1,,return *new (this) HmacConfig(std::move(other));,3,161,3
43321,RETURN,-1,,return Nothing<bool>();,5,193,2
43359,RETURN,-1,,return Nothing<bool>();,5,203,2
43406,RETURN,-1,,return Nothing<bool>();,7,213,2
43424,RETURN,-1,,return Just(true);,3,220,20
43464,RETURN,-1,,return false;,5,236,1
43486,RETURN,-1,,return false;,5,243,1
43506,RETURN,-1,,return false;,5,250,1
43520,RETURN,-1,,return true;,3,255,10
43602,RETURN,-1,,return Just(!result->IsEmpty());,3,276,2
43689,RETURN,-1,,return Just(true);,3,43,4
43720,RETURN,1,,return EVPKeyCtxPointer();,5,50,1
43722,RETURN,-1,,return ctx;,3,52,4
43789,RETURN,-1,,return Just(true);,3,70,7
43821,RETURN,1,,return KeyGenJobStatus::FAILED;,5,79,1
43837,RETURN,-1,,return KeyGenJobStatus::OK;,3,81,6
43867,RETURN,-1,,"return Just(KeyObjectHandle::Create(env, data).ToLocal(result));",3,89,2
43939,RETURN,-1,,"return d2i_PUBKEY(nullptr, p, l);",9,116,1
43952,RETURN,-1,,"return d2i_PublicKey(EVP_PKEY_RSA, nullptr, p, l);",9,125,1
43971,RETURN,-1,,return x509 ? X509_get_pubkey(x509.get()) : nullptr;,9,135,3
44190,RETURN,1,,return ParseKeyResult::kParseKeyNotRecognized;,7,92,1
44209,RETURN,-1,,"return *pkey ? ParseKeyResult::kParseKeyOk :
                 ParseKeyResult::kParseKeyFailed;",3,100,8
44237,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,5,109,1
44256,RETURN,1,,return ret;,5,119,1
44278,RETURN,1,,return ret;,5,128,1
44286,RETURN,-1,,"return TryParsePublicKey(pkey, bp, ""CERTIFICATE"",
      [](const unsigned char** p, long l) {  // NOLINT(runtime/int)
        X509Pointer x509(d2i_X509(nullptr, p, l));
        return x509 ? X509_get_pubkey(x509.get()) : nullptr;
      });",3,132,11
44307,RETURN,-1,,"return ParsePublicKeyPEM(pkey, key, key_len);",5,144,1
44364,RETURN,-1,,"return *pkey ? ParseKeyResult::kParseKeyOk :
                   ParseKeyResult::kParseKeyFailed;",5,156,5
44393,RETURN,1,,return false;,5,164,1
44423,RETURN,1,,return false;,7,170,1
44493,RETURN,-1,,return true;,3,182,3
44513,RETURN,1,,return false;,5,189,1
44515,RETURN,-1,,"return len >= 3 &&
         data[offset] == 2 &&
         data[offset + 1] == 1 &&
         !(data[offset + 2] & 0xfe);",3,196,4
44560,RETURN,1,,return false;,5,206,1
44562,RETURN,-1,,"return len >= 1 &&
         data[offset] != 2;",3,210,4
44605,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,7,223,1
44676,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,9,238,1
44765,RETURN,1,,return ParseKeyResult::kParseKeyOk;,5,264,1
44788,RETURN,1,,return ParseKeyResult::kParseKeyNeedPassphrase;,7,268,1
44792,RETURN,-1,,return ParseKeyResult::kParseKeyFailed;,3,270,9
44813,RETURN,-1,,"return String::NewFromUtf8(env->isolate(), bptr->data,
                               NewStringType::kNormal,
                               bptr->length).FromMaybe(Local<Value>());",5,281,1
44840,RETURN,-1,,"return Buffer::Copy(env, bptr->data, bptr->length)
        .FromMaybe(Local<Value>());",5,287,2
45127,RETURN,-1,,return MaybeLocal<Value>();,5,389,2
45129,RETURN,-1,,"return BIOToStringOrBuffer(env, bio.get(), config.format_);",3,391,14
45171,RETURN,-1,,"return PEM_write_bio_RSAPublicKey(bio.get(), rsa.get()) == 1;",7,403,1
45190,RETURN,-1,,"return i2d_RSAPublicKey_bio(bio.get(), rsa.get()) == 1;",7,407,2
45219,RETURN,-1,,"return PEM_write_bio_PUBKEY(bio.get(), pkey) == 1;",7,413,1
45235,RETURN,-1,,"return i2d_PUBKEY_bio(bio.get(), pkey) == 1;",7,417,2
45269,RETURN,-1,,return MaybeLocal<Value>();,5,430,2
45271,RETURN,-1,,"return BIOToStringOrBuffer(env, bio.get(), config.format_);",3,432,4
45349,RETURN,-1,,return Nothing<bool>();,5,453,3
45360,RETURN,1,,return Nothing<bool>();,5,456,1
45400,RETURN,-1,,return Nothing<bool>();,5,466,1
45402,RETURN,-1,,return Just(true);,3,469,8
45445,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,479,2
45468,RETURN,-1,,return KeyObjectData::CreateSecret(std::move(key_data));,3,484,6
45502,RETURN,1,,"return ExportJWKRsaKey(env, key, target);",25,494,1
45510,RETURN,-1,,"return ExportJWKRsaKey(env, key, target);",24,497,6
45517,RETURN,-1,,"return ExportJWKEcKey(env, key, target).IsJust() ?
                               Just(true) : Nothing<bool>();",23,498,9
45537,RETURN,-1,,"return ExportJWKEdKey(env, key, target);",25,506,18
45544,RETURN,-1,,return Just(false);,3,509,3
45563,RETURN,-1,,"return ImportJWKRsaKey(env, jwk, args, offset);",5,519,1
45578,RETURN,-1,,"return ImportJWKEcKey(env, jwk, args, offset);",5,521,1
45588,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,3,525,3
45609,RETURN,-1,,"return target->Set(env->context(),
                     env->length_string(),
                     Number::New(env->isolate(), static_cast<double>(length)));",3,536,3
45654,RETURN,-1,,"return GetRsaKeyDetail(env, key, target);",28,548,5
45661,RETURN,-1,,"return GetDsaKeyDetail(env, key, target);",24,549,8
45668,RETURN,-1,,"return GetEcKeyDetail(env, key, target);",23,550,11
45675,RETURN,-1,,"return GetDhKeyDetail(env, key, target);",23,551,14
45682,RETURN,-1,,return Nothing<bool>();,3,554,3
45730,RETURN,-1,,return *this;,3,575,6
45737,RETURN,-1,,return !!pkey_;,3,579,1
45745,RETURN,-1,,return pkey_.get();,3,583,1
45754,RETURN,-1,,return mutex_.get();,3,587,1
45786,RETURN,-1,,"return (pkey_ && EVP_PKEY_get_raw_private_key(
      pkey_.get(), nullptr, &len) == 1) ? len : 0;",3,599,3
45810,RETURN,-1,,"return (pkey_ && EVP_PKEY_get_raw_public_key(
      pkey_.get(), nullptr, &len) == 1) ? len : 0;",3,605,3
45831,RETURN,-1,,return b ? Just(true) : Nothing<bool>();,3,611,1
45853,RETURN,-1,,"return ExportJWKSecretKey(env, key, result.As<Object>());",7,620,3
45865,RETURN,-1,,"return ExportJWKAsymmetricKey(
        env, key, result.As<Object>(), handleRsaPss);",7,624,8
45888,RETURN,1,,return Nothing<bool>();,15,635,1
45910,RETURN,-1,,"return Tristate(KeyObjectHandle::Create(env, data).ToLocal(out));",5,641,2
45957,RETURN,-1,,"return ExportJWKInner(env, data, *out, false);",5,646,3
45964,RETURN,-1,,"return Tristate(WritePublicKey(env, get(), config).ToLocal(out));",3,649,3
45986,RETURN,1,,return Nothing<bool>();,15,656,1
46008,RETURN,-1,,"return Tristate(KeyObjectHandle::Create(env, data).ToLocal(out));",5,660,2
46055,RETURN,-1,,"return ExportJWKInner(env, data, *out, false);",5,665,3
46062,RETURN,-1,,"return Tristate(WritePrivateKey(env, get(), config).ToLocal(out));",3,668,3
46153,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>();,11,692,2
46209,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>();,9,707,2
46239,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>(std::move(result));,3,717,7
46263,RETURN,-1,,return result;,3,726,3
46324,RETURN,1,,return ManagedEVPPKey();,7,739,1
46345,RETURN,-1,,"return GetParsedKey(env, std::move(pkey), ret,
                        ""Failed to read private key"");",5,744,10
46392,RETURN,-1,,return key->Data()->GetAsymmetricKey();,5,752,6
46439,RETURN,-1,,return ManagedEVPPKey();,7,764,2
46457,RETURN,1,,return ManagedEVPPKey();,7,769,1
46587,RETURN,-1,,"return ManagedEVPPKey::GetParsedKey(
        env, std::move(pkey), ret, ""Failed to read asymmetric key"");",5,808,13
46639,RETURN,-1,,return key->Data()->GetAsymmetricKey();,5,816,7
46678,RETURN,-1,,return ManagedEVPPKey(std::move(pkey));,3,836,2
46734,RETURN,-1,,return std::shared_ptr<KeyObjectData>(new KeyObjectData(std::move(key)));,3,863,1
46756,RETURN,-1,,"return std::shared_ptr<KeyObjectData>(new KeyObjectData(key_type, pkey));",3,870,2
46771,RETURN,-1,,return key_type_;,3,874,1
46780,RETURN,-1,,return asymmetric_key_;,3,879,2
46789,RETURN,-1,,return symmetric_key_.data<char>();,3,884,2
46801,RETURN,-1,,return symmetric_key_.size();,3,889,2
46822,RETURN,-1,,return !t.IsEmpty() && t->HasInstance(value);,3,894,2
46932,RETURN,-1,,return templ->GetFunction(env->context()).ToLocalChecked();,3,920,3
47053,RETURN,1,,return MaybeLocal<Object>();,5,945,1
47070,RETURN,-1,,return obj;,3,950,9
47076,RETURN,-1,,return data_;,3,954,1
47202,RETURN,1,,return;,7,993,1
47240,RETURN,1,,return;,7,1003,1
47326,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_JWK(env);,5,1028,1
47357,RETURN,-1,,return;,7,1038,1
47377,RETURN,-1,,return;,7,1044,1
47443,RETURN,1,,return args.GetReturnValue().Set(false);,5,1064,1
47489,RETURN,-1,,return args.GetReturnValue().Set(false);,5,1072,1
47657,RETURN,1,,return args.GetReturnValue().Set(false);,9,1116,1
47843,RETURN,-1,,return THROW_ERR_CRYPTO_UNSUPPORTED_OPERATION(env);,9,1167,3
47925,RETURN,1,,return;,9,1191,1
47945,RETURN,1,,return;,9,1197,1
47979,RETURN,-1,,return env()->crypto_rsa_string();,5,1210,3
47986,RETURN,-1,,return env()->crypto_rsa_pss_string();,5,1212,6
47993,RETURN,-1,,return env()->crypto_dsa_string();,5,1214,9
48000,RETURN,-1,,return env()->crypto_dh_string();,5,1216,12
48007,RETURN,-1,,return env()->crypto_ec_string();,5,1218,15
48014,RETURN,-1,,return env()->crypto_ed25519_string();,5,1220,18
48021,RETURN,-1,,return env()->crypto_ed448_string();,5,1222,21
48028,RETURN,-1,,return env()->crypto_x25519_string();,5,1224,24
48035,RETURN,-1,,return env()->crypto_x448_string();,5,1226,27
48041,RETURN,-1,,return Undefined(env()->isolate());,5,1228,29
48205,RETURN,1,,return;,7,1271,1
48261,RETURN,-1,,"return Buffer::Copy(env(), buf, len).FromMaybe(Local<Value>());",3,1283,5
48278,RETURN,-1,,"return WritePublicKey(env(), data_->GetAsymmetricKey().get(), config);",3,1288,1
48294,RETURN,-1,,"return WritePrivateKey(env(), data_->GetAsymmetricKey().get(), config);",3,1293,1
48532,RETURN,1,,return;,5,1347,1
48572,RETURN,-1,,return;,5,1353,1
48600,RETURN,1,,return;,52,1356,1
48626,RETURN,1,,return;,52,1358,1
48652,RETURN,1,,return;,52,1360,1
48686,RETURN,-1,,return {};,5,1371,2
48706,RETURN,1,,return {};,5,1376,1
48745,RETURN,-1,,return {};,5,1384,1
48802,RETURN,1,,return {};,5,1402,1
48803,RETURN,-1,,return BaseObjectPtr<BaseObject>(Unwrap<KeyObjectHandle>(key.As<Object>()));,3,1404,10
48820,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,1408,1
48830,RETURN,-1,,return std::make_unique<KeyObjectTransferData>(handle_data_);,3,1413,1
48883,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,5,1425,1
48895,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,1428,10
48951,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,5,1442,1
48963,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,1445,12
51050,RETURN,1,,return *this;,23,29,1
51057,RETURN,-1,,return *new (this) PBKDF2Config(std::move(other));,3,31,3
51111,RETURN,-1,,return Just(!result->IsEmpty());,3,48,2
51162,RETURN,-1,,return Nothing<bool>();,5,72,2
51175,RETURN,-1,,return Nothing<bool>();,5,77,2
51262,RETURN,-1,,return Nothing<bool>();,5,95,2
51290,RETURN,-1,,return Nothing<bool>();,5,101,2
51322,RETURN,-1,,return Nothing<bool>();,5,108,2
51324,RETURN,-1,,return Just(true);,3,111,23
51381,RETURN,-1,,return false;,5,132,1
51394,RETURN,-1,,return true;,3,135,5
51455,RETURN,-1,,return Just(!result->IsEmpty());,3,34,2
51554,RETURN,-1,,return Just(true);,3,56,14
51564,RETURN,-1,,"return CSPRNG(params.buffer, params.size).is_ok();",3,63,1
51652,RETURN,-1,,return Just(true);,3,83,6
51754,RETURN,-1,,return Nothing<bool>();,7,104,2
51799,RETURN,-1,,return Nothing<bool>();,7,113,2
51829,RETURN,-1,,return Nothing<bool>();,7,128,2
51856,RETURN,-1,,return Nothing<bool>();,9,136,2
51884,RETURN,-1,,return Nothing<bool>();,5,146,2
51886,RETURN,-1,,return Just(true);,3,149,20
51936,RETURN,-1,,return false;,5,166,1
51938,RETURN,-1,,return true;,3,169,3
52015,RETURN,-1,,return Just(true);,3,194,7
52051,RETURN,1,,return false;,16,209,1
52075,RETURN,-1,,return true;,3,213,10
52104,RETURN,-1,,return Just(true);,3,222,2
52228,RETURN,1,,return EVPKeyCtxPointer();,5,41,1
52244,RETURN,-1,,return EVPKeyCtxPointer();,5,46,1
52287,RETURN,1,,return EVPKeyCtxPointer();,7,56,1
52324,RETURN,-1,,return EVPKeyCtxPointer();,7,64,1
52368,RETURN,-1,,return EVPKeyCtxPointer();,7,80,1
52413,RETURN,-1,,return EVPKeyCtxPointer();,7,92,1
52415,RETURN,-1,,return ctx;,3,96,7
52607,RETURN,-1,,return Nothing<bool>();,9,157,2
52666,RETURN,-1,,return Nothing<bool>();,9,168,2
52720,RETURN,-1,,return Nothing<bool>();,9,179,2
52726,RETURN,-1,,return Just(true);,3,186,13
52737,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,3,194,1
52790,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,212,1
52806,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,215,1
52839,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,221,1
52851,RETURN,1,,return WebCryptoCipherStatus::FAILED;,44,224,1
52879,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,233,1
52909,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,243,1
52925,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,247,19
52958,RETURN,-1,,return Just(true);,3,258,3
52980,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,7,271,3
52986,RETURN,-1,,"return RSA_JWK_Export(key_data.get(), params, out);",7,273,6
53004,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,276,1
53008,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,277,10
53025,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,280,1
53029,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,281,14
53155,RETURN,-1,,return Nothing<bool>();,9,321,2
53183,RETURN,-1,,return Nothing<bool>();,11,328,2
53197,RETURN,-1,,return Nothing<bool>();,7,336,6
53199,RETURN,-1,,return Just(true);,3,339,9
53223,RETURN,-1,,"return RSA_Cipher<EVP_PKEY_encrypt_init, EVP_PKEY_encrypt>(
          env, key_data.get(), params, in, out);",7,352,4
53241,RETURN,-1,,"return RSA_Cipher<EVP_PKEY_decrypt_init, EVP_PKEY_decrypt>(
          env, key_data.get(), params, in, out);",7,356,8
53251,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,3,359,2
53355,RETURN,-1,,return Nothing<bool>();,5,395,1
53382,RETURN,-1,,return Nothing<bool>();,5,400,1
53479,RETURN,-1,,return Nothing<bool>();,7,412,1
53481,RETURN,-1,,return Just(true);,3,416,23
53580,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,434,2
53601,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,439,2
53669,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,455,2
53803,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,471,2
53842,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,480,2
53988,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,498,2
54007,RETURN,-1,,"return KeyObjectData::CreateAsymmetric(type, ManagedEVPPKey(std::move(pkey)));",3,505,19
54124,RETURN,-1,,return Nothing<bool>();,5,540,1
54201,RETURN,-1,,return Nothing<bool>();,5,559,1
54273,RETURN,-1,,return Nothing<bool>();,9,589,1
54332,RETURN,-1,,return Nothing<bool>();,11,608,1
54355,RETURN,-1,,return Nothing<bool>();,11,615,2
54385,RETURN,-1,,return Nothing<bool>();,9,625,1
54387,RETURN,-1,,return Just<bool>(true);,3,630,22
54502,RETURN,1,,return *this;,23,34,1
54509,RETURN,-1,,return *new (this) ScryptConfig(std::move(other));,3,36,3
54563,RETURN,-1,,return Just(!result->IsEmpty());,3,52,2
54614,RETURN,-1,,return Nothing<bool>();,5,69,2
54627,RETURN,-1,,return Nothing<bool>();,5,74,2
54795,RETURN,-1,,return Nothing<bool>();,5,108,2
54817,RETURN,-1,,return Just(true);,3,114,24
54879,RETURN,-1,,return false;,5,135,1
54892,RETURN,-1,,return true;,3,138,5
54930,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,380,1
54977,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,497,1
55069,RETURN,-1,,"return (L == 1024 && N == 160) ||
           (L == 2048 && N == 224) ||
           (L == 2048 && N == 256) ||
           (L == 3072 && N == 256);",5,48,11
55101,RETURN,-1,,return true;,3,54,2
55143,RETURN,1,,return false;,7,65,1
55165,RETURN,1,,return false;,9,68,1
55167,RETURN,-1,,return true;,3,72,2
55191,RETURN,1,,return nullptr;,5,84,1
55328,RETURN,-1,,return sig;,5,106,3
55330,RETURN,-1,,return nullptr;,3,109,14
55337,RETURN,-1,,"return EVP_PKEY_id(m_pkey.get()) == EVP_PKEY_RSA_PSS ? RSA_PKCS1_PSS_PADDING :
                                                         RSA_PKCS1_PADDING;",3,113,1
55406,RETURN,-1,,return kNoDsaSignature;,5,129,1
55408,RETURN,-1,,return (bits + 7) / 8;,3,132,5
55433,RETURN,1,,return false;,5,142,1
55451,RETURN,-1,,"return BN_bn2binpad(pr, out, n) > 0 && BN_bn2binpad(ps, out + n, n) > 0;",3,147,8
55484,RETURN,1,,return std::move(signature);,5,155,1
55538,RETURN,1,,return std::move(signature);,5,165,1
55544,RETURN,-1,,return buf;,3,167,7
55563,RETURN,1,,return ByteSource();,5,177,1
55600,RETURN,1,,return ByteSource();,5,185,1
55602,RETURN,-1,,return std::move(out).release();,3,187,10
55627,RETURN,1,,return std::move(out);,5,195,1
55650,RETURN,1,,return ByteSource();,5,200,1
55711,RETURN,1,,return ByteSource();,5,216,1
55715,RETURN,-1,,"return ByteSource::Allocated(data, len);",3,220,25
55743,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_DIGEST(env);,7,228,3
55752,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_STATE(env, ""Not initialised"");",7,231,6
55762,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Malformed signature"");",7,234,9
55798,RETURN,1,,"return ThrowCryptoError(env, err);",11,243,1
55811,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""EVP_SignInit_ex failed"");",13,246,3
55821,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""EVP_SignUpdate failed"");",13,249,6
55831,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""PEM_read_bio_PrivateKey failed"");",13,252,9
55841,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""PEM_read_bio_PUBKEY failed"");",13,255,12
55853,RETURN,-1,,return;,7,263,21
55870,RETURN,-1,,return true;,7,271,5
55873,RETURN,-1,,return false;,7,273,7
55892,RETURN,-1,,return dsa_encoding == kSigEncP1363;,7,282,5
55897,RETURN,-1,,return false;,7,284,7
55931,RETURN,1,,return kSignUnknownDigest;,5,299,1
55955,RETURN,-1,,return kSignInit;,5,304,2
55957,RETURN,-1,,return kSignOk;,3,307,8
55970,RETURN,1,,return kSignNotInitialised;,5,312,1
55982,RETURN,1,,return kSignUpdate;,5,314,1
55984,RETURN,-1,,return kSignOk;,3,315,3
56216,RETURN,1,,return SignResult(kSignNotInitialised);,5,392,1
56235,RETURN,1,,return SignResult(kSignPrivateKey);,5,397,1
56287,RETURN,-1,,"return SignResult(error, std::move(buffer));",3,406,9
56336,RETURN,1,,return;,5,419,1
56450,RETURN,1,,"return crypto::CheckThrow(env, ret.error);",5,444,1
56675,RETURN,1,,return kSignNotInitialised;,5,509,1
56702,RETURN,1,,return kSignPublicKey;,5,517,1
56773,RETURN,-1,,return kSignOk;,3,530,11
56815,RETURN,1,,return;,5,544,1
56829,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,548,1
56962,RETURN,1,,"return crypto::CheckThrow(env, Error::kSignMalformedSignature);",7,570,1
56990,RETURN,1,,"return crypto::CheckThrow(env, err);",5,577,1
57021,RETURN,1,,return *this;,23,595,1
57028,RETURN,-1,,return *new (this) SignConfiguration(std::move(other));,3,597,3
57157,RETURN,1,,return Nothing<bool>();,5,631,1
57182,RETURN,-1,,return Nothing<bool>();,5,637,2
57240,RETURN,-1,,return Nothing<bool>();,7,648,2
57349,RETURN,-1,,return Nothing<bool>();,7,667,2
57378,RETURN,-1,,return Nothing<bool>();,7,675,2
57428,RETURN,-1,,return Just(true);,3,691,22
57485,RETURN,-1,,return false;,9,711,2
57522,RETURN,-1,,return false;,9,722,2
57579,RETURN,-1,,return false;,5,740,2
57631,RETURN,-1,,return false;,11,754,2
57672,RETURN,-1,,return false;,11,763,2
57729,RETURN,-1,,return false;,11,774,2
57758,RETURN,-1,,return false;,11,780,2
57868,RETURN,-1,,return true;,3,807,13
57922,RETURN,-1,,return Just(!result->IsEmpty());,3,825,2
57990,RETURN,1,,return false;,5,30,1
58004,RETURN,1,,return false;,5,34,1
58006,RETURN,-1,,"return NETSCAPE_SPKI_verify(spki.get(), pkey.get()) > 0;",3,36,9
58044,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,43,1
58060,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,46,1
58088,RETURN,1,,return ByteSource();,13,54,1
58109,RETURN,1,,return ByteSource();,14,65,1
58122,RETURN,1,,return ByteSource();,14,68,1
58137,RETURN,1,,return ByteSource();,57,70,1
58139,RETURN,-1,,return ByteSource::FromBIO(bio);,3,72,12
58171,RETURN,1,,return args.GetReturnValue().SetEmptyString();,26,79,1
58187,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,82,1
58201,RETURN,1,,return args.GetReturnValue().SetEmptyString();,14,85,1
58249,RETURN,1,,return ByteSource();,5,101,1
58266,RETURN,-1,,"return (buf_size >= 0) ? ByteSource::Allocated(buf, buf_size) : ByteSource();",3,105,10
58304,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,113,1
58320,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,116,1
58333,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,120,1
58476,RETURN,-1,,return;,5,28,2
58487,RETURN,-1,,return;,5,34,2
58511,RETURN,-1,,return;,5,42,2
58512,RETURN,-1,,"return args.GetReturnValue().Set(
      CRYPTO_memcmp(buf1.data(), buf2.data(), buf1.size()) == 0);",3,45,10
58584,RETURN,-1,,return 0;,9,311,2
58610,RETURN,-1,,return c == ' ' ? '_' : ToUpper(c);,39,769,1
58704,RETURN,-1,,return w->ReleaseSession();,3,74,4
58881,RETURN,-1,,return;,5,107,1
58961,RETURN,1,,return;,5,124,1
59025,RETURN,1,,return 0;,5,138,1
59041,RETURN,1,,return 0;,5,143,1
59066,RETURN,1,,return 0;,5,148,1
59118,RETURN,1,,return 0;,5,164,1
59148,RETURN,-1,,return 0;,3,178,27
59176,RETURN,1,,return 1;,5,185,1
59184,RETURN,1,,return -1;,5,190,1
59308,RETURN,-1,,return 1;,5,210,1
59326,RETURN,-1,,return w->is_cert_cb_running() ? -1 : 1;,3,216,21
59363,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,28,229,1
59383,RETURN,-1,,"return status == OPENSSL_NPN_NEGOTIATED ? SSL_TLSEXT_ERR_OK
                                          : SSL_TLSEXT_ERR_ALERT_FATAL;",3,243,8
59453,RETURN,-1,,return 1;,5,262,3
59476,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,269,1
59509,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,3,282,17
59548,RETURN,1,,return ignore_null;,5,298,1
59550,RETURN,-1,,"return !target->Set(
      env->context(),
      name,
      OneByteString(env->isolate(), value))
          .IsNothing();",3,299,2
59581,RETURN,-1,,return ret;,3,314,3
59644,RETURN,1,,return MaybeLocal<ArrayBufferView>();,5,351,1
59646,RETURN,-1,,"return PersistentToLocal::Default(env()->isolate(), ocsp_response_);",3,352,2
59668,RETURN,-1,,return next_sess_.release();,3,360,1
59688,RETURN,1,,return;,5,366,1
59942,RETURN,-1,,return;,5,452,1
60115,RETURN,1,,return;,5,500,1
60291,RETURN,-1,,return;,5,546,2
60300,RETURN,-1,,return;,5,552,2
60307,RETURN,-1,,return;,5,558,2
60326,RETURN,-1,,return;,5,569,2
60373,RETURN,-1,,return;,5,596,3
60454,RETURN,-1,,return;,5,614,2
60526,RETURN,-1,,return;,5,638,7
60547,RETURN,-1,,return;,7,650,2
60550,RETURN,-1,,return;,5,655,3
60583,RETURN,-1,,return;,5,674,2
60590,RETURN,-1,,return;,5,680,2
60599,RETURN,-1,,return;,5,685,2
60675,RETURN,-1,,return;,9,714,2
60720,RETURN,-1,,return;,9,738,4
60750,RETURN,1,,return;,44,746,1
60781,RETURN,1,,return;,44,750,1
60796,RETURN,1,,return;,42,752,1
60816,RETURN,1,,return;,66,754,1
60864,RETURN,1,,return;,68,761,1
60901,RETURN,1,,return;,72,771,1
60904,RETURN,-1,,return;,9,776,12
60941,RETURN,-1,,return;,5,794,2
60950,RETURN,-1,,return;,5,799,2
60965,RETURN,-1,,return;,5,805,2
61039,RETURN,-1,,return;,5,819,2
61071,RETURN,-1,,return;,5,830,4
61107,RETURN,-1,,return name;,3,843,5
61113,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,847,1
61121,RETURN,-1,,return underlying_stream()->IsIPCPipe();,3,851,1
61130,RETURN,-1,,return underlying_stream()->GetFD();,3,855,1
61139,RETURN,-1,,"return ssl_ &&
      underlying_stream() != nullptr &&
      underlying_stream()->IsAlive();",3,859,1
61154,RETURN,-1,,return underlying_stream()->IsClosing();,3,865,1
61174,RETURN,1,,return underlying_stream()->ReadStart();,5,871,1
61179,RETURN,-1,,return 0;,3,872,3
61188,RETURN,-1,,return underlying_stream() != nullptr ? underlying_stream()->ReadStop() : 0;,3,877,2
61202,RETURN,-1,,return error_.empty() ? nullptr : error_.c_str();,3,881,1
61243,RETURN,-1,,return UV_EPROTO;,5,900,3
61348,RETURN,-1,,return 0;,7,940,7
61367,RETURN,-1,,return 0;,5,951,2
61581,RETURN,-1,,return UV_EPROTO;,7,1004,3
61610,RETURN,-1,,return 0;,3,1020,27
61635,RETURN,-1,,"return uv_buf_init(base, size);",3,1028,6
61652,RETURN,1,,return;,5,1036,1
61669,RETURN,-1,,return;,5,1048,4
61717,RETURN,-1,,"return hello_parser_.Parse(data, avail);",5,1070,7
61730,RETURN,-1,,return underlying_stream()->CreateShutdownWrap(req_wrap_object);,3,1078,1
61765,RETURN,-1,,return underlying_stream()->DoShutdown(req_wrap);,3,1090,6
61892,RETURN,1,,return;,5,1133,1
62015,RETURN,1,,return;,5,1190,1
62288,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,1268,1
62328,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,1274,1
62366,RETURN,-1,,return SSL_TLSEXT_ERR_NOACK;,5,1280,3
62419,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,3,1291,22
62447,RETURN,1,,return err;,5,1298,1
62469,RETURN,-1,,return 1;,3,1305,6
62639,RETURN,1,,return 0;,5,1349,1
62653,RETURN,1,,return 0;,34,1353,1
62703,RETURN,1,,return 0;,5,1364,1
62716,RETURN,1,,return 0;,5,1369,1
62728,RETURN,-1,,return psk_buf.length();,3,1372,20
62821,RETURN,1,,return 0;,7,1397,1
62862,RETURN,1,,return 0;,5,1406,1
62909,RETURN,1,,return 0;,5,1413,1
62922,RETURN,1,,return 0;,5,1417,1
62959,RETURN,1,,return 0;,5,1422,1
62976,RETURN,1,,return 0;,5,1427,1
62996,RETURN,-1,,return psk_buf.length();,3,1432,25
63020,RETURN,1,,return info.GetReturnValue().Set(0);,5,1442,1
63175,RETURN,1,,return;,5,1471,1
63235,RETURN,-1,,"return ThrowCryptoError(env, err, ""CertCbDone"");",7,1484,3
63273,RETURN,-1,,return;,5,1490,3
63340,RETURN,1,,"return env->ThrowTypeError(""Must give a Buffer as first argument"");",5,1511,1
63679,RETURN,1,,return;,5,1587,1
63768,RETURN,1,,return;,68,1600,1
63817,RETURN,1,,return;,5,1618,1
63906,RETURN,1,,return;,68,1631,1
63951,RETURN,1,,return;,5,1643,1
63963,RETURN,1,,return;,5,1647,1
64047,RETURN,1,,return;,68,1660,1
64085,RETURN,1,,"return THROW_ERR_MISSING_ARGS(env, ""Session argument is mandatory"");",5,1671,1
64117,RETURN,1,,return;,5,1677,1
64126,RETURN,1,,"return env->ThrowError(""SSL_set_session error"");",5,1680,1
64197,RETURN,1,,return args.GetReturnValue().SetNull();,5,1704,1
64706,RETURN,-1,,"return ThrowCryptoError(
         env,
         ERR_get_error(),
         ""SSL_export_keying_material"");",5,1852,1
64754,RETURN,1,,return;,68,1860,1
64807,RETURN,1,,"return ThrowCryptoError(w->env(), ERR_get_error());",5,1875,1
64849,RETURN,1,,return;,5,1885,1
64933,RETURN,1,,"return THROW_ERR_MISSING_ARGS(env, ""OCSP response argument is mandatory"");",5,1911,1
65011,RETURN,1,,return args.GetReturnValue().SetNull();,5,1934,1
65207,RETURN,1,,return;,5,1980,1
65954,RETURN,-1,,return 1;,3,60,1
66006,RETURN,1,,return {true};,9,75,1
66010,RETURN,-1,,return {false};,3,94,4
66049,RETURN,1,,return -1;,7,103,1
66059,RETURN,-1,,return len;,5,105,7
66061,RETURN,-1,,return -1;,3,108,4
66072,RETURN,-1,,return 0;,3,117,1
66096,RETURN,1,,return FIPS_mode_set(1);,27,133,1
66099,RETURN,-1,,return true;,3,137,2
66135,RETURN,-1,,return false;,5,146,2
66137,RETURN,-1,,return true;,3,148,7
66308,RETURN,1,,return;,5,240,1
66318,RETURN,-1,,"return ThrowCryptoError(env, err);",5,248,3
66386,RETURN,-1,,return errors_.empty();,3,285,1
66461,RETURN,-1,,return MaybeLocal<Value>();,7,306,1
66469,RETURN,-1,,"return copy.ToException(env, exception_string);",5,309,9
66548,RETURN,-1,,return MaybeLocal<Value>();,7,322,1
66550,RETURN,-1,,return exception_v;,3,326,5
66603,RETURN,-1,,return *this;,3,348,2
66643,RETURN,-1,,return ptr;,3,365,7
66659,RETURN,-1,,"return ArrayBuffer::New(env->isolate(), std::move(store));",3,370,2
66686,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength());",3,375,2
66729,RETURN,-1,,return std::move(out).release();,3,384,7
66803,RETURN,-1,,return out;,3,400,5
66811,RETURN,-1,,"return IsAnyByteSource(value) ? FromBuffer(value)
                                : FromString(env, value.As<String>());",3,405,1
66888,RETURN,-1,,return std::move(out).release();,3,418,12
66906,RETURN,-1,,return ntc ? buf.ToNullTerminatedCopy() : buf.ToByteSource();,3,423,3
66923,RETURN,-1,,"return value->IsString() || IsAnyByteSource(value) ?
           ByteSource::FromStringOrBuffer(env, value) :
           ByteSource::FromSymmetricKeyObjectHandle(value);",3,432,1
66949,RETURN,-1,,"return Buffer::HasInstance(value) ? FromBuffer(value, true)
                                    : FromString(env, value.As<String>(), true);",3,439,1
66989,RETURN,-1,,"return Foreign(key->Data()->GetSymmetricKey(),
                 key->Data()->GetSymmetricKeySize());",3,447,5
67011,RETURN,-1,,"return ByteSource(data, data, size);",3,452,1
67022,RETURN,-1,,"return ByteSource(data, nullptr, size);",3,456,1
67040,RETURN,1,,return Just(true);,17,462,1
67097,RETURN,-1,,return Nothing<bool>();,7,474,1
67121,RETURN,-1,,return Nothing<bool>();,7,480,1
67145,RETURN,-1,,return Nothing<bool>();,7,486,1
67454,RETURN,1,,return Nothing<bool>();,7,559,1
67456,RETURN,-1,,return Just(true);,3,562,14
67526,RETURN,1,,return;,5,581,1
67572,RETURN,-1,,return;,5,587,1
67655,RETURN,-1,,return engine;,3,615,6
67675,RETURN,1,,return false;,5,622,1
67695,RETURN,-1,,return false;,5,627,2
67697,RETURN,-1,,return true;,3,630,6
67745,RETURN,1,,return;,57,637,1
67791,RETURN,-1,,"return StringBytes::Encode(
      env->isolate(),
      reinterpret_cast<const char*>(buf.data()),
      buf.size(),
      BASE64URL,
      error);",3,652,3
67871,RETURN,-1,,return Nothing<bool>();,5,674,2
67873,RETURN,-1,,"return target->Set(env->context(), name, value);",3,676,6
67934,RETURN,-1,,return false;,7,688,2
67936,RETURN,-1,,return true;,3,691,2
67961,RETURN,-1,,return static_cast<CryptoJobMode>(mode);,3,698,5
68006,RETURN,-1,,return;,5,715,1
68487,RETURN,-1,,return *this;,3,45,3
68732,RETURN,-1,,return tmpl;,3,101,3
68740,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(object);,3,105,1
68769,RETURN,1,,return MaybeLocal<Object>();,5,139,1
68775,RETURN,-1,,"return New(env, std::move(ptr));",3,142,7
68841,RETURN,1,,return MaybeLocal<Object>();,5,158,1
68866,RETURN,-1,,"return sk_X509_num(ssl_certs)
      ? New(env, std::move(cert), ssl_certs)
      : New(env, std::move(cert));",3,167,11
68939,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,183,1
68974,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",7,195,1
68996,RETURN,1,,return;,7,198,1
69017,RETURN,-1,,return;,5,200,1
69749,RETURN,-1,,return args.GetReturnValue().Set(ret);,7,355,3
69760,RETURN,-1,,return;,7,358,6
69764,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid name"");",7,360,9
69769,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,362,11
69844,RETURN,-1,,return args.GetReturnValue().Set(args[0]);,7,383,3
69857,RETURN,-1,,return;,7,385,6
69861,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid name"");",7,387,9
69866,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,389,11
69937,RETURN,-1,,return args.GetReturnValue().Set(args[0]);,7,406,3
69950,RETURN,-1,,return;,7,408,6
69954,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid IP"");",7,410,9
69959,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,412,11
70258,RETURN,-1,,return {};,5,516,2
70278,RETURN,1,,return {};,5,521,1
70279,RETURN,-1,,"return BaseObjectPtr<BaseObject>(
      Unwrap<X509Certificate>(handle.As<Object>()));",3,523,4
70296,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,529,1
70306,RETURN,-1,,return std::make_unique<X509CertificateTransferData>(cert_);,3,534,1
70614,RETURN,-1,,return;,13,273,6
70765,RETURN,-1,,return;,13,433,6
70815,RETURN,-1,,return std::make_unique<EmptyEntry>();,9,640,1
70820,RETURN,-1,,"return std::make_unique<InMemoryEntry>(backing_store_, start, len);",7,643,2
70931,RETURN,-1,,return true;,7,1039,1
70953,RETURN,-1,,return true;,7,1050,1
70955,RETURN,-1,,return false;,5,1053,3
71058,RETURN,1,,return nullptr;,45,68,1
71186,RETURN,-1,,"return std::make_shared<DataQueueImpl>(std::move(slices), len);",5,103,14
71205,RETURN,-1,,return size_;,51,106,1
71211,RETURN,-1,,return idempotent_;,41,108,1
71217,RETURN,-1,,return capped_size_.has_value();,37,110,1
71230,RETURN,1,,return std::nullopt;,22,113,1
71238,RETURN,1,,return false;,17,114,1
71286,RETURN,-1,,return false;,9,125,1
71309,RETURN,-1,,return true;,5,135,5
71319,RETURN,1,,return;,26,139,1
71337,RETURN,-1,,return;,7,144,2
71370,RETURN,-1,,return capped_size > size ? capped_size - size : 0UL;,7,155,5
71379,RETURN,-1,,return std::nullopt;,5,157,2
71493,RETURN,-1,,return bob::Status::STATUS_EOS;,7,212,2
71531,RETURN,-1,,return bob::Status::STATUS_EOS;,9,225,3
71559,RETURN,-1,,return UV_EINVAL;,7,241,2
71586,RETURN,1,,return bob::Status::STATUS_CONTINUE;,20,286,1
71592,RETURN,-1,,return status;,5,305,12
71636,RETURN,-1,,return current_reader_.get();,5,318,4
71730,RETURN,-1,,return bob::Status::STATUS_EOS;,7,365,2
71765,RETURN,-1,,return bob::STATUS_BLOCK;,9,378,2
71808,RETURN,-1,,return bob::STATUS_BLOCK;,11,391,2
71832,RETURN,-1,,return bob::STATUS_EOS;,7,404,6
71855,RETURN,-1,,return UV_EINVAL;,7,410,2
71882,RETURN,1,,return bob::Status::STATUS_CONTINUE;,20,447,1
71888,RETURN,-1,,return status;,5,466,12
71928,RETURN,-1,,return current_reader_.get();,5,476,4
71957,RETURN,-1,,return std::make_shared<IdempotentDataQueueReader>(shared_from_this());,5,492,1
71968,RETURN,1,,return nullptr;,26,495,1
71973,RETURN,-1,,return std::make_shared<NonIdempotentDataQueueReader>(shared_from_this());,3,498,4
72012,RETURN,-1,,return bob::Status::STATUS_EOS;,9,517,2
72035,RETURN,-1,,return bob::Status::STATUS_CONTINUE;,7,523,6
72070,RETURN,-1,,return std::make_shared<EmptyReader>();,5,543,1
72086,RETURN,1,,return nullptr;,21,549,1
72088,RETURN,-1,,return std::make_unique<EmptyEntry>();,5,550,2
72097,RETURN,-1,,return 0;,51,553,1
72103,RETURN,-1,,return true;,41,555,1
72151,RETURN,-1,,return bob::Status::STATUS_EOS;,9,587,2
72198,RETURN,-1,,return bob::Status::STATUS_CONTINUE;,7,601,8
72252,RETURN,-1,,return std::make_shared<InMemoryReader>(*this);,5,631,1
72313,RETURN,-1,,"return makeEntry(start, end - start);",7,657,4
72319,RETURN,-1,,"return makeEntry(start, byte_length_ - start);",5,662,6
72329,RETURN,-1,,return byte_length_;,51,665,1
72335,RETURN,-1,,return true;,41,667,1
72389,RETURN,-1,,return std::make_shared<ReaderImpl>(data_queue_->get_reader());,5,702,1
72424,RETURN,1,,return nullptr;,18,708,1
72426,RETURN,-1,,return std::make_unique<DataQueueEntry>(std::move(sliced));,5,710,3
72442,RETURN,-1,,return data_queue_->size();,51,719,1
72451,RETURN,-1,,return data_queue_->is_idempotent();,41,727,1
72472,RETURN,-1,,return *data_queue_;,31,734,1
72499,RETURN,-1,,"return inner_->Pull(
          std::move(next), options, data, count, max_count_hint);",7,754,3
72557,RETURN,1,,return nullptr;,61,794,1
72559,RETURN,-1,,"return std::make_unique<FdEntry>(
        env, std::move(buf), req.statbuf, 0, req.statbuf.st_size);",5,796,8
72596,RETURN,-1,,return ReaderImpl::Create(this);,5,812,1
72643,RETURN,-1,,"return std::make_unique<FdEntry>(env_, path_, stat_, new_start, new_end);",5,826,8
72661,RETURN,-1,,return end_ - start_;,51,829,1
72669,RETURN,-1,,return true;,41,831,1
72675,RETURN,-1,,return env_;,30,833,1
72687,RETURN,-1,,"return other.st_size != stat_.st_size ||
           other.st_mtim.tv_nsec != stat_.st_mtim.tv_nsec;",5,847,1
72731,RETURN,1,,return true;,54,860,1
72733,RETURN,-1,,return entry->is_modified(req.statbuf);,5,861,6
72785,RETURN,-1,,return nullptr;,9,875,2
72797,RETURN,-1,,"return std::make_shared<ReaderImpl>(
          BaseObjectPtr<fs::FileHandle>(fs::FileHandle::New(
              realm->GetBindingData<fs::BindingData>(realm->context()),
              file,
              Local<Object>(),
              entry->start_,
              entry->end_ - entry->start_)),
          entry);",7,878,9
72887,RETURN,-1,,return env_->allocate_managed_buffer(suggested_size);,7,901,1
72922,RETURN,-1,,return;,9,912,2
72950,RETURN,-1,,return;,9,922,3
72989,RETURN,-1,,return DrainAndClose();,9,932,2
73073,RETURN,-1,,return bob::STATUS_EOS;,9,954,2
73099,RETURN,-1,,return UV_EINVAL;,9,960,3
73122,RETURN,-1,,return bob::STATUS_WAIT;,7,968,5
73155,RETURN,1,,return;,19,996,1
73220,RETURN,-1,,return std::move(pending_pulls_.front());,7,1019,4
73278,RETURN,-1,,return nullptr;,5,1057,1
73280,RETURN,-1,,"return std::make_shared<DataQueueImpl>(std::move(list), size);",3,1060,6
73300,RETURN,-1,,return std::make_shared<DataQueueImpl>(capped);,3,1064,1
73323,RETURN,-1,,return nullptr;,5,1075,1
73358,RETURN,-1,,"return CreateInMemoryEntryFromBackingStore(std::move(store), offset, length);",3,1081,9
73386,RETURN,-1,,return nullptr;,5,1089,1
73388,RETURN,-1,,"return std::make_unique<InMemoryEntry>(std::move(store), offset, length);",3,1091,3
73409,RETURN,-1,,return std::make_unique<DataQueueEntry>(std::move(data_queue));,3,1096,1
73427,RETURN,-1,,"return FdEntry::Create(env, path);",3,1101,1
73808,RETURN,-1,,"return NameAndDisplacement(pSymbol->Name, dwDisplacement);",7,180,1
73820,RETURN,-1,,return NameAndDisplacement();,5,190,9
73869,RETURN,-1,,return sym;,5,225,8
73885,RETURN,-1,,return szUndName;,7,238,1
73893,RETURN,-1,,return nullptr;,5,246,3
73944,RETURN,-1,,return ret;,5,256,7
73963,RETURN,1,,return false;,7,263,1
73965,RETURN,-1,,return info.State == MEM_COMMIT && info.Protect != 0;,5,265,3
73983,RETURN,-1,,"return CaptureStackBackTrace(0, count, frames, nullptr);",5,269,1
74014,RETURN,-1,,"return std::unique_ptr<NativeSymbolDebuggingContext>(
      new Win32SymbolDebuggingContext());",3,285,1
74065,RETURN,-1,,return oss.str();,3,303,6
74143,RETURN,1,,return;,33,318,1
74195,RETURN,-1,,return list;,3,473,2
74215,RETURN,-1,,return;,5,484,2
74358,RETURN,-1,,return true;,3,62,4
74377,RETURN,-1,,return info;,3,69,5
74740,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        env->isolate(),
        ""The \""list\"" argument must be an instance of SharedArrayBuffer, ""
        ""ArrayBuffer or ArrayBufferView."");",5,153,1
74804,RETURN,-1,,"return node::THROW_ERR_ENCODING_INVALID_ENCODED_DATA(
          env->isolate(), ""The encoded data was not valid for encoding utf-8"");",7,171,1
74841,RETURN,1,,return args.GetReturnValue().SetEmptyString();,20,183,1
74901,RETURN,-1,,return;,5,193,3
75209,RETURN,-1,,return el.IsEmpty();,51,218,1
75411,RETURN,-1,,return true;,9,1167,2
75413,RETURN,-1,,return false;,5,1170,6
75441,RETURN,-1,,return;,7,1220,1
75756,RETURN,1,,return false;,45,131,1
75890,RETURN,-1,,return fields_[kStackLength] > 0;,3,169,10
76250,RETURN,-1,,return output;,3,268,4
76283,RETURN,-1,,return output;,3,281,2
76345,RETURN,-1,,return output;,3,296,2
76404,RETURN,-1,,return info;,3,343,21
76661,RETURN,-1,,return;,5,551,1
76670,RETURN,-1,,return;,5,555,1
76706,RETURN,1,,return;,5,565,1
76846,RETURN,-1,,return cwd;,5,615,2
76852,RETURN,-1,,"return exec_path.substr(0, exec_path.find_last_of(kPathSeparator));",3,621,9
76943,RETURN,-1,,return buf;,3,639,7
76996,RETURN,-1,,return bs;,3,651,3
77041,RETURN,-1,,return exec_path;,3,677,6
77887,RETURN,1,,return;,24,1051,1
77923,RETURN,-1,,"return handle_scope.EscapeMaybe(snapshot_serialize_callback()->Call(
        context(), v8::Undefined(isolate()), 0, nullptr));",5,1066,3
77940,RETURN,-1,,return handle_scope.Escape(Undefined(isolate()));,3,1069,4
77964,RETURN,-1,,"return handle_scope.EscapeMaybe(snapshot_deserialize_main()->Call(
        context(), v8::Undefined(isolate()), 0, nullptr));",5,1076,3
77981,RETURN,-1,,return handle_scope.Escape(Undefined(isolate()));,3,1079,4
78239,RETURN,-1,,return;,5,1210,2
78254,RETURN,1,,return;,25,1228,1
78268,RETURN,1,,return;,25,1233,1
78306,RETURN,1,,return;,5,1247,1
78400,RETURN,1,,return;,5,1273,1
78520,RETURN,1,,return;,5,1313,1
78580,RETURN,1,,return;,25,1329,1
78606,RETURN,-1,,return now;,3,1344,6
78621,RETURN,1,,"return Integer::NewFromUnsigned(isolate(), static_cast<uint32_t>(now));",5,1350,1
78632,RETURN,1,,"return Number::New(isolate(), static_cast<double>(now));",5,1352,1
78855,RETURN,1,,return;,5,1402,1
78910,RETURN,-1,,"return {fields_.Serialize(context, creator)};",3,1420,1
78936,RETURN,-1,,return output;,3,1430,2
78955,RETURN,-1,,"return {fields_.Serialize(context, creator)};",3,1439,1
78981,RETURN,-1,,return output;,3,1449,2
79213,RETURN,-1,,return output;,3,1531,2
79363,RETURN,-1,,return info;,3,1566,12
79562,RETURN,1,,return nullptr;,36,1635,1
79564,RETURN,-1,,return worker_context()->env();,3,1636,2
79578,RETURN,1,,return;,32,1640,1
79606,RETURN,1,,return;,32,1649,1
79757,RETURN,-1,,return info;,3,1683,14
79965,RETURN,-1,,return free_in_system;,5,1735,1
79977,RETURN,-1,,return free_in_system;,5,1740,1
79984,RETURN,-1,,return free_in_system;,5,1744,1
79986,RETURN,-1,,return allowed - rss;,3,1747,11
80131,RETURN,-1,,return new_limit;,5,1828,2
80149,RETURN,-1,,return new_limit;,5,1841,3
80274,RETURN,-1,,return new_limit;,3,1885,43
80302,RETURN,-1,,return size;,3,1898,7
80852,RETURN,-1,,return args.GetReturnValue().Set(err);,5,161,1
80886,RETURN,-1,,return args.GetReturnValue().Set(err);,5,169,2
81234,RETURN,1,,return;,5,74,1
81295,RETURN,-1,,"return IsWeakOrDetached() ||
         !HandleWrap::HasRef(this) ||
         !uv_is_active(GetHandle());",3,103,1
81474,RETURN,-1,,return GetConstructorTemplate(env->isolate_data());,3,158,1
81565,RETURN,-1,,return tmpl;,3,176,3
81640,RETURN,-1,,"return ""<JS Node>"";",33,48,1
81646,RETURN,-1,,return 0;,35,49,1
81652,RETURN,-1,,return false;,36,50,1
81658,RETURN,-1,,return PersistentToLocal::Strong(persistent_);,28,51,1
81681,RETURN,1,,return v.As<Object>()->GetIdentityHash();,24,55,1
81695,RETURN,1,,return v.As<v8::Name>()->GetIdentityHash();,22,56,1
81709,RETURN,1,,return v.As<v8::Int32>()->Value();,23,57,1
81717,RETURN,-1,,return 0;,5,58,5
81737,RETURN,-1,,return static_cast<size_t>(n->IdentityHash());,7,68,1
81751,RETURN,-1,,return a->JSValue()->SameValue(b->JSValue());,7,74,1
81802,RETURN,1,,return *it;,7,90,1
81813,RETURN,-1,,return AddNode(std::unique_ptr<Node>(n.release()));,5,92,7
81846,RETURN,-1,,return n;,5,98,4
82137,RETURN,-1,,return MaybeLocal<Array>();,11,150,1
82152,RETURN,1,,return MaybeLocal<Array>();,11,153,1
82184,RETURN,1,,return MaybeLocal<Array>();,13,157,1
82236,RETURN,1,,return MaybeLocal<Array>();,9,168,1
82275,RETURN,-1,,return MaybeLocal<Array>();,9,176,1
82343,RETURN,-1,,return MaybeLocal<Array>();,13,189,1
82396,RETURN,-1,,return MaybeLocal<Array>();,11,197,1
82398,RETURN,-1,,return handle_scope.Escape(nodes);,5,202,19
82474,RETURN,-1,,return 65536;,5,228,1
82531,RETURN,-1,,return kAbort;,9,248,2
82546,RETURN,-1,,return kContinue;,5,254,6
82552,RETURN,-1,,return status_;,24,257,1
82582,RETURN,-1,,return 65536;,5,283,1
82648,RETURN,-1,,return kContinue;,5,303,4
82665,RETURN,-1,,return 0;,5,309,3
82671,RETURN,-1,,return 0;,5,313,1
82692,RETURN,-1,,return snapshot_ != nullptr;,29,327,1
82700,RETURN,-1,,return snapshot_ == nullptr;,31,328,1
82708,RETURN,-1,,return this;,40,329,1
82808,RETURN,-1,,return Nothing<void>();,5,370,2
82838,RETURN,-1,,return Nothing<void>();,5,377,2
82864,RETURN,-1,,return Nothing<void>();,5,384,2
82866,RETURN,-1,,return JustVoid();,3,387,14
82985,RETURN,-1,,return {};,5,414,1
82986,RETURN,-1,,"return MakeBaseObject<HeapSnapshotStream>(env, std::move(snapshot), obj);",3,416,6
83074,RETURN,-1,,return result;,3,432,8
83209,RETURN,1,,return;,57,457,1
83232,RETURN,-1,,return;,5,461,5
83250,RETURN,1,,return;,55,466,1
83251,RETURN,-1,,return args.GetReturnValue().Set(filename_v);,3,467,14
84201,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""value is out of range"");",5,206,1
84314,RETURN,-1,,return BaseObjectPtr<HistogramBase>();,5,233,1
84316,RETURN,-1,,"return MakeBaseObject<HistogramBase>(env, obj, options);",3,236,3
84360,RETURN,-1,,return BaseObjectPtr<HistogramBase>();,5,247,1
84362,RETURN,-1,,"return MakeBaseObject<HistogramBase>(env, obj, std::move(histogram));",3,249,3
84707,RETURN,-1,,return tmpl;,3,317,3
84834,RETURN,-1,,"return Create(env, std::move(histogram_));",3,356,1
84846,RETURN,-1,,return std::make_unique<HistogramTransferData>(this);,3,360,1
85014,RETURN,-1,,return tmpl;,3,400,3
85157,RETURN,-1,,return BaseObjectPtr<IntervalHistogram>();,5,452,1
85159,RETURN,-1,,"return MakeBaseObject<IntervalHistogram>(
      env,
      obj,
      AsyncWrap::PROVIDER_ELDHISTOGRAM,
      interval,
      std::move(on_interval),
      options);",3,455,3
85229,RETURN,1,,return;,38,478,1
85265,RETURN,1,,return;,39,487,1
85883,RETURN,-1,,return std::make_unique<HistogramBase::HistogramTransferData>(histogram());,3,634,1
85992,RETURN,-1,,"return
        static_cast<DeletableWrapper<T>*>(thread->GetObject(id))->object_.get();",5,25,1
86011,RETURN,-1,,"return std::unique_ptr<DeletableWrapper<T>>(
      new DeletableWrapper<T>(std::move(object)));",3,35,1
86055,RETURN,-1,,"return std::unique_ptr<Request>(
      new CreateObjectRequest<Factory>(object_id, std::move(factory)));",3,56,1
86230,RETURN,-1,,"return std::make_unique<MainThreadSessionState>(thread, prevent_shutdown);",5,139,1
86433,RETURN,-1,,return true;,3,230,3
86442,RETURN,1,,return;,5,235,1
86530,RETURN,-1,,return handle_;,3,259,2
86573,RETURN,-1,,return pointer;,3,277,4
86596,RETURN,-1,,return nullptr;,5,283,1
86598,RETURN,-1,,return iterator->second.get();,3,285,4
86656,RETURN,-1,,return StringBuffer::create(view);,3,295,9
86668,RETURN,-1,,"return std::unique_ptr<InspectorSession>(
      new CrossThreadInspectorSession(++next_session_id_,
                                      shared_from_this(),
                                      std::move(delegate),
                                      prevent_shutdown));",3,301,1
86698,RETURN,1,,return false;,5,311,1
86709,RETURN,-1,,return true;,3,313,5
86741,RETURN,-1,,"return std::unique_ptr<InspectorSessionDelegate>(
      new ThreadSafeDelegate(shared_from_this(), id));",3,326,4
86759,RETURN,-1,,return main_thread_ == nullptr;,3,332,3
86832,RETURN,-1,,return ++next_object_id_;,5,54,1
86900,RETURN,-1,,return agent_;,5,83,1
87054,RETURN,1,,return nullptr;,5,39,1
87098,RETURN,1,,return nullptr;,26,48,1
87103,RETURN,-1,,"return parseJSONCharacters(reinterpret_cast<const uint16_t*>(buffer.out()),
                             utf16_length);",3,50,10
87125,RETURN,1,,return nullptr;,5,56,1
87133,RETURN,1,,"return parseJSONCharacters(string.characters8(), string.length());",5,58,1
87143,RETURN,-1,,"return parseJSONCharacters(string.characters16(), string.length());",3,59,3
87166,RETURN,1,,"return """";",5,64,1
87174,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(view.characters8()),
                       view.length());",5,66,1
87237,RETURN,-1,,"return String(buffer.out(), utf8_length);",3,82,12
87263,RETURN,-1,,return stream.str();,3,89,4
87305,RETURN,-1,,return d;,3,98,7
87316,RETURN,-1,,"return Value::parseBinary(
        reinterpret_cast<const uint8_t*>(message.data()),
        message.length());",5,104,1
87331,RETURN,-1,,return parseJSON(message);,3,108,2
87339,RETURN,-1,,return message;,3,112,1
87346,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(message.data()),
                     message.size());",3,116,1
87367,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(data), length);",3,121,1
87421,RETURN,-1,,"return String(buffer.out(), utf8_length);",3,137,10
87433,RETURN,-1,,return reinterpret_cast<const uint8_t*>(s.data());,3,141,1
87445,RETURN,-1,,"return simdutf::utf32_length_from_utf8(s.data(), s.length());",3,149,1
87541,RETURN,-1,,"return string.substr(start, count);",3,50,1
87553,RETURN,-1,,return std::to_string(n);,3,53,1
87564,RETURN,-1,,return builder.str();,3,56,1
87575,RETURN,-1,,return string.find(substring);,3,59,1
87652,RETURN,-1,,return nullptr;,3,82,1
87659,RETURN,-1,,return nullptr;,3,85,1
87745,RETURN,-1,,return DispatchResponse::OK();,3,20,2
87761,RETURN,-1,,return true;,5,26,2
87763,RETURN,-1,,return false;,3,28,2
87832,RETURN,-1,,return frontend_.lock().get();,34,25,1
87918,RETURN,1,,return;,38,70,1
87978,RETURN,1,,return;,7,97,1
88110,RETURN,-1,,"return DispatchResponse::Error(
        ""Call NodeTracing::end to stop tracing before updating the config"");",5,139,1
88123,RETURN,-1,,"return DispatchResponse::Error(
        ""Tracing properties can only be changed through main thread sessions"");",5,143,1
88182,RETURN,1,,"return DispatchResponse::Error(""At least one category should be enabled"");",5,154,1
88222,RETURN,-1,,return DispatchResponse::OK();,3,164,10
88239,RETURN,-1,,return DispatchResponse::OK();,3,170,3
88373,RETURN,-1,,return DispatchResponse::OK();,3,198,23
88565,RETURN,-1,,"return NodeWorker::WorkerInfo::create()
      .setWorkerId(id)
      .setTitle(title)
      .setUrl(url)
      .setType(""worker"").build();",3,72,1
88655,RETURN,-1,,return DispatchResponse::OK();,3,96,2
88676,RETURN,-1,,return DispatchResponse::OK();,5,102,1
88706,RETURN,-1,,return DispatchResponse::OK();,3,110,6
88719,RETURN,-1,,return DispatchResponse::OK();,3,115,2
88734,RETURN,-1,,return DispatchResponse::OK();,3,120,2
88758,RETURN,1,,return;,5,129,1
88878,RETURN,1,,return;,5,152,1
89002,RETURN,-1,,"return ""[worker "" + std::to_string(id) + ""]"" +
           (name == """" ? """" : "" "" + name);",5,29,1
89129,RETURN,-1,,"return parent_thread_->Connect(std::move(delegate), prevent_shutdown);",3,85,1
89165,RETURN,1,,return;,5,96,1
89197,RETURN,-1,,"return std::make_unique<ParentInspectorHandle>(
      thread_id, url, thread_, wait, name);",3,106,3
89261,RETURN,-1,,"return std::make_unique<WorkerManagerEventHandle>(shared_from_this(), id);",3,124,7
89395,RETURN,-1,,"return std::make_unique<ParentInspectorHandle>(
        thread_id, url, parent_thread_, wait_, name);",5,64,1
89419,RETURN,-1,,return wait_;,5,70,1
89425,RETURN,-1,,return url_;,36,72,1
89483,RETURN,-1,,return thread_;,5,99,1
89657,RETURN,-1,,"return StringBuffer::create(StringView(*buffer, buffer.length()));",3,68,3
89702,RETURN,-1,,return result.str();,3,208,3
89952,RETURN,-1,,return prevent_shutdown_;,5,275,1
89964,RETURN,-1,,return retaining_context_;,5,280,2
89970,RETURN,-1,,return retaining_context_;,5,284,1
90164,RETURN,-1,,return !path.empty() && path[0] == '/';,3,382,1
90291,RETURN,-1,,return;,7,430,1
90440,RETURN,-1,,return session_id;,5,481,4
90463,RETURN,1,,return;,7,487,1
90493,RETURN,1,,return;,11,493,1
90526,RETURN,-1,,return env_->context();,5,506,1
90844,RETURN,1,,return true;,9,593,1
90846,RETURN,-1,,return false;,5,595,2
90871,RETURN,-1,,return retaining_context;,5,604,4
90893,RETURN,-1,,return interface_->GetHandle();,5,612,2
90906,RETURN,-1,,return nullptr;,7,617,1
90922,RETURN,-1,,return worker_manager_;,5,623,3
90928,RETURN,-1,,return !channels_.empty();,5,627,1
90941,RETURN,1,,return true;,7,633,1
90948,RETURN,-1,,return hasConnectedSessions();,7,635,1
90950,RETURN,-1,,return false;,5,637,3
90959,RETURN,1,,return;,7,642,1
90984,RETURN,-1,,return env_->isolate_data()->platform()->CurrentClockTimeMillis();,5,654,1
91015,RETURN,1,,return nullptr;,7,662,1
91027,RETURN,-1,,return Utf8ToStringView(url);,5,665,6
91189,RETURN,-1,,return false;,5,740,1
91218,RETURN,-1,,return true;,3,751,12
91229,RETURN,1,,return true;,5,756,1
91242,RETURN,-1,,return false;,5,760,2
91265,RETURN,-1,,return false;,5,770,1
91268,RETURN,-1,,return true;,3,773,7
91295,RETURN,-1,,return std::unique_ptr<InspectorSession>{};,5,785,2
91312,RETURN,-1,,"return std::unique_ptr<InspectorSession>(
      new SameThreadInspectorSession(session_id, client_));",3,792,5
91340,RETURN,-1,,return std::unique_ptr<InspectorSession>{};,5,801,2
91360,RETURN,-1,,"return parent_handle_->Connect(std::move(thread_safe_delegate),
                                 prevent_shutdown);",3,808,6
91386,RETURN,-1,,return;,5,815,2
91458,RETURN,1,,return;,5,839,1
91626,RETURN,1,,return;,41,895,1
91742,RETURN,-1,,return;,5,935,1
91766,RETURN,1,,return;,5,949,1
91782,RETURN,1,,return false;,5,955,1
91784,RETURN,-1,,return io_ != nullptr || client_->IsActive();,3,956,2
91823,RETURN,-1,,return std::unique_ptr<ParentInspectorHandle>{};,5,968,2
91831,RETURN,-1,,"return client_->getWorkerManager()->NewParentHandle(thread_id, url, name);",5,973,1
91844,RETURN,-1,,"return parent_handle_->NewParentInspectorHandle(thread_id, url, name);",5,975,1
91867,RETURN,-1,,return;,5,982,2
91888,RETURN,-1,,return std::unique_ptr<WorkerManager>{};,5,992,2
91892,RETURN,-1,,return client_->getWorkerManager();,3,996,3
91906,RETURN,1,,"return """";",5,1001,1
91908,RETURN,-1,,return io_->GetWsUrl();,3,1002,2
92110,RETURN,-1,,return script_path;,3,42,3
92166,RETURN,-1,,return uuid;,3,61,5
92317,RETURN,-1,,return handle_;,5,135,1
92336,RETURN,-1,,return messages;,5,145,5
92347,RETURN,1,,return;,7,150,1
92419,RETURN,-1,,return data_ == nullptr;,5,184,3
92544,RETURN,-1,,return nullptr;,5,249,1
92546,RETURN,-1,,return io;,3,251,4
92757,RETURN,-1,,"return FormatWsAddress(host_port->host(), host_port->port(), id_, true);",3,324,3
92867,RETURN,-1,,return { target_id_ };,3,360,1
92873,RETURN,-1,,return script_name_.empty() ? GetHumanReadableProcessName() : script_name_;,3,364,1
92886,RETURN,-1,,"return ""file://"" + script_path_;",3,368,1
92968,RETURN,-1,,"return StringBuffer::create(StringView(*buffer, buffer.length()));",3,38,3
92987,RETURN,-1,,"return inspector->Connect(std::move(delegate), false);",5,44,1
93003,RETURN,-1,,"return FIXED_ONE_BYTE_STRING(env->isolate(), ""Connection"");",5,48,1
93017,RETURN,-1,,"return inspector->ConnectToMainThread(std::move(delegate), true);",5,55,1
93033,RETURN,-1,,"return FIXED_ONE_BYTE_STRING(env->isolate(), ""MainThreadConnection"");",5,59,1
93098,RETURN,1,,return;,73,82,1
93374,RETURN,-1,,return true;,5,161,1
93390,RETURN,-1,,return agent->IsActive();,3,171,3
93628,RETURN,1,,return;,9,215,1
93669,RETURN,-1,,return reinterpret_cast<void*>(asyncId << 1);,3,236,1
94101,RETURN,-1,,return;,5,313,1
94542,RETURN,-1,,return id;,3,65,16
94577,RETURN,-1,,return;,5,76,4
94660,RETURN,-1,,return;,5,99,2
94699,RETURN,-1,,return;,5,111,2
94746,RETURN,-1,,return;,5,122,4
94777,RETURN,-1,,return;,5,129,4
94806,RETURN,-1,,return;,5,142,2
94818,RETURN,-1,,return;,5,148,2
94878,RETURN,-1,,return false;,5,167,4
94880,RETURN,-1,,return true;,3,169,5
94894,RETURN,-1,,"return SPrintF(""coverage-%s-%s-%s.json"",
      uv_os_getpid(),
      timestamp,
      env()->thread_id());",3,175,3
94933,RETURN,-1,,return;,5,187,1
94959,RETURN,-1,,return;,5,193,2
94976,RETURN,-1,,return;,5,200,1
95039,RETURN,-1,,return;,5,223,1
95055,RETURN,-1,,return;,5,229,1
95096,RETURN,-1,,return;,9,242,1
95157,RETURN,-1,,return;,5,258,2
95174,RETURN,-1,,return;,5,265,1
95205,RETURN,-1,,return result;,3,276,1
95211,RETURN,-1,,return env()->coverage_directory();,3,280,1
95253,RETURN,-1,,return;,5,302,1
95262,RETURN,-1,,return env()->cpu_prof_dir();,3,309,1
95271,RETURN,-1,,return env()->cpu_prof_name();,3,313,1
95311,RETURN,-1,,return MaybeLocal<Object>();,5,323,2
95323,RETURN,-1,,return MaybeLocal<Object>();,5,327,2
95325,RETURN,-1,,return profile_v.As<Object>();,3,329,4
95375,RETURN,-1,,return;,5,346,1
95387,RETURN,-1,,return env()->heap_prof_dir();,3,353,1
95396,RETURN,-1,,return env()->heap_prof_name();,3,357,1
95436,RETURN,-1,,return MaybeLocal<Object>();,5,367,2
95448,RETURN,-1,,return MaybeLocal<Object>();,5,371,2
95450,RETURN,-1,,return profile_v.As<Object>();,3,373,4
95498,RETURN,-1,,return;,5,389,1
96067,RETURN,-1,,return b == 0;,61,204,1
96122,RETURN,-1,,return &tcp_;,5,31,1
96134,RETURN,-1,,"return node::ContainerOf(&TcpHolder::tcp_,
                             reinterpret_cast<uv_tcp_t*>(handle));",5,37,1
96215,RETURN,-1,,return inspector_;,5,67,1
96250,RETURN,-1,,"return node::ContainerOf(&WriteRequest::req, req);",5,117,1
96386,RETURN,1,,return host;,5,159,1
96409,RETURN,1,,"return host.substr(0, last_colon_pos);",5,162,1
96416,RETURN,-1,,return host;,3,163,7
96436,RETURN,1,,return false;,45,174,1
96470,RETURN,1,,return false;,48,182,1
96485,RETURN,1,,return false;,46,186,1
96522,RETURN,1,,return false;,54,193,1
96536,RETURN,-1,,return false;,7,205,1
96538,RETURN,-1,,return true;,5,210,9
96552,RETURN,1,,return false;,55,219,1
96561,RETURN,1,,return false;,21,226,1
96563,RETURN,-1,,return true;,3,229,6
96765,RETURN,-1,,return frame;,3,281,9
96788,RETURN,1,,return FRAME_INCOMPLETE;,5,291,1
96867,RETURN,1,,return FRAME_ERROR;,5,306,1
96894,RETURN,-1,,return FRAME_ERROR;,7,320,17
96902,RETURN,-1,,return FRAME_ERROR;,5,325,1
96936,RETURN,-1,,return FRAME_ERROR;,7,336,1
96948,RETURN,1,,return FRAME_INCOMPLETE;,7,339,1
96994,RETURN,-1,,return FRAME_ERROR;,5,352,1
97012,RETURN,1,,return FRAME_INCOMPLETE;,5,357,1
97069,RETURN,-1,,return closed ? FRAME_CLOSE : FRAME_OK;,3,367,46
97300,RETURN,-1,,return bytes_consumed;,5,459,9
97531,RETURN,-1,,return;,9,550,2
97561,RETURN,-1,,return;,9,555,2
97652,RETURN,-1,,return 0;,5,582,5
97690,RETURN,-1,,return 0;,5,592,5
97712,RETURN,-1,,return 0;,5,598,4
97719,RETURN,-1,,"return node::ContainerOf(&HttpHandler::parser_, parser);",5,602,1
97787,RETURN,-1,,return 0;,5,617,8
97826,RETURN,1,,"return """";",11,627,1
97836,RETURN,-1,,return value;,5,632,5
97848,RETURN,-1,,"return host.empty() || IsIPAddress(host)
           || node::StringEqualNoCase(host.data(), ""localhost"");",5,637,3
97892,RETURN,-1,,"return tcp_->WriteRaw(buffer, write_cb);",3,662,1
97903,RETURN,-1,,return tcp_->delegate();,3,666,1
97938,RETURN,1,,"return """";",5,677,1
97982,RETURN,1,,"return """";",5,686,1
97984,RETURN,-1,,return ip;,3,687,10
98053,RETURN,-1,,return TcpHolder::Pointer(result);,5,710,1
98063,RETURN,-1,,return nullptr;,5,713,2
98115,RETURN,-1,,return err < 0;,3,734,8
98123,RETURN,-1,,return delegate_.get();,3,738,1
98281,RETURN,-1,,return InspectorSocket::Pointer(inspector);,5,792,4
98289,RETURN,-1,,return InspectorSocket::Pointer(nullptr);,5,794,1
98317,RETURN,-1,,return protocol_handler_->GetHost();,3,807,1
98470,RETURN,-1,,return url.str();,3,45,8
98496,RETURN,-1,,return url.str();,3,55,4
98547,RETURN,-1,,return json.str();,3,70,7
98586,RETURN,-1,,return json.str();,3,85,7
98615,RETURN,1,,return path + len + 1;,27,91,1
98628,RETURN,1,,return path + len;,28,92,1
98632,RETURN,-1,,return nullptr;,3,94,4
98830,RETURN,-1,,"return FormatAddress(FormatHostPort(host, port), target_id, include_protocol);",3,151,1
98874,RETURN,-1,,return id_;,20,164,1
98880,RETURN,-1,,return server_port_;,5,166,1
98886,RETURN,-1,,return ws_socket_.get();,5,169,1
98947,RETURN,-1,,return server_->Session(session_id_);,7,192,1
98984,RETURN,-1,,return port_;,22,213,1
98991,RETURN,-1,,"return node::ContainerOf(&ServerSocket::tcp_socket_,
                             reinterpret_cast<uv_tcp_t*>(socket));",5,218,1
99054,RETURN,-1,,return;,5,241,1
99121,RETURN,-1,,return it == connected_sessions_.end() ? nullptr : it->second.second.get();,3,274,3
99159,RETURN,-1,,return;,5,283,2
99189,RETURN,-1,,return;,5,292,1
99284,RETURN,-1,,return true;,5,322,2
99300,RETURN,1,,return false;,5,326,1
99317,RETURN,-1,,return true;,5,330,2
99328,RETURN,-1,,return true;,5,333,2
99339,RETURN,-1,,return true;,5,336,2
99341,RETURN,-1,,return false;,3,338,10
99506,RETURN,-1,,return frontend_url.str();,3,383,6
99596,RETURN,-1,,return false;,5,405,2
99672,RETURN,-1,,return false;,5,424,2
99696,RETURN,-1,,return true;,3,434,21
99709,RETURN,1,,return;,5,439,1
99774,RETURN,-1,,return found != target_ids.end();,3,455,5
99792,RETURN,-1,,return server_sockets_[0]->port();,5,460,1
99799,RETURN,-1,,return port_;,3,462,2
100027,RETURN,1,,return err;,5,527,1
100059,RETURN,-1,,return err;,3,534,10
100107,RETURN,-1,,return err;,3,549,8
101200,RETURN,-1,,return;,29,318,1
101275,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,69,1
101290,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,69,1
101328,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,69,1
101377,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, property_value->IsName(), napi_name_expected)",5,74,1
101389,RETURN,-1,,return napi_ok;,3,78,2
101464,RETURN,-1,,return static_cast<v8::PropertyAttribute>(attribute_flags);,3,100,6
101473,RETURN,-1,,return reinterpret_cast<napi_deferred>(local);,3,105,1
101482,RETURN,-1,,return reinterpret_cast<v8impl::Persistent<v8::Value>*>(local);,3,110,1
101503,RETURN,-1,,return escape_called_;,32,130,1
101513,RETURN,-1,,return scope.Escape(handle);,5,134,2
101526,RETURN,-1,,return reinterpret_cast<napi_handle_scope>(s);,3,143,1
101535,RETURN,-1,,return reinterpret_cast<HandleScopeWrapper*>(s);,3,147,1
101544,RETURN,-1,,return reinterpret_cast<napi_escapable_handle_scope>(s);,3,153,1
101553,RETURN,-1,,return reinterpret_cast<EscapableHandleScopeWrapper*>(s);,3,159,1
101575,RETURN,-1,,NAPI_PREAMBLE(env),3,166,1
101594,RETURN,-1,,NAPI_PREAMBLE(env),3,166,1
101616,RETURN,-1,,"CHECK_ARG(env, result)",3,167,1
101720,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, success.FromMaybe(false), napi_generic_failure)",3,185,1
101725,RETURN,-1,,return GET_RETURN_STATUS(env);,3,187,17
101760,RETURN,-1,,NAPI_PREAMBLE(env),3,196,1
101779,RETURN,-1,,NAPI_PREAMBLE(env),3,196,1
101801,RETURN,-1,,"CHECK_ARG(env, js_object)",3,197,1
101823,RETURN,-1,,"CHECK_ARG(env, result)",5,199,1
101874,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsObject(), napi_invalid_arg)",3,205,1
101934,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsExternal(), napi_invalid_arg)",3,210,1
102006,RETURN,-1,,return GET_RETURN_STATUS(env);,3,229,19
102081,RETURN,-1,,return cbdata;,5,255,8
102128,RETURN,-1,,return _this;,23,279,1
102134,RETURN,-1,,return _args_length;,25,281,1
102140,RETURN,-1,,return _data;,18,283,1
102278,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure)",5,344,1
102320,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_function, napi_generic_failure)",5,348,1
102332,RETURN,-1,,return napi_clear_last_error(env);,5,351,6
102382,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure)",5,361,1
102402,RETURN,-1,,return napi_clear_last_error(env);,5,364,4
102420,RETURN,-1,,return v8impl::JsValueFromV8LocalValue(_cbinfo.NewTarget());,7,373,1
102431,RETURN,-1,,return nullptr;,7,375,1
102554,RETURN,-1,,NAPI_PREAMBLE(env),3,410,1
102573,RETURN,-1,,NAPI_PREAMBLE(env),3,410,1
102595,RETURN,-1,,"CHECK_ARG(env, js_object)",3,411,1
102646,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsObject(), napi_invalid_arg)",3,416,1
102693,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env,
      !obj->HasPrivate(context, NAPI_PRIVATE_KEY(context, wrapper)).FromJust(),
      napi_invalid_arg)",3,420,1
102719,RETURN,-1,,"CHECK_ARG(env, finalize_cb)",5,431,1
102807,RETURN,-1,,return GET_RETURN_STATUS(env);,3,457,16
102826,RETURN,-1,,return value->IsObject() || value->IsSymbol();,3,469,1
102892,RETURN,-1,,"return new RefBase(env,
                     initial_refcount,
                     ownership,
                     finalize_callback,
                     finalize_data,
                     finalize_hint);",3,508,1
102905,RETURN,-1,,return finalize_data_;,3,517,1
102911,RETURN,-1,,return ++refcount_;,3,521,1
102923,RETURN,-1,,return 0;,5,526,1
102925,RETURN,-1,,return --refcount_;,3,528,2
102932,RETURN,-1,,return refcount_;,3,532,1
103009,RETURN,-1,,"return new Reference(env,
                       value,
                       initial_refcount,
                       ownership,
                       finalize_callback,
                       finalize_data,
                       finalize_hint);",3,585,1
103029,RETURN,-1,,return 0;,5,598,1
103049,RETURN,-1,,return refcount;,3,604,5
103061,RETURN,-1,,return 0;,5,611,1
103084,RETURN,-1,,return refcount;,3,618,7
103096,RETURN,-1,,return v8::Local<v8::Value>();,5,623,1
103103,RETURN,-1,,"return v8::Local<v8::Value>::New(env_->isolate, persistent_);",5,625,1
103224,RETURN,-1,,CHECK_ENV(env),3,689,1
103239,RETURN,-1,,"CHECK_ARG(env, result)",3,690,1
103300,RETURN,-1,,return napi_ok;,3,709,10
103322,RETURN,-1,,NAPI_PREAMBLE(env),3,718,1
103341,RETURN,-1,,NAPI_PREAMBLE(env),3,718,1
103363,RETURN,-1,,"CHECK_ARG(env, result)",3,719,1
103380,RETURN,-1,,"CHECK_ARG(env, cb)",3,720,1
103432,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
      env, cb, callback_data, &fn))",3,725,1
103485,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,731,1
103498,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,731,1
103534,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,731,1
103559,RETURN,-1,,return GET_RETURN_STATUS(env);,3,737,16
103595,RETURN,-1,,NAPI_PREAMBLE(env),3,749,1
103614,RETURN,-1,,NAPI_PREAMBLE(env),3,749,1
103636,RETURN,-1,,"CHECK_ARG(env, result)",3,750,1
103653,RETURN,-1,,"CHECK_ARG(env, constructor)",3,751,1
103675,RETURN,-1,,"CHECK_ARG(env, properties)",5,754,1
103722,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
      env, constructor, callback_data, &tpl))",3,761,1
103763,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,765,1
103776,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,765,1
103812,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,765,1
103893,RETURN,1,,"STATUS_CALL(v8impl::V8NameFromPropertyDescriptor(env, p, &property_name))",5,779,1
103970,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
            env, p->getter, p->data, &getter_tpl))",9,792,1
104008,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
            env, p->setter, p->data, &setter_tpl))",9,796,1
104081,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
          env, p->method, p->data, &t, v8::Signature::New(isolate, tpl)))",7,807,1
104225,RETURN,1,,"STATUS_CALL(napi_define_properties(
        env, *result, static_descriptors.size(), static_descriptors.data()))",5,832,1
104228,RETURN,-1,,return GET_RETURN_STATUS(env);,3,836,24
104249,RETURN,-1,,"return napi_get_all_property_names(
      env,
      object,
      napi_key_include_prototypes,
      static_cast<napi_key_filter>(napi_key_enumerable | napi_key_skip_symbols),
      napi_key_numbers_to_strings,
      result);",3,842,1
104281,RETURN,-1,,NAPI_PREAMBLE(env),3,858,1
104300,RETURN,-1,,NAPI_PREAMBLE(env),3,858,1
104322,RETURN,-1,,"CHECK_ARG(env, result)",3,859,1
104367,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,863,1
104394,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,863,1
104520,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,897,10
104548,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,908,10
104590,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(
      env, maybe_all_propertynames, napi_generic_failure)",3,918,1
104612,RETURN,-1,,return GET_RETURN_STATUS(env);,3,923,24
104644,RETURN,-1,,NAPI_PREAMBLE(env),3,930,1
104663,RETURN,-1,,NAPI_PREAMBLE(env),3,930,1
104685,RETURN,-1,,"CHECK_ARG(env, key)",3,931,1
104702,RETURN,-1,,"CHECK_ARG(env, value)",3,932,1
104747,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,937,1
104774,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,937,1
104845,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,944,1
104850,RETURN,-1,,return GET_RETURN_STATUS(env);,3,945,16
104882,RETURN,-1,,NAPI_PREAMBLE(env),3,952,1
104901,RETURN,-1,,NAPI_PREAMBLE(env),3,952,1
104923,RETURN,-1,,"CHECK_ARG(env, result)",3,953,1
104940,RETURN,-1,,"CHECK_ARG(env, key)",3,954,1
104985,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,959,1
105012,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,959,1
105063,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,964,1
105076,RETURN,-1,,return GET_RETURN_STATUS(env);,3,967,16
105108,RETURN,-1,,NAPI_PREAMBLE(env),3,974,1
105127,RETURN,-1,,NAPI_PREAMBLE(env),3,974,1
105149,RETURN,-1,,"CHECK_ARG(env, key)",3,975,1
105166,RETURN,-1,,"CHECK_ARG(env, result)",3,976,1
105226,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,982,1
105253,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,982,1
105289,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,986,1
105316,RETURN,-1,,return GET_RETURN_STATUS(env);,3,990,17
105348,RETURN,-1,,NAPI_PREAMBLE(env),3,997,1
105367,RETURN,-1,,NAPI_PREAMBLE(env),3,997,1
105389,RETURN,-1,,"CHECK_ARG(env, key)",3,998,1
105449,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1004,1
105476,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1004,1
105512,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, delete_maybe, napi_generic_failure)",3,1006,1
105530,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1010,15
105562,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
105581,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
105603,RETURN,-1,,"CHECK_ARG(env, key)",3,1018,1
105620,RETURN,-1,,"CHECK_ARG(env, result)",3,1019,1
105665,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1024,1
105692,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1024,1
105736,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, k->IsName(), napi_name_expected)",3,1026,1
105768,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1028,1
105781,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1031,17
105813,RETURN,-1,,NAPI_PREAMBLE(env),3,1038,1
105832,RETURN,-1,,NAPI_PREAMBLE(env),3,1038,1
105854,RETURN,-1,,"CHECK_ARG(env, value)",3,1039,1
105899,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1044,1
105926,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1044,1
105975,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1047,1
105988,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1047,1
106024,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1047,1
106080,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1053,1
106085,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1054,16
106117,RETURN,-1,,NAPI_PREAMBLE(env),3,1061,1
106136,RETURN,-1,,NAPI_PREAMBLE(env),3,1061,1
106158,RETURN,-1,,"CHECK_ARG(env, result)",3,1062,1
106203,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1067,1
106230,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1067,1
106279,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1070,1
106292,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1070,1
106328,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1070,1
106364,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1074,1
106377,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1077,16
106409,RETURN,-1,,NAPI_PREAMBLE(env),3,1084,1
106428,RETURN,-1,,NAPI_PREAMBLE(env),3,1084,1
106450,RETURN,-1,,"CHECK_ARG(env, result)",3,1085,1
106506,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1090,1
106519,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1090,1
106555,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1090,1
106593,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1094,1
106620,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1094,1
106656,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1098,1
106683,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1102,17
106715,RETURN,-1,,NAPI_PREAMBLE(env),3,1109,1
106734,RETURN,-1,,NAPI_PREAMBLE(env),3,1109,1
106756,RETURN,-1,,"CHECK_ARG(env, value)",3,1110,1
106801,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1115,1
106828,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1115,1
106884,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1120,1
106889,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1122,14
106921,RETURN,-1,,NAPI_PREAMBLE(env),3,1129,1
106940,RETURN,-1,,NAPI_PREAMBLE(env),3,1129,1
106962,RETURN,-1,,"CHECK_ARG(env, result)",3,1130,1
107007,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1135,1
107034,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1135,1
107070,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1139,1
107083,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1142,14
107115,RETURN,-1,,NAPI_PREAMBLE(env),3,1149,1
107134,RETURN,-1,,NAPI_PREAMBLE(env),3,1149,1
107156,RETURN,-1,,"CHECK_ARG(env, result)",3,1150,1
107201,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1155,1
107228,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1155,1
107264,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1159,1
107280,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1162,14
107312,RETURN,-1,,NAPI_PREAMBLE(env),3,1169,1
107331,RETURN,-1,,NAPI_PREAMBLE(env),3,1169,1
107381,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1174,1
107408,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1174,1
107444,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, delete_maybe, napi_generic_failure)",3,1176,1
107462,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1180,13
107494,RETURN,-1,,NAPI_PREAMBLE(env),3,1188,1
107513,RETURN,-1,,NAPI_PREAMBLE(env),3,1188,1
107540,RETURN,-1,,"CHECK_ARG(env, properties)",5,1190,1
107585,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1196,1
107612,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1196,1
107673,RETURN,1,,"STATUS_CALL(v8impl::V8NameFromPropertyDescriptor(env, p, &property_name))",5,1202,1
107742,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
            env, p->getter, p->data, &local_getter))",9,1209,1
107780,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
            env, p->setter, p->data, &local_setter))",9,1213,1
107827,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",9,1225,1
107877,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
          env, p->method, p->data, &method))",7,1229,1
107930,RETURN,-1,,"return napi_set_last_error(env, napi_generic_failure);",9,1240,1
108003,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",9,1254,1
108007,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1259,11
108037,RETURN,-1,,NAPI_PREAMBLE(env),3,1263,1
108056,RETURN,-1,,NAPI_PREAMBLE(env),3,1263,1
108106,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1268,1
108133,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1268,1
108177,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, set_frozen.FromMaybe(false), napi_generic_failure)",3,1273,1
108188,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1276,12
108218,RETURN,-1,,NAPI_PREAMBLE(env),3,1280,1
108237,RETURN,-1,,NAPI_PREAMBLE(env),3,1280,1
108287,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1285,1
108314,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1285,1
108358,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, set_sealed.FromMaybe(false), napi_generic_failure)",3,1290,1
108369,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1293,12
108400,RETURN,-1,,CHECK_ENV(env),3,1299,1
108415,RETURN,-1,,"CHECK_ARG(env, value)",3,1300,1
108432,RETURN,-1,,"CHECK_ARG(env, result)",3,1301,1
108459,RETURN,-1,,return napi_clear_last_error(env);,3,1306,6
108479,RETURN,-1,,NAPI_PREAMBLE(env),3,1312,1
108498,RETURN,-1,,NAPI_PREAMBLE(env),3,1312,1
108520,RETURN,-1,,"CHECK_ARG(env, value)",3,1313,1
108537,RETURN,-1,,"CHECK_ARG(env, result)",3,1314,1
108574,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsArray(), napi_array_expected)",3,1317,1
108600,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1322,12
108632,RETURN,-1,,NAPI_PREAMBLE(env),3,1329,1
108651,RETURN,-1,,NAPI_PREAMBLE(env),3,1329,1
108673,RETURN,-1,,"CHECK_ARG(env, lhs)",3,1330,1
108690,RETURN,-1,,"CHECK_ARG(env, rhs)",3,1331,1
108707,RETURN,-1,,"CHECK_ARG(env, result)",3,1332,1
108750,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1338,12
108781,RETURN,-1,,NAPI_PREAMBLE(env),3,1344,1
108800,RETURN,-1,,NAPI_PREAMBLE(env),3,1344,1
108822,RETURN,-1,,"CHECK_ARG(env, result)",3,1345,1
108867,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1350,1
108894,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1350,1
108928,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1354,12
108958,RETURN,-1,,CHECK_ENV(env),3,1358,1
108973,RETURN,-1,,"CHECK_ARG(env, result)",3,1359,1
108994,RETURN,-1,,return napi_clear_last_error(env);,3,1363,4
109013,RETURN,-1,,CHECK_ENV(env),3,1367,1
109028,RETURN,-1,,"CHECK_ARG(env, result)",3,1368,1
109049,RETURN,-1,,return napi_clear_last_error(env);,3,1372,4
109069,RETURN,-1,,CHECK_ENV(env),3,1378,1
109084,RETURN,-1,,"CHECK_ARG(env, result)",3,1379,1
109106,RETURN,-1,,return napi_clear_last_error(env);,3,1384,4
109127,RETURN,-1,,CHECK_ENV(env),3,1391,1
109147,RETURN,-1,,"CHECK_ARG(env, str)",19,1392,1
109164,RETURN,-1,,"CHECK_ARG(env, result)",3,1393,1
109185,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, (length == NAPI_AUTO_LENGTH) || length <= INT_MAX, napi_invalid_arg)",3,1394,1
109230,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, str_maybe, napi_generic_failure)",3,1403,1
109246,RETURN,-1,,return napi_clear_last_error(env);,3,1406,11
109267,RETURN,-1,,CHECK_ENV(env),3,1413,1
109287,RETURN,-1,,"CHECK_ARG(env, str)",19,1414,1
109304,RETURN,-1,,"CHECK_ARG(env, result)",3,1415,1
109325,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, (length == NAPI_AUTO_LENGTH) || length <= INT_MAX, napi_invalid_arg)",3,1416,1
109370,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, str_maybe, napi_generic_failure)",3,1422,1
109386,RETURN,-1,,return napi_clear_last_error(env);,3,1424,11
109407,RETURN,-1,,CHECK_ENV(env),3,1431,1
109427,RETURN,-1,,"CHECK_ARG(env, str)",19,1432,1
109444,RETURN,-1,,"CHECK_ARG(env, result)",3,1433,1
109465,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, (length == NAPI_AUTO_LENGTH) || length <= INT_MAX, napi_invalid_arg)",3,1434,1
109510,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, str_maybe, napi_generic_failure)",3,1443,1
109526,RETURN,-1,,return napi_clear_last_error(env);,3,1446,11
109546,RETURN,-1,,CHECK_ENV(env),3,1452,1
109561,RETURN,-1,,"CHECK_ARG(env, result)",3,1453,1
109583,RETURN,-1,,return napi_clear_last_error(env);,3,1458,4
109603,RETURN,-1,,CHECK_ENV(env),3,1464,1
109618,RETURN,-1,,"CHECK_ARG(env, result)",3,1465,1
109640,RETURN,-1,,return napi_clear_last_error(env);,3,1470,4
109660,RETURN,-1,,CHECK_ENV(env),3,1476,1
109675,RETURN,-1,,"CHECK_ARG(env, result)",3,1477,1
109697,RETURN,-1,,return napi_clear_last_error(env);,3,1482,4
109717,RETURN,-1,,CHECK_ENV(env),3,1488,1
109732,RETURN,-1,,"CHECK_ARG(env, result)",3,1489,1
109756,RETURN,-1,,return napi_clear_last_error(env);,3,1494,4
109776,RETURN,-1,,CHECK_ENV(env),3,1500,1
109791,RETURN,-1,,"CHECK_ARG(env, result)",3,1501,1
109813,RETURN,-1,,return napi_clear_last_error(env);,3,1506,4
109833,RETURN,-1,,CHECK_ENV(env),3,1512,1
109848,RETURN,-1,,"CHECK_ARG(env, result)",3,1513,1
109870,RETURN,-1,,return napi_clear_last_error(env);,3,1518,4
109892,RETURN,-1,,NAPI_PREAMBLE(env),3,1526,1
109911,RETURN,-1,,NAPI_PREAMBLE(env),3,1526,1
109933,RETURN,-1,,"CHECK_ARG(env, words)",3,1527,1
109950,RETURN,-1,,"CHECK_ARG(env, result)",3,1528,1
109981,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, word_count <= INT_MAX, napi_invalid_arg)",3,1532,1
110021,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, b, napi_generic_failure)",3,1537,1
110043,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1540,13
110074,RETURN,-1,,CHECK_ENV(env),3,1546,1
110089,RETURN,-1,,"CHECK_ARG(env, result)",3,1547,1
110129,RETURN,-1,,return napi_clear_last_error(env);,3,1557,6
110149,RETURN,-1,,CHECK_ENV(env),3,1563,1
110164,RETURN,-1,,"CHECK_ARG(env, result)",3,1564,1
110228,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, desc->IsString(), napi_string_expected)",5,1572,1
110251,RETURN,-1,,return napi_clear_last_error(env);,3,1578,6
110272,RETURN,-1,,CHECK_ENV(env),3,1585,1
110287,RETURN,-1,,"CHECK_ARG(env, result)",3,1586,1
110312,RETURN,1,,"STATUS_CALL(napi_create_string_utf8(
      env, utf8description, length, &js_description_string))",3,1589,1
110350,RETURN,-1,,return napi_clear_last_error(env);,3,1597,7
110442,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, code_value->IsString(), napi_string_expected)",7,1611,1
110477,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1613,1
110490,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1613,1
110526,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1613,1
110575,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1617,1
110588,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1617,1
110624,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1617,1
110665,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
        env, set_maybe.FromMaybe(false), napi_generic_failure)",5,1620,1
110670,RETURN,-1,,return napi_ok;,3,1623,2
110690,RETURN,-1,,CHECK_ENV(env),3,1630,1
110705,RETURN,-1,,"CHECK_ARG(env, msg)",3,1631,1
110722,RETURN,-1,,"CHECK_ARG(env, result)",3,1632,1
110759,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1635,1
110802,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1639,1
110813,RETURN,-1,,return napi_clear_last_error(env);,3,1643,9
110834,RETURN,-1,,CHECK_ENV(env),3,1650,1
110849,RETURN,-1,,"CHECK_ARG(env, msg)",3,1651,1
110866,RETURN,-1,,"CHECK_ARG(env, result)",3,1652,1
110903,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1655,1
110946,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1659,1
110957,RETURN,-1,,return napi_clear_last_error(env);,3,1663,9
110978,RETURN,-1,,CHECK_ENV(env),3,1670,1
110993,RETURN,-1,,"CHECK_ARG(env, msg)",3,1671,1
111010,RETURN,-1,,"CHECK_ARG(env, result)",3,1672,1
111047,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1675,1
111090,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1679,1
111101,RETURN,-1,,return napi_clear_last_error(env);,3,1683,9
111122,RETURN,-1,,CHECK_ENV(env),3,1690,1
111137,RETURN,-1,,"CHECK_ARG(env, msg)",3,1691,1
111154,RETURN,-1,,"CHECK_ARG(env, result)",3,1692,1
111191,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1695,1
111234,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1699,1
111245,RETURN,-1,,return napi_clear_last_error(env);,3,1703,9
111265,RETURN,-1,,CHECK_ENV(env),3,1711,1
111280,RETURN,-1,,"CHECK_ARG(env, value)",3,1712,1
111297,RETURN,-1,,"CHECK_ARG(env, result)",3,1713,1
111437,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",5,1743,1
111441,RETURN,-1,,return napi_clear_last_error(env);,3,1746,6
111460,RETURN,-1,,CHECK_ENV(env),3,1750,1
111475,RETURN,-1,,"CHECK_ARG(env, result)",3,1751,1
111494,RETURN,-1,,return napi_clear_last_error(env);,3,1755,4
111513,RETURN,-1,,CHECK_ENV(env),3,1759,1
111528,RETURN,-1,,"CHECK_ARG(env, result)",3,1760,1
111547,RETURN,-1,,return napi_clear_last_error(env);,3,1764,4
111570,RETURN,-1,,CHECK_ENV(env),3,1776,1
111585,RETURN,-1,,"CHECK_ARG(env, cbinfo)",3,1777,1
111613,RETURN,-1,,"CHECK_ARG(env, argc)",5,1783,1
111661,RETURN,-1,,return napi_clear_last_error(env);,3,1796,9
111681,RETURN,-1,,CHECK_ENV(env),3,1802,1
111696,RETURN,-1,,"CHECK_ARG(env, cbinfo)",3,1803,1
111713,RETURN,-1,,"CHECK_ARG(env, result)",3,1804,1
111731,RETURN,-1,,return napi_clear_last_error(env);,3,1810,7
111754,RETURN,-1,,NAPI_PREAMBLE(env),3,1819,1
111773,RETURN,-1,,NAPI_PREAMBLE(env),3,1819,1
111795,RETURN,-1,,"CHECK_ARG(env, recv)",3,1820,1
111817,RETURN,-1,,"CHECK_ARG(env, argv)",5,1822,1
111875,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,1830,1
111904,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,1830,1
111937,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,1839,1
111963,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",7,1842,1
111979,RETURN,-1,,return napi_clear_last_error(env);,5,1845,2
111998,RETURN,-1,,CHECK_ENV(env),3,1850,1
112013,RETURN,-1,,"CHECK_ARG(env, result)",3,1851,1
112032,RETURN,-1,,return napi_clear_last_error(env);,3,1855,4
112051,RETURN,-1,,NAPI_PREAMBLE(env),3,1859,1
112070,RETURN,-1,,NAPI_PREAMBLE(env),3,1859,1
112092,RETURN,-1,,"CHECK_ARG(env, error)",3,1860,1
112112,RETURN,-1,,return napi_clear_last_error(env);,3,1867,10
112132,RETURN,-1,,NAPI_PREAMBLE(env),3,1873,1
112151,RETURN,-1,,NAPI_PREAMBLE(env),3,1873,1
112204,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1877,1
112217,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1877,1
112253,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1877,1
112300,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,1880,1
112308,RETURN,-1,,return napi_clear_last_error(env);,3,1885,13
112328,RETURN,-1,,NAPI_PREAMBLE(env),3,1891,1
112347,RETURN,-1,,NAPI_PREAMBLE(env),3,1891,1
112400,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1895,1
112413,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1895,1
112449,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1895,1
112496,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,1898,1
112504,RETURN,-1,,return napi_clear_last_error(env);,3,1903,13
112524,RETURN,-1,,NAPI_PREAMBLE(env),3,1909,1
112543,RETURN,-1,,NAPI_PREAMBLE(env),3,1909,1
112596,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1913,1
112609,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1913,1
112645,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1913,1
112692,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,1916,1
112700,RETURN,-1,,return napi_clear_last_error(env);,3,1921,13
112720,RETURN,-1,,NAPI_PREAMBLE(env),3,1927,1
112739,RETURN,-1,,NAPI_PREAMBLE(env),3,1927,1
112792,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1931,1
112805,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1931,1
112841,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,1931,1
112888,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,1934,1
112896,RETURN,-1,,return napi_clear_last_error(env);,3,1939,13
112916,RETURN,-1,,CHECK_ENV(env),3,1947,1
112931,RETURN,-1,,"CHECK_ARG(env, value)",3,1948,1
112948,RETURN,-1,,"CHECK_ARG(env, result)",3,1949,1
112975,RETURN,-1,,return napi_clear_last_error(env);,3,1954,6
112995,RETURN,-1,,CHECK_ENV(env),3,1962,1
113010,RETURN,-1,,"CHECK_ARG(env, value)",3,1963,1
113027,RETURN,-1,,"CHECK_ARG(env, result)",3,1964,1
113064,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",3,1967,1
113079,RETURN,-1,,return napi_clear_last_error(env);,3,1971,7
113099,RETURN,-1,,CHECK_ENV(env),3,1979,1
113114,RETURN,-1,,"CHECK_ARG(env, value)",3,1980,1
113131,RETURN,-1,,"CHECK_ARG(env, result)",3,1981,1
113186,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",5,1988,1
113211,RETURN,-1,,return napi_clear_last_error(env);,3,1995,6
113231,RETURN,-1,,CHECK_ENV(env),3,2003,1
113246,RETURN,-1,,"CHECK_ARG(env, value)",3,2004,1
113263,RETURN,-1,,"CHECK_ARG(env, result)",3,2005,1
113318,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",5,2012,1
113343,RETURN,-1,,return napi_clear_last_error(env);,3,2019,6
113363,RETURN,-1,,CHECK_ENV(env),3,2027,1
113378,RETURN,-1,,"CHECK_ARG(env, value)",3,2028,1
113395,RETURN,-1,,"CHECK_ARG(env, result)",3,2029,1
113431,RETURN,-1,,return napi_clear_last_error(env);,5,2036,2
113451,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",3,2039,1
113499,RETURN,-1,,return napi_clear_last_error(env);,3,2053,10
113520,RETURN,-1,,CHECK_ENV(env),3,2060,1
113535,RETURN,-1,,"CHECK_ARG(env, value)",3,2061,1
113552,RETURN,-1,,"CHECK_ARG(env, result)",3,2062,1
113569,RETURN,-1,,"CHECK_ARG(env, lossless)",3,2063,1
113606,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2067,1
113622,RETURN,-1,,return napi_clear_last_error(env);,3,2071,8
113643,RETURN,-1,,CHECK_ENV(env),3,2078,1
113658,RETURN,-1,,"CHECK_ARG(env, value)",3,2079,1
113675,RETURN,-1,,"CHECK_ARG(env, result)",3,2080,1
113692,RETURN,-1,,"CHECK_ARG(env, lossless)",3,2081,1
113729,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2085,1
113745,RETURN,-1,,return napi_clear_last_error(env);,3,2089,8
113767,RETURN,-1,,CHECK_ENV(env),3,2097,1
113782,RETURN,-1,,"CHECK_ARG(env, value)",3,2098,1
113799,RETURN,-1,,"CHECK_ARG(env, word_count)",3,2099,1
113836,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2103,1
113889,RETURN,-1,,"CHECK_ARG(env, sign_bit)",5,2112,1
113906,RETURN,-1,,"CHECK_ARG(env, words)",5,2113,1
113923,RETURN,-1,,return napi_clear_last_error(env);,3,2119,11
113943,RETURN,-1,,CHECK_ENV(env),3,2127,1
113958,RETURN,-1,,"CHECK_ARG(env, value)",3,2128,1
113975,RETURN,-1,,"CHECK_ARG(env, result)",3,2129,1
114012,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBoolean(), napi_boolean_expected)",3,2132,1
114027,RETURN,-1,,return napi_clear_last_error(env);,3,2136,7
114049,RETURN,-1,,CHECK_ENV(env),3,2149,1
114064,RETURN,-1,,"CHECK_ARG(env, value)",3,2150,1
114101,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2153,1
114122,RETURN,-1,,"CHECK_ARG(env, result)",5,2156,1
114194,RETURN,-1,,return napi_clear_last_error(env);,3,2174,6
114216,RETURN,-1,,CHECK_ENV(env),3,2187,1
114231,RETURN,-1,,"CHECK_ARG(env, value)",3,2188,1
114268,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2191,1
114289,RETURN,-1,,"CHECK_ARG(env, result)",5,2194,1
114368,RETURN,-1,,return napi_clear_last_error(env);,3,2212,6
114390,RETURN,-1,,CHECK_ENV(env),3,2228,1
114405,RETURN,-1,,"CHECK_ARG(env, value)",3,2229,1
114442,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2232,1
114463,RETURN,-1,,"CHECK_ARG(env, result)",5,2235,1
114535,RETURN,-1,,return napi_clear_last_error(env);,3,2253,6
114555,RETURN,-1,,NAPI_PREAMBLE(env),3,2259,1
114574,RETURN,-1,,NAPI_PREAMBLE(env),3,2259,1
114596,RETURN,-1,,"CHECK_ARG(env, value)",3,2260,1
114613,RETURN,-1,,"CHECK_ARG(env, result)",3,2261,1
114651,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2267,12
114679,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2286,1
114698,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2286,1
114716,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2286,1
114729,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2286,1
114767,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2286,1
114794,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2286,1
114814,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2286,12
114839,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2287,1
114858,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2287,1
114876,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2287,1
114889,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2287,1
114927,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2287,1
114954,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2287,1
114974,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2287,12
114999,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2288,1
115018,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2288,1
115036,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2288,1
115049,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2288,1
115087,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2288,1
115114,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2288,1
115134,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2288,12
115155,RETURN,-1,,"return v8impl::Wrap(
      env, js_object, native_object, finalize_cb, finalize_hint, result);",3,2298,1
115173,RETURN,-1,,"return v8impl::Unwrap(env, obj, result, v8impl::KeepWrap);",3,2305,1
115191,RETURN,-1,,"return v8impl::Unwrap(env, obj, result, v8impl::RemoveWrap);",3,2311,1
115221,RETURN,-1,,NAPI_PREAMBLE(env),3,2319,1
115240,RETURN,-1,,NAPI_PREAMBLE(env),3,2319,1
115262,RETURN,-1,,"CHECK_ARG(env, result)",3,2320,1
115319,RETURN,-1,,return napi_clear_last_error(env);,3,2340,12
115339,RETURN,-1,,NAPI_PREAMBLE(env),3,2346,1
115358,RETURN,-1,,NAPI_PREAMBLE(env),3,2346,1
115408,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2349,1
115441,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2349,1
115471,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, type_tag)",3,2350,1
115522,RETURN,-1,,"CHECK_MAYBE_NOTHING_WITH_PREAMBLE(env, maybe_has, napi_generic_failure)",3,2354,1
115552,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, !maybe_has.FromJust(), napi_invalid_arg)",3,2355,1
115593,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, tag, napi_generic_failure)",3,2360,1
115632,RETURN,-1,,"CHECK_MAYBE_NOTHING_WITH_PREAMBLE(env, maybe_set, napi_generic_failure)",3,2363,1
115660,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, maybe_set.FromJust(), napi_generic_failure)",3,2364,1
115671,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2367,23
115703,RETURN,-1,,NAPI_PREAMBLE(env),3,2374,1
115722,RETURN,-1,,NAPI_PREAMBLE(env),3,2374,1
115772,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2377,1
115805,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2377,1
115835,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, type_tag)",3,2378,1
115858,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, result)",3,2379,1
115905,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, maybe_value, napi_generic_failure)",3,2383,1
116033,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2408,17
116064,RETURN,-1,,CHECK_ENV(env),3,2414,1
116079,RETURN,-1,,"CHECK_ARG(env, value)",3,2415,1
116096,RETURN,-1,,"CHECK_ARG(env, result)",3,2416,1
116133,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsExternal(), napi_invalid_arg)",3,2419,1
116159,RETURN,-1,,return napi_clear_last_error(env);,3,2424,8
116180,RETURN,-1,,CHECK_ENV(env),3,2434,1
116195,RETURN,-1,,"CHECK_ARG(env, value)",3,2435,1
116212,RETURN,-1,,"CHECK_ARG(env, result)",3,2436,1
116256,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,2442,1
116283,RETURN,-1,,return napi_clear_last_error(env);,3,2450,9
116302,RETURN,-1,,CHECK_ENV(env),3,2458,1
116317,RETURN,-1,,"CHECK_ARG(env, ref)",3,2459,1
116326,RETURN,-1,,return napi_clear_last_error(env);,3,2463,4
116346,RETURN,-1,,CHECK_ENV(env),3,2476,1
116361,RETURN,-1,,"CHECK_ARG(env, ref)",3,2477,1
116388,RETURN,-1,,return napi_clear_last_error(env);,3,2486,8
116408,RETURN,-1,,CHECK_ENV(env),3,2498,1
116423,RETURN,-1,,"CHECK_ARG(env, ref)",3,2499,1
116442,RETURN,-1,,"return napi_set_last_error(env, napi_generic_failure);",5,2504,1
116462,RETURN,-1,,return napi_clear_last_error(env);,3,2513,9
116482,RETURN,-1,,CHECK_ENV(env),3,2524,1
116497,RETURN,-1,,"CHECK_ARG(env, ref)",3,2525,1
116514,RETURN,-1,,"CHECK_ARG(env, result)",3,2526,1
116536,RETURN,-1,,return napi_clear_last_error(env);,3,2531,7
116555,RETURN,-1,,CHECK_ENV(env),3,2538,1
116570,RETURN,-1,,"CHECK_ARG(env, result)",3,2539,1
116591,RETURN,-1,,return napi_clear_last_error(env);,3,2544,5
116610,RETURN,-1,,CHECK_ENV(env),3,2551,1
116625,RETURN,-1,,"CHECK_ARG(env, scope)",3,2552,1
116637,RETURN,-1,,return napi_handle_scope_mismatch;,5,2554,1
116649,RETURN,-1,,return napi_clear_last_error(env);,3,2559,6
116668,RETURN,-1,,CHECK_ENV(env),3,2566,1
116683,RETURN,-1,,"CHECK_ARG(env, result)",3,2567,1
116704,RETURN,-1,,return napi_clear_last_error(env);,3,2572,5
116723,RETURN,-1,,CHECK_ENV(env),3,2579,1
116738,RETURN,-1,,"CHECK_ARG(env, scope)",3,2580,1
116750,RETURN,-1,,return napi_handle_scope_mismatch;,5,2582,1
116762,RETURN,-1,,return napi_clear_last_error(env);,3,2587,6
116783,RETURN,-1,,CHECK_ENV(env),3,2596,1
116798,RETURN,-1,,"CHECK_ARG(env, scope)",3,2597,1
116815,RETURN,-1,,"CHECK_ARG(env, escapee)",3,2598,1
116832,RETURN,-1,,"CHECK_ARG(env, result)",3,2599,1
116868,RETURN,-1,,return napi_clear_last_error(env);,5,2606,2
116871,RETURN,-1,,"return napi_set_last_error(env, napi_escape_called_twice);",3,2608,8
116894,RETURN,-1,,NAPI_PREAMBLE(env),3,2616,1
116913,RETURN,-1,,NAPI_PREAMBLE(env),3,2616,1
116935,RETURN,-1,,"CHECK_ARG(env, constructor)",3,2617,1
116957,RETURN,-1,,"CHECK_ARG(env, argv)",5,2619,1
116974,RETURN,-1,,"CHECK_ARG(env, result)",3,2621,1
117017,RETURN,-1,,"CHECK_TO_FUNCTION(env, ctor, constructor)",3,2626,1
117046,RETURN,-1,,"CHECK_TO_FUNCTION(env, ctor, constructor)",3,2626,1
117087,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_pending_exception)",3,2633,1
117103,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2636,16
117135,RETURN,-1,,NAPI_PREAMBLE(env),3,2643,1
117154,RETURN,-1,,NAPI_PREAMBLE(env),3,2643,1
117176,RETURN,-1,,"CHECK_ARG(env, object)",3,2644,1
117193,RETURN,-1,,"CHECK_ARG(env, result)",3,2645,1
117242,RETURN,-1,,"CHECK_TO_OBJECT(env, context, ctor, constructor)",3,2652,1
117269,RETURN,-1,,"CHECK_TO_OBJECT(env, context, ctor, constructor)",3,2652,1
117292,RETURN,-1,,"return napi_set_last_error(env, napi_function_expected);",5,2658,2
117339,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, maybe_result, status)",3,2665,1
117351,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2667,20
117381,RETURN,-1,,CHECK_ENV(env),3,2674,1
117396,RETURN,-1,,"CHECK_ARG(env, result)",3,2675,1
117411,RETURN,-1,,return napi_clear_last_error(env);,3,2678,4
117430,RETURN,-1,,CHECK_ENV(env),3,2685,1
117445,RETURN,-1,,"CHECK_ARG(env, result)",3,2686,1
117458,RETURN,-1,,"return napi_get_undefined(env, result);",5,2689,1
117495,RETURN,-1,,return napi_clear_last_error(env);,3,2696,4
117515,RETURN,-1,,CHECK_ENV(env),3,2702,1
117530,RETURN,-1,,"CHECK_ARG(env, value)",3,2703,1
117547,RETURN,-1,,"CHECK_ARG(env, result)",3,2704,1
117574,RETURN,-1,,return napi_clear_last_error(env);,3,2709,6
117595,RETURN,-1,,NAPI_PREAMBLE(env),3,2716,1
117614,RETURN,-1,,NAPI_PREAMBLE(env),3,2716,1
117636,RETURN,-1,,"CHECK_ARG(env, result)",3,2717,1
117685,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2730,12
117731,RETURN,1,,"STATUS_CALL(napi_create_external_buffer(
      env, byte_length, external_data, finalize_cb, finalize_hint, &buffer))",3,2744,1
117734,RETURN,-1,,"return napi_get_typedarray_info(
      env, buffer, nullptr, nullptr, nullptr, result, nullptr);",3,2746,3
117761,RETURN,-1,,CHECK_ENV(env),3,2754,1
117776,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2755,1
117813,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2758,1
117856,RETURN,-1,,return napi_clear_last_error(env);,3,2770,8
117876,RETURN,-1,,CHECK_ENV(env),3,2776,1
117891,RETURN,-1,,"CHECK_ARG(env, value)",3,2777,1
117908,RETURN,-1,,"CHECK_ARG(env, result)",3,2778,1
117935,RETURN,-1,,return napi_clear_last_error(env);,3,2783,6
117958,RETURN,-1,,NAPI_PREAMBLE(env),3,2792,1
117977,RETURN,-1,,NAPI_PREAMBLE(env),3,2792,1
117999,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2793,1
118016,RETURN,-1,,"CHECK_ARG(env, result)",3,2794,1
118053,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2797,1
118115,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int8Array, 1, buffer, byte_offset, length, typedArray)",7,2804,2
118139,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int8Array, 1, buffer, byte_offset, length, typedArray)",7,2804,2
118188,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8Array, 1, buffer, byte_offset, length, typedArray)",7,2808,2
118212,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8Array, 1, buffer, byte_offset, length, typedArray)",7,2808,2
118261,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8ClampedArray, 1, buffer, byte_offset, length, typedArray)",7,2812,2
118285,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8ClampedArray, 1, buffer, byte_offset, length, typedArray)",7,2812,2
118334,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int16Array, 2, buffer, byte_offset, length, typedArray)",7,2816,2
118358,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int16Array, 2, buffer, byte_offset, length, typedArray)",7,2816,2
118407,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint16Array, 2, buffer, byte_offset, length, typedArray)",7,2820,2
118431,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint16Array, 2, buffer, byte_offset, length, typedArray)",7,2820,2
118480,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int32Array, 4, buffer, byte_offset, length, typedArray)",7,2824,2
118504,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int32Array, 4, buffer, byte_offset, length, typedArray)",7,2824,2
118553,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint32Array, 4, buffer, byte_offset, length, typedArray)",7,2828,2
118577,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint32Array, 4, buffer, byte_offset, length, typedArray)",7,2828,2
118626,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float32Array, 4, buffer, byte_offset, length, typedArray)",7,2832,2
118650,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float32Array, 4, buffer, byte_offset, length, typedArray)",7,2832,2
118699,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float64Array, 8, buffer, byte_offset, length, typedArray)",7,2836,2
118723,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float64Array, 8, buffer, byte_offset, length, typedArray)",7,2836,2
118772,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigInt64Array, 8, buffer, byte_offset, length, typedArray)",7,2840,2
118796,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigInt64Array, 8, buffer, byte_offset, length, typedArray)",7,2840,2
118845,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigUint64Array, 8, buffer, byte_offset, length, typedArray)",7,2844,2
118869,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigUint64Array, 8, buffer, byte_offset, length, typedArray)",7,2844,2
118888,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,2848,46
118900,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2852,14
118935,RETURN,-1,,CHECK_ENV(env),3,2862,1
118950,RETURN,-1,,"CHECK_ARG(env, typedarray)",3,2863,1
118987,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsTypedArray(), napi_invalid_arg)",3,2866,1
119221,RETURN,-1,,return napi_clear_last_error(env);,3,2919,13
119243,RETURN,-1,,NAPI_PREAMBLE(env),3,2927,1
119262,RETURN,-1,,NAPI_PREAMBLE(env),3,2927,1
119284,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2928,1
119301,RETURN,-1,,"CHECK_ARG(env, result)",3,2929,1
119338,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2932,1
119371,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,2940,2
119402,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2946,14
119433,RETURN,-1,,CHECK_ENV(env),3,2952,1
119448,RETURN,-1,,"CHECK_ARG(env, value)",3,2953,1
119465,RETURN,-1,,"CHECK_ARG(env, result)",3,2954,1
119492,RETURN,-1,,return napi_clear_last_error(env);,3,2959,6
119515,RETURN,-1,,CHECK_ENV(env),3,2968,1
119530,RETURN,-1,,"CHECK_ARG(env, dataview)",3,2969,1
119567,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsDataView(), napi_invalid_arg)",3,2972,1
119666,RETURN,-1,,return napi_clear_last_error(env);,3,2999,12
119685,RETURN,-1,,CHECK_ENV(env),3,3003,1
119700,RETURN,-1,,"CHECK_ARG(env, result)",3,3004,1
119711,RETURN,-1,,return napi_clear_last_error(env);,3,3006,4
119731,RETURN,-1,,NAPI_PREAMBLE(env),3,3012,1
119750,RETURN,-1,,NAPI_PREAMBLE(env),3,3012,1
119772,RETURN,-1,,"CHECK_ARG(env, deferred)",3,3013,1
119789,RETURN,-1,,"CHECK_ARG(env, promise)",3,3014,1
119824,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,3017,1
119868,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3025,18
119889,RETURN,-1,,"return v8impl::ConcludeDeferred(env, deferred, resolution, true);",3,3031,1
119905,RETURN,-1,,"return v8impl::ConcludeDeferred(env, deferred, resolution, false);",3,3037,1
119931,RETURN,-1,,CHECK_ENV(env),3,3043,1
119946,RETURN,-1,,"CHECK_ARG(env, value)",3,3044,1
119963,RETURN,-1,,"CHECK_ARG(env, is_promise)",3,3045,1
119979,RETURN,-1,,return napi_clear_last_error(env);,3,3049,5
119999,RETURN,-1,,NAPI_PREAMBLE(env),3,3055,1
120018,RETURN,-1,,NAPI_PREAMBLE(env),3,3055,1
120040,RETURN,-1,,"CHECK_ARG(env, result)",3,3056,1
120081,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_date, napi_generic_failure)",3,3059,1
120097,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3063,10
120128,RETURN,-1,,CHECK_ENV(env),3,3069,1
120143,RETURN,-1,,"CHECK_ARG(env, value)",3,3070,1
120160,RETURN,-1,,"CHECK_ARG(env, is_date)",3,3071,1
120176,RETURN,-1,,return napi_clear_last_error(env);,3,3075,5
120196,RETURN,-1,,NAPI_PREAMBLE(env),3,3081,1
120215,RETURN,-1,,NAPI_PREAMBLE(env),3,3081,1
120237,RETURN,-1,,"CHECK_ARG(env, value)",3,3082,1
120254,RETURN,-1,,"CHECK_ARG(env, result)",3,3083,1
120291,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsDate(), napi_date_expected)",3,3086,1
120317,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3091,12
120348,RETURN,-1,,NAPI_PREAMBLE(env),3,3097,1
120367,RETURN,-1,,NAPI_PREAMBLE(env),3,3097,1
120389,RETURN,-1,,"CHECK_ARG(env, script)",3,3098,1
120406,RETURN,-1,,"CHECK_ARG(env, result)",3,3099,1
120433,RETURN,-1,,"return napi_set_last_error(env, napi_string_expected);",5,3104,1
120480,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_script, napi_generic_failure)",3,3110,1
120511,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, script_result, napi_generic_failure)",3,3113,1
120527,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3116,18
120561,RETURN,-1,,CHECK_ENV(env),3,3127,1
120576,RETURN,-1,,"CHECK_ARG(env, js_object)",3,3128,1
120593,RETURN,-1,,"CHECK_ARG(env, finalize_cb)",3,3129,1
120630,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, v8_value->IsObject(), napi_invalid_arg)",3,3132,1
120679,RETURN,-1,,return napi_clear_last_error(env);,3,3145,11
120699,RETURN,-1,,CHECK_ENV(env),3,3151,1
120714,RETURN,-1,,"CHECK_ARG(env, adjusted_value)",3,3152,1
120729,RETURN,-1,,return napi_clear_last_error(env);,3,3157,4
120750,RETURN,-1,,CHECK_ENV(env),3,3164,1
120788,RETURN,-1,,return napi_clear_last_error(env);,3,3176,6
120807,RETURN,-1,,CHECK_ENV(env),3,3180,1
120822,RETURN,-1,,"CHECK_ARG(env, data)",3,3181,1
120847,RETURN,-1,,return napi_clear_last_error(env);,3,3187,6
120866,RETURN,-1,,CHECK_ENV(env),3,3192,1
120881,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3193,1
120918,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, value->IsArrayBuffer(), napi_arraybuffer_expected)",3,3196,1
120954,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, it->IsDetachable(), napi_detachable_arraybuffer_expected)",3,3200,1
120970,RETURN,-1,,return napi_clear_last_error(env);,3,3205,8
120990,RETURN,-1,,CHECK_ENV(env),3,3211,1
121005,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3212,1
121022,RETURN,-1,,"CHECK_ARG(env, result)",3,3213,1
121057,RETURN,-1,,return napi_clear_last_error(env);,3,3220,6
121203,RETURN,-1,,return v8impl::PersistentToLocal::Strong(context_persistent);,5,63,1
121232,RETURN,-1,,return true;,43,71,1
121246,RETURN,-1,,return;,7,75,1
121258,RETURN,-1,,return this->isolate->IsExecutionTerminating() || !can_call_into_js();,5,82,1
121434,RETURN,-1,,return napi_ok;,3,163,5
121465,RETURN,-1,,return error_code;,3,173,4
121480,RETURN,-1,,return reinterpret_cast<napi_value>(*local);,3,295,1
121508,RETURN,-1,,return local;,3,301,3
121531,RETURN,-1,,"return new Finalizer(env, finalize_callback, finalize_data, finalize_hint);",5,323,1
121542,RETURN,-1,,return finalize_callback_;,30,326,1
121548,RETURN,-1,,return finalize_data_;,18,327,1
121554,RETURN,-1,,return finalize_hint_;,18,328,1
121636,RETURN,-1,,return ownership_;,27,387,1
121746,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,35,1
121754,RETURN,-1,,return true;,3,40,1
121816,RETURN,-1,,return true;,5,52,2
121818,RETURN,-1,,return value->IsTrue();,3,54,9
121902,RETURN,-1,,return value_int;,3,69,11
121983,RETURN,-1,,return value_int;,3,84,11
122074,RETURN,-1,,return value_int;,3,106,13
122220,RETURN,-1,,return value_int;,3,140,17
122537,RETURN,-1,,return this;,40,38,1
122664,RETURN,-1,,return value_int;,3,73,11
122747,RETURN,-1,,return value_int;,3,87,11
122846,RETURN,1,,return value_int;,52,108,1
122926,RETURN,-1,,return value_int;,3,122,20
122943,RETURN,-1,,return ret;,3,128,3
122960,RETURN,-1,,return ret;,3,134,3
123387,RETURN,-1,,return isolate;,3,23,8
123497,RETURN,-1,,return false;,5,54,1
123511,RETURN,-1,,return true;,3,58,12
123577,RETURN,-1,,return {};,5,72,1
123598,RETURN,-1,,return {};,5,76,1
123603,RETURN,-1,,return utf8_value.ToString();,3,79,13
123673,RETURN,-1,,return {};,5,93,1
123688,RETURN,-1,,return {};,5,96,1
123693,RETURN,-1,,return false;,5,99,1
123715,RETURN,-1,,return {};,5,103,1
123716,RETURN,-1,,return value->BooleanValue(isolate);,3,105,14
123897,RETURN,-1,,return ret;,3,43,10
123910,RETURN,1,,return str;,26,47,1
123975,RETURN,-1,,return out;,3,66,8
124034,RETURN,-1,,return ENOTSUP;,3,437,1
124046,RETURN,-1,,"return ""Mapping to large pages is not supported."";",7,444,3
124050,RETURN,-1,,"return ""Large pages are not enabled."";",7,447,6
124054,RETURN,-1,,"return ""failed to find text region"";",7,450,9
124059,RETURN,-1,,"return ""Mapping code to large pages failed. Reverting to default page ""
          ""size."";",7,453,12
124063,RETURN,-1,,"return ""OK"";",7,457,15
124066,RETURN,-1,,"return ""Unknown error"";",7,460,17
124131,RETURN,-1,,return result;,5,388,3
124306,RETURN,1,,return {};,22,82,1
124307,RETURN,-1,,return obj.As<Object>()->GetCreationContext().ToLocalChecked();,3,83,3
124362,RETURN,-1,,return it->second;,7,91,1
124366,RETURN,-1,,return nullptr;,3,94,4
124394,RETURN,-1,,return nullptr;,5,100,1
124396,RETURN,-1,,return module_wrap_it->second;,3,102,4
124897,RETURN,-1,,return;,9,214,2
124919,RETURN,-1,,return;,9,221,3
124937,RETURN,-1,,return;,5,227,1
125109,RETURN,-1,,return assertions;,3,265,3
125164,RETURN,1,,return;,5,281,1
125327,RETURN,-1,,return;,7,313,1
125349,RETURN,-1,,return;,7,320,2
125512,RETURN,-1,,return;,5,351,5
125746,RETURN,1,,return;,7,411,1
125784,RETURN,-1,,return;,5,426,2
125859,RETURN,-1,,"return env->ThrowError(
          ""cannot get namespace, module has not been instantiated"");",7,443,5
126151,RETURN,-1,,return MaybeLocal<Module>();,5,509,4
126187,RETURN,-1,,return MaybeLocal<Module>();,5,521,2
126204,RETURN,-1,,return MaybeLocal<Module>();,5,527,2
126235,RETURN,-1,,return MaybeLocal<Module>();,5,536,2
126266,RETURN,-1,,return MaybeLocal<Module>();,5,543,2
126274,RETURN,-1,,return module->module_.Get(isolate);,3,548,20
126313,RETURN,-1,,return MaybeLocal<Promise>();,5,561,2
126370,RETURN,1,,return {};,62,572,1
126391,RETURN,-1,,return handle_scope.Escape(resolver->GetPromise());,5,578,4
126582,RETURN,-1,,return handle_scope.Escape(result.As<Promise>());,5,621,2
126591,RETURN,-1,,return MaybeLocal<Promise>();,3,624,22
126671,RETURN,1,,return;,5,645,1
126683,RETURN,-1,,return;,5,649,1
126917,RETURN,-1,,return MaybeLocal<Value>();,5,700,4
126941,RETURN,-1,,return MaybeLocal<Value>();,5,705,1
126953,RETURN,-1,,return resolver->GetPromise();,3,709,17
127869,RETURN,-1,,return scope.EscapeMaybe(realm->ExecuteBootstrapper(main_script_id));,3,268,6
127941,RETURN,-1,,"return scope.EscapeMaybe(StartExecution(env, entry));",5,290,8
127959,RETURN,-1,,return env->RunSnapshotDeserializeMain();,5,298,1
127972,RETURN,-1,,"return StartExecution(env, ""internal/main/worker_thread"");",5,302,1
128001,RETURN,-1,,"return StartExecution(env, ""internal/main/inspect"");",5,311,1
128016,RETURN,-1,,"return StartExecution(env, ""internal/main/mksnapshot"");",5,315,1
128027,RETURN,-1,,"return StartExecution(env, ""internal/main/print_help"");",5,319,1
128039,RETURN,-1,,"return StartExecution(env, ""internal/main/prof_process"");",5,324,1
128059,RETURN,-1,,"return StartExecution(env, ""internal/main/eval_string"");",5,329,1
128071,RETURN,-1,,"return StartExecution(env, ""internal/main/check_syntax"");",5,333,1
128083,RETURN,-1,,"return StartExecution(env, ""internal/main/test_runner"");",5,337,1
128095,RETURN,-1,,"return StartExecution(env, ""internal/main/watch_mode"");",5,341,1
128110,RETURN,-1,,"return StartExecution(env, ""internal/main/run_main_module"");",5,345,1
128127,RETURN,-1,,"return StartExecution(env, ""internal/main/repl"");",5,349,1
128131,RETURN,-1,,"return StartExecution(env, ""internal/main/eval_stdin"");",3,352,18
128185,RETURN,-1,,return;,5,614,1
128232,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,25,689,1
128268,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument2;,7,697,2
128302,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument2;,5,706,2
128481,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,5,747,1
128485,RETURN,-1,,return ExitCode::kNoFailure;,3,749,18
128497,RETURN,-1,,"return static_cast<int>(
      ProcessGlobalArgsInternal(args, exec_args, errors, settings));",3,756,1
128609,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,29,810,1
128642,RETURN,1,,return exit_code;,46,817,1
128667,RETURN,1,,return exit_code;,44,825,1
128692,RETURN,-1,,return ExitCode::kNoFailure;,3,880,12
128704,RETURN,-1,,"return static_cast<int>(
      InitializeNodeWithArgsInternal(argv, exec_argv, errors, flags));",3,887,1
128780,RETURN,-1,,return result;,7,912,2
128869,RETURN,-1,,return result;,7,930,4
128903,RETURN,-1,,return result;,7,938,6
128932,RETURN,-1,,return result;,7,945,4
128995,RETURN,-1,,return result;,3,1071,14
129003,RETURN,-1,,"return InitializeOncePerProcessInternal(args, flags);",3,1077,1
129118,RETURN,-1,,return exit_code;,7,1130,3
129165,RETURN,-1,,return exit_code;,7,1141,1
129231,RETURN,-1,,return exit_code;,3,1164,10
129294,RETURN,-1,,return exit_code;,7,1179,3
129326,RETURN,-1,,return exit_code;,7,1188,2
129390,RETURN,-1,,return exit_code;,3,1209,8
129449,RETURN,-1,,return result->exit_code_enum();,5,1225,1
129488,RETURN,-1,,return sea::BuildSingleExecutableBlob(sea_config);,5,1244,1
129517,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument;,7,1253,2
129521,RETURN,-1,,"return GenerateAndWriteSnapshotData(&snapshot_data, result.get());",5,1255,2
129529,RETURN,-1,,"return LoadSnapshotDataAndRun(&snapshot_data, result.get());",3,1259,17
129556,RETURN,-1,,"return static_cast<int>(StartInternal(argc, argv));",3,1266,2
129573,RETURN,-1,,return 0;,3,1271,2
129586,RETURN,-1,,"return CreateEnvironment(
            setup->isolate_data(), setup->context(),
            std::forward<EnvironmentArgs>(env_args)...);",9,905,1
129611,RETURN,-1,,"return CreateEnvironment(setup->isolate_data(),
                                 setup->context(),
                                 std::forward<EnvironmentArgs>(env_args)...);",9,927,1
129687,RETURN,-1,,"NODE_DEPRECATED(""Use ErrnoException(isolate, ...)"",
                inline v8::Local<v8::Value> ErrnoException(
      int errorno,
      const char* syscall = nullptr,
      const char* message = nullptr,
      const char* path = nullptr) {
  return ErrnoException(v8::Isolate::GetCurrent(),
                        errorno,
                        syscall,
                        message,
                        path);
})",1,151,1
129707,RETURN,-1,,"NODE_DEPRECATED(""Use UVException(isolate, ...)"",
                inline v8::Local<v8::Value> UVException(int errorno,
                                        const char* syscall = nullptr,
                                        const char* message = nullptr,
                                        const char* path = nullptr) {
  return UVException(v8::Isolate::GetCurrent(),
                     errorno,
                     syscall,
                     message,
                     path);
})",1,164,1
129951,RETURN,-1,,"return InitializeOncePerProcess(
      args, static_cast<ProcessInitializationFlags::Flags>(flags_accum));",3,359,4
130695,RETURN,-1,,return ret;,3,910,4
130733,RETURN,-1,,return ret;,3,932,4
130740,RETURN,-1,,"NODE_DEPRECATED(""Use v8::Date::New() directly"",
                inline v8::Local<v8::Value> NODE_UNIXTIME_V8(double time) {
                  return v8::Date::New(
                             v8::Isolate::GetCurrent()->GetCurrentContext(),
                             1000 * time)
                      .ToLocalChecked();
                })",1,936,1
130767,RETURN,-1,,"NODE_DEPRECATED(""Use v8::Date::ValueOf() directly"",
                inline double NODE_V8_UNIXTIME(v8::Local<v8::Date> date) {
  return date->ValueOf() / 1000;
})",1,944,1
131234,RETURN,-1,,"return AsyncCleanupHookHandle(AddEnvironmentCleanupHookInternal(isolate, fun,
      arg));",3,1293,1
131470,RETURN,-1,,return;,7,93,1
131494,RETURN,-1,,return;,7,104,2
131679,RETURN,-1,,return node_env()->can_call_into_js();,3,36,1
131813,RETURN,-1,,"return new BufferFinalizer(
        env, finalize_callback, finalize_data, finalize_hint);",5,123,1
131845,RETURN,1,,return;,51,133,1
131980,RETURN,-1,,return nullptr;,5,181,5
132000,RETURN,-1,,return result;,3,196,5
132085,RETURN,-1,,return napi_queue_full;,9,242,1
132100,RETURN,-1,,return napi_invalid_arg;,9,249,1
132106,RETURN,-1,,return napi_closing;,9,252,2
132116,RETURN,-1,,return napi_ok;,7,257,3
132130,RETURN,-1,,return napi_closing;,7,265,1
132134,RETURN,-1,,return napi_ok;,5,270,5
132151,RETURN,-1,,return napi_invalid_arg;,7,277,1
132186,RETURN,-1,,return napi_ok;,5,292,6
132259,RETURN,-1,,return napi_ok;,9,313,1
132278,RETURN,-1,,return napi_generic_failure;,5,332,7
132289,RETURN,-1,,return napi_ok;,5,338,2
132300,RETURN,-1,,return napi_ok;,5,344,2
132306,RETURN,-1,,return context;,28,347,1
132506,RETURN,-1,,return has_more;,5,419,9
132565,RETURN,-1,,return;,7,441,1
132600,RETURN,-1,,return;,7,458,1
132641,RETURN,-1,,return;,9,476,2
132664,RETURN,-1,,return;,9,483,2
132825,RETURN,-1,,"return node::InternalMakeCallback(node_env(),
                                      resource(),
                                      recv,
                                      callback,
                                      argc,
                                      argv,
                                      {async_id_, trigger_async_id_});",5,570,2
132856,RETURN,-1,,return it;,5,584,5
132896,RETURN,-1,,return env_->node_env();,42,596,1
132905,RETURN,-1,,return resource_.Get(node_env()->isolate());,5,598,1
132918,RETURN,-1,,"return {async_id_, trigger_async_id_};",5,601,1
133025,RETURN,-1,,return node_api_context_register_func<NODE_API_DEFAULT_MODULE_API_VERSION>;,5,680,1
133036,RETURN,-1,,return node_api_context_register_func<NAPI_VERSION_EXPERIMENTAL>;,5,682,1
133047,RETURN,-1,,return nullptr;,5,685,2
133083,RETURN,-1,,return;,5,699,3
133202,RETURN,-1,,"return {
      -1,
      mod->nm_flags | NM_F_DELETEME,
      nullptr,
      mod->nm_filename,
      nullptr,
      napi_module_register_cb,
      mod->nm_modname,
      const_cast<napi_module*>(mod),  // priv
      nullptr,
  };",3,740,1
133240,RETURN,-1,,CHECK_ENV(env),3,764,1
133255,RETURN,-1,,"CHECK_ARG(env, fun)",3,765,1
133269,RETURN,-1,,return napi_ok;,3,769,4
133288,RETURN,-1,,CHECK_ENV(env),3,775,1
133303,RETURN,-1,,"CHECK_ARG(env, fun)",3,776,1
133317,RETURN,-1,,return napi_ok;,3,780,4
133449,RETURN,-1,,CHECK_ENV(env),3,823,1
133464,RETURN,-1,,"CHECK_ARG(env, hook)",3,824,1
133486,RETURN,-1,,return napi_clear_last_error(env);,3,831,6
133499,RETURN,1,,return napi_invalid_arg;,33,836,1
133503,RETURN,-1,,return napi_ok;,3,840,3
133521,RETURN,-1,,NAPI_PREAMBLE(env),3,844,1
133540,RETURN,-1,,NAPI_PREAMBLE(env),3,844,1
133562,RETURN,-1,,"CHECK_ARG(env, err)",3,845,1
133589,RETURN,-1,,return napi_clear_last_error(env);,3,850,9
133684,RETURN,-1,,CHECK_ENV(env),3,882,1
133699,RETURN,-1,,"CHECK_ARG(env, result)",3,883,1
133717,RETURN,-1,,return napi_clear_last_error(env);,3,890,6
133736,RETURN,-1,,CHECK_ENV(env),3,897,1
133751,RETURN,-1,,"CHECK_ARG(env, scope)",3,898,1
133763,RETURN,-1,,return napi_callback_scope_mismatch;,5,900,1
133775,RETURN,-1,,return napi_clear_last_error(env);,3,906,5
133796,RETURN,-1,,CHECK_ENV(env),3,913,1
133811,RETURN,-1,,"CHECK_ARG(env, async_resource_name)",3,914,1
133828,RETURN,-1,,"CHECK_ARG(env, result)",3,915,1
133885,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8_resource, async_resource)",5,923,1
133912,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8_resource, async_resource)",5,923,1
133967,RETURN,-1,,"CHECK_TO_STRING(env, context, v8_resource_name, async_resource_name)",3,931,1
133994,RETURN,-1,,"CHECK_TO_STRING(env, context, v8_resource_name, async_resource_name)",3,931,1
134023,RETURN,-1,,return napi_clear_last_error(env);,3,941,15
134042,RETURN,-1,,CHECK_ENV(env),3,946,1
134057,RETURN,-1,,"CHECK_ARG(env, async_context)",3,947,1
134070,RETURN,-1,,return napi_clear_last_error(env);,3,954,6
134094,RETURN,-1,,NAPI_PREAMBLE(env),3,964,1
134113,RETURN,-1,,NAPI_PREAMBLE(env),3,964,1
134135,RETURN,-1,,"CHECK_ARG(env, recv)",3,965,1
134157,RETURN,-1,,"CHECK_ARG(env, argv)",5,967,1
134202,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8recv, recv)",3,973,1
134229,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8recv, recv)",3,973,1
134265,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,976,1
134294,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,976,1
134368,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,999,1
134389,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, callback_result, napi_generic_failure)",5,1001,1
134410,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1008,16
134442,RETURN,-1,,NAPI_PREAMBLE(env),3,1015,1
134461,RETURN,-1,,NAPI_PREAMBLE(env),3,1015,1
134483,RETURN,-1,,"CHECK_ARG(env, result)",3,1016,1
134523,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1020,1
134565,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1030,12
134599,RETURN,-1,,NAPI_PREAMBLE(env),3,1039,1
134618,RETURN,-1,,NAPI_PREAMBLE(env),3,1039,1
134640,RETURN,-1,,"CHECK_ARG(env, result)",3,1040,1
134706,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1059,1
134722,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1062,14
134755,RETURN,-1,,NAPI_PREAMBLE(env),3,1074,1
134774,RETURN,-1,,NAPI_PREAMBLE(env),3,1074,1
134796,RETURN,-1,,"CHECK_ARG(env, result)",3,1075,1
134839,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1080,1
134881,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1089,12
134912,RETURN,-1,,CHECK_ENV(env),3,1095,1
134927,RETURN,-1,,"CHECK_ARG(env, value)",3,1096,1
134944,RETURN,-1,,"CHECK_ARG(env, result)",3,1097,1
134963,RETURN,-1,,return napi_clear_last_error(env);,3,1100,5
134984,RETURN,-1,,CHECK_ENV(env),3,1107,1
134999,RETURN,-1,,"CHECK_ARG(env, value)",3,1108,1
135049,RETURN,-1,,return napi_clear_last_error(env);,3,1119,6
135068,RETURN,-1,,CHECK_ENV(env),3,1124,1
135083,RETURN,-1,,"CHECK_ARG(env, result)",3,1125,1
135109,RETURN,-1,,return napi_clear_last_error(env);,3,1129,6
135124,RETURN,-1,,return napi_ok;,7,1138,3
135128,RETURN,-1,,return napi_invalid_arg;,7,1140,6
135132,RETURN,-1,,return napi_cancelled;,7,1142,9
135135,RETURN,-1,,return napi_generic_failure;,7,1144,11
135161,RETURN,-1,,"return new Work(
        env, async_resource, async_resource_name, execute, complete, data);",5,1176,1
135193,RETURN,1,,return;,31,1185,1
135232,RETURN,-1,,CHECK_ENV(env),3,1228,1
135247,RETURN,-1,,"CHECK_ARG(env, execute)",3,1229,1
135264,RETURN,-1,,"CHECK_ARG(env, result)",3,1230,1
135314,RETURN,-1,,"CHECK_TO_OBJECT(env, context, resource, async_resource)",5,1236,1
135341,RETURN,-1,,"CHECK_TO_OBJECT(env, context, resource, async_resource)",5,1236,1
135392,RETURN,-1,,"CHECK_TO_STRING(env, context, resource_name, async_resource_name)",3,1242,1
135419,RETURN,-1,,"CHECK_TO_STRING(env, context, resource_name, async_resource_name)",3,1242,1
135454,RETURN,-1,,return napi_clear_last_error(env);,3,1253,12
135473,RETURN,-1,,CHECK_ENV(env),3,1258,1
135488,RETURN,-1,,"CHECK_ARG(env, work)",3,1259,1
135502,RETURN,-1,,return napi_clear_last_error(env);,3,1263,4
135521,RETURN,-1,,CHECK_ENV(env),3,1267,1
135536,RETURN,-1,,"CHECK_ARG(env, loop)",3,1268,1
135553,RETURN,-1,,return napi_clear_last_error(env);,3,1270,4
135572,RETURN,-1,,CHECK_ENV(env),3,1275,1
135587,RETURN,-1,,"CHECK_ARG(env, work)",3,1276,1
135613,RETURN,1,,"STATUS_CALL(napi_get_uv_event_loop(env, &event_loop))",3,1279,1
135626,RETURN,-1,,return napi_clear_last_error(env);,3,1285,9
135645,RETURN,-1,,CHECK_ENV(env),3,1290,1
135660,RETURN,-1,,"CHECK_ARG(env, work)",3,1291,1
135702,RETURN,-1,,"CALL_UV(env, w->CancelWork())",3,1295,1
135708,RETURN,-1,,return napi_clear_last_error(env);,3,1297,6
135736,RETURN,-1,,CHECK_ENV(env),3,1312,1
135751,RETURN,-1,,"CHECK_ARG(env, async_resource_name)",3,1313,1
135768,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, initial_thread_count > 0, napi_invalid_arg)",3,1314,1
135785,RETURN,-1,,"CHECK_ARG(env, result)",3,1315,1
135820,RETURN,-1,,"CHECK_ARG(env, call_js_cb)",5,1321,1
135842,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8_func, func)",5,1323,1
135871,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8_func, func)",5,1323,1
135941,RETURN,-1,,"CHECK_TO_OBJECT(env, v8_context, v8_resource, async_resource)",5,1332,1
135968,RETURN,-1,,"CHECK_TO_OBJECT(env, v8_context, v8_resource, async_resource)",5,1332,1
136006,RETURN,-1,,"CHECK_TO_STRING(env, v8_context, v8_name, async_resource_name)",3,1336,1
136033,RETURN,-1,,"CHECK_TO_STRING(env, v8_context, v8_name, async_resource_name)",3,1336,1
136089,RETURN,-1,,"return napi_set_last_error(env, status);",3,1360,17
136112,RETURN,-1,,return napi_ok;,3,1369,4
136123,RETURN,-1,,"return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Push(data,
                                                                   is_blocking);",3,1377,2
136139,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Acquire();,3,1384,2
136154,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Release(mode);,3,1390,2
136170,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Unref();,3,1396,2
136185,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Ref();,3,1402,2
136208,RETURN,-1,,CHECK_ENV(env),3,1407,1
136223,RETURN,-1,,"CHECK_ARG(env, result)",3,1408,1
136237,RETURN,-1,,return napi_clear_last_error(env);,3,1411,4
136562,RETURN,-1,,return node::Environment::GetCurrent(context());,5,31,1
136574,RETURN,-1,,return filename.c_str();,44,33,1
136673,RETURN,-1,,return false;,7,475,5
136699,RETURN,-1,,return false;,11,483,3
136727,RETURN,-1,,return true;,9,491,2
136760,RETURN,-1,,return true;,9,499,5
136790,RETURN,-1,,return false;,11,506,3
136818,RETURN,-1,,return true;,9,518,2
136837,RETURN,-1,,return false;,7,536,6
136893,RETURN,-1,,return false;,7,549,3
136895,RETURN,-1,,return true;,5,552,16
137268,RETURN,1,,return nullptr;,27,295,1
137276,RETURN,-1,,return it->second.module;,5,297,8
137309,RETURN,1,,return;,27,305,1
137384,RETURN,-1,,return true;,5,363,2
137392,RETURN,-1,,return false;,3,367,6
137403,RETURN,1,,return;,27,371,1
137432,RETURN,1,,return address;,45,380,1
137434,RETURN,-1,,return nullptr;,3,381,3
137457,RETURN,-1,,return global_handle_map.get_and_increase_refcount(handle_);,3,392,2
137475,RETURN,-1,,return reinterpret_cast<InitializerCallback>(dlib->GetSymbolAddress(name));,3,401,5
137495,RETURN,-1,,"return reinterpret_cast<napi_addon_register_func>(
      dlib->GetSymbolAddress(name));",3,407,5
137508,RETURN,-1,,"return reinterpret_cast<node_api_addon_get_api_version_func>(
      dlib->GetSymbolAddress(STRINGIFY(NODE_API_MODULE_GET_API_VERSION)));",3,413,1
137535,RETURN,-1,,"return THROW_ERR_DLOPEN_DISABLED(
      env, ""Cannot load native addon because loading addons is disabled."");",5,427,1
137555,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(
        env, ""process.dlopen needs at least 2 arguments"");",5,436,1
137587,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env, ""flag argument must be an integer."");",5,442,1
137649,RETURN,-1,,return;,5,451,1
137710,RETURN,-1,,return mp;,3,569,4
137762,RETURN,-1,,return obj;,3,604,6
137830,RETURN,-1,,return scope.Escape(exports);,3,617,9
138003,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(isolate, ""No such binding: %s"", *module_v);",5,650,1
138115,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(
        env, ""No such binding was linked: %s"", *module_name_v);",5,680,1
138217,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(
        env, ""Linked binding has no declared entry point."");",5,696,1
138370,RETURN,-1,,"return DataQueue::CreateInMemoryEntryFromBackingStore(
            store, byte_offset, byte_length);",9,186,3
138420,RETURN,-1,,"return DataQueue::CreateInMemoryEntryFromBackingStore(
          store, 0, byte_length);",7,195,6
138611,RETURN,-1,,return;,7,364,11
138737,RETURN,1,,return;,55,58,1
138942,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Unabled to open file as blob"");",5,90,1
139191,RETURN,-1,,return tmpl;,3,145,3
139199,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(object);,3,149,1
139240,RETURN,1,,return BaseObjectPtr<Blob>();,5,158,1
139263,RETURN,1,,return BaseObjectPtr<Blob>();,5,162,1
139265,RETURN,-1,,"return MakeBaseObject<Blob>(env, obj, data_queue);",3,164,7
139360,RETURN,-1,,return;,7,177,1
139644,RETURN,-1,,"return Create(env,
                this->data_queue_->slice(start, static_cast<uint64_t>(end)));",3,257,1
139679,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,278,1
139752,RETURN,-1,,return tmpl;,3,292,3
139785,RETURN,-1,,return BaseObjectPtr<Blob::Reader>();,5,302,1
139788,RETURN,-1,,"return MakeBaseObject<Blob::Reader>(env, obj, std::move(blob));",3,305,3
139880,RETURN,-1,,return args.GetReturnValue().Set(bob::STATUS_EOS);,5,320,3
139968,RETURN,-1,,return {};,5,385,2
139969,RETURN,-1,,"return Blob::Create(env, data_queue);",3,387,2
139980,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,391,1
139990,RETURN,-1,,return std::make_unique<BlobTransferData>(data_queue_);,3,395,1
140189,RETURN,-1,,return;,5,432,1
140361,RETURN,-1,,return;,7,464,1
140468,RETURN,-1,,return;,5,513,1
140505,RETURN,1,,return BlobBindingData::StoredDataObject {};,5,523,1
140508,RETURN,-1,,return entry->second;,3,524,4
140560,RETURN,-1,,return true;,3,544,1
140582,RETURN,-1,,return info;,3,551,4
140731,RETURN,-1,,return status;,5,23,3
140757,RETURN,-1,,return status;,3,30,5
140840,RETURN,-1,,return eos_;,25,90,1
141093,RETURN,-1,,return ab;,3,138,8
141249,RETURN,1,,return;,29,196,1
141261,RETURN,-1,,return val->IsArrayBufferView();,3,238,1
141271,RETURN,-1,,return obj->IsArrayBufferView();,3,243,1
141296,RETURN,-1,,return static_cast<char*>(ui->Buffer()->Data()) + ui->ByteOffset();,3,250,3
141316,RETURN,-1,,return Data(obj.As<Value>());,3,255,1
141342,RETURN,-1,,return ui->ByteLength();,3,262,3
141367,RETURN,-1,,return ui->ByteLength();,3,269,3
141423,RETURN,1,,return MaybeLocal<Uint8Array>();,5,282,1
141425,RETURN,-1,,return ui;,3,283,6
141450,RETURN,-1,,return MaybeLocal<Uint8Array>();,5,293,2
141452,RETURN,-1,,"return New(env, ab, byte_offset, length);",3,295,4
141484,RETURN,1,,return Local<Object>();,5,306,1
141517,RETURN,-1,,return Local<Object>();,7,315,2
141598,RETURN,1,,return MaybeLocal<Object>();,9,332,1
141600,RETURN,-1,,return scope.Escape(obj);,7,333,5
141606,RETURN,-1,,"return scope.EscapeMaybe(New(isolate, 0));",3,337,9
141643,RETURN,-1,,return MaybeLocal<Object>();,5,347,2
141658,RETURN,1,,return handle_scope.Escape(obj);,5,350,1
141664,RETURN,-1,,return Local<Object>();,3,351,8
141692,RETURN,-1,,return Local<Object>();,5,362,2
141751,RETURN,-1,,return scope.EscapeMaybe(obj);,3,380,9
141782,RETURN,-1,,return MaybeLocal<Object>();,5,389,2
141803,RETURN,1,,return handle_scope.Escape(obj);,5,393,1
141809,RETURN,-1,,return Local<Object>();,3,394,8
141838,RETURN,-1,,return Local<Object>();,5,405,2
141904,RETURN,-1,,return scope.EscapeMaybe(obj);,3,425,9
141940,RETURN,-1,,return MaybeLocal<Object>();,5,439,3
141942,RETURN,-1,,"return handle_scope.EscapeMaybe(
      Buffer::New(env, data, length, callback, hint));",3,441,6
141991,RETURN,-1,,return Local<Object>();,5,456,3
142030,RETURN,-1,,return Local<Object>();,5,464,1
142060,RETURN,1,,return MaybeLocal<Object>();,5,470,1
142062,RETURN,-1,,return scope.Escape(ui);,3,472,9
142095,RETURN,-1,,return MaybeLocal<Object>();,5,483,3
142116,RETURN,1,,return handle_scope.Escape(obj);,5,487,1
142122,RETURN,-1,,return Local<Object>();,3,488,8
142156,RETURN,-1,,return Local<Object>();,7,503,5
142227,RETURN,1,,return handle_scope.Escape(obj);,5,519,1
142233,RETURN,-1,,return Local<Object>();,3,520,10
142349,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,545,1
142387,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[0], 0, &start))",3,549,1
142395,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[0], 0, &start))",3,549,1
142428,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], buffer.length(), &end))",3,550,1
142436,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], buffer.length(), &end))",3,550,1
142473,RETURN,1,,THROW_AND_RETURN_IF_OOB(Just(end <= buffer.length())),3,552,1
142481,RETURN,1,,THROW_AND_RETURN_IF_OOB(Just(end <= buffer.length())),3,552,1
142546,RETURN,-1,,return;,5,566,3
142646,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,585,1
142654,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,585,1
142684,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,586,1
142692,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,586,1
142725,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], source.length(),
                                          &source_end))",3,587,1
142733,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], source.length(),
                                          &source_end))",3,587,1
142750,RETURN,1,,return args.GetReturnValue().Set(0);,5,592,1
142767,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""sourceStart\"" is out of range."");",5,595,1
142895,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &start))",3,618,1
142903,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &start))",3,618,1
142934,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &end))",3,620,1
142942,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &end))",3,620,1
142974,RETURN,1,,return args.GetReturnValue().Set(-2);,5,629,1
143038,RETURN,1,,return;,46,643,1
143051,RETURN,-1,,return;,5,646,6
143186,RETURN,1,,return;,5,678,1
143192,RETURN,1,,return args.GetReturnValue().Set(-1);,5,686,1
143334,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], 0, &offset))",3,717,1
143342,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], 0, &offset))",3,717,1
143355,RETURN,-1,,"return node::THROW_ERR_BUFFER_OUT_OF_BOUNDS(
        env, ""\""offset\"" is outside of buffer bounds"");",5,719,1
143386,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], ts_obj_length - offset,
                                          &max_length))",3,723,1
143394,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], ts_obj_length - offset,
                                          &max_length))",3,723,1
143417,RETURN,1,,return args.GetReturnValue().Set(0);,5,729,1
143537,RETURN,-1,,return result;,3,753,9
143561,RETURN,1,,return 1;,7,764,1
143570,RETURN,1,,return -1;,7,766,1
143580,RETURN,1,,return 1;,7,769,1
143584,RETURN,1,,return -1;,7,771,1
143587,RETURN,-1,,return val;,3,773,2
143674,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,789,1
143682,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,789,1
143712,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,790,1
143720,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,790,1
143753,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], target.length(),
                                          &target_end))",3,791,1
143761,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], target.length(),
                                          &target_end))",3,791,1
143794,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[5], source.length(),
                                          &source_end))",3,793,1
143802,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[5], source.length(),
                                          &source_end))",3,793,1
143818,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""sourceStart\"" is out of range."");",5,797,1
143830,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""targetStart\"" is out of range."");",5,800,1
144023,RETURN,-1,,return length_i64 + offset_i64;,7,848,1
144036,RETURN,-1,,return 0;,7,851,1
144040,RETURN,-1,,return -1;,7,854,1
144052,RETURN,-1,,return offset_i64;,7,859,1
144061,RETURN,-1,,return length_i64;,7,862,1
144068,RETURN,-1,,return -1;,7,865,1
144073,RETURN,-1,,return length_i64 - 1;,7,868,1
144230,RETURN,1,,return;,68,897,1
144254,RETURN,-1,,return;,5,907,2
144260,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,911,1
144276,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,915,1
144308,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,921,1
144337,RETURN,1,,return args.GetReturnValue().Set(-1);,7,929,1
144359,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,932,1
144385,RETURN,1,,return;,57,937,1
144400,RETURN,1,,return args.GetReturnValue().Set(-1);,9,942,1
144473,RETURN,1,,return args.GetReturnValue().Set(-1);,7,962,1
144519,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,973,1
144738,RETURN,-1,,return;,5,1019,2
144744,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1023,1
144760,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1027,1
144792,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1033,1
144820,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,1040,1
144991,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1079,1
145256,RETURN,-1,,"return node::THROW_ERR_INVALID_STATE(
        env, ""Cannot validate on a detached buffer"");",5,1130,1
145333,RETURN,-1,,"return node::THROW_ERR_INVALID_STATE(
        env, ""Cannot validate on a detached buffer"");",5,1145,1
145671,RETURN,-1,,"return {pointer, byte_length};",3,1220,4
146314,RETURN,1,,return false;,5,79,1
146323,RETURN,1,,return false;,5,83,1
146325,RETURN,-1,,return true;,3,86,3
146367,RETURN,-1,,return source->find(id) != source->end();,3,59,3
146396,RETURN,-1,,return result.second;,3,64,3
146471,RETURN,-1,,return out;,3,75,7
146478,RETURN,-1,,return config_.ToStringChecked(isolate);,3,79,1
146524,RETURN,-1,,return ids;,3,89,6
146667,RETURN,-1,,return builtin_categories;,3,154,9
146704,RETURN,-1,,return source_it->second.ToStringChecked(isolate);,3,183,6
146896,RETURN,-1,,return {};,5,260,1
147049,RETURN,-1,,return MaybeLocal<Function>();,5,312,1
147140,RETURN,-1,,return scope.Escape(fun);,3,351,28
147248,RETURN,-1,,return maybe;,3,408,8
147323,RETURN,-1,,return MaybeLocal<Value>();,7,430,1
147351,RETURN,-1,,"return CompileAndCall(context, id, arguments.size(), arguments.data(), realm);",3,455,5
147397,RETURN,-1,,return MaybeLocal<Value>();,5,468,1
147410,RETURN,-1,,"return fn->Call(context, undefined, argc, argv);",3,471,5
147504,RETURN,-1,,return all_succeeded;,3,492,7
147688,RETURN,1,,return;,5,534,1
147703,RETURN,1,,return;,5,540,1
147717,RETURN,1,,return;,5,543,1
147732,RETURN,-1,,return;,5,549,1
147810,RETURN,-1,,return;,5,565,1
147825,RETURN,-1,,return;,5,572,1
147839,RETURN,-1,,return;,5,577,1
147854,RETURN,-1,,return;,5,584,1
147868,RETURN,-1,,return;,5,589,1
147883,RETURN,-1,,return;,5,596,1
149195,RETURN,-1,,return result;,5,1056,3
149235,RETURN,-1,,"return Uint32::New(context->GetIsolate(), index)->ToString(context)
      .ToLocalChecked();",3,106,1
149338,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,130,1
149340,RETURN,-1,,"return New(v8_context, env, sandbox_obj, options);",3,132,11
149575,RETURN,-1,,return MaybeLocal<Context>();,7,224,1
149599,RETURN,-1,,return MaybeLocal<Context>();,5,233,1
149601,RETURN,-1,,return scope.Escape(ctx);,3,236,5
149628,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,250,1
149793,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,7,295,1
149818,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,7,302,1
149851,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,315,1
149853,RETURN,-1,,return result;,3,318,20
150174,RETURN,-1,,return;,5,391,2
150282,RETURN,-1,,return Unwrap<ContextifyContext>(context_global.As<Object>());,5,424,1
150291,RETURN,-1,,return nullptr;,3,426,3
150298,RETURN,-1,,return Get(args.This());,3,431,1
150326,RETURN,-1,,return nullptr;,5,437,1
150336,RETURN,-1,,return nullptr;,5,440,1
150338,RETURN,-1,,"return static_cast<ContextifyContext*>(
      context->GetAlignedPointerFromEmbedderData(
          ContextEmbedderIndex::kContextifyContext));",3,442,4
150353,RETURN,-1,,return ctx == nullptr || ctx->context_.IsEmpty();,3,448,1
150382,RETURN,1,,return;,33,458,1
150483,RETURN,1,,return;,33,486,1
150562,RETURN,1,,return;,5,505,1
150602,RETURN,1,,return;,5,525,1
150618,RETURN,1,,return;,66,527,1
150721,RETURN,1,,return;,33,553,1
150797,RETURN,1,,return;,33,575,1
150855,RETURN,1,,return;,5,592,1
150978,RETURN,1,,return;,33,635,1
151001,RETURN,1,,return;,5,640,1
151027,RETURN,1,,return;,33,653,1
151052,RETURN,1,,return;,5,658,1
151079,RETURN,1,,return;,33,670,1
151110,RETURN,1,,return;,33,684,1
151141,RETURN,1,,return;,33,697,1
151172,RETURN,1,,return;,33,711,1
151203,RETURN,1,,return;,33,724,1
151226,RETURN,1,,return;,5,729,1
151776,RETURN,-1,,return;,5,864,5
151825,RETURN,-1,,return;,5,880,1
151850,RETURN,1,,return;,5,888,1
151883,RETURN,-1,,return Nothing<bool>();,5,902,1
151920,RETURN,-1,,return Nothing<bool>();,7,911,1
151971,RETURN,-1,,return Nothing<bool>();,9,923,1
151996,RETURN,-1,,return Nothing<bool>();,7,931,1
151998,RETURN,-1,,return Just(true);,3,934,5
152007,RETURN,-1,,"return !value.IsEmpty() &&
         env->script_context_constructor_template()->HasInstance(value);",3,939,1
152219,RETURN,1,,return;,28,984,1
152338,RETURN,1,,return false;,5,1027,1
152355,RETURN,-1,,return false;,5,1032,2
152505,RETURN,1,,return false;,7,1075,1
152565,RETURN,-1,,return false;,5,1101,3
152578,RETURN,-1,,return true;,3,1105,24
153055,RETURN,1,,return;,67,1231,1
153119,RETURN,1,,return;,55,1242,1
153206,RETURN,-1,,return;,5,1264,2
153228,RETURN,-1,,return;,5,1270,1
153272,RETURN,1,,return;,5,1277,1
153288,RETURN,1,,return;,5,1280,1
153310,RETURN,1,,return;,5,1286,1
153348,RETURN,-1,,return;,5,1299,1
153558,RETURN,1,,return;,68,1348,1
153622,RETURN,-1,,return microtask_queue_;,3,1371,1
154022,RETURN,-1,,return false;,3,44,1
154117,RETURN,-1,,return true;,5,102,13
154167,RETURN,-1,,return true;,7,121,2
154174,RETURN,-1,,return false;,3,127,6
154223,RETURN,1,,return;,65,136,1
154316,RETURN,-1,,return;,5,79,1
154704,RETURN,-1,,"FS_TYPE_TO_NAME(OPENDIR, ""opendir"")",5,51,3
154710,RETURN,-1,,"FS_TYPE_TO_NAME(READDIR, ""readdir"")",5,52,6
154716,RETURN,-1,,"FS_TYPE_TO_NAME(CLOSEDIR, ""closedir"")",5,53,9
154719,RETURN,-1,,"return ""unknow"";",7,56,11
154769,RETURN,-1,,return nullptr;,5,112,1
154771,RETURN,-1,,"return new DirHandle(env, obj, dir);",3,115,3
154816,RETURN,1,,return;,16,137,1
155042,RETURN,-1,,return;,5,161,2
155651,RETURN,-1,,return MaybeLocal<Array>();,7,230,2
155677,RETURN,-1,,"return Array::New(env->isolate(), entries.out(), j);",3,237,6
155835,RETURN,-1,,return;,5,246,1
155874,RETURN,-1,,return;,5,257,4
155921,RETURN,-1,,return req_wrap->Reject(error);,5,273,2
156380,RETURN,-1,,return;,7,315,1
156406,RETURN,-1,,return;,7,322,3
156476,RETURN,-1,,return;,7,337,3
156623,RETURN,-1,,return;,5,350,1
157064,RETURN,-1,,return;,7,389,1
157452,RETURN,-1,,"return Just(std::string(*val, init_sz));",5,118,1
157461,RETURN,-1,,return Nothing<std::string>();,3,121,10
157498,RETURN,-1,,"return String::NewFromUtf8(
        isolate, val.data(), NewStringType::kNormal, val.size());",5,131,3
157515,RETURN,-1,,return MaybeLocal<String>();,3,135,5
157576,RETURN,-1,,return -1;,5,161,1
157579,RETURN,-1,,return 0;,3,172,9
157591,RETURN,-1,,return Query(*key);,3,177,3
157685,RETURN,-1,,return Local<Array>();,7,206,2
157696,RETURN,-1,,"return Array::New(isolate, env_v.out(), env_v_index);",3,211,13
157802,RETURN,-1,,return copy;,3,228,9
157820,RETURN,-1,,return it == map_.end() ? Nothing<std::string>() : Just(it->second);,3,234,5
157861,RETURN,1,,return Local<String>();,26,240,1
157870,RETURN,-1,,"return String::NewFromUtf8(
      isolate, val.data(), NewStringType::kNormal, val.size());",3,242,7
157954,RETURN,-1,,return map_.find(key) == map_.end() ? -1 : 0;,3,258,3
157979,RETURN,-1,,return Query(*str);,3,263,3
158066,RETURN,-1,,"return Array::New(isolate, values.data(), values.size());",3,282,6
158085,RETURN,-1,,return std::make_shared<MapKVStore>(*this);,3,286,1
158098,RETURN,-1,,return std::make_shared<MapKVStore>();,3,290,1
158137,RETURN,1,,return Nothing<bool>();,5,299,1
158177,RETURN,1,,return Nothing<bool>();,7,304,1
158223,RETURN,-1,,return Nothing<bool>();,7,311,1
158232,RETURN,-1,,return Just(true);,3,316,10
158339,RETURN,1,,return Nothing<bool>();,14,334,1
158341,RETURN,-1,,return Just(true);,3,336,7
158369,RETURN,-1,,return info.GetReturnValue().SetUndefined();,5,344,1
158481,RETURN,1,,return;,7,373,1
158523,RETURN,-1,,return;,5,380,1
158755,RETURN,-1,,"return EnvSetter(property, desc.value(), info);",7,442,1
158803,RETURN,1,,return;,54,461,1
159015,RETURN,-1,,return maybe_value.ToLocal(&decorated) && decorated->IsTrue();,5,43,5
159027,RETURN,-1,,return false;,3,45,2
159144,RETURN,-1,,return std::string();,5,76,2
159156,RETURN,-1,,return std::string();,5,79,1
159172,RETURN,-1,,return *error_source_utf8;,3,83,21
159226,RETURN,-1,,return sourceline;,5,96,1
159286,RETURN,-1,,return source;,7,109,1
159412,RETURN,-1,,return buf;,5,161,1
159505,RETURN,-1,,"return buf + std::string(underline_buf, off);",3,185,42
159714,RETURN,-1,,return result;,3,234,3
159811,RETURN,-1,,return result;,3,265,8
159825,RETURN,-1,,"return FormatCaughtException(
      isolate, context, try_catch.Exception(), try_catch.Message());",3,272,2
159863,RETURN,1,,return;,26,286,1
159927,RETURN,1,,return;,7,297,1
159951,RETURN,-1,,return;,5,304,1
159998,RETURN,1,,return;,31,315,1
160014,RETURN,-1,,return;,5,321,7
160790,RETURN,-1,,"return {
      codegen_allowed,
      {},
  };",3,586,9
160881,RETURN,-1,,"return """";",7,932,2
161413,RETURN,1,,return;,31,1071,1
161429,RETURN,1,,return;,43,1075,1
161496,RETURN,-1,,return;,5,1085,1
161512,RETURN,-1,,return;,5,1089,1
161708,RETURN,-1,,return;,5,1142,3
161774,RETURN,-1,,return;,5,1169,1
161782,RETURN,-1,,return;,5,1179,1
161815,RETURN,-1,,return;,5,1196,1
161849,RETURN,-1,,return;,5,1214,1
161919,RETURN,-1,,return external_references_;,3,15,2
162169,RETURN,1,,return;,44,487,1
162761,RETURN,-1,,return;,17,1734,9
163175,RETURN,-1,,"return str.substr(start_pos, str_size);",3,110,9
163187,RETURN,-1,,return IsSafeJsInt(value) ? value.As<Integer>()->Value() : -1;,3,114,1
163212,RETURN,-1,,"FS_TYPE_TO_NAME(OPEN, ""open"")",5,122,3
163218,RETURN,-1,,"FS_TYPE_TO_NAME(CLOSE, ""close"")",5,123,6
163224,RETURN,-1,,"FS_TYPE_TO_NAME(READ, ""read"")",5,124,9
163230,RETURN,-1,,"FS_TYPE_TO_NAME(WRITE, ""write"")",5,125,12
163236,RETURN,-1,,"FS_TYPE_TO_NAME(SENDFILE, ""sendfile"")",5,126,15
163242,RETURN,-1,,"FS_TYPE_TO_NAME(STAT, ""stat"")",5,127,18
163248,RETURN,-1,,"FS_TYPE_TO_NAME(LSTAT, ""lstat"")",5,128,21
163254,RETURN,-1,,"FS_TYPE_TO_NAME(FSTAT, ""fstat"")",5,129,24
163260,RETURN,-1,,"FS_TYPE_TO_NAME(FTRUNCATE, ""ftruncate"")",5,130,27
163266,RETURN,-1,,"FS_TYPE_TO_NAME(UTIME, ""utime"")",5,131,30
163272,RETURN,-1,,"FS_TYPE_TO_NAME(FUTIME, ""futime"")",5,132,33
163278,RETURN,-1,,"FS_TYPE_TO_NAME(ACCESS, ""access"")",5,133,36
163284,RETURN,-1,,"FS_TYPE_TO_NAME(CHMOD, ""chmod"")",5,134,39
163290,RETURN,-1,,"FS_TYPE_TO_NAME(FCHMOD, ""fchmod"")",5,135,42
163296,RETURN,-1,,"FS_TYPE_TO_NAME(FSYNC, ""fsync"")",5,136,45
163302,RETURN,-1,,"FS_TYPE_TO_NAME(FDATASYNC, ""fdatasync"")",5,137,48
163308,RETURN,-1,,"FS_TYPE_TO_NAME(UNLINK, ""unlink"")",5,138,51
163314,RETURN,-1,,"FS_TYPE_TO_NAME(RMDIR, ""rmdir"")",5,139,54
163320,RETURN,-1,,"FS_TYPE_TO_NAME(MKDIR, ""mkdir"")",5,140,57
163326,RETURN,-1,,"FS_TYPE_TO_NAME(MKDTEMP, ""mkdtemp"")",5,141,60
163332,RETURN,-1,,"FS_TYPE_TO_NAME(RENAME, ""rename"")",5,142,63
163338,RETURN,-1,,"FS_TYPE_TO_NAME(SCANDIR, ""scandir"")",5,143,66
163344,RETURN,-1,,"FS_TYPE_TO_NAME(LINK, ""link"")",5,144,69
163350,RETURN,-1,,"FS_TYPE_TO_NAME(SYMLINK, ""symlink"")",5,145,72
163356,RETURN,-1,,"FS_TYPE_TO_NAME(READLINK, ""readlink"")",5,146,75
163362,RETURN,-1,,"FS_TYPE_TO_NAME(CHOWN, ""chown"")",5,147,78
163368,RETURN,-1,,"FS_TYPE_TO_NAME(FCHOWN, ""fchown"")",5,148,81
163374,RETURN,-1,,"FS_TYPE_TO_NAME(REALPATH, ""realpath"")",5,149,84
163380,RETURN,-1,,"FS_TYPE_TO_NAME(COPYFILE, ""copyfile"")",5,150,87
163386,RETURN,-1,,"FS_TYPE_TO_NAME(LCHOWN, ""lchown"")",5,151,90
163392,RETURN,-1,,"FS_TYPE_TO_NAME(STATFS, ""statfs"")",5,152,93
163398,RETURN,-1,,"FS_TYPE_TO_NAME(MKSTEMP, ""mkstemp"")",5,153,96
163404,RETURN,-1,,"FS_TYPE_TO_NAME(LUTIME, ""lutime"")",5,154,99
163407,RETURN,-1,,"return ""unknow"";",7,157,101
163493,RETURN,-1,,return nullptr;,5,256,1
163531,RETURN,-1,,return handle;,3,261,8
163672,RETURN,-1,,return UV_ENOSYS;,3,294,1
163689,RETURN,-1,,"return reading_ || closing_ || closed_ ?
      TransferMode::kUntransferable : TransferMode::kTransferable;",3,302,1
163724,RETURN,-1,,return ret;,3,310,5
163970,RETURN,1,,return {};,22,331,1
163979,RETURN,-1,,"return BaseObjectPtr<BaseObject> { FileHandle::New(bd, fd) };",3,335,7
163997,RETURN,1,,return;,28,343,1
164226,RETURN,-1,,return;,5,371,2
164388,RETURN,-1,,return Unwrap<FileHandle>(obj);,3,420,7
164505,RETURN,-1,,return close_resolver.As<Promise>();,5,459,2
164581,RETURN,-1,,return MaybeLocal<Promise>();,5,474,1
164735,RETURN,-1,,return scope.Escape(promise);,3,505,29
164771,RETURN,1,,return;,42,512,1
164806,RETURN,-1,,return fd;,3,527,4
164867,RETURN,1,,return UV_EOF;,5,549,1
164875,RETURN,1,,return 0;,5,554,1
164888,RETURN,-1,,return 0;,5,560,2
164995,RETURN,-1,,return UV_EBUSY;,9,587,1
165155,RETURN,-1,,return 0;,3,662,14
165164,RETURN,-1,,return 0;,3,667,2
165172,RETURN,-1,,"return new FileHandleCloseWrap(this, object);",3,673,1
165192,RETURN,-1,,return 1;,5,679,2
165314,RETURN,-1,,return 0;,3,698,8
165448,RETURN,1,,return;,15,747,1
165525,RETURN,-1,,return false;,5,777,1
165535,RETURN,-1,,return false;,5,782,2
165537,RETURN,-1,,return true;,3,784,3
166316,RETURN,1,,return;,24,837,1
166482,RETURN,1,,return req_wrap->Resolve(Undefined(req_wrap->env()->isolate()));,7,863,1
166537,RETURN,-1,,return req_wrap->Reject(error);,7,870,1
166543,RETURN,-1,,return req_wrap->Resolve(path);,5,872,8
167069,RETURN,-1,,return;,5,922,1
167136,RETURN,-1,,"return req_wrap->Reject(
          UVException(isolate, r, nullptr, req_wrap->syscall(), req->path));",7,942,1
167179,RETURN,-1,,return req_wrap->Reject(error);,7,949,1
168126,RETURN,-1,,return;,5,1036,2
168159,RETURN,-1,,return;,5,1044,2
168240,RETURN,-1,,return;,7,1071,2
168980,RETURN,-1,,return;,7,1169,1
169405,RETURN,-1,,return;,7,1203,1
169825,RETURN,-1,,return;,7,1235,1
170250,RETURN,-1,,return;,7,1275,1
171585,RETURN,-1,,return;,7,1401,1
171650,RETURN,-1,,return;,7,1413,3
174112,RETURN,-1,,return 0;,13,1613,1
174124,RETURN,-1,,return err;,11,1620,1
174252,RETURN,-1,,return UV_ENOTDIR;,15,1642,1
174254,RETURN,-1,,return UV_EEXIST;,13,1644,3
174261,RETURN,1,,return err;,24,1646,1
174267,RETURN,-1,,return 0;,3,1654,5
174344,RETURN,-1,,return err;,3,1749,8
174451,RETURN,-1,,return err;,3,1768,5
174875,RETURN,-1,,return;,11,1812,3
175391,RETURN,-1,,return;,7,1850,1
175456,RETURN,-1,,return;,7,1863,3
175889,RETURN,-1,,return;,7,1908,1
175991,RETURN,-1,,return;,9,1928,4
176048,RETURN,-1,,return;,9,1940,3
176203,RETURN,-1,,return JustVoid();,3,1992,9
176287,RETURN,1,,return;,59,2010,1
176751,RETURN,1,,return;,59,2048,1
177102,RETURN,-1,,return;,7,2064,1
177117,RETURN,1,,return;,24,2067,1
178780,RETURN,1,,return;,66,2267,1
178987,RETURN,1,,return;,9,2297,1
184041,RETURN,-1,,return;,7,2724,3
184337,RETURN,-1,,return true;,3,2819,8
184356,RETURN,-1,,return info;,3,2826,5
184886,RETURN,-1,,return binding_data_.get();,3,2943,1
185246,RETURN,-1,,return;,9,1633,1
185322,RETURN,-1,,return code == NGHTTP2_CANCEL;,5,2276,1
185390,RETURN,-1,,return observers[performance::NODE_PERFORMANCE_ENTRY_TYPE_HTTP2] != 0;,3,56,3
185420,RETURN,1,,return;,18,82,1
185436,RETURN,-1,,return;,5,88,2
185449,RETURN,1,,return;,18,94,1
185670,RETURN,-1,,return count;,3,231,9
185701,RETURN,-1,,return callback_.Get(env()->isolate());,3,250,1
185725,RETURN,-1,,"return Pack(session_->env(), count_, entries_);",3,261,1
185745,RETURN,-1,,"return Pack(state->env(), count, entries);",3,267,4
185810,RETURN,-1,,return scope.Escape(Undefined(env->isolate()));,5,284,1
185839,RETURN,-1,,"return scope.Escape(Buffer::New(env, ab, 0, ab->ByteLength())
                          .FromMaybe(Local<Value>()));",3,287,7
186041,RETURN,-1,,"return ""server"";",34,358,3
186045,RETURN,-1,,"return ""client"";",34,359,6
186071,RETURN,-1,,return;,5,374,2
186205,RETURN,-1,,return;,7,410,6
186552,RETURN,-1,,"return std::string(""Http2Session "") + TypeName() + "" ("" +
      std::to_string(static_cast<int64_t>(get_async_id())) + "")"";",3,550,1
186627,RETURN,-1,,"SET(bytes_read_string, received_bytes)",3,569,1
186664,RETURN,-1,,"SET(bytes_written_string, sent_bytes)",3,570,1
186701,RETURN,-1,,"SET(id_string, id)",3,571,1
186744,RETURN,-1,,"SET(time_to_first_byte_string, first_byte)",3,585,1
186787,RETURN,-1,,"SET(time_to_first_byte_sent_string, first_byte_sent)",3,586,1
186830,RETURN,-1,,"SET(time_to_first_header_string, first_header)",3,587,1
186832,RETURN,-1,,return obj;,3,590,8
186889,RETURN,-1,,"SET(bytes_written_string, data_sent)",3,608,1
186926,RETURN,-1,,"SET(bytes_read_string, data_received)",3,609,1
186963,RETURN,-1,,"SET(frames_received_string, frame_count)",3,610,1
187000,RETURN,-1,,"SET(frames_sent_string, frame_sent)",3,611,1
187037,RETURN,-1,,"SET(max_concurrent_streams_string, max_concurrent_streams)",3,612,1
187074,RETURN,-1,,"SET(ping_rtt_string, ping_rtt)",3,613,1
187111,RETURN,-1,,"SET(stream_average_duration_string, stream_average_duration)",3,614,1
187148,RETURN,-1,,"SET(stream_count_string, stream_count)",3,615,1
187183,RETURN,-1,,return MaybeLocal<Object>();,5,624,1
187185,RETURN,-1,,return obj;,3,628,11
187198,RETURN,1,,return;,5,634,1
187257,RETURN,1,,return;,5,654,1
187318,RETURN,1,,return;,5,677,1
187428,RETURN,-1,,return s != streams_.end() ? s->second : BaseObjectPtr<Http2Stream>();,3,731,3
187467,RETURN,-1,,"return streams_.size() < maxSize &&
         has_available_session_memory(sizeof(Http2Stream));",3,742,5
187540,RETURN,1,,return stream;,5,759,1
187558,RETURN,-1,,return stream;,3,765,5
187579,RETURN,1,,return frameLen;,15,775,1
187601,RETURN,-1,,return pad;,3,784,8
187613,RETURN,-1,,return maxPayloadLen;,3,792,2
187793,RETURN,-1,,"return (frame->hd.type == NGHTTP2_PUSH_PROMISE) ?
      frame->push_promise.promised_stream_id :
      frame->hd.stream_id;",3,872,1
187884,RETURN,1,,return NGHTTP2_ERR_CALLBACK_FAILURE;,9,898,1
187894,RETURN,-1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,7,905,3
187919,RETURN,-1,,return 0;,3,912,8
187958,RETURN,1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,5,931,1
187981,RETURN,-1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,5,938,2
187983,RETURN,-1,,return 0;,3,940,8
188021,RETURN,-1,,return session->HandleDataFrame(frame);,7,955,3
188087,RETURN,-1,,return 0;,3,982,6
188132,RETURN,-1,,return 1;,5,999,2
188195,RETURN,-1,,return 0;,3,1013,8
188264,RETURN,-1,,return NGHTTP2_STREAM_CLOSED;,5,1034,3
188268,RETURN,-1,,return NGHTTP2_COMPRESSION_ERROR;,5,1036,6
188272,RETURN,-1,,return NGHTTP2_FRAME_SIZE_ERROR;,5,1038,9
188276,RETURN,-1,,return NGHTTP2_FLOW_CONTROL_ERROR;,5,1040,12
188280,RETURN,-1,,return NGHTTP2_REFUSED_STREAM;,5,1042,15
188288,RETURN,-1,,return NGHTTP2_PROTOCOL_ERROR;,5,1046,22
188291,RETURN,-1,,return NGHTTP2_INTERNAL_ERROR;,5,1048,24
188341,RETURN,-1,,return 0;,5,1076,2
188385,RETURN,-1,,return 0;,3,1092,16
188407,RETURN,-1,,return 0;,3,1100,4
188478,RETURN,1,,return 0;,5,1119,1
188538,RETURN,-1,,return 0;,3,1135,17
188550,RETURN,-1,,return 0;,3,1149,1
188592,RETURN,1,,return 0;,5,1171,1
188619,RETURN,1,,return 0;,5,1181,1
188748,RETURN,-1,,return NGHTTP2_ERR_PAUSE;,5,1230,4
188750,RETURN,-1,,return 0;,3,1233,15
188804,RETURN,-1,,return padding;,3,1256,6
188883,RETURN,-1,,return 0;,3,1279,5
188890,RETURN,-1,,"return uv_buf_init(nullptr, size);",3,1285,1
188939,RETURN,-1,,return;,5,1297,2
189088,RETURN,1,,return;,5,1338,1
189200,RETURN,1,,return;,49,1381,1
189330,RETURN,-1,,return 1;,7,1421,3
189332,RETURN,-1,,return 0;,3,1424,6
189431,RETURN,1,,return;,68,1460,1
189686,RETURN,-1,,return;,7,1523,3
189697,RETURN,-1,,return;,5,1527,4
189708,RETURN,1,,return;,66,1530,1
189772,RETURN,1,,return;,7,1545,1
189780,RETURN,-1,,return;,5,1548,4
189796,RETURN,-1,,return;,5,1556,2
189900,RETURN,-1,,return;,5,1600,5
189927,RETURN,1,,return;,5,1621,1
189966,RETURN,1,,return;,45,1650,1
190158,RETURN,1,,return 0;,5,1732,1
190165,RETURN,1,,return 1;,5,1737,1
190209,RETURN,-1,,return 0;,5,1761,2
190225,RETURN,-1,,return 0;,5,1769,2
190334,RETURN,-1,,return 0;,3,1803,30
190371,RETURN,1,,return 0;,16,1820,1
190526,RETURN,-1,,return 0;,3,1861,10
190592,RETURN,-1,,return stream;,3,1884,11
190599,RETURN,-1,,return env()->allocate_managed_buffer(suggested_size);,3,1888,1
190657,RETURN,-1,,return;,5,1905,2
190831,RETURN,1,,return true;,7,1964,1
190833,RETURN,-1,,return false;,3,1966,2
190986,RETURN,-1,,return nullptr;,5,2015,1
190988,RETURN,-1,,"return new Http2Stream(session, obj, id, category, options);",3,2017,3
191114,RETURN,-1,,"return ""HttpStream "" + std::to_string(id()) + "" ("" +
         std::to_string(static_cast<int64_t>(get_async_id())) + "") ["" + sname +
         ""]"";",3,2073,5
191172,RETURN,-1,,return stream();,50,2089,1
191178,RETURN,-1,,"return nghttp2_session_find_stream(session_->session(), id_);",3,2092,1
191209,RETURN,-1,,return nullptr;,3,2105,1
191219,RETURN,1,,return UV_EPIPE;,5,2110,1
191237,RETURN,-1,,return 1;,3,2120,3
191246,RETURN,1,,return;,5,2129,1
191362,RETURN,-1,,return ret;,3,2191,12
191408,RETURN,-1,,return ret;,3,2209,8
191521,RETURN,-1,,return ret;,3,2247,8
191566,RETURN,-1,,return ret;,3,2266,8
191599,RETURN,-1,,return;,7,2289,2
191613,RETURN,-1,,return;,5,2299,2
191622,RETURN,1,,return;,5,2307,1
191702,RETURN,-1,,return stream;,3,2338,10
191731,RETURN,-1,,return 0;,3,2358,8
191747,RETURN,1,,return 0;,5,2365,1
191753,RETURN,-1,,return 0;,3,2368,5
191774,RETURN,-1,,return UV_EOF;,5,2388,1
191830,RETURN,-1,,return 0;,3,2404,8
191852,RETURN,1,,return true;,5,2418,1
191890,RETURN,-1,,return false;,5,2427,1
191921,RETURN,-1,,return true;,3,2437,12
192044,RETURN,1,,return 0;,16,2478,1
192211,RETURN,-1,,"return OnRead(handle, id, buf, length, flags, source, user_data);",7,2515,1
192220,RETURN,-1,,return NGHTTP2_ERR_DEFERRED;,5,2517,5
192264,RETURN,-1,,return amount;,3,2530,15
192435,RETURN,-1,,return args.GetReturnValue().Set(false);,5,2582,2
192872,RETURN,-1,,return args.GetReturnValue().Set(ret);,5,2706,2
192910,RETURN,1,,return;,5,2721,1
193446,RETURN,-1,,return args.GetReturnValue().Set(ret);,5,2859,2
193784,RETURN,1,,return;,5,2948,1
194070,RETURN,-1,,return ping;,3,3011,3
194102,RETURN,-1,,return false;,5,3019,1
194123,RETURN,1,,return false;,5,3025,1
194138,RETURN,-1,,return false;,5,3029,2
194158,RETURN,-1,,return true;,3,3040,9
194194,RETURN,-1,,return settings;,3,3050,3
194225,RETURN,-1,,return false;,5,3058,1
194247,RETURN,1,,return false;,5,3064,1
194262,RETURN,-1,,return false;,5,3068,2
194281,RETURN,-1,,return true;,3,3074,9
194314,RETURN,-1,,return callback_.Get(env()->isolate());,3,3092,1
194782,RETURN,1,,return;,25,3184,1
196615,RETURN,-1,,return;,5,27,2
196747,RETURN,-1,,return;,7,55,6
196819,RETURN,-1,,"return std::max(max_header_pairs, min_header_pairs);",3,71,3
196835,RETURN,-1,,"return std::max(max_header_pairs, min_header_pairs);",3,76,3
196856,RETURN,-1,,return ret;,3,84,5
196864,RETURN,-1,,"return IsZeroLength(-1, name, value);",3,91,1
196888,RETURN,1,,return true;,5,101,1
196898,RETURN,-1,,"return header_name != nullptr ||
      NgHeader<T>::rcbufferpointer_t::IsZeroLength(name);",3,104,4
197065,RETURN,-1,,return str;,7,166,3
197067,RETURN,-1,,return eternal.Get(env_->isolate());,5,168,5
197076,RETURN,-1,,"return rcbufferpointer_t::External::New(allocator, name_);",3,170,4
197090,RETURN,-1,,"return rcbufferpointer_t::External::New(allocator, value_);",3,176,1
197103,RETURN,-1,,return name_.str();,3,181,1
197112,RETURN,-1,,return value_.str();,3,186,1
197121,RETURN,-1,,return name_.len() + value_.len();,3,191,1
197135,RETURN,-1,,return flags_;,3,196,1
197274,RETURN,-1,,return c == ' ' || c == '\t';,3,91,1
197440,RETURN,1,,"return OneByteString(env->isolate(), str_, size_);",7,170,1
197450,RETURN,1,,return String::Empty(env->isolate());,7,172,1
197478,RETURN,-1,,return ToString(env);,5,181,2
197586,RETURN,-1,,return rv;,7,292,1
197594,RETURN,-1,,return 0;,5,296,5
197612,RETURN,-1,,return rv;,7,303,1
197620,RETURN,-1,,return 0;,5,307,5
197638,RETURN,-1,,return rv;,7,314,1
197685,RETURN,-1,,return 0;,5,334,8
197703,RETURN,-1,,return rv;,7,341,1
197737,RETURN,-1,,return 0;,5,355,8
197788,RETURN,1,,return 0;,7,385,1
198035,RETURN,-1,,return -1;,7,444,2
198038,RETURN,-1,,return static_cast<int>(val);,5,447,24
198053,RETURN,1,,return 0;,7,453,1
198093,RETURN,1,,return 0;,7,461,1
198138,RETURN,-1,,return HPE_USER;,7,470,3
198140,RETURN,-1,,return 0;,5,473,11
198216,RETURN,1,,return 0;,7,501,1
198265,RETURN,-1,,return -1;,7,513,2
198268,RETURN,-1,,return 0;,5,516,13
198277,RETURN,-1,,return 0;,5,522,2
198286,RETURN,-1,,return 0;,5,529,2
198863,RETURN,1,,return;,7,700,1
198943,RETURN,-1,,return;,7,724,2
198996,RETURN,1,,"return uv_buf_init(Malloc(suggested_size), suggested_size);",7,746,1
199021,RETURN,-1,,"return uv_buf_init(binding_data_->parser_buffer.data(), kAllocBufferSize);",5,752,4
199053,RETURN,-1,,return;,7,770,2
199059,RETURN,1,,return;,7,775,1
199077,RETURN,1,,return;,7,781,1
199103,RETURN,1,,return;,7,787,1
199213,RETURN,1,,return scope.Escape(Local<Value>());,7,839,1
199397,RETURN,-1,,return scope.Escape(e);,7,870,11
199408,RETURN,-1,,return scope.Escape(Local<Value>());,7,875,1
199414,RETURN,-1,,return scope.Escape(nread_obj);,5,877,18
199473,RETURN,-1,,"return Array::New(env()->isolate(), headers_v, num_values_ * 2);",5,889,3
199528,RETURN,1,,return;,7,901,1
199653,RETURN,-1,,return HPE_USER;,7,950,2
199655,RETURN,-1,,return 0;,5,952,3
199665,RETURN,-1,,return 0;,7,958,1
199674,RETURN,-1,,return HPE_PAUSED;,5,963,4
199680,RETURN,-1,,return true;,5,971,1
199742,RETURN,-1,,return rv;,7,1006,6
199796,RETURN,-1,,return lhs < rhs;,5,1020,1
199809,RETURN,-1,,return true;,5,1022,1
199820,RETURN,-1,,return false;,5,1024,1
199822,RETURN,-1,,return lhs->last_message_start_ < rhs->last_message_start_;,3,1027,2
199916,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1050,8
199997,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1069,8
200071,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1086,8
200167,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, 0));",5,1104,1
200314,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1138,25
200430,RETURN,1,,return;,32,1197,1
201032,RETURN,-1,,"return node::Start(argc, argv);",3,97,1
201143,RETURN,-1,,return;,5,66,1
201197,RETURN,-1,,return exit_code;,3,85,14
201337,RETURN,-1,,return env;,3,141,8
201463,RETURN,-1,,return BaseObject::TransferMode::kUntransferable;,3,51,1
201473,RETURN,-1,,return CloneForMessaging();,3,55,1
201479,RETURN,-1,,return {};,3,59,1
201484,RETURN,-1,,return Just(BaseObjectList {});,3,63,1
201494,RETURN,-1,,return Just(true);,3,68,1
201504,RETURN,-1,,return Just(true);,3,75,1
201516,RETURN,-1,,return main_message_buf_.data == nullptr;,3,82,1
201549,RETURN,1,,return MaybeLocal<Object>();,7,107,1
201562,RETURN,-1,,return host_objects_[id]->object(isolate);,7,110,2
201601,RETURN,1,,return MaybeLocal<Object>();,7,116,1
201608,RETURN,-1,,return scope.Escape(object.As<Object>());,5,118,10
201629,RETURN,-1,,return shared_array_buffers_[clone_id];,5,124,2
201645,RETURN,-1,,"return WasmModuleObject::FromCompiledModule(
        isolate, wasm_modules_[transfer_id]);",5,130,2
201664,RETURN,-1,,return &shared_value_conveyor_.value();,5,136,2
201794,RETURN,1,,return {};,27,182,1
201853,RETURN,-1,,return {};,11,195,1
201986,RETURN,1,,return {};,5,231,1
202005,RETURN,1,,return {};,5,234,1
202022,RETURN,1,,return {};,7,238,1
202027,RETURN,-1,,return handle_scope.Escape(return_value);,3,242,25
202075,RETURN,-1,,return wasm_modules_.size() - 1;,3,256,2
202144,RETURN,-1,,return MaybeLocal<Function>();,5,273,1
202151,RETURN,-1,,return emit_message_val.As<Function>();,3,276,7
202203,RETURN,-1,,return MaybeLocal<Function>();,5,287,1
202220,RETURN,-1,,return domexception_ctor;,3,291,8
202278,RETURN,-1,,return;,5,303,1
202313,RETURN,-1,,"return WriteHostObject(
          BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(object) });",7,322,1
202374,RETURN,-1,,"return serializer->WriteValue(env_->context(), normal_object);",7,338,6
202389,RETURN,-1,,return Nothing<bool>();,5,342,6
202423,RETURN,-1,,return Just(i);,9,352,1
202442,RETURN,-1,,return Just(i);,5,359,5
202451,RETURN,-1,,return Just(msg_->AddWASMModule(module->GetCompiledModule()));,5,364,1
202476,RETURN,-1,,return true;,5,370,2
202543,RETURN,1,,return Nothing<bool>();,18,381,1
202556,RETURN,1,,return Nothing<bool>();,9,383,1
202567,RETURN,-1,,return Just(true);,5,386,2
202629,RETURN,1,,return Nothing<bool>();,9,402,1
202657,RETURN,-1,,return Just(true);,5,411,2
202687,RETURN,-1,,return Nothing<bool>();,7,421,2
202716,RETURN,-1,,return Just(true);,9,427,2
202730,RETURN,-1,,return Nothing<bool>();,7,433,2
202764,RETURN,-1,,return Just(true);,5,442,12
202886,RETURN,-1,,return Nothing<bool>();,9,483,1
202944,RETURN,-1,,return Nothing<bool>();,9,508,2
203001,RETURN,-1,,return Nothing<bool>();,9,524,2
203048,RETURN,-1,,return Nothing<bool>();,9,536,2
203099,RETURN,-1,,return Nothing<bool>();,9,548,2
203123,RETURN,-1,,return Nothing<bool>();,5,558,5
203134,RETURN,1,,return Nothing<bool>();,5,561,1
203151,RETURN,-1,,return Nothing<bool>();,5,565,1
203196,RETURN,1,,return Nothing<bool>();,5,577,1
203220,RETURN,-1,,return Just(true);,3,584,22
203391,RETURN,1,,return;,5,656,1
203421,RETURN,1,,return;,7,661,1
203437,RETURN,1,,return;,5,666,1
203457,RETURN,-1,,return data_ == nullptr || IsHandleClosing();,3,674,1
203470,RETURN,1,,return;,26,678,1
203564,RETURN,1,,return nullptr;,5,715,1
203582,RETURN,-1,,return nullptr;,5,720,1
203636,RETURN,-1,,return port;,3,739,11
203693,RETURN,-1,,return env()->no_message_symbol();,7,762,1
203719,RETURN,-1,,return env()->no_message_symbol();,5,771,2
203731,RETURN,1,,return MaybeLocal<Value>();,35,774,1
203733,RETURN,-1,,"return received->Deserialize(env(), context, port_list);",3,776,5
203826,RETURN,-1,,return;,7,808,2
203994,RETURN,-1,,return;,7,854,4
204024,RETURN,-1,,return std::move(data_);,3,871,5
204037,RETURN,1,,return BaseObject::TransferMode::kUntransferable;,5,876,1
204043,RETURN,-1,,return BaseObject::TransferMode::kTransferable;,3,877,2
204054,RETURN,-1,,return Detach();,3,882,2
204063,RETURN,-1,,"return BaseObjectPtr<MessagePort> { MessagePort::New(
      env, context,
      static_unique_pointer_cast<MessagePortData>(std::move(self))) };",3,889,1
204133,RETURN,-1,,return serialization_maybe;,5,909,1
204141,RETURN,-1,,return Nothing<bool>();,5,912,1
204160,RETURN,1,,return res;,5,918,1
204175,RETURN,-1,,return res;,3,923,14
204196,RETURN,-1,,return Nothing<bool>();,5,932,2
204198,RETURN,-1,,"return group_->Dispatch(this, message, error);",3,934,2
204221,RETURN,1,,return Just(false);,28,942,1
204280,RETURN,1,,return Nothing<bool>();,9,950,1
204282,RETURN,-1,,return Just(true);,5,952,6
204318,RETURN,1,,return Nothing<bool>();,35,958,1
204327,RETURN,1,,return Just(false);,39,959,1
204354,RETURN,1,,return Nothing<bool>();,28,963,1
204363,RETURN,1,,return Just(false);,30,964,1
204391,RETURN,1,,return Nothing<bool>();,5,968,1
204400,RETURN,1,,return Just(false);,28,969,1
204442,RETURN,1,,return Nothing<bool>();,28,975,1
204451,RETURN,1,,return Just(false);,30,976,1
204479,RETURN,1,,return Nothing<bool>();,7,980,1
204514,RETURN,1,,return Nothing<bool>();,7,985,1
204545,RETURN,-1,,return Just(true);,3,991,18
204592,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(env, ""Not enough arguments to ""
                                       ""MessagePort.postMessage"");",5,1000,1
204613,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""Optional transferList argument must be an iterable"");",5,1007,1
204642,RETURN,1,,return;,7,1015,1
204674,RETURN,1,,return;,39,1019,1
204695,RETURN,1,,return;,33,1022,1
204700,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
              ""Optional options.transfer argument must be an iterable"");",11,1024,1
204738,RETURN,-1,,return;,5,1038,3
204823,RETURN,-1,,return;,5,1063,1
204856,RETURN,-1,,return;,5,1073,1
204945,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""The \""port\"" argument must be a MessagePort instance"");",5,1094,1
204982,RETURN,-1,,return;,5,1102,2
205058,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""The \""port\"" argument must be a MessagePort instance"");",5,1116,1
205094,RETURN,-1,,return;,5,1123,4
205126,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env, ""Invalid context argument"");",5,1131,1
205267,RETURN,1,,return templ;,5,1163,1
205334,RETURN,-1,,return GetMessagePortConstructorTemplate(env);,3,1179,4
205399,RETURN,-1,,return TransferMode::kUntransferable;,5,1200,1
205403,RETURN,-1,,return has_clone ? TransferMode::kCloneable : TransferMode::kTransferable;,3,1203,7
205416,RETURN,-1,,return TransferOrClone(TransferMode::kTransferable);,3,1207,1
205425,RETURN,-1,,return TransferOrClone(TransferMode::kCloneable);,3,1211,1
205493,RETURN,-1,,return {};,5,1227,1
205524,RETURN,-1,,return {};,7,1233,1
205584,RETURN,-1,,return {};,9,1243,1
205598,RETURN,1,,return {};,45,1246,1
205599,RETURN,-1,,"return std::make_unique<Data>(
          *deserialize_info_str, Global<Value>(env()->isolate(), data));",7,1247,8
205628,RETURN,1,,return TransferOrClone(TransferMode::kCloneable);,5,1253,1
205635,RETURN,1,,return {};,5,1255,1
205688,RETURN,-1,,return Nothing<BaseObjectList>();,5,1267,1
205697,RETURN,1,,return Just(BaseObjectList {});,30,1269,1
205725,RETURN,-1,,return Nothing<BaseObjectList>();,5,1274,1
205734,RETURN,1,,return Just(BaseObjectList {});,27,1276,1
205783,RETURN,1,,return Nothing<BaseObjectList>();,7,1283,1
205809,RETURN,-1,,return Just(ret);,3,1287,14
205842,RETURN,1,,return Nothing<bool>();,57,1296,1
205873,RETURN,-1,,return Nothing<bool>();,5,1301,1
205882,RETURN,1,,return Just(true);,30,1303,1
205902,RETURN,-1,,return Nothing<bool>();,5,1306,1
205904,RETURN,-1,,return Just(true);,3,1308,10
205930,RETURN,-1,,return {};,5,1328,2
205953,RETURN,1,,return {};,62,1332,1
206008,RETURN,-1,,return {};,5,1340,1
206009,RETURN,-1,,return BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(ret) };,3,1343,9
206046,RETURN,-1,,return ret;,3,1351,6
206112,RETURN,-1,,return group;,3,1364,7
206200,RETURN,-1,,return Nothing<bool>();,5,1394,2
206207,RETURN,1,,return Just(false);,5,1399,1
206229,RETURN,-1,,return Nothing<bool>();,5,1406,2
206265,RETURN,-1,,return Just(true);,9,1419,2
206273,RETURN,-1,,return Just(true);,3,1425,7
206419,RETURN,-1,,return;,5,1469,2
206453,RETURN,1,,return;,25,1476,1
206472,RETURN,-1,,return;,5,1480,2
207066,RETURN,1,,return;,7,40,1
207107,RETURN,-1,,return static_cast<T*>(wrap);,5,54,7
207115,RETURN,-1,,return handle(v8::Isolate::GetCurrent());,5,59,1
207128,RETURN,-1,,"return v8::Local<v8::Object>::New(isolate, persistent());",5,64,1
207147,RETURN,-1,,return handle_;,5,70,1
207312,RETURN,-1,,"return credentials::SafeGetenv(name, &text) ? text : """";",5,1283,2
207805,RETURN,1,,return;,34,298,1
208998,RETURN,1,,"return host.substr(1, host.size() - 2);",5,996,1
209012,RETURN,1,,return host;,5,998,1
209062,RETURN,-1,,return static_cast<int>(result);,3,1011,6
209088,RETURN,1,,"return HostPort{host, DebugOptions::kDefaultInspectorPort};",5,1020,1
209125,RETURN,-1,,"return HostPort{arg, DebugOptions::kDefaultInspectorPort};",9,1028,1
209132,RETURN,-1,,"return HostPort { """", ParseAndValidatePort(arg, errors) };",5,1031,2
209139,RETURN,-1,,"return HostPort { RemoveBrackets(arg.substr(0, colon)),
                    ParseAndValidatePort(arg.substr(colon + 1), errors) };",3,1034,7
209241,RETURN,-1,,return out.str();,3,1073,11
209271,RETURN,-1,,"return env->ThrowError(
        ""Should not query options before bootstrapping is done"");",5,1083,1
209370,RETURN,-1,,return;,5,1107,1
209524,RETURN,-1,,return;,11,1145,1
209549,RETURN,-1,,return;,11,1152,1
209634,RETURN,-1,,return;,11,1166,1
209804,RETURN,-1,,return;,7,1197,1
209823,RETURN,1,,return;,71,1202,1
209841,RETURN,-1,,return;,5,1207,1
209882,RETURN,-1,,return;,5,1213,1
209911,RETURN,-1,,"return env->ThrowError(
        ""Should not query options before bootstrapping is done"");",5,1223,1
209970,RETURN,1,,return;,21,1233,1
209996,RETURN,1,,return;,21,1238,1
210249,RETURN,-1,,return env_argv;,9,1315,2
210319,RETURN,-1,,return env_argv;,3,1339,8
210426,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,70,3
210498,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,85,3
210617,RETURN,1,,return;,5,109,1
210853,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,156,2
210961,RETURN,1,,return args.GetReturnValue().SetUndefined();,5,186,1
210992,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,192,3
211385,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,261,3
211489,RETURN,1,,return;,9,283,1
211533,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,296,3
211692,RETURN,-1,,return;,5,323,3
211959,RETURN,-1,,return;,5,377,3
212324,RETURN,-1,,return info;,3,71,3
212381,RETURN,-1,,return o;,3,89,2
212528,RETURN,-1,,return;,5,130,1
212596,RETURN,-1,,return MaybeLocal<Object>();,5,147,1
212629,RETURN,-1,,return MaybeLocal<Object>();,5,156,1
212631,RETURN,-1,,return obj;,3,159,4
212660,RETURN,-1,,return;,5,171,1
212678,RETURN,1,,return;,5,176,1
212910,RETURN,-1,,return val;,3,234,3
214632,RETURN,-1,,return delayed.get() == task;,11,438,1
214797,RETURN,-1,,"return std::max(thread_pool_size, 1);",3,52,2
214846,RETURN,-1,,return t;,5,71,8
215134,RETURN,-1,,return task;,5,161,5
215310,RETURN,-1,,return threads_.size();,3,226,1
215346,RETURN,-1,,return shared_from_this();,3,240,1
215381,RETURN,-1,,return;,5,256,1
215403,RETURN,-1,,return;,5,267,1
215496,RETURN,1,,return;,5,298,1
215740,RETURN,-1,,return;,5,396,2
215764,RETURN,1,,return;,23,403,1
215784,RETURN,-1,,return worker_thread_task_runner_->NumberOfWorkerThreads();,3,414,1
215800,RETURN,1,,return;,43,418,1
215928,RETURN,1,,return;,21,452,1
216069,RETURN,-1,,return did_work;,3,496,6
216119,RETURN,-1,,return data.first;,3,514,6
216141,RETURN,-1,,return data.second;,3,522,6
216164,RETURN,1,,return false;,21,527,1
216166,RETURN,-1,,return per_isolate->FlushForegroundTasksInternal();,3,528,3
216177,RETURN,-1,,"return v8::platform::NewDefaultJobHandle(
      this, priority, std::move(job_task), NumberOfWorkerThreads());",3,533,1
216197,RETURN,-1,,return ForIsolate(isolate)->IdleTasksEnabled();,3,538,1
216208,RETURN,-1,,return ForIsolate(isolate)->GetForegroundTaskRunner();,3,543,1
216218,RETURN,-1,,return uv_hrtime() / 1e9;,3,548,1
216226,RETURN,-1,,return SystemClockTimeMillis();,3,552,1
216233,RETURN,-1,,return tracing_controller_;,3,557,2
216239,RETURN,-1,,"return []() {
    fprintf(stderr, ""\n"");
    DumpBacktrace(stderr);
    fflush(stderr);
  };",3,561,1
216245,RETURN,-1,,return page_allocator_;,3,569,1
216288,RETURN,-1,,return std::unique_ptr<T>(nullptr);,5,589,1
216316,RETURN,-1,,return result;,3,593,6
216342,RETURN,-1,,return std::unique_ptr<T>(nullptr);,5,603,1
216370,RETURN,-1,,return result;,3,607,7
216445,RETURN,-1,,return result;,3,638,5
216633,RETURN,-1,,return 1;,3,68,15
216710,RETURN,1,,return MaybeLocal<Value>();,32,28,1
216728,RETURN,-1,,"return MakeCallback(isolate, process, ""emit"", arraysize(argv), argv, {0, 0});",3,32,8
216754,RETURN,1,,return Just(false);,33,39,1
216804,RETURN,-1,,return Nothing<bool>();,5,48,1
216813,RETURN,1,,return Just(false);,36,51,1
216847,RETURN,1,,return Nothing<bool>();,5,59,1
216876,RETURN,-1,,return Nothing<bool>();,7,65,1
216904,RETURN,-1,,return Nothing<bool>();,7,71,1
216925,RETURN,-1,,return Nothing<bool>();,5,80,1
216927,RETURN,-1,,return Just(true);,3,82,16
216949,RETURN,1,,return Nothing<bool>();,5,91,1
216964,RETURN,-1,,"return ProcessEmitWarningGeneric(env, message.c_str(), ""ExperimentalWarning"");",3,96,6
216979,RETURN,-1,,"return ProcessEmitWarningGeneric(
      env, warning, ""DeprecationWarning"", deprecation_code);",3,102,1
217119,RETURN,-1,,"return env->ThrowUVException(err, ""chdir"", nullptr, buf, *path);",5,92,5
217162,RETURN,-1,,return arr->Buffer();,3,103,4
217190,RETURN,1,,"return env->ThrowUVException(err, ""uv_getrusage"");",5,118,1
217288,RETURN,1,,"return env->ThrowUVException(err, ""uv_cwd"");",5,136,1
217375,RETURN,1,,return;,47,154,1
217392,RETURN,1,,return;,47,156,1
217463,RETURN,1,,"return env->ThrowUVException(err, ""uv_resident_set_memory"");",5,177,1
217546,RETURN,1,,"return env->ThrowUVException(err, ""uv_resident_set_memory"");",5,200,1
218140,RETURN,1,,"return env->ThrowUVException(err, ""uv_getrusage"");",5,325,1
218538,RETURN,-1,,"return static_cast<BindingData*>(
      v8_object->GetAlignedPointerFromInternalField(BaseObject::kSlot));",3,502,2
218689,RETURN,-1,,return true;,3,552,2
218711,RETURN,-1,,return info;,3,559,4
219042,RETURN,-1,,return a.first < b.first;,36,129,1
219220,RETURN,-1,,"return THROW_ERR_OUT_OF_RANGE(
      env,
      ""process.debugPort must be 0 or in range 1024 to 65535"");",5,67,1
219333,RETURN,-1,,return MaybeLocal<Object>();,5,92,1
219362,RETURN,-1,,return {};,5,101,1
219522,RETURN,-1,,return scope.Escape(process);,3,174,29
219810,RETURN,1,,return;,51,268,1
220240,RETURN,-1,,return info;,3,112,10
220354,RETURN,-1,,return scope.EscapeMaybe(result);,3,172,6
220393,RETURN,-1,,return MaybeLocal<Value>();,5,183,1
220396,RETURN,-1,,return scope.Escape(result);,3,188,7
220542,RETURN,1,,return;,47,265,1
220549,RETURN,-1,,return PersistentToLocal::Strong(context_);,3,278,1
220584,RETURN,-1,,return MaybeLocal<Value>();,5,307,1
220606,RETURN,-1,,return MaybeLocal<Value>();,7,315,1
220625,RETURN,-1,,return MaybeLocal<Value>();,5,324,1
220644,RETURN,-1,,return MaybeLocal<Value>();,5,332,1
220693,RETURN,-1,,return MaybeLocal<Value>();,5,340,1
220695,RETURN,-1,,return v8::True(isolate_);,3,343,15
220772,RETURN,-1,,return !std::iswspace(ch);,17,533,1
220786,RETURN,-1,,return a.first < b.first;,36,811,1
221976,RETURN,-1,,return writer->json_objectend();,7,389,1
222110,RETURN,-1,,return Nothing<std::string>();,5,416,1
222213,RETURN,-1,,return Nothing<std::string>();,5,435,1
222220,RETURN,-1,,"return Just<>(std::string(*sv, sv.length()));",3,438,8
222281,RETURN,-1,,return;,5,458,2
222349,RETURN,-1,,return;,5,481,2
222459,RETURN,-1,,"return PrintJavaScriptStack(writer, isolate, trigger);",5,509,1
222498,RETURN,-1,,return;,5,518,2
223741,RETURN,-1,,"return """";",7,901,4
223805,RETURN,-1,,return filename;,3,925,11
223832,RETURN,-1,,"return TriggerNodeReport(isolate, env, message, trigger, name, error);",3,938,4
223849,RETURN,-1,,"return TriggerNodeReport(env != nullptr ? env->isolate() : nullptr,
                           env,
                           message,
                           trigger,
                           name,
                           error);",3,947,1
224956,RETURN,-1,,return;,5,18,2
225979,RETURN,-1,,"return {
        flags,
        {
            code + SeaResource::kHeaderSize,
            size - SeaResource::kHeaderSize,
        },
    };",5,87,9
226037,RETURN,-1,,"return static_cast<SeaFlags>(static_cast<uint32_t>(x) |
                               static_cast<uint32_t>(y));",3,49,1
226053,RETURN,-1,,"return static_cast<SeaFlags>(static_cast<uint32_t>(x) &
                               static_cast<uint32_t>(y));",3,54,1
226069,RETURN,-1,,return x = x | y;,3,59,1
226105,RETURN,-1,,return sea_resource;,3,95,4
226115,RETURN,-1,,return sea_resource.code;,3,102,3
226123,RETURN,-1,,return postject_has_resource();,3,106,1
226142,RETURN,-1,,return;,5,112,2
226219,RETURN,-1,,"return {argc, argv};",3,133,2
226265,RETURN,-1,,return std::nullopt;,5,154,4
226283,RETURN,-1,,return std::nullopt;,5,161,2
226315,RETURN,-1,,return std::nullopt;,5,170,2
226347,RETURN,-1,,return std::nullopt;,5,179,2
226370,RETURN,-1,,return std::nullopt;,5,188,2
226387,RETURN,-1,,return result;,3,194,16
226424,RETURN,-1,,return false;,5,204,4
226540,RETURN,-1,,return false;,5,222,4
226548,RETURN,-1,,return true;,3,228,18
226574,RETURN,-1,,return ExitCode::kGenericUserError;,5,238,1
226578,RETURN,-1,,return ExitCode::kNoFailure;,3,241,4
226853,RETURN,1,,return;,24,118,1
226907,RETURN,-1,,"return ValueSerializer::Delegate::GetSharedArrayBufferId(
        isolate, shared_array_buffer);",5,132,1
226943,RETURN,1,,return Nothing<uint32_t>();,21,142,1
226945,RETURN,-1,,return id.ToLocalChecked()->Uint32Value(env()->context());,3,144,6
227004,RETURN,-1,,"return ValueSerializer::Delegate::WriteHostObject(isolate, input);",5,157,1
227036,RETURN,1,,return Nothing<bool>();,5,166,1
227038,RETURN,-1,,return Just(true);,3,168,7
227061,RETURN,-1,,"return THROW_ERR_CONSTRUCT_CALL_REQUIRED(
        env, ""Class constructor Serializer cannot be invoked without 'new'"");",5,174,1
227273,RETURN,1,,return;,23,227,1
227283,RETURN,1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        ctx->env(), ""arrayBuffer must be an ArrayBuffer"");",5,230,1
227316,RETURN,-1,,return;,3,235,8
227355,RETURN,1,,return;,26,243,1
227428,RETURN,1,,return;,5,255,1
227489,RETURN,1,,return;,26,267,1
227522,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        ctx->env(), ""source must be a TypedArray or a DataView"");",5,277,1
227608,RETURN,-1,,return ValueDeserializer::Delegate::ReadHostObject(isolate);,5,303,1
227645,RETURN,1,,return MaybeLocal<Object>();,5,314,1
227669,RETURN,-1,,return MaybeLocal<Object>();,5,319,2
227671,RETURN,-1,,return return_value.As<Object>();,3,322,9
227696,RETURN,-1,,"return THROW_ERR_CONSTRUCT_CALL_REQUIRED(
        env, ""Class constructor Deserializer cannot be invoked without 'new'"");",5,328,1
227709,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        env, ""buffer must be a TypedArray or a DataView"");",5,333,1
227860,RETURN,1,,return;,23,364,1
227892,RETURN,-1,,return;,5,369,3
227924,RETURN,-1,,return;,5,375,3
227925,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
      ctx->env(), ""arrayBuffer must be an ArrayBuffer or SharedArrayBuffer"");",3,378,7
227990,RETURN,1,,"return ctx->env()->ThrowError(""ReadUint32() failed"");",12,396,1
227999,RETURN,-1,,return args.GetReturnValue().Set(value);,3,397,7
228037,RETURN,1,,"return ctx->env()->ThrowError(""ReadUint64() failed"");",12,406,1
228086,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, ret, arraysize(ret)));",3,417,15
228131,RETURN,1,,"return ctx->env()->ThrowError(""ReadDouble() failed"");",12,426,1
228140,RETURN,-1,,return args.GetReturnValue().Set(value);,3,427,7
228187,RETURN,1,,return;,31,436,1
228212,RETURN,1,,"return ctx->env()->ThrowError(""ReadRawBytes() failed"");",12,441,1
228669,RETURN,-1,,return nullptr;,5,25,2
228671,RETURN,-1,,return realm;,3,27,7
228699,RETURN,-1,,return realm->context();,5,36,1
228704,RETURN,-1,,return MaybeLocal<Context>();,3,38,6
228790,RETURN,-1,,return ctx;,3,72,3
228815,RETURN,-1,,return MaybeLocal<Value>();,7,113,1
228817,RETURN,-1,,return v8::True(isolate_);,3,117,4
228857,RETURN,-1,,return nullptr;,3,10,1
228903,RETURN,-1,,return;,7,1152,1
229147,RETURN,-1,,return output;,3,57,2
229168,RETURN,-1,,return output;,3,67,4
229191,RETURN,-1,,return output;,3,77,4
229216,RETURN,-1,,return output;,3,87,4
229253,RETURN,-1,,return output;,3,93,2
229278,RETURN,-1,,return output;,3,103,4
229327,RETURN,-1,,return output;,3,119,2
229406,RETURN,-1,,return output;,3,141,2
229459,RETURN,-1,,"return v8::StartupData{buf.release(), raw_size};",3,185,9
229503,RETURN,-1,,return written_total;,3,198,7
229558,RETURN,-1,,return result;,3,220,11
229612,RETURN,-1,,return written_total;,3,236,7
229650,RETURN,-1,,return result;,3,259,7
229699,RETURN,-1,,return written_total;,3,274,7
229747,RETURN,-1,,return result;,3,301,9
229817,RETURN,-1,,return written_total;,3,320,9
229845,RETURN,-1,,return result;,3,337,5
229879,RETURN,-1,,return written_total;,3,350,5
229907,RETURN,-1,,return result;,3,365,5
229941,RETURN,-1,,return written_total;,3,379,5
229979,RETURN,-1,,return result;,3,398,7
230031,RETURN,-1,,return written_total;,3,415,7
230064,RETURN,-1,,return result;,3,434,6
230107,RETURN,-1,,return written_total;,3,448,6
230137,RETURN,-1,,return result;,3,459,7
230200,RETURN,-1,,return written_total;,3,476,8
230258,RETURN,-1,,return result;,3,493,12
230353,RETURN,-1,,return written_total;,3,517,13
230403,RETURN,-1,,return result;,3,544,9
230486,RETURN,-1,,return written_total;,3,568,14
230582,RETURN,-1,,return w.sink;,3,601,16
230621,RETURN,-1,,return data != nullptr ? data->impl_ : nullptr;,3,613,1
230634,RETURN,-1,,"return EmbedderSnapshotData::Pointer{new EmbedderSnapshotData(this, false)};",3,617,1
230647,RETURN,-1,,"return FromBlob(out, ReadFileSync(in));",3,621,1
230658,RETURN,-1,,"return FromBlob(out, std::string_view(in.data(), in.size()));",3,625,1
230727,RETURN,-1,,return false;,5,641,1
230779,RETURN,-1,,return true;,3,652,19
230808,RETURN,-1,,return false;,5,662,2
230831,RETURN,-1,,return false;,5,671,2
230854,RETURN,-1,,return false;,5,680,2
230883,RETURN,-1,,return false;,5,695,2
230885,RETURN,-1,,return true;,3,699,7
230999,RETURN,-1,,"return std::string(buf) + std::string(""_cache_data"");",3,724,7
231067,RETURN,-1,,return buf;,3,737,4
231245,RETURN,-1,,return registry->external_references();,3,832,3
231335,RETURN,-1,,return ExitCode::kBootstrapFailure;,5,853,2
231409,RETURN,-1,,return ExitCode::kGenericUserError;,11,889,1
231431,RETURN,-1,,return exit_code;,11,897,1
231433,RETURN,-1,,"return CreateSnapshot(out, setup.get(), static_cast<uint8_t>(snapshot_type));",3,903,10
231545,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,9,931,1
231563,RETURN,-1,,return ExitCode::kBootstrapFailure;,7,940,1
231680,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,5,994,1
231756,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,5,1013,1
231760,RETURN,-1,,return ExitCode::kNoFailure;,3,1015,17
231787,RETURN,-1,,return exit_code;,5,1024,1
231793,RETURN,-1,,return exit_code;,3,1027,6
231835,RETURN,-1,,return;,5,1053,2
231867,RETURN,-1,,return;,5,1063,2
231919,RETURN,-1,,"return StartupData{nullptr, 0};",5,1114,1
232004,RETURN,-1,,"return StartupData{reinterpret_cast<const char*>(info),
                     static_cast<int>(info->length)};",3,1137,13
232071,RETURN,1,,return;,37,1182,1
232495,RETURN,-1,,return addr;,3,36,5
232510,RETURN,-1,,"return uv_ip4_addr(
          host,
          port,
          reinterpret_cast<sockaddr_in*>(addr)) == 0;",7,47,3
232521,RETURN,-1,,"return uv_ip6_addr(
          host,
          port,
          reinterpret_cast<sockaddr_in6*>(addr)) == 0;",7,52,6
232539,RETURN,-1,,"return New(AF_INET, host, port, addr) || New(AF_INET6, host, port, addr);",3,65,1
232559,RETURN,-1,,"return ToSockAddr(family, host, port,
                    reinterpret_cast<sockaddr_storage*>(addr->storage()));",3,73,1
232645,RETURN,-1,,return hash;,3,97,4
232652,RETURN,-1,,"return FromUVHandle(uv_tcp_getsockname, handle);",3,101,1
232661,RETURN,-1,,"return FromUVHandle(uv_udp_getsockname, handle);",3,105,1
232670,RETURN,-1,,"return FromUVHandle(uv_tcp_getpeername, handle);",3,109,1
232679,RETURN,-1,,"return FromUVHandle(uv_udp_getpeername, handle);",3,113,1
232724,RETURN,-1,,"return memcmp(&one_in->sin_addr, &two_in->sin_addr, sizeof(uint32_t)) == 0;",3,126,5
232762,RETURN,-1,,"return memcmp(&one_in->sin6_addr, &two_in->sin6_addr, 16) == 0;",3,136,5
232808,RETURN,-1,,"return memcmp(ptr, mask, sizeof(mask)) == 0 &&
         memcmp(ptr + sizeof(mask),
                &check_ipv4->sin_addr,
                sizeof(uint32_t)) == 0;",3,150,7
232877,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,167,1
232890,RETURN,1,,return SocketAddress::CompareResult::SAME;,5,169,1
232898,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,171,1
232946,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,183,1
232959,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,185,1
232965,RETURN,-1,,return SocketAddress::CompareResult::SAME;,3,186,8
233013,RETURN,1,,return SocketAddress::CompareResult::NOT_COMPARABLE;,5,201,1
233038,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,209,1
233051,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,211,1
233057,RETURN,-1,,return SocketAddress::CompareResult::SAME;,3,212,11
233100,RETURN,-1,,"return (htonl(ip_in->sin_addr.s_addr) & mask) ==
         (htonl(net_in->sin_addr.s_addr) & mask);",3,226,7
233130,RETURN,1,,"return compare_ipv6(ip, net) == SocketAddress::CompareResult::SAME;",5,237,1
233198,RETURN,1,,return false;,5,249,1
233220,RETURN,-1,,return (p1[len] & mask) == (p2[len] & mask);,3,256,17
233244,RETURN,1,,"return compare_ipv4_ipv6(ip, net) == SocketAddress::CompareResult::SAME;",5,265,1
233342,RETURN,1,,return false;,5,281,1
233357,RETURN,-1,,return (ptr[0] & mask) == (p2[len] & mask);,3,287,21
233381,RETURN,1,,"return compare_ipv4_ipv6(net, ip) == SocketAddress::CompareResult::SAME;",5,295,1
233439,RETURN,1,,return false;,5,308,1
233450,RETURN,-1,,return (check & m) == (htonl(net_in->sin_addr.s_addr) & m);,3,313,14
233481,RETURN,-1,,"return is_match_ipv4(*this, other);",23,325,3
233488,RETURN,-1,,"return is_match_ipv4_ipv6(*this, other);",24,326,6
233504,RETURN,-1,,"return is_match_ipv4_ipv6(other, *this);",23,331,3
233511,RETURN,-1,,"return is_match_ipv6(*this, other);",24,332,6
233517,RETURN,-1,,return false;,3,336,2
233537,RETURN,-1,,"return compare_ipv4(*this, other);",23,344,3
233544,RETURN,-1,,"return compare_ipv4_ipv6(*this, other);",24,345,6
233583,RETURN,-1,,return c;,15,356,5
233591,RETURN,-1,,return SocketAddress::CompareResult::LESS_THAN;,15,358,8
233603,RETURN,-1,,return SocketAddress::CompareResult::GREATER_THAN;,15,360,11
233612,RETURN,-1,,"return compare_ipv6(*this, other);",24,364,6
233618,RETURN,-1,,return SocketAddress::CompareResult::NOT_COMPARABLE;,3,368,2
233643,RETURN,-1,,"return in_network_ipv4(*this, other, prefix);",23,378,3
233651,RETURN,-1,,"return in_network_ipv4_ipv6(*this, other, prefix);",24,379,6
233668,RETURN,-1,,"return in_network_ipv6_ipv4(*this, other, prefix);",23,384,3
233676,RETURN,-1,,"return in_network_ipv6(*this, other, prefix);",24,385,6
233683,RETURN,-1,,return false;,3,390,2
233866,RETURN,1,,return true;,7,439,1
233868,RETURN,-1,,return parent_ ? parent_->Apply(address) : false;,3,441,4
233899,RETURN,-1,,return this->address->is_match(*address.get());,3,462,1
233939,RETURN,-1,,return ret;,3,470,6
233946,RETURN,-1,,"return *address.get() >= *start.get() &&
         *address.get() <= *end.get();",3,475,1
234007,RETURN,-1,,return ret;,3,486,8
234014,RETURN,-1,,"return address->is_in_network(*network.get(), prefix);",3,491,1
234062,RETURN,-1,,return ret;,3,500,7
234088,RETURN,1,,return MaybeLocal<Array>();,5,507,1
234090,RETURN,-1,,"return Array::New(env->isolate(), rules.data(), rules.size());",3,508,5
234124,RETURN,1,,return false;,5,515,1
234148,RETURN,1,,return false;,7,519,1
234155,RETURN,-1,,return true;,3,522,3
234247,RETURN,-1,,return BaseObjectPtr<SocketAddressBlockListWrap>();,5,560,1
234264,RETURN,-1,,return wrap;,3,565,5
234299,RETURN,-1,,return BaseObjectPtr<SocketAddressBlockListWrap>();,5,575,1
234321,RETURN,-1,,return wrap;,3,583,5
234475,RETURN,1,,return args.GetReturnValue().Set(false);,5,624,1
234569,RETURN,-1,,return;,5,647,1
234734,RETURN,-1,,return std::make_unique<TransferData>(this);,3,688,1
234748,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,694,1
234838,RETURN,-1,,return tmpl;,3,712,3
234884,RETURN,-1,,"return New(env, std::move(blocklist_));",3,738,1
234908,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,747,1
234988,RETURN,-1,,return tmpl;,3,764,3
235039,RETURN,-1,,return BaseObjectPtr<SocketAddressBase>();,5,782,1
235041,RETURN,-1,,"return MakeBaseObject<SocketAddressBase>(env, obj, std::move(address));",3,785,3
235173,RETURN,1,,return THROW_ERR_INVALID_ADDRESS(env);,5,804,1
235257,RETURN,1,,return;,5,821,1
235441,RETURN,1,,return;,53,852,1
235473,RETURN,-1,,return std::make_unique<TransferData>(this);,3,871,1
235499,RETURN,-1,,"return SocketAddressBase::Create(env, std::move(address_));",3,882,1
235970,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,5,39,1
235978,RETURN,-1,,"return maybe_async_id->IsNumber()
      ? maybe_async_id->NumberValue(env->context())
      : v8::Just(AsyncWrap::kInvalidAsyncId);",3,41,3
236048,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,7,58,1
236056,RETURN,-1,,"return maybe_async_id->IsNumber()
        ? maybe_async_id->NumberValue(env->context())
        : v8::Just(AsyncWrap::kInvalidAsyncId);",5,60,3
236079,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,7,64,1
236145,RETURN,1,,return;,51,78,1
236254,RETURN,-1,,return;,5,107,1
236302,RETURN,1,,return;,27,121,1
236318,RETURN,1,,return;,35,123,1
236347,RETURN,1,,return;,31,130,1
236363,RETURN,1,,return;,39,133,1
237178,RETURN,-1,,return categories_;,56,41,1
237290,RETURN,1,,return;,59,69,1
237303,RETURN,1,,return;,16,71,1
238590,RETURN,-1,,return true;,3,53,2
238612,RETURN,-1,,return info;,3,60,4
238702,RETURN,-1,,"return args.GetReturnValue().Set(FIXED_ONE_BYTE_STRING(env->isolate(), """"));",5,81,1
238738,RETURN,-1,,"return args.GetReturnValue().Set(FIXED_ONE_BYTE_STRING(env->isolate(), """"));",5,90,1
238843,RETURN,-1,,"return args.GetReturnValue().Set(
        String::NewFromUtf8(env->isolate(), """").ToLocalChecked());",5,109,1
238998,RETURN,-1,,return args.GetReturnValue().Set(false);,7,137,1
239069,RETURN,-1,,return output.has_value();,3,153,5
239366,RETURN,-1,,return args.GetReturnValue().Set(false);,7,219,1
239404,RETURN,-1,,return args.GetReturnValue().Set(false);,5,227,1
239679,RETURN,-1,,return args.GetReturnValue().Set(false);,5,303,1
239959,RETURN,-1,,return ada::href_from_file(escaped_file_path);,3,366,3
240131,RETURN,1,,return;,5,101,1
240223,RETURN,1,,return;,5,119,1
240334,RETURN,-1,,return;,5,145,4
240357,RETURN,1,,return;,5,152,1
240391,RETURN,1,,return;,5,158,1
240400,RETURN,1,,return args.GetReturnValue().Set(entries);,5,161,1
240423,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(env->isolate(), ret, arraysize(ret)));",3,167,10
240552,RETURN,-1,,return true;,5,206,2
240583,RETURN,-1,,return true;,3,223,6
240615,RETURN,-1,,return info;,3,232,6
240792,RETURN,1,,return;,36,269,1
240859,RETURN,1,,return;,36,279,1
240925,RETURN,1,,return;,53,288,1
241972,RETURN,-1,,return true;,3,148,6
242040,RETURN,-1,,return info;,3,169,5
242540,RETURN,-1,,"return ""Scavenge"";",7,244,3
242548,RETURN,-1,,"return ""MarkSweepCompact"";",7,246,6
242556,RETURN,-1,,"return ""IncrementalMarking"";",7,248,9
242564,RETURN,-1,,"return ""ProcessWeakCallbacks"";",7,250,12
242567,RETURN,-1,,"return ""Unknown"";",7,252,14
242800,RETURN,-1,,return;,5,304,1
242862,RETURN,-1,,return;,5,322,1
242950,RETURN,-1,,return &writer_;,3,356,1
242957,RETURN,-1,,return &out_stream_;,3,360,1
243017,RETURN,-1,,return;,5,374,1
243143,RETURN,-1,,return;,5,399,1
243287,RETURN,1,,return;,32,427,1
244213,RETURN,1,,return MaybeLocal<Value>();,5,63,1
244263,RETURN,-1,,return MaybeLocal<Value>();,5,70,1
244265,RETURN,-1,,return e;,3,73,16
244316,RETURN,1,,return;,7,87,1
245052,RETURN,-1,,return UVWASI_EINVAL;,3,233,1
245081,RETURN,1,,return EinvalError<R>();,34,247,1
245103,RETURN,-1,,return EinvalError<R>();,5,252,2
245119,RETURN,-1,,"return F(*wasi,
           {reinterpret_cast<char*>(memory), options.wasm_memory->length()},
           args...);",3,257,8
245150,RETURN,-1,,return value->IsUint32();,3,271,1
245160,RETURN,-1,,return value.As<Uint32>()->Value();,3,276,1
245173,RETURN,-1,,return value->IsBigInt();,3,281,1
245194,RETURN,-1,,return js_value->Uint64Value(&lossless);,3,288,3
245206,RETURN,-1,,return value->IsBigInt();,3,293,1
245227,RETURN,-1,,return js_value->Int64Value(&lossless);,3,300,3
245241,RETURN,-1,,return CheckType<T>(info[i]);,3,305,1
245261,RETURN,1,,return false;,37,313,1
245263,RETURN,-1,,"return CheckTypes<Ts...>(info, i + 1, args...);",3,314,2
245275,RETURN,-1,,"return CheckTypes<Args...>(info, 0, Args()...);",3,319,1
245285,RETURN,-1,,return true;,3,324,1
245348,RETURN,-1,,return;,5,361,2
245362,RETURN,-1,,return;,5,365,2
245385,RETURN,-1,,return;,5,372,2
245491,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, argv_buf_offset, wasi.uvw_.argv_buf_size)",3,402,1
245517,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, argv_offset, wasi.uvw_.argc * UVWASI_SERDES_SIZE_uint32_t)",3,403,1
245594,RETURN,-1,,return err;,3,418,11
245627,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, argc_offset, UVWASI_SERDES_SIZE_size_t)",3,426,1
245648,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, argv_buf_offset, UVWASI_SERDES_SIZE_size_t)",3,427,1
245682,RETURN,-1,,return err;,3,437,9
245715,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, resolution_ptr, UVWASI_SERDES_SIZE_timestamp_t)",3,445,1
245741,RETURN,-1,,return err;,3,452,7
245776,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, time_ptr, UVWASI_SERDES_SIZE_timestamp_t)",3,461,1
245803,RETURN,-1,,return err;,3,468,7
245844,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, environ_buf_offset, wasi.uvw_.env_buf_size)",3,476,1
245870,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size,
                         environ_offset,
                         wasi.uvw_.envc * UVWASI_SERDES_SIZE_uint32_t)",3,478,1
245947,RETURN,-1,,return err;,3,498,11
245980,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, envc_offset, UVWASI_SERDES_SIZE_size_t)",3,506,1
246001,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, env_buf_offset, UVWASI_SERDES_SIZE_size_t)",3,507,1
246035,RETURN,-1,,return err;,3,518,9
246054,RETURN,-1,,"return uvwasi_fd_advise(&wasi.uvw_, fd, offset, len, advice);",3,528,2
246079,RETURN,-1,,"return uvwasi_fd_allocate(&wasi.uvw_, fd, offset, len);",3,534,2
246099,RETURN,-1,,"return uvwasi_fd_close(&wasi.uvw_, fd);",3,539,2
246117,RETURN,-1,,"return uvwasi_fd_datasync(&wasi.uvw_, fd);",3,544,2
246155,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_fdstat_t)",3,552,1
246182,RETURN,-1,,return err;,3,559,7
246197,RETURN,-1,,"return uvwasi_fd_fdstat_set_flags(&wasi.uvw_, fd, flags);",3,567,2
246220,RETURN,-1,,"return uvwasi_fd_fdstat_set_rights(
      &wasi.uvw_, fd, fs_rights_base, fs_rights_inheriting);",3,580,2
246260,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_filestat_t)",3,589,1
246287,RETURN,-1,,return err;,3,596,7
246302,RETURN,-1,,"return uvwasi_fd_filestat_set_size(&wasi.uvw_, fd, st_size);",3,604,2
246327,RETURN,-1,,"return uvwasi_fd_filestat_set_times(
      &wasi.uvw_, fd, st_atim, st_mtim, fst_flags);",3,619,2
246375,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_iovec_t)",3,637,1
246396,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nread_ptr, UVWASI_SERDES_SIZE_size_t)",3,639,1
246428,RETURN,-1,,return err;,5,646,1
246458,RETURN,-1,,return err;,3,654,11
246491,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_prestat_t)",3,662,1
246518,RETURN,-1,,return err;,3,669,7
246553,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,678,1
246556,RETURN,-1,,"return uvwasi_fd_prestat_dir_name(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,679,3
246608,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_ciovec_t)",3,697,1
246629,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nwritten_ptr, UVWASI_SERDES_SIZE_size_t)",3,699,1
246661,RETURN,-1,,return err;,5,706,1
246691,RETURN,-1,,return err;,3,715,11
246729,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_iovec_t)",3,725,1
246750,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nread_ptr, UVWASI_SERDES_SIZE_size_t)",3,727,1
246782,RETURN,-1,,return err;,5,734,1
246811,RETURN,-1,,return err;,3,742,11
246850,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,759,1
246871,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, bufused_ptr, UVWASI_SERDES_SIZE_size_t)",3,760,1
246905,RETURN,-1,,return err;,3,767,8
246920,RETURN,-1,,"return uvwasi_fd_renumber(&wasi.uvw_, from, to);",3,772,2
246963,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, newoffset_ptr, UVWASI_SERDES_SIZE_filesize_t)",3,782,1
246991,RETURN,-1,,return err;,3,790,7
247004,RETURN,-1,,"return uvwasi_fd_sync(&wasi.uvw_, fd);",3,795,2
247042,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, offset_ptr, UVWASI_SERDES_SIZE_filesize_t)",3,803,1
247068,RETURN,-1,,return err;,3,811,7
247106,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_ciovec_t)",3,826,1
247127,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nwritten_ptr, UVWASI_SERDES_SIZE_size_t)",3,828,1
247159,RETURN,-1,,return err;,5,835,1
247188,RETURN,-1,,return err;,3,843,11
247223,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,852,1
247242,RETURN,-1,,return err;,3,855,5
247279,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,870,1
247300,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, UVWASI_SERDES_SIZE_filestat_t)",3,871,1
247335,RETURN,-1,,return err;,3,878,8
247378,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,899,1
247381,RETURN,-1,,"return uvwasi_path_filestat_set_times(&wasi.uvw_,
                                        fd,
                                        flags,
                                        &memory.data[path_ptr],
                                        path_len,
                                        st_atim,
                                        st_mtim,
                                        fst_flags);",3,900,3
247440,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,928,1
247461,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,929,1
247464,RETURN,-1,,"return uvwasi_path_link(&wasi.uvw_,
                          old_fd,
                          old_flags,
                          &memory.data[old_path_ptr],
                          old_path_len,
                          new_fd,
                          &memory.data[new_path_ptr],
                          new_path_len);",3,930,4
247532,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,962,1
247553,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, fd_ptr, UVWASI_SERDES_SIZE_fd_t)",3,963,1
247595,RETURN,-1,,return err;,3,978,8
247636,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,997,1
247657,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,998,1
247678,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, bufused_ptr, UVWASI_SERDES_SIZE_size_t)",3,999,1
247718,RETURN,-1,,return err;,3,1011,9
247753,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,1020,1
247756,RETURN,-1,,"return uvwasi_path_remove_directory(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,1021,3
247809,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,1041,1
247830,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,1042,1
247833,RETURN,-1,,"return uvwasi_path_rename(&wasi.uvw_,
                            old_fd,
                            &memory.data[old_path_ptr],
                            old_path_len,
                            new_fd,
                            &memory.data[new_path_ptr],
                            new_path_len);",3,1043,4
247892,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,1066,1
247913,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,1067,1
247916,RETURN,-1,,"return uvwasi_path_symlink(&wasi.uvw_,
                             &memory.data[old_path_ptr],
                             old_path_len,
                             fd,
                             &memory.data[new_path_ptr],
                             new_path_len);",3,1068,4
247970,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,1082,1
247973,RETURN,-1,,"return uvwasi_path_unlink_file(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,1083,3
248023,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, in_ptr, nsubscriptions * UVWASI_SERDES_SIZE_subscription_t)",3,1099,1
248045,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, out_ptr, nsubscriptions * UVWASI_SERDES_SIZE_event_t)",3,1101,1
248066,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nevents_ptr, UVWASI_SERDES_SIZE_size_t)",3,1103,1
248164,RETURN,-1,,return err;,3,1124,12
248194,RETURN,-1,,"return uvwasi_proc_raise(&wasi.uvw_, sig);",3,1134,2
248232,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,1142,1
248235,RETURN,-1,,"return uvwasi_random_get(&wasi.uvw_, &memory.data[buf_ptr], buf_len);",3,1143,3
248257,RETURN,-1,,return uvwasi_sched_yield(&wasi.uvw_);,3,1148,2
248302,RETURN,-1,,return err;,3,1163,6
248344,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, ri_data_ptr, ri_data_len * UVWASI_SERDES_SIZE_iovec_t)",3,1182,1
248365,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, ro_datalen_ptr, 4)",3,1184,1
248386,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, ro_flags_ptr, 4)",3,1185,1
248418,RETURN,-1,,return err;,5,1190,1
248457,RETURN,-1,,return err;,3,1207,13
248497,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, si_data_ptr, si_data_len * UVWASI_SERDES_SIZE_ciovec_t)",3,1224,1
248518,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, so_datalen_ptr, UVWASI_SERDES_SIZE_size_t)",3,1226,1
248550,RETURN,-1,,return err;,5,1232,1
248580,RETURN,-1,,return err;,3,1241,11
248595,RETURN,-1,,"return uvwasi_sock_shutdown(&wasi.uvw_, sock, how);",3,1249,2
248631,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        wasi->env(),
        ""\""instance.exports.memory\"" property must be a WebAssembly.Memory ""
        ""object"");",5,1257,1
249273,RETURN,-1,,return templ;,5,26,1
249340,RETURN,-1,,return function;,3,41,14
249415,RETURN,-1,,return MaybeLocal<Object>();,5,64,1
249439,RETURN,-1,,return obj;,3,73,10
249632,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        Environment::GetCurrent(args),
        ""chunk must be an ArrayBufferView or an ArrayBuffer"");",5,118,1
249773,RETURN,-1,,return;,5,164,1
250214,RETURN,-1,,return SignalPropagation::kStopPropagation;,3,122,3
250419,RETURN,-1,,return SignalPropagation::kContinuePropagation;,3,197,3
250430,RETURN,-1,,return;,5,203,1
250441,RETURN,-1,,return;,5,207,1
250528,RETURN,-1,,return TRUE;,5,259,2
250532,RETURN,-1,,return FALSE;,5,261,1
250601,RETURN,-1,,return is_stopping;,3,289,7
250616,RETURN,-1,,return 0;,5,297,1
250629,RETURN,-1,,return 0;,3,326,5
250655,RETURN,-1,,return had_pending_signal;,7,341,2
250670,RETURN,-1,,return had_pending_signal;,3,373,8
250679,RETURN,-1,,return has_pending_signal_;,3,380,3
250815,RETURN,1,,return;,18,297,1
250855,RETURN,-1,,"return env_vars->Get(name).FromMaybe("""");",7,522,1
251108,RETURN,-1,,return;,5,73,1
251216,RETURN,1,,return env_->is_stopping();,5,101,1
251221,RETURN,-1,,return stopped_;,3,102,4
251356,RETURN,-1,,return;,7,146,4
251417,RETURN,-1,,return;,7,164,2
251598,RETURN,-1,,return !loop_init_failed_;,33,237,1
251672,RETURN,-1,,return new_limit;,3,268,11
251725,RETURN,1,,return;,28,281,1
251762,RETURN,1,,return;,23,309,1
251846,RETURN,-1,,return;,11,341,2
251850,RETURN,1,,return;,25,345,1
251895,RETURN,1,,return;,27,357,1
251919,RETURN,1,,return;,23,366,1
251937,RETURN,1,,return;,25,370,1
251947,RETURN,-1,,return;,11,373,1
251966,RETURN,1,,return;,11,378,1
252078,RETURN,-1,,return child_port;,3,418,8
252091,RETURN,1,,return;,5,423,1
252296,RETURN,-1,,return;,5,482,2
252611,RETURN,1,,return;,65,547,1
252638,RETURN,-1,,return;,9,553,5
252710,RETURN,-1,,return;,9,568,1
252732,RETURN,-1,,return;,9,572,1
252842,RETURN,-1,,return;,9,597,1
252869,RETURN,-1,,return;,7,604,5
253391,RETURN,-1,,"return Float64Array::New(ab, 0, kTotalResourceLimitCount);",3,752,3
253449,RETURN,-1,,return true;,3,782,1
253528,RETURN,-1,,return;,5,808,1
253613,RETURN,1,,return args.GetReturnValue().Set(-1);,5,864,1
253674,RETURN,1,,return args.GetReturnValue().Set(-1);,5,879,1
254732,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254739,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254746,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254753,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254760,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254767,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254774,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254781,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254788,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
254790,RETURN,-1,,"return ""Z_UNKNOWN_ERROR"";",3,94,10
254832,RETURN,-1,,return code != nullptr;,33,127,1
255207,RETURN,-1,,return;,7,277,2
255303,RETURN,1,,return;,52,308,1
255385,RETURN,1,,return;,55,327,1
255401,RETURN,1,,return;,55,328,1
255458,RETURN,1,,return;,54,336,1
255474,RETURN,1,,return;,54,337,1
255577,RETURN,-1,,return;,7,373,5
255621,RETURN,1,,return true;,25,395,1
255625,RETURN,-1,,return false;,5,397,5
255651,RETURN,-1,,return;,7,411,2
255678,RETURN,1,,return;,7,421,1
255838,RETURN,-1,,return &ctx_;,35,470,1
255876,RETURN,-1,,"return AllocForBrotli(data, real_size);",5,488,3
255907,RETURN,1,,return nullptr;,38,495,1
255925,RETURN,-1,,return memory + sizeof(size_t);,5,499,9
255942,RETURN,1,,return;,39,503,1
255997,RETURN,1,,return;,22,517,1
256217,RETURN,1,,return;,58,595,1
256234,RETURN,1,,return;,51,598,1
256251,RETURN,1,,return;,56,601,1
256268,RETURN,1,,return;,55,604,1
256452,RETURN,1,,return;,51,638,1
256469,RETURN,1,,return;,54,640,1
256517,RETURN,-1,,return this->CompressionStream<CompressionContext>::context();,5,664,1
256674,RETURN,-1,,return;,7,697,3
256763,RETURN,-1,,return;,9,711,3
256802,RETURN,-1,,return;,7,738,3
256882,RETURN,-1,,return;,5,762,1
257153,RETURN,-1,,"return CompressionError { message, ZlibStrerror(err_), err_ };",3,890,2
257182,RETURN,-1,,"return ErrorForMessage(""unexpected end of file"");",7,900,1
257196,RETURN,1,,"return ErrorForMessage(""Missing dictionary"");",7,907,1
257201,RETURN,1,,"return ErrorForMessage(""Bad dictionary"");",7,909,1
257205,RETURN,-1,,"return ErrorForMessage(""Zlib error"");",5,912,13
257208,RETURN,-1,,return CompressionError {};,3,915,2
257226,RETURN,-1,,"return ErrorForMessage(""Failed to init stream before reset"");",5,922,1
257266,RETURN,1,,"return ErrorForMessage(""Failed to reset stream"");",5,943,1
257269,RETURN,-1,,return SetDictionary();,3,945,7
257453,RETURN,-1,,return false;,5,1008,1
257504,RETURN,-1,,return true;,5,1035,3
257510,RETURN,-1,,return true;,3,1040,8
257522,RETURN,1,,return CompressionError {};,5,1046,1
257572,RETURN,-1,,"return ErrorForMessage(""Failed to set dictionary"");",5,1069,1
257575,RETURN,-1,,return CompressionError {};,3,1072,5
257595,RETURN,-1,,"return ErrorForMessage(""Failed to init stream before set parameters"");",5,1079,1
257627,RETURN,-1,,"return ErrorForMessage(""Failed to set parameters"");",5,1094,1
257630,RETURN,-1,,return CompressionError {};,3,1097,7
257755,RETURN,-1,,"return CompressionError(""Could not initialize Brotli instance"",
                            ""ERR_ZLIB_INITIALIZATION_FAILED"",
                            -1);",5,1150,1
257763,RETURN,-1,,return CompressionError {};,5,1154,1
257770,RETURN,-1,,"return Init(alloc_, free_, alloc_opaque_);",3,1159,1
257793,RETURN,-1,,"return CompressionError(""Setting parameter failed"",
                            ""ERR_BROTLI_PARAM_SET_FAILED"",
                            -1);",5,1166,1
257801,RETURN,-1,,return CompressionError {};,5,1170,1
257812,RETURN,-1,,"return CompressionError(""Compression failed"",
                            ""ERR_BROTLI_COMPRESSION_FAILED"",
                            -1);",5,1176,1
257820,RETURN,-1,,return CompressionError {};,5,1180,1
257918,RETURN,-1,,"return CompressionError(""Could not initialize Brotli instance"",
                            ""ERR_ZLIB_INITIALIZATION_FAILED"",
                            -1);",5,1215,1
257926,RETURN,-1,,return CompressionError {};,5,1219,1
257933,RETURN,-1,,"return Init(alloc_, free_, alloc_opaque_);",3,1224,1
257956,RETURN,-1,,"return CompressionError(""Setting parameter failed"",
                            ""ERR_BROTLI_PARAM_SET_FAILED"",
                            -1);",5,1231,1
257964,RETURN,-1,,return CompressionError {};,5,1235,1
257976,RETURN,-1,,"return CompressionError(""Decompression failed"",
                            error_string_.c_str(),
                            static_cast<int>(error_));",5,1241,1
257997,RETURN,-1,,"return CompressionError(""unexpected end of file"",
                            ""Z_BUF_ERROR"",
                            Z_BUF_ERROR);",5,1247,1
258004,RETURN,-1,,return CompressionError {};,5,1251,1
268859,RETURN,-1,,return deny_all_ == false;,3,19,1
268948,RETURN,-1,,"return res + ""*"";",9,24,1
268952,RETURN,-1,,"return res + node::kPathSeparator + ""*"";",7,26,2
268963,RETURN,-1,,return res;,3,30,6
268975,RETURN,-1,,return;,5,36,1
269013,RETURN,-1,,"return granted_tree->Lookup(param, true);",3,65,1
269060,RETURN,-1,,return;,7,86,2
269120,RETURN,-1,,return allow_all_in_ && allow_all_out_;,7,107,3
269128,RETURN,-1,,"return !deny_all_in_ &&
             ((param.empty() && allow_all_in_) || allow_all_in_ ||
              is_tree_granted(&granted_in_fs_, param));",7,109,6
269149,RETURN,-1,,"return !deny_all_out_ &&
             ((param.empty() && allow_all_out_) || allow_all_out_ ||
              is_tree_granted(&granted_out_fs_, param));",7,113,9
269167,RETURN,-1,,return false;,7,117,11
269198,RETURN,-1,,return when_empty_return;,5,131,1
269232,RETURN,-1,,return true;,7,140,1
269248,RETURN,-1,,return false;,7,145,1
269274,RETURN,-1,,return true;,7,152,1
269444,RETURN,-1,,return;,5,37,1
269465,RETURN,-1,,return args.GetReturnValue().Set(false);,5,43,1
269502,RETURN,-1,,return;,7,49,1
269503,RETURN,-1,,"return args.GetReturnValue().Set(
        env->permission()->is_granted(scope, *utf8_arg));",5,51,4
269521,RETURN,-1,,return args.GetReturnValue().Set(env->permission()->is_granted(scope));,3,55,15
269544,RETURN,-1,,return nullptr;,3,64,3
269553,RETURN,-1,,return PermissionScope::kPermissionsRoot;,3,72,3
269711,RETURN,1,,return;,5,117,1
269862,RETURN,-1,,return deny_all_ == false;,3,18,1
269971,RETURN,-1,,"return handle_scope.EscapeMaybe(
      constructor->NewInstance(env->context(), 1, &type_value));",3,61,9
270888,RETURN,1,,return;,58,202,1
270949,RETURN,1,,return;,53,217,1
271232,RETURN,-1,,return stream;,5,100,6
272549,RETURN,1,,return false;,59,18,1
272571,RETURN,-1,,return true;,3,23,4
272607,RETURN,1,,return false;,59,32,1
272629,RETURN,-1,,return true;,3,37,4
272665,RETURN,1,,return false;,59,46,1
272733,RETURN,-1,,return false;,9,59,4
272753,RETURN,-1,,return true;,3,66,4
272792,RETURN,-1,,return stats->*member;,3,90,1
273375,RETURN,1,,return;,59,110,1
273506,RETURN,-1,,return handled_signals.find(signum) != handled_signals.end();,3,173,3
273592,RETURN,-1,,return used();,3,71,2
273598,RETURN,-1,,return sizeof data_ - used();,3,76,1
273607,RETURN,-1,,return used_;,3,81,1
273613,RETURN,-1,,return next_;,3,86,1
273689,RETURN,1,,return r;,5,134,1
273699,RETURN,-1,,return 0;,3,139,7
273741,RETURN,1,,return r;,9,160,1
273756,RETURN,1,,return r;,7,165,1
273773,RETURN,1,,return r;,7,171,1
273775,RETURN,-1,,return 0;,3,174,5
273825,RETURN,-1,,return js_buffer;,3,191,5
273831,RETURN,-1,,return readable_;,3,196,1
273837,RETURN,-1,,return writable_;,3,201,1
273859,RETURN,-1,,return static_cast<uv_stdio_flags>(flags);,3,214,5
273870,RETURN,-1,,return &uv_pipe_;,3,220,2
273877,RETURN,-1,,return reinterpret_cast<uv_stream_t*>(uv_pipe());,3,225,1
273885,RETURN,-1,,return reinterpret_cast<uv_handle_t*>(uv_pipe());,3,230,1
273918,RETURN,-1,,return size;,3,241,5
274250,RETURN,1,,return;,41,377,1
274289,RETURN,-1,,return env_;,3,431,1
274317,RETURN,1,,return MaybeLocal<Object>();,22,441,1
274326,RETURN,-1,,return scope.Escape(result);,3,445,9
274354,RETURN,-1,,return Just(false);,5,459,2
274373,RETURN,-1,,return Just(false);,5,467,4
274386,RETURN,1,,return Nothing<bool>();,38,470,1
274395,RETURN,-1,,return Just(false);,5,474,2
274416,RETURN,-1,,return Just(false);,7,481,2
274447,RETURN,-1,,return Just(false);,7,496,2
274470,RETURN,-1,,return Just(false);,5,504,2
274500,RETURN,-1,,return Just(false);,9,513,2
274517,RETURN,-1,,return Just(true);,3,525,19
274651,RETURN,1,,return;,5,602,1
274715,RETURN,1,,return SetError(static_cast<int>(exit_status));,5,645,1
274741,RETURN,1,,return error_;,5,660,1
274745,RETURN,1,,return pipe_error_;,5,662,1
275013,RETURN,-1,,return scope.Escape(js_result);,3,724,10
275098,RETURN,-1,,"return scope.Escape(
      Array::New(env()->isolate(), js_output.out(), js_output.length()));",3,743,8
275142,RETURN,1,,return Just<int>(UV_EINVAL);,30,752,1
275195,RETURN,1,,return Nothing<int>();,53,759,1
275202,RETURN,1,,return Just(r);,14,760,1
275240,RETURN,1,,return Nothing<int>();,58,765,1
275247,RETURN,1,,return Just(r);,14,766,1
275291,RETURN,1,,return Nothing<int>();,53,772,1
275298,RETURN,1,,return Just(r);,16,773,1
275340,RETURN,1,,return Nothing<int>();,7,781,1
275347,RETURN,1,,return Just(r);,16,782,1
275699,RETURN,1,,return Just(r);,14,849,1
275702,RETURN,-1,,return Just(0);,3,851,41
275728,RETURN,1,,return UV_EINVAL;,5,860,1
275802,RETURN,1,,return UV_EINVAL;,7,877,1
275818,RETURN,1,,return r;,7,881,1
275830,RETURN,-1,,return 0;,3,887,15
275876,RETURN,-1,,return AddStdioIgnore(child_fd);,5,898,1
276011,RETURN,-1,,return UV_EINVAL;,9,923,1
276013,RETURN,-1,,"return AddStdioPipe(child_fd, readable, writable, buf);",5,927,12
276062,RETURN,-1,,"return AddStdioInheritFD(child_fd, inherit_fd);",5,933,3
276090,RETURN,-1,,return 0;,3,947,4
276138,RETURN,-1,,return r;,5,964,2
276171,RETURN,-1,,return 0;,3,972,10
276203,RETURN,-1,,return 0;,3,983,5
276210,RETURN,-1,,return !value->IsUndefined() && !value->IsNull();,3,988,1
276276,RETURN,1,,return Nothing<int>();,5,1002,1
276293,RETURN,1,,return Nothing<int>();,5,1006,1
276323,RETURN,-1,,return Just(0);,3,1015,14
276357,RETURN,1,,return Just<int>(UV_EINVAL);,29,1027,1
276455,RETURN,1,,return Nothing<int>();,9,1049,1
276486,RETURN,1,,return Nothing<int>();,33,1058,1
276580,RETURN,-1,,return Just(0);,3,1083,23
276730,RETURN,-1,,return UV_EBUSY;,7,52,1
276813,RETURN,-1,,return UV_EBUSY;,7,74,1
276816,RETURN,-1,,return err;,3,79,18
276881,RETURN,-1,,"return StreamWriteResult{false, err, nullptr, total_bytes, {}};",7,97,1
276920,RETURN,-1,,"return StreamWriteResult{false, UV_EBUSY, nullptr, 0, {}};",7,107,1
277006,RETURN,-1,,"return StreamWriteResult{false, UV_EBUSY, nullptr, 0, {}};",7,131,1
277015,RETURN,-1,,"return StreamWriteResult{
      async, err, req_wrap, total_bytes, std::move(req_wrap_ptr)};",3,136,24
277032,RETURN,-1,,return ReadStart();,3,151,1
277039,RETURN,-1,,return ReadStop();,3,156,1
277076,RETURN,-1,,return 0;,3,164,5
277102,RETURN,-1,,return Shutdown(req_wrap_obj);,3,171,3
277277,RETURN,1,,return -1;,9,207,1
277303,RETURN,1,,return -1;,9,216,1
277329,RETURN,1,,return -1;,9,219,1
277379,RETURN,-1,,return -1;,9,227,1
277390,RETURN,1,,return UV_ENOBUFS;,7,233,1
277425,RETURN,1,,return -1;,9,238,1
277516,RETURN,1,,return -1;,9,255,1
277593,RETURN,1,,return -1;,9,272,1
277619,RETURN,1,,return -1;,9,275,1
277689,RETURN,-1,,return res.err;,3,292,27
277728,RETURN,-1,,return 0;,5,303,2
277823,RETURN,-1,,return -1;,7,324,1
277837,RETURN,-1,,return res.err;,3,331,15
277961,RETURN,-1,,return -1;,5,356,1
277969,RETURN,1,,return UV_ENOBUFS;,5,360,1
278061,RETURN,-1,,return err;,7,390,2
278200,RETURN,-1,,return -1;,7,431,1
278238,RETURN,-1,,return res.err;,3,442,34
278350,RETURN,-1,,"return wrap->MakeCallback(onread.As<Function>(), arraysize(argv), argv);",3,476,15
278366,RETURN,-1,,return false;,3,481,1
278372,RETURN,-1,,return -1;,3,486,1
278379,RETURN,-1,,return GetAsyncWrap()->object();,3,491,1
278601,RETURN,1,,return;,22,575,1
278713,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,24,601,1
278729,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,25,603,1
278773,RETURN,1,,return args.GetReturnValue().Set(0);,24,610,1
278818,RETURN,1,,return args.GetReturnValue().Set(0);,24,618,1
278863,RETURN,1,,return;,24,626,1
278911,RETURN,1,,return;,24,635,1
278919,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,25,637,1
278952,RETURN,-1,,return 0;,3,645,1
278958,RETURN,-1,,return nullptr;,3,650,1
278979,RETURN,-1,,return env->allocate_managed_buffer(suggested_size);,3,662,4
279050,RETURN,-1,,return;,5,677,2
279092,RETURN,-1,,return buffer_;,3,688,1
279143,RETURN,-1,,return;,5,705,2
279230,RETURN,1,,return;,33,726,1
279531,RETURN,-1,,return wrap;,3,825,4
279549,RETURN,-1,,return wrap;,3,832,4
279605,RETURN,-1,,return;,7,845,1
279676,RETURN,1,,return;,7,78,1
279694,RETURN,-1,,return;,7,81,1
279767,RETURN,-1,,return;,7,92,1
279843,RETURN,-1,,return;,7,103,1
279898,RETURN,-1,,return static_cast<StreamBase*>(readable_listener_.stream());,3,42,1
279909,RETURN,-1,,return static_cast<StreamBase*>(writable_listener_.stream());,3,46,1
279924,RETURN,1,,return;,5,51,1
279959,RETURN,1,,return;,23,65,1
280006,RETURN,-1,,return pipe->env()->allocate_managed_buffer(size);,3,112,6
280091,RETURN,-1,,return;,5,135,8
280241,RETURN,1,,return;,9,167,1
280247,RETURN,-1,,return;,5,170,2
280279,RETURN,-1,,return;,5,179,7
280300,RETURN,-1,,return;,5,187,6
280428,RETURN,1,,return;,5,224,1
280462,RETURN,-1,,return previous_listener_->OnStreamAlloc(suggested_size);,3,234,2
280475,RETURN,-1,,"return previous_listener_->OnStreamRead(nread, buf);",3,240,2
280529,RETURN,-1,,return Nothing<StreamPipe*>();,5,255,1
280552,RETURN,-1,,return Nothing<StreamPipe*>();,5,260,1
280575,RETURN,-1,,return Nothing<StreamPipe*>();,5,264,1
280598,RETURN,-1,,return Nothing<StreamPipe*>();,5,269,1
280600,RETURN,-1,,return Just(stream_pipe.release());,3,272,8
280671,RETURN,1,,return;,63,282,1
281676,RETURN,-1,,return tmpl;,3,160,3
281706,RETURN,-1,,return Unwrap<LibuvStreamWrap>(object);,3,167,3
281732,RETURN,-1,,return fd;,3,178,4
281738,RETURN,-1,,return HandleWrap::IsAlive(this);,3,184,1
281748,RETURN,-1,,return uv_is_closing(reinterpret_cast<uv_handle_t*>(stream()));,3,189,1
281757,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,194,1
281765,RETURN,-1,,return is_named_pipe_ipc();,3,199,1
281771,RETURN,-1,,"return uv_read_start(
      stream(),
      [](uv_handle_t* handle, size_t suggested_size, uv_buf_t* buf) {
        static_cast<LibuvStreamWrap*>(handle->data)
            ->OnUvAlloc(suggested_size, buf);
      },
      [](uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {
        LibuvStreamWrap* wrap = static_cast<LibuvStreamWrap*>(stream->data);
        TryCatchScope try_catch(wrap->env());
        try_catch.SetVerbose(true);
        wrap->OnUvRead(nread, buf);
      });",3,203,1
281780,RETURN,-1,,return uv_read_stop(stream());,3,219,1
281853,RETURN,1,,return Local<Object>();,5,241,1
281885,RETURN,-1,,return scope.Escape(wrap_obj);,3,251,13
282034,RETURN,-1,,return Nothing<void>();,7,289,1
282040,RETURN,-1,,return JustVoid();,3,294,11
282071,RETURN,-1,,return;,5,304,2
282115,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,5,318,1
282153,RETURN,-1,,"return new LibuvShutdownWrap(this, object);",3,328,1
282163,RETURN,-1,,"return new LibuvWriteWrap(this, object);",3,332,1
282179,RETURN,-1,,"return req_wrap->Dispatch(uv_shutdown, stream(), AfterUvShutdown);",3,338,3
282261,RETURN,1,,return 0;,5,364,1
282268,RETURN,1,,return err;,5,366,1
282328,RETURN,-1,,return 0;,3,388,14
282344,RETURN,-1,,"return w->Dispatch(uv_write2,
                     stream(),
                     bufs,
                     count,
                     send_handle,
                     AfterUvWrite);",3,397,3
282454,RETURN,-1,,return data_;,5,64,1
282460,RETURN,-1,,return length_;,5,68,1
282466,RETURN,-1,,return length() * sizeof(*data());,5,72,1
282485,RETURN,1,,return String::Empty(isolate);,7,80,1
282498,RETURN,1,,"return NewSimpleFromCopy(isolate, data, length, error);",7,83,1
282527,RETURN,-1,,return MaybeLocal<Value>();,7,88,2
282537,RETURN,-1,,"return ExternString<ResourceType, TypeName>::New(isolate,
                                                     new_data,
                                                     length,
                                                     error);",5,92,7
282559,RETURN,1,,return String::Empty(isolate);,7,104,1
282585,RETURN,-1,,return str;,7,109,3
282628,RETURN,-1,,return MaybeLocal<Value>();,7,121,3
282630,RETURN,-1,,return str.ToLocalChecked();,5,124,8
282639,RETURN,-1,,return isolate_;,37,127,1
282673,RETURN,-1,,"return String::NewExternalOneByte(isolate, h_str).FromMaybe(Local<Value>());",3,156,1
282690,RETURN,-1,,"return String::NewExternalTwoByte(isolate, h_str).FromMaybe(Local<Value>());",3,163,1
282743,RETURN,-1,,return MaybeLocal<Value>();,5,178,2
282745,RETURN,-1,,return str.ToLocalChecked();,3,180,3
282790,RETURN,-1,,return MaybeLocal<Value>();,5,196,2
282792,RETURN,-1,,return str.ToLocalChecked();,3,198,3
283746,RETURN,-1,,return unhex_table[x];,3,244,1
283813,RETURN,1,,return i;,7,257,1
283824,RETURN,-1,,return i;,3,261,3
283854,RETURN,-1,,return 0;,5,270,1
283881,RETURN,-1,,return nchars * sizeof(*dst);,5,277,2
283914,RETURN,-1,,return 0;,5,285,1
283969,RETURN,-1,,return nchars * sizeof(*dst);,3,299,20
284208,RETURN,-1,,return nbytes;,3,374,9
284243,RETURN,-1,,return Just(Buffer::Length(val));,5,388,1
284271,RETURN,1,,return Nothing<size_t>();,5,393,1
284349,RETURN,-1,,return Just(data_size);,3,428,11
284377,RETURN,1,,return Just(Buffer::Length(val));,5,437,1
284405,RETURN,1,,return Nothing<size_t>();,5,441,1
284414,RETURN,-1,,return Just<size_t>(str->Length());,7,446,5
284427,RETURN,-1,,return Just<size_t>(str->Utf8Length(isolate));,7,450,10
284439,RETURN,-1,,return Just(str->Length() * sizeof(uint16_t));,7,453,13
284457,RETURN,-1,,"return Just(base64_decoded_size(*value, value.length()));",7,459,3
284468,RETURN,-1,,return Just<size_t>(str->Length() / 2);,7,463,21
284524,RETURN,-1,,return;,5,479,2
284587,RETURN,-1,,return;,7,496,2
284733,RETURN,-1,,return dlen;,3,538,4
284759,RETURN,-1,,return dst;,3,545,6
284790,RETURN,-1,,CHECK_BUFLEN_IN_RANGE(buflen),3,562,2
284801,RETURN,-1,,return String::Empty(isolate);,5,565,1
284852,RETURN,-1,,return buf;,9,578,5
284887,RETURN,-1,,return MaybeLocal<Value>();,11,587,2
284893,RETURN,-1,,"return ExternOneByteString::New(isolate, out, buflen, error);",9,590,5
284904,RETURN,-1,,"return ExternOneByteString::NewFromCopy(isolate, buf, buflen, error);",9,592,1
284952,RETURN,-1,,return str;,9,605,4
284956,RETURN,-1,,"return ExternOneByteString::NewFromCopy(isolate, buf, buflen, error);",7,609,12
284994,RETURN,-1,,return MaybeLocal<Value>();,9,616,2
285007,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,622,9
285048,RETURN,-1,,return MaybeLocal<Value>();,9,630,2
285064,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,636,9
285103,RETURN,-1,,return MaybeLocal<Value>();,9,644,2
285116,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,649,9
285164,RETURN,-1,,return MaybeLocal<Value>();,11,658,2
285218,RETURN,-1,,"return ExternTwoByteString::New(isolate, dst, str_len, error);",9,667,5
285257,RETURN,-1,,return MaybeLocal<Value>();,11,674,2
285263,RETURN,-1,,"return ExternTwoByteString::New(
            isolate, reinterpret_cast<uint16_t*>(dst), str_len, error);",9,677,5
285274,RETURN,-1,,"return ExternTwoByteString::NewFromCopy(
          isolate, reinterpret_cast<const uint16_t*>(buf), str_len, error);",7,680,5
285301,RETURN,1,,return String::Empty(isolate);,20,694,1
285327,RETURN,-1,,CHECK_BUFLEN_IN_RANGE(buflen),3,695,2
285356,RETURN,-1,,return MaybeLocal<Value>();,7,705,2
285374,RETURN,-1,,"return ExternTwoByteString::New(isolate, dst, buflen, error);",5,710,8
285385,RETURN,-1,,"return ExternTwoByteString::NewFromCopy(isolate, buf, buflen, error);",5,712,1
285407,RETURN,-1,,"return Encode(isolate, buf, len, encoding, error);",3,721,3
285511,RETURN,-1,,return MaybeLocal<String>();,7,41,2
285515,RETURN,-1,,return utf8_string;,7,43,1
285561,RETURN,-1,,return ret.FromMaybe(Local<Value>()).As<String>();,3,60,6
285716,RETURN,-1,,return MaybeLocal<String>();,11,124,1
286009,RETURN,1,,return MaybeLocal<String>();,11,220,1
286026,RETURN,-1,,return body;,7,227,1
286030,RETURN,-1,,"return String::Concat(isolate, prepend, body);",7,229,1
286052,RETURN,-1,,"return MakeString(isolate, data, nread, Encoding());",5,233,2
286106,RETURN,1,,return String::Empty(isolate);,5,250,1
286133,RETURN,-1,,return ret;,3,261,7
286651,RETURN,-1,,"return uv_ip4_addr(ip_address, port, addr);",7,301,1
286665,RETURN,-1,,"return uv_ip6_addr(ip_address, port, addr);",7,313,1
286766,RETURN,-1,,"return handle_scope.EscapeMaybe(
      constructor->NewInstance(env->context(), 1, &type_value));",3,67,9
287551,RETURN,1,,return;,57,203,1
287627,RETURN,1,,return;,5,230,1
287723,RETURN,1,,return;,55,253,1
287746,RETURN,-1,,return;,5,256,1
287857,RETURN,1,,return;,58,287,1
287949,RETURN,1,,return;,55,310,1
288172,RETURN,1,,return 0;,31,372,1
288221,RETURN,-1,,return err;,3,382,6
288339,RETURN,-1,,return {};,9,415,2
288522,RETURN,-1,,return scope.Escape(info);,3,447,9
288589,RETURN,1,,return;,31,11,1
288642,RETURN,1,,return;,31,27,1
288660,RETURN,1,,return;,31,32,1
288677,RETURN,1,,return;,31,37,1
288710,RETURN,1,,return timer_->Stop();,5,48,1
288927,RETURN,-1,,return GetLibuvNowImpl(FromJSObject<BindingData>(receiver));,3,38,1
288939,RETURN,-1,,return static_cast<double>(data->env()->GetNowUint64());,3,42,1
289113,RETURN,-1,,return true;,3,94,1
289135,RETURN,-1,,return info;,3,101,4
289296,RETURN,1,,return;,32,158,1
289518,RETURN,1,,return;,28,24,1
289572,RETURN,-1,,return result;,3,43,3
289672,RETURN,1,,return;,5,88,1
289815,RETURN,-1,,"return AgentWriterHandle(this, id);",3,134,15
289823,RETURN,-1,,"return AgentWriterHandle(this, kDefaultHandleId);",3,138,1
289835,RETURN,1,,return;,5,143,1
289861,RETURN,1,,return;,35,155,1
289905,RETURN,1,,return;,5,167,1
289995,RETURN,1,,return nullptr;,5,187,1
290015,RETURN,-1,,return trace_config;,3,192,5
290040,RETURN,-1,,return categories;,3,202,3
290239,RETURN,-1,,return uv_hrtime() / 1000;,5,40,1
290279,RETURN,-1,,return agent_ == nullptr;,31,60,1
290305,RETURN,-1,,return agent_;,27,68,1
290362,RETURN,-1,,return controller;,5,92,4
290503,RETURN,-1,,return *this;,3,169,5
290555,RETURN,-1,,return agent_ != nullptr && id_ == Agent::kDefaultHandleId;,3,185,1
290569,RETURN,-1,,return agent_ != nullptr ? agent_->GetTracingController() : nullptr;,3,189,1
290744,RETURN,-1,,return trace_object;,3,31,10
290759,RETURN,-1,,return nullptr;,5,38,1
290784,RETURN,-1,,return nullptr;,5,47,1
290800,RETURN,-1,,return nullptr;,5,52,1
290802,RETURN,-1,,return chunk->GetEventAt(event_index);,3,54,13
290895,RETURN,-1,,"return ((static_cast<uint64_t>(chunk_seq) * Capacity() +
          chunk_index * TraceBufferChunk::kChunkSize + event_index) << 1) + id_;",3,83,1
291039,RETURN,-1,,return nullptr;,5,130,2
291041,RETURN,-1,,return current_buf_.load()->AddTraceEvent(handle);,3,132,2
291055,RETURN,-1,,return current_buf_.load()->GetEventByHandle(handle);,3,136,1
291078,RETURN,-1,,return true;,3,142,3
291126,RETURN,-1,,return false;,7,157,1
291128,RETURN,-1,,return true;,3,160,4
291253,RETURN,-1,,return total_chunks_ == max_chunks_ && chunks_[total_chunks_ - 1]->IsFull();,5,28,1
291270,RETURN,-1,,return flushing_;,5,31,1
291292,RETURN,-1,,return max_chunks_ * TraceBufferChunk::kChunkSize;,29,39,1
291830,RETURN,1,,return;,7,147,1
291870,RETURN,1,,return;,18,163,1
292243,RETURN,-1,,return g_agent;,3,21,1
292249,RETURN,-1,,return g_controller;,3,25,1
292263,RETURN,-1,,return tracing::TraceEventHelper::GetTracingController();,3,35,1
292370,RETURN,1,,return &disabled;,42,324,1
292373,RETURN,-1,,return controller->GetCategoryGroupEnabled(group);,5,325,6
292391,RETURN,-1,,return raw_id_;,31,338,1
292397,RETURN,-1,,return scope_;,33,339,1
292463,RETURN,-1,,return scope_;,33,363,1
292469,RETURN,-1,,return raw_id_;,31,364,1
292525,RETURN,-1,,return raw_id_;,31,384,1
292648,RETURN,-1,,return raw_id_;,29,430,1
292654,RETURN,-1,,return scope_;,31,431,1
292682,RETURN,-1,,return str_;,34,452,1
292773,RETURN,1,,return 0;,30,475,1
292775,RETURN,-1,,"return controller->AddTraceEvent(phase, category_group_enabled, name, scope, id,
                                   bind_id, num_args, arg_names, arg_types,
                                   arg_values, arg_convertibles, flags);",3,476,7
293119,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(phase, category_group_enabled, name,
                                         scope, id, bind_id, kZeroNumArgs,
                                         nullptr, nullptr, nullptr, flags);",3,589,1
293170,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(
      phase, category_group_enabled, name, scope, id, bind_id, num_args,
      &arg1_name, &arg_type, &arg_value, flags);",3,603,6
293252,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(
      phase, category_group_enabled, name, scope, id, bind_id, num_args,
      arg_names, arg_types, arg_values, flags);",3,622,9
293473,RETURN,-1,,return result;,3,86,6
293491,RETURN,-1,,"return ""\""NaN\"""";",18,91,3
293495,RETURN,-1,,"return (v < 0.0 ? ""\""-Infinity\"""" : ""\""Infinity\"""");",23,92,6
293504,RETURN,-1,,"return ""0"";",19,93,9
293521,RETURN,-1,,return stream.str();,7,99,14
293530,RETURN,-1,,return std::unique_ptr<TracedValue>(new TracedValue(false));,3,106,1
293544,RETURN,-1,,return std::unique_ptr<TracedValue>(new TracedValue(true));,3,110,1
294158,RETURN,1,,return;,53,83,1
294374,RETURN,1,,return;,53,131,1
294539,RETURN,-1,,return;,5,61,2
294572,RETURN,-1,,return;,5,67,1
294615,RETURN,-1,,return have_callback_;,3,98,1
294642,RETURN,-1,,return listener_;,3,112,2
294689,RETURN,-1,,"return static_cast<UDPWrapBase*>(
      obj->GetAlignedPointerFromInternalField(UDPWrapBase::kUDPWrapBaseField));",3,127,2
295313,RETURN,-1,,"return uv_ip4_addr(address, port, reinterpret_cast<sockaddr_in*>(addr));",7,256,3
295322,RETURN,-1,,"return uv_ip6_addr(address, port, reinterpret_cast<sockaddr_in6*>(addr));",7,258,6
295413,RETURN,1,,return;,5,278,1
295530,RETURN,1,,return;,5,306,1
295723,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,356,2
295786,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,370,2
296093,RETURN,1,,return;,26,464,1
296328,RETURN,1,,return;,58,524,1
296477,RETURN,1,,return UV_EBADF;,26,559,1
296593,RETURN,-1,,return msg_size + 1;,9,585,2
296622,RETURN,1,,return UV_ENOSYS;,30,593,1
296644,RETURN,-1,,return err;,3,610,9
296664,RETURN,-1,,return req_wrap;,3,619,4
296686,RETURN,-1,,return this;,3,634,1
296692,RETURN,-1,,return SocketAddress::FromPeerName(handle_);,3,638,1
296702,RETURN,-1,,return SocketAddress::FromSockName(handle_);,3,642,1
296747,RETURN,1,,return UV_EBADF;,26,651,1
296765,RETURN,-1,,return err;,3,656,5
296806,RETURN,1,,return UV_EBADF;,26,666,1
296808,RETURN,-1,,return uv_udp_recv_stop(&handle_);,3,667,2
296920,RETURN,-1,,return env()->allocate_managed_buffer(suggested_size);,3,695,1
297000,RETURN,-1,,return;,5,715,1
297040,RETURN,-1,,return;,5,729,2
297153,RETURN,-1,,return;,7,752,3
297249,RETURN,-1,,return;,7,771,3
297282,RETURN,-1,,return env->udp_constructor_function()->NewInstance(env->context());,3,786,4
297512,RETURN,1,,return;,72,73,1
297529,RETURN,1,,return;,70,76,1
297580,RETURN,1,,return;,5,88,1
297597,RETURN,-1,,return;,5,96,1
297619,RETURN,1,,return;,72,100,1
297664,RETURN,-1,,return;,5,118,2
297780,RETURN,1,,return default_title;,7,156,1
297801,RETURN,-1,,return buf;,3,165,5
297807,RETURN,-1,,"return SPrintF(""%s[%d]"", GetProcessTitle(""Node.js""), uv_os_getpid());",3,169,1
297835,RETURN,1,,return out;,5,177,1
297872,RETURN,-1,,return out;,3,185,6
297899,RETURN,-1,,return kMicrosecondsPerSecond * tv.tv_sec + tv.tv_usec;,3,196,5
297941,RETURN,-1,,return fd;,5,209,1
297964,RETURN,-1,,return err;,5,215,1
297977,RETURN,-1,,return err;,3,220,12
298002,RETURN,-1,,"return WriteFileSync(path, buf);",3,228,5
298034,RETURN,-1,,return req.result;,5,240,1
298088,RETURN,-1,,return req.result;,7,259,1
298109,RETURN,-1,,return 0;,3,267,15
298167,RETURN,-1,,return contents;,3,282,15
298343,RETURN,-1,,return oss.str();,3,337,15
298358,RETURN,-1,,"return v8::FunctionTemplate::New(isolate,
                                   callback,
                                   Local<v8::Value>(),
                                   signature,
                                   0,
                                   behavior,
                                   side_effect_type,
                                   c_function);",3,347,1
299364,RETURN,-1,,"return String::NewExternalOneByte(isolate, one_byte_resource_)
        .ToLocalChecked();",5,611,1
299376,RETURN,-1,,"return String::NewExternalTwoByte(isolate, two_byte_resource_)
        .ToLocalChecked();",5,614,1
299491,RETURN,1,,return;,5,71,1
299511,RETURN,1,,return;,54,74,1
299642,RETURN,-1,,return;,7,100,1
