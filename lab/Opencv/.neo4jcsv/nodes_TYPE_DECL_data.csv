6,TYPE_DECL,,include\opencv2\dnn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn.hpp,include\opencv2\dnn.hpp:<global>,,false,1,<global>,2
13,TYPE_DECL,,include\opencv2\dnn\all_layers.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\all_layers.hpp,include\opencv2\dnn\all_layers.hpp:<global>,,false,1,<global>,2
141,TYPE_DECL,,include\opencv2\dnn\dict.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\dict.hpp,include\opencv2\dnn\dict.hpp:<global>,,false,1,<global>,5
167,TYPE_DECL,,include\opencv2\dnn\dnn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\dnn.hpp,include\opencv2\dnn\dnn.hpp:<global>,,false,1,<global>,9
173,TYPE_DECL,,,,class DnnNetAccessor,1,include\opencv2\dnn\dnn.hpp,cv.dnn.accessor.DnnNetAccessor,,false,57,DnnNetAccessor,1
179,TYPE_DECL,,include\opencv2\dnn\dnn.inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\dnn.inl.hpp,include\opencv2\dnn\dnn.inl.hpp:<global>,,false,1,<global>,2
1397,TYPE_DECL,,include\opencv2\dnn\layer.details.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\layer.details.hpp,include\opencv2\dnn\layer.details.hpp:<global>,,false,1,<global>,2
1416,TYPE_DECL,,,,"class _LayerStaticRegisterer
{
    String type;
public:

    _LayerStaticRegisterer(const String &layerType, LayerFactory::Constructor layerConstructor)
    {
        this->type = layerType;
        LayerFactory::registerLayer(layerType, layerConstructor);
    }

    ~_LayerStaticRegisterer()
    {
        LayerFactory::unregisterLayer(type);
    }
}",1,include\opencv2\dnn\layer.details.hpp,cv.dnn.details._LayerStaticRegisterer,,false,57,_LayerStaticRegisterer,2
1449,TYPE_DECL,,include\opencv2\dnn\layer.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\layer.hpp,include\opencv2\dnn\layer.hpp:<global>,,false,1,<global>,2
1460,TYPE_DECL,,include\opencv2\dnn\layer_reg.private.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\layer_reg.private.hpp,include\opencv2\dnn\layer_reg.private.hpp:<global>,,false,1,<global>,2
1466,TYPE_DECL,ANY,,,"typedef std::map<std::string, std::vector<LayerFactory::Constructor> > LayerFactory_Impl;",72,include\opencv2\dnn\layer_reg.private.hpp,LayerFactory_Impl,,false,15,LayerFactory_Impl,2
1488,TYPE_DECL,,include\opencv2\dnn\shape_utils.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\shape_utils.hpp,include\opencv2\dnn\shape_utils.hpp:<global>,,false,1,<global>,6
1494,TYPE_DECL,,,,"struct _Range : public cv::Range
{
    _Range(const Range &r) : cv::Range(r) {}
    _Range(int start_, int size_ = 1) : cv::Range(start_, start_ + size_) {}
}",1,include\opencv2\dnn\shape_utils.hpp,cv.dnn._Range,cv.Range,false,57,_Range,2
2351,TYPE_DECL,,include\opencv2\dnn\utils\debug_utils.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\utils\debug_utils.hpp,include\opencv2\dnn\utils\debug_utils.hpp:<global>,,false,1,<global>,2
2361,TYPE_DECL,,include\opencv2\dnn\utils\inference_engine.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\utils\inference_engine.hpp,include\opencv2\dnn\utils\inference_engine.hpp:<global>,,false,1,<global>,2
2369,TYPE_DECL,,include\opencv2\dnn\version.hpp:<global>,NAMESPACE_BLOCK,<global>,1,include\opencv2\dnn\version.hpp,include\opencv2\dnn\version.hpp:<global>,,false,1,<global>,1
2400,TYPE_DECL,,misc\caffe\opencv-caffe.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\caffe\opencv-caffe.pb.cc,misc\caffe\opencv-caffe.pb.cc:<global>,,false,1,<global>,12
2410,TYPE_DECL,,,,"struct BlobShapeDefaultTypeInternal {
  constexpr BlobShapeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlobShapeDefaultTypeInternal() {}
  union {
    BlobShape _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BlobShapeDefaultTypeInternal,,false,24,BlobShapeDefaultTypeInternal,2
2419,TYPE_DECL,,,,"union {
    BlobShape _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BlobShapeDefaultTypeInternal.anonymous_composite_type_0,,false,28,opencv_caffe.BlobShapeDefaultTypeInternal.anonymous_composite_type_0,3
2428,TYPE_DECL,,,,"struct BlobProtoDefaultTypeInternal {
  constexpr BlobProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlobProtoDefaultTypeInternal() {}
  union {
    BlobProto _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BlobProtoDefaultTypeInternal,,false,47,BlobProtoDefaultTypeInternal,6
2437,TYPE_DECL,,,,"union {
    BlobProto _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BlobProtoDefaultTypeInternal.anonymous_composite_type_1,,false,51,opencv_caffe.BlobProtoDefaultTypeInternal.anonymous_composite_type_1,3
2446,TYPE_DECL,,,,"struct BlobProtoVectorDefaultTypeInternal {
  constexpr BlobProtoVectorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlobProtoVectorDefaultTypeInternal() {}
  union {
    BlobProtoVector _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BlobProtoVectorDefaultTypeInternal,,false,59,BlobProtoVectorDefaultTypeInternal,10
2455,TYPE_DECL,,,,"union {
    BlobProtoVector _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BlobProtoVectorDefaultTypeInternal.anonymous_composite_type_2,,false,63,opencv_caffe.BlobProtoVectorDefaultTypeInternal.anonymous_composite_type_2,3
2464,TYPE_DECL,,,,"struct PermuteParameterDefaultTypeInternal {
  constexpr PermuteParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PermuteParameterDefaultTypeInternal() {}
  union {
    PermuteParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PermuteParameterDefaultTypeInternal,,false,71,PermuteParameterDefaultTypeInternal,14
2473,TYPE_DECL,,,,"union {
    PermuteParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PermuteParameterDefaultTypeInternal.anonymous_composite_type_3,,false,75,opencv_caffe.PermuteParameterDefaultTypeInternal.anonymous_composite_type_3,3
2482,TYPE_DECL,,,,"struct NormalizeBBoxParameterDefaultTypeInternal {
  constexpr NormalizeBBoxParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NormalizeBBoxParameterDefaultTypeInternal() {}
  union {
    NormalizeBBoxParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NormalizeBBoxParameterDefaultTypeInternal,,false,86,NormalizeBBoxParameterDefaultTypeInternal,18
2491,TYPE_DECL,,,,"union {
    NormalizeBBoxParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NormalizeBBoxParameterDefaultTypeInternal.anonymous_composite_type_4,,false,90,opencv_caffe.NormalizeBBoxParameterDefaultTypeInternal.anonymous_composite_type_4,3
2500,TYPE_DECL,,,,"struct PriorBoxParameterDefaultTypeInternal {
  constexpr PriorBoxParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PriorBoxParameterDefaultTypeInternal() {}
  union {
    PriorBoxParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PriorBoxParameterDefaultTypeInternal,,false,114,PriorBoxParameterDefaultTypeInternal,22
2509,TYPE_DECL,,,,"union {
    PriorBoxParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PriorBoxParameterDefaultTypeInternal.anonymous_composite_type_5,,false,118,opencv_caffe.PriorBoxParameterDefaultTypeInternal.anonymous_composite_type_5,3
2518,TYPE_DECL,,,,"struct DetectionOutputParameterDefaultTypeInternal {
  constexpr DetectionOutputParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DetectionOutputParameterDefaultTypeInternal() {}
  union {
    DetectionOutputParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DetectionOutputParameterDefaultTypeInternal,,false,137,DetectionOutputParameterDefaultTypeInternal,26
2527,TYPE_DECL,,,,"union {
    DetectionOutputParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DetectionOutputParameterDefaultTypeInternal.anonymous_composite_type_6,,false,141,opencv_caffe.DetectionOutputParameterDefaultTypeInternal.anonymous_composite_type_6,3
2536,TYPE_DECL,,,,"struct DatumDefaultTypeInternal {
  constexpr DatumDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DatumDefaultTypeInternal() {}
  union {
    Datum _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DatumDefaultTypeInternal,,false,155,DatumDefaultTypeInternal,30
2545,TYPE_DECL,,,,"union {
    Datum _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DatumDefaultTypeInternal.anonymous_composite_type_7,,false,159,opencv_caffe.DatumDefaultTypeInternal.anonymous_composite_type_7,3
2554,TYPE_DECL,,,,"struct FillerParameterDefaultTypeInternal {
  constexpr FillerParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FillerParameterDefaultTypeInternal() {}
  union {
    FillerParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.FillerParameterDefaultTypeInternal,,false,175,FillerParameterDefaultTypeInternal,34
2563,TYPE_DECL,,,,"union {
    FillerParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.FillerParameterDefaultTypeInternal.anonymous_composite_type_8,,false,179,opencv_caffe.FillerParameterDefaultTypeInternal.anonymous_composite_type_8,3
2572,TYPE_DECL,,,,"struct NetParameterDefaultTypeInternal {
  constexpr NetParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NetParameterDefaultTypeInternal() {}
  union {
    NetParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NetParameterDefaultTypeInternal,,false,195,NetParameterDefaultTypeInternal,38
2581,TYPE_DECL,,,,"union {
    NetParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NetParameterDefaultTypeInternal.anonymous_composite_type_9,,false,199,opencv_caffe.NetParameterDefaultTypeInternal.anonymous_composite_type_9,3
2590,TYPE_DECL,,,,"struct SolverParameterDefaultTypeInternal {
  constexpr SolverParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SolverParameterDefaultTypeInternal() {}
  union {
    SolverParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SolverParameterDefaultTypeInternal,,false,249,SolverParameterDefaultTypeInternal,42
2599,TYPE_DECL,,,,"union {
    SolverParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SolverParameterDefaultTypeInternal.anonymous_composite_type_10,,false,253,opencv_caffe.SolverParameterDefaultTypeInternal.anonymous_composite_type_10,3
2608,TYPE_DECL,,,,"struct SolverStateDefaultTypeInternal {
  constexpr SolverStateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SolverStateDefaultTypeInternal() {}
  union {
    SolverState _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SolverStateDefaultTypeInternal,,false,264,SolverStateDefaultTypeInternal,46
2617,TYPE_DECL,,,,"union {
    SolverState _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SolverStateDefaultTypeInternal.anonymous_composite_type_11,,false,268,opencv_caffe.SolverStateDefaultTypeInternal.anonymous_composite_type_11,3
2626,TYPE_DECL,,,,"struct NetStateDefaultTypeInternal {
  constexpr NetStateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NetStateDefaultTypeInternal() {}
  union {
    NetState _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NetStateDefaultTypeInternal,,false,279,NetStateDefaultTypeInternal,50
2635,TYPE_DECL,,,,"union {
    NetState _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NetStateDefaultTypeInternal.anonymous_composite_type_12,,false,283,opencv_caffe.NetStateDefaultTypeInternal.anonymous_composite_type_12,3
2644,TYPE_DECL,,,,"struct NetStateRuleDefaultTypeInternal {
  constexpr NetStateRuleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NetStateRuleDefaultTypeInternal() {}
  union {
    NetStateRule _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NetStateRuleDefaultTypeInternal,,false,296,NetStateRuleDefaultTypeInternal,54
2653,TYPE_DECL,,,,"union {
    NetStateRule _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NetStateRuleDefaultTypeInternal.anonymous_composite_type_13,,false,300,opencv_caffe.NetStateRuleDefaultTypeInternal.anonymous_composite_type_13,3
2662,TYPE_DECL,,,,"struct ParamSpecDefaultTypeInternal {
  constexpr ParamSpecDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParamSpecDefaultTypeInternal() {}
  union {
    ParamSpec _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ParamSpecDefaultTypeInternal,,false,312,ParamSpecDefaultTypeInternal,58
2671,TYPE_DECL,,,,"union {
    ParamSpec _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ParamSpecDefaultTypeInternal.anonymous_composite_type_14,,false,316,opencv_caffe.ParamSpecDefaultTypeInternal.anonymous_composite_type_14,3
2680,TYPE_DECL,,,,"struct LayerParameterDefaultTypeInternal {
  constexpr LayerParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LayerParameterDefaultTypeInternal() {}
  union {
    LayerParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.LayerParameterDefaultTypeInternal,,false,389,LayerParameterDefaultTypeInternal,62
2689,TYPE_DECL,,,,"union {
    LayerParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.LayerParameterDefaultTypeInternal.anonymous_composite_type_15,,false,393,opencv_caffe.LayerParameterDefaultTypeInternal.anonymous_composite_type_15,3
2698,TYPE_DECL,,,,"struct TransformationParameterDefaultTypeInternal {
  constexpr TransformationParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TransformationParameterDefaultTypeInternal() {}
  union {
    TransformationParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.TransformationParameterDefaultTypeInternal,,false,407,TransformationParameterDefaultTypeInternal,66
2707,TYPE_DECL,,,,"union {
    TransformationParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.TransformationParameterDefaultTypeInternal.anonymous_composite_type_16,,false,411,opencv_caffe.TransformationParameterDefaultTypeInternal.anonymous_composite_type_16,3
2716,TYPE_DECL,,,,"struct LossParameterDefaultTypeInternal {
  constexpr LossParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LossParameterDefaultTypeInternal() {}
  union {
    LossParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.LossParameterDefaultTypeInternal,,false,422,LossParameterDefaultTypeInternal,70
2725,TYPE_DECL,,,,"union {
    LossParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.LossParameterDefaultTypeInternal.anonymous_composite_type_17,,false,426,opencv_caffe.LossParameterDefaultTypeInternal.anonymous_composite_type_17,3
2734,TYPE_DECL,,,,"struct AccuracyParameterDefaultTypeInternal {
  constexpr AccuracyParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AccuracyParameterDefaultTypeInternal() {}
  union {
    AccuracyParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.AccuracyParameterDefaultTypeInternal,,false,436,AccuracyParameterDefaultTypeInternal,74
2743,TYPE_DECL,,,,"union {
    AccuracyParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.AccuracyParameterDefaultTypeInternal.anonymous_composite_type_18,,false,440,opencv_caffe.AccuracyParameterDefaultTypeInternal.anonymous_composite_type_18,3
2752,TYPE_DECL,,,,"struct ArgMaxParameterDefaultTypeInternal {
  constexpr ArgMaxParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArgMaxParameterDefaultTypeInternal() {}
  union {
    ArgMaxParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ArgMaxParameterDefaultTypeInternal,,false,450,ArgMaxParameterDefaultTypeInternal,78
2761,TYPE_DECL,,,,"union {
    ArgMaxParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ArgMaxParameterDefaultTypeInternal.anonymous_composite_type_19,,false,454,opencv_caffe.ArgMaxParameterDefaultTypeInternal.anonymous_composite_type_19,3
2770,TYPE_DECL,,,,"struct ConcatParameterDefaultTypeInternal {
  constexpr ConcatParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConcatParameterDefaultTypeInternal() {}
  union {
    ConcatParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ConcatParameterDefaultTypeInternal,,false,463,ConcatParameterDefaultTypeInternal,82
2779,TYPE_DECL,,,,"union {
    ConcatParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ConcatParameterDefaultTypeInternal.anonymous_composite_type_20,,false,467,opencv_caffe.ConcatParameterDefaultTypeInternal.anonymous_composite_type_20,3
2788,TYPE_DECL,,,,"struct BatchNormParameterDefaultTypeInternal {
  constexpr BatchNormParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BatchNormParameterDefaultTypeInternal() {}
  union {
    BatchNormParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BatchNormParameterDefaultTypeInternal,,false,478,BatchNormParameterDefaultTypeInternal,86
2797,TYPE_DECL,,,,"union {
    BatchNormParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BatchNormParameterDefaultTypeInternal.anonymous_composite_type_21,,false,482,opencv_caffe.BatchNormParameterDefaultTypeInternal.anonymous_composite_type_21,3
2806,TYPE_DECL,,,,"struct BiasParameterDefaultTypeInternal {
  constexpr BiasParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BiasParameterDefaultTypeInternal() {}
  union {
    BiasParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BiasParameterDefaultTypeInternal,,false,492,BiasParameterDefaultTypeInternal,90
2815,TYPE_DECL,,,,"union {
    BiasParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.BiasParameterDefaultTypeInternal.anonymous_composite_type_22,,false,496,opencv_caffe.BiasParameterDefaultTypeInternal.anonymous_composite_type_22,3
2824,TYPE_DECL,,,,"struct ContrastiveLossParameterDefaultTypeInternal {
  constexpr ContrastiveLossParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ContrastiveLossParameterDefaultTypeInternal() {}
  union {
    ContrastiveLossParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ContrastiveLossParameterDefaultTypeInternal,,false,505,ContrastiveLossParameterDefaultTypeInternal,94
2833,TYPE_DECL,,,,"union {
    ContrastiveLossParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ContrastiveLossParameterDefaultTypeInternal.anonymous_composite_type_23,,false,509,opencv_caffe.ContrastiveLossParameterDefaultTypeInternal.anonymous_composite_type_23,3
2842,TYPE_DECL,,,,"struct ConvolutionParameterDefaultTypeInternal {
  constexpr ConvolutionParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConvolutionParameterDefaultTypeInternal() {}
  union {
    ConvolutionParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ConvolutionParameterDefaultTypeInternal,,false,535,ConvolutionParameterDefaultTypeInternal,98
2851,TYPE_DECL,,,,"union {
    ConvolutionParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ConvolutionParameterDefaultTypeInternal.anonymous_composite_type_24,,false,539,opencv_caffe.ConvolutionParameterDefaultTypeInternal.anonymous_composite_type_24,3
2860,TYPE_DECL,,,,"struct CropParameterDefaultTypeInternal {
  constexpr CropParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CropParameterDefaultTypeInternal() {}
  union {
    CropParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.CropParameterDefaultTypeInternal,,false,548,CropParameterDefaultTypeInternal,102
2869,TYPE_DECL,,,,"union {
    CropParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.CropParameterDefaultTypeInternal.anonymous_composite_type_25,,false,552,opencv_caffe.CropParameterDefaultTypeInternal.anonymous_composite_type_25,3
2878,TYPE_DECL,,,,"struct DataParameterDefaultTypeInternal {
  constexpr DataParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataParameterDefaultTypeInternal() {}
  union {
    DataParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DataParameterDefaultTypeInternal,,false,570,DataParameterDefaultTypeInternal,106
2887,TYPE_DECL,,,,"union {
    DataParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DataParameterDefaultTypeInternal.anonymous_composite_type_26,,false,574,opencv_caffe.DataParameterDefaultTypeInternal.anonymous_composite_type_26,3
2896,TYPE_DECL,,,,"struct NonMaximumSuppressionParameterDefaultTypeInternal {
  constexpr NonMaximumSuppressionParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NonMaximumSuppressionParameterDefaultTypeInternal() {}
  union {
    NonMaximumSuppressionParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NonMaximumSuppressionParameterDefaultTypeInternal,,false,584,NonMaximumSuppressionParameterDefaultTypeInternal,110
2905,TYPE_DECL,,,,"union {
    NonMaximumSuppressionParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NonMaximumSuppressionParameterDefaultTypeInternal.anonymous_composite_type_27,,false,588,opencv_caffe.NonMaximumSuppressionParameterDefaultTypeInternal.anonymous_composite_type_27,3
2914,TYPE_DECL,,,,"struct SaveOutputParameterDefaultTypeInternal {
  constexpr SaveOutputParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SaveOutputParameterDefaultTypeInternal() {}
  union {
    SaveOutputParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SaveOutputParameterDefaultTypeInternal,,false,601,SaveOutputParameterDefaultTypeInternal,114
2923,TYPE_DECL,,,,"union {
    SaveOutputParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SaveOutputParameterDefaultTypeInternal.anonymous_composite_type_28,,false,605,opencv_caffe.SaveOutputParameterDefaultTypeInternal.anonymous_composite_type_28,3
2932,TYPE_DECL,,,,"struct DropoutParameterDefaultTypeInternal {
  constexpr DropoutParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DropoutParameterDefaultTypeInternal() {}
  union {
    DropoutParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DropoutParameterDefaultTypeInternal,,false,614,DropoutParameterDefaultTypeInternal,118
2941,TYPE_DECL,,,,"union {
    DropoutParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DropoutParameterDefaultTypeInternal.anonymous_composite_type_29,,false,618,opencv_caffe.DropoutParameterDefaultTypeInternal.anonymous_composite_type_29,3
2950,TYPE_DECL,,,,"struct DummyDataParameterDefaultTypeInternal {
  constexpr DummyDataParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DummyDataParameterDefaultTypeInternal() {}
  union {
    DummyDataParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DummyDataParameterDefaultTypeInternal,,false,631,DummyDataParameterDefaultTypeInternal,122
2959,TYPE_DECL,,,,"union {
    DummyDataParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.DummyDataParameterDefaultTypeInternal.anonymous_composite_type_30,,false,635,opencv_caffe.DummyDataParameterDefaultTypeInternal.anonymous_composite_type_30,3
2968,TYPE_DECL,,,,"struct EltwiseParameterDefaultTypeInternal {
  constexpr EltwiseParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EltwiseParameterDefaultTypeInternal() {}
  union {
    EltwiseParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.EltwiseParameterDefaultTypeInternal,,false,646,EltwiseParameterDefaultTypeInternal,126
2977,TYPE_DECL,,,,"union {
    EltwiseParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.EltwiseParameterDefaultTypeInternal.anonymous_composite_type_31,,false,650,opencv_caffe.EltwiseParameterDefaultTypeInternal.anonymous_composite_type_31,3
2986,TYPE_DECL,,,,"struct ELUParameterDefaultTypeInternal {
  constexpr ELUParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ELUParameterDefaultTypeInternal() {}
  union {
    ELUParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ELUParameterDefaultTypeInternal,,false,658,ELUParameterDefaultTypeInternal,130
2995,TYPE_DECL,,,,"union {
    ELUParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ELUParameterDefaultTypeInternal.anonymous_composite_type_32,,false,662,opencv_caffe.ELUParameterDefaultTypeInternal.anonymous_composite_type_32,3
3004,TYPE_DECL,,,,"struct EmbedParameterDefaultTypeInternal {
  constexpr EmbedParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EmbedParameterDefaultTypeInternal() {}
  union {
    EmbedParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.EmbedParameterDefaultTypeInternal,,false,674,EmbedParameterDefaultTypeInternal,134
3013,TYPE_DECL,,,,"union {
    EmbedParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.EmbedParameterDefaultTypeInternal.anonymous_composite_type_33,,false,678,opencv_caffe.EmbedParameterDefaultTypeInternal.anonymous_composite_type_33,3
3022,TYPE_DECL,,,,"struct ExpParameterDefaultTypeInternal {
  constexpr ExpParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExpParameterDefaultTypeInternal() {}
  union {
    ExpParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ExpParameterDefaultTypeInternal,,false,688,ExpParameterDefaultTypeInternal,138
3031,TYPE_DECL,,,,"union {
    ExpParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ExpParameterDefaultTypeInternal.anonymous_composite_type_34,,false,692,opencv_caffe.ExpParameterDefaultTypeInternal.anonymous_composite_type_34,3
3040,TYPE_DECL,,,,"struct FlattenParameterDefaultTypeInternal {
  constexpr FlattenParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FlattenParameterDefaultTypeInternal() {}
  union {
    FlattenParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.FlattenParameterDefaultTypeInternal,,false,701,FlattenParameterDefaultTypeInternal,142
3049,TYPE_DECL,,,,"union {
    FlattenParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.FlattenParameterDefaultTypeInternal.anonymous_composite_type_35,,false,705,opencv_caffe.FlattenParameterDefaultTypeInternal.anonymous_composite_type_35,3
3058,TYPE_DECL,,,,"struct HDF5DataParameterDefaultTypeInternal {
  constexpr HDF5DataParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HDF5DataParameterDefaultTypeInternal() {}
  union {
    HDF5DataParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.HDF5DataParameterDefaultTypeInternal,,false,715,HDF5DataParameterDefaultTypeInternal,146
3067,TYPE_DECL,,,,"union {
    HDF5DataParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.HDF5DataParameterDefaultTypeInternal.anonymous_composite_type_36,,false,719,opencv_caffe.HDF5DataParameterDefaultTypeInternal.anonymous_composite_type_36,3
3076,TYPE_DECL,,,,"struct HDF5OutputParameterDefaultTypeInternal {
  constexpr HDF5OutputParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HDF5OutputParameterDefaultTypeInternal() {}
  union {
    HDF5OutputParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.HDF5OutputParameterDefaultTypeInternal,,false,727,HDF5OutputParameterDefaultTypeInternal,150
3085,TYPE_DECL,,,,"union {
    HDF5OutputParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.HDF5OutputParameterDefaultTypeInternal.anonymous_composite_type_37,,false,731,opencv_caffe.HDF5OutputParameterDefaultTypeInternal.anonymous_composite_type_37,3
3094,TYPE_DECL,,,,"struct HingeLossParameterDefaultTypeInternal {
  constexpr HingeLossParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HingeLossParameterDefaultTypeInternal() {}
  union {
    HingeLossParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.HingeLossParameterDefaultTypeInternal,,false,740,HingeLossParameterDefaultTypeInternal,154
3103,TYPE_DECL,,,,"union {
    HingeLossParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.HingeLossParameterDefaultTypeInternal.anonymous_composite_type_38,,false,744,opencv_caffe.HingeLossParameterDefaultTypeInternal.anonymous_composite_type_38,3
3112,TYPE_DECL,,,,"struct ImageDataParameterDefaultTypeInternal {
  constexpr ImageDataParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ImageDataParameterDefaultTypeInternal() {}
  union {
    ImageDataParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ImageDataParameterDefaultTypeInternal,,false,763,ImageDataParameterDefaultTypeInternal,158
3121,TYPE_DECL,,,,"union {
    ImageDataParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ImageDataParameterDefaultTypeInternal.anonymous_composite_type_39,,false,767,opencv_caffe.ImageDataParameterDefaultTypeInternal.anonymous_composite_type_39,3
3130,TYPE_DECL,,,,"struct InfogainLossParameterDefaultTypeInternal {
  constexpr InfogainLossParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InfogainLossParameterDefaultTypeInternal() {}
  union {
    InfogainLossParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.InfogainLossParameterDefaultTypeInternal,,false,775,InfogainLossParameterDefaultTypeInternal,162
3139,TYPE_DECL,,,,"union {
    InfogainLossParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.InfogainLossParameterDefaultTypeInternal.anonymous_composite_type_40,,false,779,opencv_caffe.InfogainLossParameterDefaultTypeInternal.anonymous_composite_type_40,3
3148,TYPE_DECL,,,,"struct InnerProductParameterDefaultTypeInternal {
  constexpr InnerProductParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InnerProductParameterDefaultTypeInternal() {}
  union {
    InnerProductParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.InnerProductParameterDefaultTypeInternal,,false,792,InnerProductParameterDefaultTypeInternal,166
3157,TYPE_DECL,,,,"union {
    InnerProductParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.InnerProductParameterDefaultTypeInternal.anonymous_composite_type_41,,false,796,opencv_caffe.InnerProductParameterDefaultTypeInternal.anonymous_composite_type_41,3
3166,TYPE_DECL,,,,"struct InputParameterDefaultTypeInternal {
  constexpr InputParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InputParameterDefaultTypeInternal() {}
  union {
    InputParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.InputParameterDefaultTypeInternal,,false,804,InputParameterDefaultTypeInternal,170
3175,TYPE_DECL,,,,"union {
    InputParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.InputParameterDefaultTypeInternal.anonymous_composite_type_42,,false,808,opencv_caffe.InputParameterDefaultTypeInternal.anonymous_composite_type_42,3
3184,TYPE_DECL,,,,"struct LogParameterDefaultTypeInternal {
  constexpr LogParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LogParameterDefaultTypeInternal() {}
  union {
    LogParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.LogParameterDefaultTypeInternal,,false,818,LogParameterDefaultTypeInternal,174
3193,TYPE_DECL,,,,"union {
    LogParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.LogParameterDefaultTypeInternal.anonymous_composite_type_43,,false,822,opencv_caffe.LogParameterDefaultTypeInternal.anonymous_composite_type_43,3
3202,TYPE_DECL,,,,"struct LRNParameterDefaultTypeInternal {
  constexpr LRNParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LRNParameterDefaultTypeInternal() {}
  union {
    LRNParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.LRNParameterDefaultTypeInternal,,false,837,LRNParameterDefaultTypeInternal,178
3211,TYPE_DECL,,,,"union {
    LRNParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.LRNParameterDefaultTypeInternal.anonymous_composite_type_44,,false,841,opencv_caffe.LRNParameterDefaultTypeInternal.anonymous_composite_type_44,3
3220,TYPE_DECL,,,,"struct MemoryDataParameterDefaultTypeInternal {
  constexpr MemoryDataParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryDataParameterDefaultTypeInternal() {}
  union {
    MemoryDataParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.MemoryDataParameterDefaultTypeInternal,,false,852,MemoryDataParameterDefaultTypeInternal,182
3229,TYPE_DECL,,,,"union {
    MemoryDataParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.MemoryDataParameterDefaultTypeInternal.anonymous_composite_type_45,,false,856,opencv_caffe.MemoryDataParameterDefaultTypeInternal.anonymous_composite_type_45,3
3238,TYPE_DECL,,,,"struct MVNParameterDefaultTypeInternal {
  constexpr MVNParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MVNParameterDefaultTypeInternal() {}
  union {
    MVNParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.MVNParameterDefaultTypeInternal,,false,866,MVNParameterDefaultTypeInternal,186
3247,TYPE_DECL,,,,"union {
    MVNParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.MVNParameterDefaultTypeInternal.anonymous_composite_type_46,,false,870,opencv_caffe.MVNParameterDefaultTypeInternal.anonymous_composite_type_46,3
3256,TYPE_DECL,,,,"struct ParameterParameterDefaultTypeInternal {
  constexpr ParameterParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParameterParameterDefaultTypeInternal() {}
  union {
    ParameterParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ParameterParameterDefaultTypeInternal,,false,878,ParameterParameterDefaultTypeInternal,190
3265,TYPE_DECL,,,,"union {
    ParameterParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ParameterParameterDefaultTypeInternal.anonymous_composite_type_47,,false,882,opencv_caffe.ParameterParameterDefaultTypeInternal.anonymous_composite_type_47,3
3274,TYPE_DECL,,,,"struct PoolingParameterDefaultTypeInternal {
  constexpr PoolingParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PoolingParameterDefaultTypeInternal() {}
  union {
    PoolingParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PoolingParameterDefaultTypeInternal,,false,904,PoolingParameterDefaultTypeInternal,194
3283,TYPE_DECL,,,,"union {
    PoolingParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PoolingParameterDefaultTypeInternal.anonymous_composite_type_48,,false,908,opencv_caffe.PoolingParameterDefaultTypeInternal.anonymous_composite_type_48,3
3292,TYPE_DECL,,,,"struct PowerParameterDefaultTypeInternal {
  constexpr PowerParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PowerParameterDefaultTypeInternal() {}
  union {
    PowerParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PowerParameterDefaultTypeInternal,,false,918,PowerParameterDefaultTypeInternal,198
3301,TYPE_DECL,,,,"union {
    PowerParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PowerParameterDefaultTypeInternal.anonymous_composite_type_49,,false,922,opencv_caffe.PowerParameterDefaultTypeInternal.anonymous_composite_type_49,3
3310,TYPE_DECL,,,,"struct PythonParameterDefaultTypeInternal {
  constexpr PythonParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PythonParameterDefaultTypeInternal() {}
  union {
    PythonParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PythonParameterDefaultTypeInternal,,false,933,PythonParameterDefaultTypeInternal,202
3319,TYPE_DECL,,,,"union {
    PythonParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PythonParameterDefaultTypeInternal.anonymous_composite_type_50,,false,937,opencv_caffe.PythonParameterDefaultTypeInternal.anonymous_composite_type_50,3
3328,TYPE_DECL,,,,"struct RecurrentParameterDefaultTypeInternal {
  constexpr RecurrentParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RecurrentParameterDefaultTypeInternal() {}
  union {
    RecurrentParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.RecurrentParameterDefaultTypeInternal,,false,949,RecurrentParameterDefaultTypeInternal,206
3337,TYPE_DECL,,,,"union {
    RecurrentParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.RecurrentParameterDefaultTypeInternal.anonymous_composite_type_51,,false,953,opencv_caffe.RecurrentParameterDefaultTypeInternal.anonymous_composite_type_51,3
3346,TYPE_DECL,,,,"struct ReductionParameterDefaultTypeInternal {
  constexpr ReductionParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReductionParameterDefaultTypeInternal() {}
  union {
    ReductionParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ReductionParameterDefaultTypeInternal,,false,964,ReductionParameterDefaultTypeInternal,210
3355,TYPE_DECL,,,,"union {
    ReductionParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ReductionParameterDefaultTypeInternal.anonymous_composite_type_52,,false,968,opencv_caffe.ReductionParameterDefaultTypeInternal.anonymous_composite_type_52,3
3364,TYPE_DECL,,,,"struct ReLUParameterDefaultTypeInternal {
  constexpr ReLUParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReLUParameterDefaultTypeInternal() {}
  union {
    ReLUParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ReLUParameterDefaultTypeInternal,,false,978,ReLUParameterDefaultTypeInternal,214
3373,TYPE_DECL,,,,"union {
    ReLUParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ReLUParameterDefaultTypeInternal.anonymous_composite_type_53,,false,982,opencv_caffe.ReLUParameterDefaultTypeInternal.anonymous_composite_type_53,3
3382,TYPE_DECL,,,,"struct ReshapeParameterDefaultTypeInternal {
  constexpr ReshapeParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReshapeParameterDefaultTypeInternal() {}
  union {
    ReshapeParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ReshapeParameterDefaultTypeInternal,,false,992,ReshapeParameterDefaultTypeInternal,218
3391,TYPE_DECL,,,,"union {
    ReshapeParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ReshapeParameterDefaultTypeInternal.anonymous_composite_type_54,,false,996,opencv_caffe.ReshapeParameterDefaultTypeInternal.anonymous_composite_type_54,3
3400,TYPE_DECL,,,,"struct ScaleParameterDefaultTypeInternal {
  constexpr ScaleParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ScaleParameterDefaultTypeInternal() {}
  union {
    ScaleParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ScaleParameterDefaultTypeInternal,,false,1008,ScaleParameterDefaultTypeInternal,222
3409,TYPE_DECL,,,,"union {
    ScaleParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ScaleParameterDefaultTypeInternal.anonymous_composite_type_55,,false,1012,opencv_caffe.ScaleParameterDefaultTypeInternal.anonymous_composite_type_55,3
3418,TYPE_DECL,,,,"struct SigmoidParameterDefaultTypeInternal {
  constexpr SigmoidParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SigmoidParameterDefaultTypeInternal() {}
  union {
    SigmoidParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SigmoidParameterDefaultTypeInternal,,false,1021,SigmoidParameterDefaultTypeInternal,226
3427,TYPE_DECL,,,,"union {
    SigmoidParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SigmoidParameterDefaultTypeInternal.anonymous_composite_type_56,,false,1025,opencv_caffe.SigmoidParameterDefaultTypeInternal.anonymous_composite_type_56,3
3436,TYPE_DECL,,,,"struct SliceParameterDefaultTypeInternal {
  constexpr SliceParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SliceParameterDefaultTypeInternal() {}
  union {
    SliceParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SliceParameterDefaultTypeInternal,,false,1035,SliceParameterDefaultTypeInternal,230
3445,TYPE_DECL,,,,"union {
    SliceParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SliceParameterDefaultTypeInternal.anonymous_composite_type_57,,false,1039,opencv_caffe.SliceParameterDefaultTypeInternal.anonymous_composite_type_57,3
3454,TYPE_DECL,,,,"struct SoftmaxParameterDefaultTypeInternal {
  constexpr SoftmaxParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SoftmaxParameterDefaultTypeInternal() {}
  union {
    SoftmaxParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SoftmaxParameterDefaultTypeInternal,,false,1049,SoftmaxParameterDefaultTypeInternal,234
3463,TYPE_DECL,,,,"union {
    SoftmaxParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SoftmaxParameterDefaultTypeInternal.anonymous_composite_type_58,,false,1053,opencv_caffe.SoftmaxParameterDefaultTypeInternal.anonymous_composite_type_58,3
3472,TYPE_DECL,,,,"struct TanHParameterDefaultTypeInternal {
  constexpr TanHParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanHParameterDefaultTypeInternal() {}
  union {
    TanHParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.TanHParameterDefaultTypeInternal,,false,1062,TanHParameterDefaultTypeInternal,238
3481,TYPE_DECL,,,,"union {
    TanHParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.TanHParameterDefaultTypeInternal.anonymous_composite_type_59,,false,1066,opencv_caffe.TanHParameterDefaultTypeInternal.anonymous_composite_type_59,3
3490,TYPE_DECL,,,,"struct TileParameterDefaultTypeInternal {
  constexpr TileParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TileParameterDefaultTypeInternal() {}
  union {
    TileParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.TileParameterDefaultTypeInternal,,false,1075,TileParameterDefaultTypeInternal,242
3499,TYPE_DECL,,,,"union {
    TileParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.TileParameterDefaultTypeInternal.anonymous_composite_type_60,,false,1079,opencv_caffe.TileParameterDefaultTypeInternal.anonymous_composite_type_60,3
3508,TYPE_DECL,,,,"struct ThresholdParameterDefaultTypeInternal {
  constexpr ThresholdParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ThresholdParameterDefaultTypeInternal() {}
  union {
    ThresholdParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ThresholdParameterDefaultTypeInternal,,false,1087,ThresholdParameterDefaultTypeInternal,246
3517,TYPE_DECL,,,,"union {
    ThresholdParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ThresholdParameterDefaultTypeInternal.anonymous_composite_type_61,,false,1091,opencv_caffe.ThresholdParameterDefaultTypeInternal.anonymous_composite_type_61,3
3526,TYPE_DECL,,,,"struct WindowDataParameterDefaultTypeInternal {
  constexpr WindowDataParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WindowDataParameterDefaultTypeInternal() {}
  union {
    WindowDataParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.WindowDataParameterDefaultTypeInternal,,false,1111,WindowDataParameterDefaultTypeInternal,250
3535,TYPE_DECL,,,,"union {
    WindowDataParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.WindowDataParameterDefaultTypeInternal.anonymous_composite_type_62,,false,1115,opencv_caffe.WindowDataParameterDefaultTypeInternal.anonymous_composite_type_62,3
3544,TYPE_DECL,,,,"struct SPPParameterDefaultTypeInternal {
  constexpr SPPParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SPPParameterDefaultTypeInternal() {}
  union {
    SPPParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SPPParameterDefaultTypeInternal,,false,1127,SPPParameterDefaultTypeInternal,254
3553,TYPE_DECL,,,,"union {
    SPPParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.SPPParameterDefaultTypeInternal.anonymous_composite_type_63,,false,1131,opencv_caffe.SPPParameterDefaultTypeInternal.anonymous_composite_type_63,3
3562,TYPE_DECL,,,,"struct V1LayerParameterDefaultTypeInternal {
  constexpr V1LayerParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~V1LayerParameterDefaultTypeInternal() {}
  union {
    V1LayerParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.V1LayerParameterDefaultTypeInternal,,false,1182,V1LayerParameterDefaultTypeInternal,258
3571,TYPE_DECL,,,,"union {
    V1LayerParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.V1LayerParameterDefaultTypeInternal.anonymous_composite_type_64,,false,1186,opencv_caffe.V1LayerParameterDefaultTypeInternal.anonymous_composite_type_64,3
3580,TYPE_DECL,,,,"struct V0LayerParameterDefaultTypeInternal {
  constexpr V0LayerParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~V0LayerParameterDefaultTypeInternal() {}
  union {
    V0LayerParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.V0LayerParameterDefaultTypeInternal,,false,1232,V0LayerParameterDefaultTypeInternal,262
3589,TYPE_DECL,,,,"union {
    V0LayerParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.V0LayerParameterDefaultTypeInternal.anonymous_composite_type_65,,false,1236,opencv_caffe.V0LayerParameterDefaultTypeInternal.anonymous_composite_type_65,3
3598,TYPE_DECL,,,,"struct PReLUParameterDefaultTypeInternal {
  constexpr PReLUParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PReLUParameterDefaultTypeInternal() {}
  union {
    PReLUParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PReLUParameterDefaultTypeInternal,,false,1245,PReLUParameterDefaultTypeInternal,266
3607,TYPE_DECL,,,,"union {
    PReLUParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PReLUParameterDefaultTypeInternal.anonymous_composite_type_66,,false,1249,opencv_caffe.PReLUParameterDefaultTypeInternal.anonymous_composite_type_66,3
3616,TYPE_DECL,,,,"struct NormalizedBBoxDefaultTypeInternal {
  constexpr NormalizedBBoxDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NormalizedBBoxDefaultTypeInternal() {}
  union {
    NormalizedBBox _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NormalizedBBoxDefaultTypeInternal,,false,1264,NormalizedBBoxDefaultTypeInternal,270
3625,TYPE_DECL,,,,"union {
    NormalizedBBox _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.NormalizedBBoxDefaultTypeInternal.anonymous_composite_type_67,,false,1268,opencv_caffe.NormalizedBBoxDefaultTypeInternal.anonymous_composite_type_67,3
3634,TYPE_DECL,,,,"struct ROIPoolingParameterDefaultTypeInternal {
  constexpr ROIPoolingParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ROIPoolingParameterDefaultTypeInternal() {}
  union {
    ROIPoolingParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ROIPoolingParameterDefaultTypeInternal,,false,1278,ROIPoolingParameterDefaultTypeInternal,274
3643,TYPE_DECL,,,,"union {
    ROIPoolingParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ROIPoolingParameterDefaultTypeInternal.anonymous_composite_type_68,,false,1282,opencv_caffe.ROIPoolingParameterDefaultTypeInternal.anonymous_composite_type_68,3
3652,TYPE_DECL,,,,"struct ProposalParameterDefaultTypeInternal {
  constexpr ProposalParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalParameterDefaultTypeInternal() {}
  union {
    ProposalParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ProposalParameterDefaultTypeInternal,,false,1297,ProposalParameterDefaultTypeInternal,278
3661,TYPE_DECL,,,,"union {
    ProposalParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.ProposalParameterDefaultTypeInternal.anonymous_composite_type_69,,false,1301,opencv_caffe.ProposalParameterDefaultTypeInternal.anonymous_composite_type_69,3
3670,TYPE_DECL,,,,"struct PSROIPoolingParameterDefaultTypeInternal {
  constexpr PSROIPoolingParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PSROIPoolingParameterDefaultTypeInternal() {}
  union {
    PSROIPoolingParameter _instance;
  };
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PSROIPoolingParameterDefaultTypeInternal,,false,1311,PSROIPoolingParameterDefaultTypeInternal,282
3679,TYPE_DECL,,,,"union {
    PSROIPoolingParameter _instance;
  }",3,misc\caffe\opencv-caffe.pb.cc,opencv_caffe.PSROIPoolingParameterDefaultTypeInternal.anonymous_composite_type_70,,false,1315,opencv_caffe.PSROIPoolingParameterDefaultTypeInternal.anonymous_composite_type_70,3
5362,TYPE_DECL,,,,"class BlobShape::_Internal {
 public:
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,4036,_Internal,239
5894,TYPE_DECL,,,,"class BlobProto::_Internal {
 public:
  using HasBits = decltype(std::declval<BlobProto>()._has_bits_);
  static const ::opencv_caffe::BlobShape& shape(const BlobProto* msg);
  static void set_has_shape(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_raw_data_type(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_raw_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_num(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_channels(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,4228,_Internal,261
5895,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<BlobProto>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,4230,HasBits,1
7866,TYPE_DECL,,,,"class BlobProtoVector::_Internal {
 public:
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,4778,_Internal,284
8383,TYPE_DECL,,,,"class PermuteParameter::_Internal {
 public:
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,4963,_Internal,306
8934,TYPE_DECL,,,,"class NormalizeBBoxParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<NormalizeBBoxParameter>()._has_bits_);
  static void set_has_across_spatial(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::opencv_caffe::FillerParameter& scale_filler(const NormalizeBBoxParameter* msg);
  static void set_has_scale_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_channel_shared(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_eps(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,5151,_Internal,328
8935,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<NormalizeBBoxParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,5153,HasBits,1
9880,TYPE_DECL,,,,"class PriorBoxParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<PriorBoxParameter>()._has_bits_);
  static void set_has_flip(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_clip(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_img_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_img_h(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_img_w(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_step(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_step_h(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_step_w(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,5456,_Internal,351
9881,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<PriorBoxParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,5458,HasBits,1
12750,TYPE_DECL,,,,"class DetectionOutputParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<DetectionOutputParameter>()._has_bits_);
  static void set_has_num_classes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_share_location(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_background_label_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::opencv_caffe::NonMaximumSuppressionParameter& nms_param(const DetectionOutputParameter* msg);
  static void set_has_nms_param(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::opencv_caffe::SaveOutputParameter& save_output_param(const DetectionOutputParameter* msg);
  static void set_has_save_output_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_code_type(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_variance_encoded_in_target(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void se...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,6172,_Internal,373
12751,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<DetectionOutputParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,6174,HasBits,1
14613,TYPE_DECL,,,,"class Datum::_Internal {
 public:
  using HasBits = decltype(std::declval<Datum>()._has_bits_);
  static void set_has_channels(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_label(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_encoded(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,6706,_Internal,397
14614,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<Datum>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,6708,HasBits,1
16049,TYPE_DECL,,,,"class FillerParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<FillerParameter>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_min(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_max(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_mean(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_std(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_sparse(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_variance_norm(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,7108,_Internal,419
16050,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<FillerParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,7110,HasBits,1
17544,TYPE_DECL,,,,"class NetParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<NetParameter>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_force_backward(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::opencv_caffe::NetState& state(const NetParameter* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_debug_info(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,7543,_Internal,443
17545,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<NetParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,7545,HasBits,1
19507,TYPE_DECL,,,,"class SolverParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<SolverParameter>()._has_bits_);
  static void set_has_net(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::opencv_caffe::NetParameter& net_param(const SolverParameter* msg);
  static void set_has_net_param(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_train_net(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::opencv_caffe::NetParameter& train_net_param(const SolverParameter* msg);
  static void set_has_train_net_param(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::opencv_caffe::NetState& train_state(const SolverParameter* msg);
  static void set_has_train_state(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_test_interval(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_test_compute_loss(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,8059,_Internal,466
19508,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<SolverParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,8061,HasBits,1
25649,TYPE_DECL,,,,"class SolverState::_Internal {
 public:
  using HasBits = decltype(std::declval<SolverState>()._has_bits_);
  static void set_has_iter(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_learned_net(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_current_step(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,9659,_Internal,495
25650,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<SolverState>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,9661,HasBits,1
26784,TYPE_DECL,,,,"class NetState::_Internal {
 public:
  using HasBits = decltype(std::declval<NetState>()._has_bits_);
  static void set_has_phase(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_level(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,9987,_Internal,517
26785,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<NetState>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,9989,HasBits,1
27700,TYPE_DECL,,,,"class NetStateRule::_Internal {
 public:
  using HasBits = decltype(std::declval<NetStateRule>()._has_bits_);
  static void set_has_phase(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_min_level(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_max_level(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,10263,_Internal,539
27701,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<NetStateRule>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,10265,HasBits,1
28987,TYPE_DECL,,,,"class ParamSpec::_Internal {
 public:
  using HasBits = decltype(std::declval<ParamSpec>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_share_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_lr_mult(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_decay_mult(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,10612,_Internal,561
28988,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ParamSpec>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,10614,HasBits,1
30020,TYPE_DECL,,,,"class LayerParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<LayerParameter>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_phase(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static const ::opencv_caffe::TransformationParameter& transform_param(const LayerParameter* msg);
  static void set_has_transform_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::opencv_caffe::LossParameter& loss_param(const LayerParameter* msg);
  static void set_has_loss_param(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::opencv_caffe::AccuracyParameter& accuracy_param(const LayerParameter* msg);
  static void set_has_accuracy_param(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::opencv_caffe::ArgMaxParameter& argmax_param(const LayerParameter* msg);
  static voi...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,10935,_Internal,583
30021,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<LayerParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,10937,HasBits,1
41112,TYPE_DECL,,,,"class TransformationParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<TransformationParameter>()._has_bits_);
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_mirror(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_crop_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mean_file(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_force_color(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_force_gray(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,13965,_Internal,659
41113,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<TransformationParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,13967,HasBits,1
42566,TYPE_DECL,,,,"class LossParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<LossParameter>()._has_bits_);
  static void set_has_ignore_label(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_normalization(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_normalize(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,14377,_Internal,681
42567,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<LossParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,14379,HasBits,1
43453,TYPE_DECL,,,,"class AccuracyParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<AccuracyParameter>()._has_bits_);
  static void set_has_top_k(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ignore_label(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,14649,_Internal,703
43454,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<AccuracyParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,14651,HasBits,1
44266,TYPE_DECL,,,,"class ArgMaxParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ArgMaxParameter>()._has_bits_);
  static void set_has_out_max_val(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_top_k(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,14908,_Internal,725
44267,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ArgMaxParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,14910,HasBits,1
45133,TYPE_DECL,,,,"class ConcatParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ConcatParameter>()._has_bits_);
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_concat_dim(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,15174,_Internal,747
45134,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ConcatParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,15176,HasBits,1
45828,TYPE_DECL,,,,"class BatchNormParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<BatchNormParameter>()._has_bits_);
  static void set_has_use_global_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_moving_average_fraction(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_eps(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_scale_bias(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,15404,_Internal,769
45829,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<BatchNormParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,15406,HasBits,1
46774,TYPE_DECL,,,,"class BiasParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<BiasParameter>()._has_bits_);
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_axes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::opencv_caffe::FillerParameter& filler(const BiasParameter* msg);
  static void set_has_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,15699,_Internal,791
46775,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<BiasParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,15701,HasBits,1
47635,TYPE_DECL,,,,"class ContrastiveLossParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ContrastiveLossParameter>()._has_bits_);
  static void set_has_margin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_legacy_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,15975,_Internal,814
47636,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ContrastiveLossParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,15977,HasBits,1
48306,TYPE_DECL,,,,"class ConvolutionParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ConvolutionParameter>()._has_bits_);
  static void set_has_num_output(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bias_term(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_pad_h(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_pad_w(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_kernel_h(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_kernel_w(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_stride_h(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_stride_w(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_group(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::opencv_caffe::FillerParameter& weight_filler(const ConvolutionParameter* msg);
  static void set_has_weight_f...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,16205,_Internal,836
48307,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ConvolutionParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,16207,HasBits,1
51257,TYPE_DECL,,,,"class CropParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<CropParameter>()._has_bits_);
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,16963,_Internal,860
51258,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<CropParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,16965,HasBits,1
51965,TYPE_DECL,,,,"class DataParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<DataParameter>()._has_bits_);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_batch_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rand_skip(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_backend(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_mean_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_crop_size(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_mirror(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_force_encoded_color(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_prefetch(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,17189,_Internal,882
51966,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<DataParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,17191,HasBits,1
53848,TYPE_DECL,,,,"class NonMaximumSuppressionParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<NonMaximumSuppressionParameter>()._has_bits_);
  static void set_has_nms_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_top_k(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_eta(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,17717,_Internal,904
53849,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<NonMaximumSuppressionParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,17719,HasBits,1
54631,TYPE_DECL,,,,"class SaveOutputParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<SaveOutputParameter>()._has_bits_);
  static void set_has_output_directory(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_output_name_prefix(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_output_format(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_label_map_file(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_name_size_file(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_num_test_image(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,17976,_Internal,926
54632,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<SaveOutputParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,17978,HasBits,1
56295,TYPE_DECL,,,,"class DropoutParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<DropoutParameter>()._has_bits_);
  static void set_has_dropout_ratio(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_scale_train(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,18457,_Internal,948
56296,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<DropoutParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,18459,HasBits,1
56966,TYPE_DECL,,,,"class DummyDataParameter::_Internal {
 public:
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,18687,_Internal,970
58354,TYPE_DECL,,,,"class EltwiseParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<EltwiseParameter>()._has_bits_);
  static void set_has_operation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_stable_prod_grad(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,19049,_Internal,992
58355,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<EltwiseParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,19051,HasBits,1
59236,TYPE_DECL,,,,"class ELUParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ELUParameter>()._has_bits_);
  static void set_has_alpha(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,19321,_Internal,1014
59237,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ELUParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,19323,HasBits,1
59748,TYPE_DECL,,,,"class EmbedParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<EmbedParameter>()._has_bits_);
  static void set_has_num_output(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_input_dim(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_bias_term(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::opencv_caffe::FillerParameter& weight_filler(const EmbedParameter* msg);
  static void set_has_weight_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::opencv_caffe::FillerParameter& bias_filler(const EmbedParameter* msg);
  static void set_has_bias_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,19511,_Internal,1036
59749,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<EmbedParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,19513,HasBits,1
60936,TYPE_DECL,,,,"class ExpParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ExpParameter>()._has_bits_);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_shift(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,19867,_Internal,1060
60937,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ExpParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,19869,HasBits,1
61706,TYPE_DECL,,,,"class FlattenParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<FlattenParameter>()._has_bits_);
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_end_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,20126,_Internal,1082
61707,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<FlattenParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,20128,HasBits,1
62403,TYPE_DECL,,,,"class HDF5DataParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<HDF5DataParameter>()._has_bits_);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_batch_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_shuffle(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,20356,_Internal,1104
62404,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<HDF5DataParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,20358,HasBits,1
63382,TYPE_DECL,,,,"class HDF5OutputParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<HDF5OutputParameter>()._has_bits_);
  static void set_has_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,20651,_Internal,1126
63383,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<HDF5OutputParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,20653,HasBits,1
64021,TYPE_DECL,,,,"class HingeLossParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<HingeLossParameter>()._has_bits_);
  static void set_has_norm(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,20870,_Internal,1148
64022,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<HingeLossParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,20872,HasBits,1
64568,TYPE_DECL,,,,"class ImageDataParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ImageDataParameter>()._has_bits_);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_batch_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_rand_skip(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_shuffle(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_new_height(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_new_width(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_is_color(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_mean_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_crop_size(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_mirror(HasBits* h...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,21066,_Internal,1170
64569,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ImageDataParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,21068,HasBits,1
66762,TYPE_DECL,,,,"class InfogainLossParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<InfogainLossParameter>()._has_bits_);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,21674,_Internal,1192
66763,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<InfogainLossParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,21676,HasBits,1
67401,TYPE_DECL,,,,"class InnerProductParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<InnerProductParameter>()._has_bits_);
  static void set_has_num_output(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bias_term(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::opencv_caffe::FillerParameter& weight_filler(const InnerProductParameter* msg);
  static void set_has_weight_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::opencv_caffe::FillerParameter& bias_filler(const InnerProductParameter* msg);
  static void set_has_bias_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_transpose(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,21893,_Internal,1214
67402,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<InnerProductParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,21895,HasBits,1
68698,TYPE_DECL,,,,"class InputParameter::_Internal {
 public:
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,22278,_Internal,1238
69215,TYPE_DECL,,,,"class LogParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<LogParameter>()._has_bits_);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_shift(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,22463,_Internal,1260
69216,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<LogParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,22465,HasBits,1
69985,TYPE_DECL,,,,"class LRNParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<LRNParameter>()._has_bits_);
  static void set_has_local_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_alpha(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_beta(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_norm_region(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_k(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_engine(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,22722,_Internal,1282
69986,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<LRNParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,22724,HasBits,1
71210,TYPE_DECL,,,,"class MemoryDataParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<MemoryDataParameter>()._has_bits_);
  static void set_has_batch_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_channels(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,23087,_Internal,1304
71211,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<MemoryDataParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,23089,HasBits,1
72182,TYPE_DECL,,,,"class MVNParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<MVNParameter>()._has_bits_);
  static void set_has_normalize_variance(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_across_channels(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_eps(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,23376,_Internal,1326
72183,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<MVNParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,23378,HasBits,1
72962,TYPE_DECL,,,,"class ParameterParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ParameterParameter>()._has_bits_);
  static const ::opencv_caffe::BlobShape& shape(const ParameterParameter* msg);
  static void set_has_shape(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,23635,_Internal,1348
72963,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ParameterParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,23637,HasBits,1
73537,TYPE_DECL,,,,"class PoolingParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<PoolingParameter>()._has_bits_);
  static void set_has_pool(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pad(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pad_h(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_pad_w(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_kernel_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_kernel_h(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_kernel_w(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_stride(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_stride_h(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_stride_w(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_engine(HasBits* has_bits) {
    (*has_bit...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,23842,_Internal,1371
73538,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<PoolingParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,23844,HasBits,1
75557,TYPE_DECL,,,,"class PowerParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<PowerParameter>()._has_bits_);
  static void set_has_power(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_shift(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,24393,_Internal,1393
75558,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<PowerParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,24395,HasBits,1
76325,TYPE_DECL,,,,"class PythonParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<PythonParameter>()._has_bits_);
  static void set_has_module(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_layer(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param_str(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_share_in_parallel(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,24652,_Internal,1415
76326,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<PythonParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,24654,HasBits,1
77542,TYPE_DECL,,,,"class RecurrentParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<RecurrentParameter>()._has_bits_);
  static void set_has_num_output(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::opencv_caffe::FillerParameter& weight_filler(const RecurrentParameter* msg);
  static void set_has_weight_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::opencv_caffe::FillerParameter& bias_filler(const RecurrentParameter* msg);
  static void set_has_bias_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_debug_info(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_expose_hidden(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,25021,_Internal,1437
77543,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<RecurrentParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,25023,HasBits,1
78710,TYPE_DECL,,,,"class ReductionParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ReductionParameter>()._has_bits_);
  static void set_has_operation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_coeff(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,25374,_Internal,1461
78711,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ReductionParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,25376,HasBits,1
79528,TYPE_DECL,,,,"class ReLUParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ReLUParameter>()._has_bits_);
  static void set_has_negative_slope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_engine(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,25639,_Internal,1483
79529,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ReLUParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,25641,HasBits,1
80291,TYPE_DECL,,,,"class ReshapeParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ReshapeParameter>()._has_bits_);
  static const ::opencv_caffe::BlobShape& shape(const ReshapeParameter* msg);
  static void set_has_shape(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_axes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,25882,_Internal,1505
80292,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ReshapeParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,25884,HasBits,1
81202,TYPE_DECL,,,,"class ScaleParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ScaleParameter>()._has_bits_);
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_num_axes(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::opencv_caffe::FillerParameter& filler(const ScaleParameter* msg);
  static void set_has_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_bias_term(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::opencv_caffe::FillerParameter& bias_filler(const ScaleParameter* msg);
  static void set_has_bias_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,26164,_Internal,1528
81203,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ScaleParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,26166,HasBits,1
82383,TYPE_DECL,,,,"class SigmoidParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<SigmoidParameter>()._has_bits_);
  static void set_has_engine(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,26521,_Internal,1552
82384,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<SigmoidParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,26523,HasBits,1
82930,TYPE_DECL,,,,"class SliceParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<SliceParameter>()._has_bits_);
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_slice_dim(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,26717,_Internal,1574
82931,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<SliceParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,26719,HasBits,1
83806,TYPE_DECL,,,,"class SoftmaxParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<SoftmaxParameter>()._has_bits_);
  static void set_has_engine(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,26983,_Internal,1596
83807,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<SoftmaxParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,26985,HasBits,1
84521,TYPE_DECL,,,,"class TanHParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<TanHParameter>()._has_bits_);
  static void set_has_engine(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,27219,_Internal,1618
84522,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<TanHParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,27221,HasBits,1
85068,TYPE_DECL,,,,"class TileParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<TileParameter>()._has_bits_);
  static void set_has_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_tiles(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,27415,_Internal,1640
85069,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<TileParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,27417,HasBits,1
85763,TYPE_DECL,,,,"class ThresholdParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ThresholdParameter>()._has_bits_);
  static void set_has_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,27645,_Internal,1662
85764,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ThresholdParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,27647,HasBits,1
86275,TYPE_DECL,,,,"class WindowDataParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowDataParameter>()._has_bits_);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_mean_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_batch_size(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_crop_size(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_mirror(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_fg_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_bg_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_fg_fraction(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_context_pad(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_crop...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,27835,_Internal,1684
86276,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<WindowDataParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,27837,HasBits,1
88655,TYPE_DECL,,,,"class SPPParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<SPPParameter>()._has_bits_);
  static void set_has_pyramid_height(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pool(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_engine(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,28497,_Internal,1708
88656,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<SPPParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,28499,HasBits,1
89560,TYPE_DECL,,,,"class V1LayerParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<V1LayerParameter>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::opencv_caffe::AccuracyParameter& accuracy_param(const V1LayerParameter* msg);
  static void set_has_accuracy_param(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::opencv_caffe::ArgMaxParameter& argmax_param(const V1LayerParameter* msg);
  static void set_has_argmax_param(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::opencv_caffe::ConcatParameter& concat_param(const V1LayerParameter* msg);
  static void set_has_concat_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::opencv_caffe::ContrastiveLossParameter& contrastive_loss_param(const V1LayerParameter* msg);
  static void set_has_contrastive_loss_param(HasBits* has_bits) {
...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,28772,_Internal,1730
89561,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<V1LayerParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,28774,HasBits,1
97186,TYPE_DECL,,,,"class V0LayerParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<V0LayerParameter>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_output(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_biasterm(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::opencv_caffe::FillerParameter& weight_filler(const V0LayerParameter* msg);
  static void set_has_weight_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::opencv_caffe::FillerParameter& bias_filler(const V0LayerParameter* msg);
  static void set_has_bias_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_pad(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_kernelsize(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_group...",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,30796,_Internal,1783
97187,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<V0LayerParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,30798,HasBits,1
102847,TYPE_DECL,,,,"class PReLUParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<PReLUParameter>()._has_bits_);
  static const ::opencv_caffe::FillerParameter& filler(const PReLUParameter* msg);
  static void set_has_filler(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_channel_shared(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,32294,_Internal,1810
102848,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<PReLUParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,32296,HasBits,1
103605,TYPE_DECL,,,,"class NormalizedBBox::_Internal {
 public:
  using HasBits = decltype(std::declval<NormalizedBBox>()._has_bits_);
  static void set_has_xmin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ymin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_xmax(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ymax(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_label(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_difficult(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_score(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,32543,_Internal,1833
103606,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<NormalizedBBox>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,32545,HasBits,1
104906,TYPE_DECL,,,,"class ROIPoolingParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ROIPoolingParameter>()._has_bits_);
  static void set_has_pooled_h(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pooled_w(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_spatial_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,32936,_Internal,1855
104907,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ROIPoolingParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,32938,HasBits,1
105767,TYPE_DECL,,,,"class ProposalParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<ProposalParameter>()._has_bits_);
  static void set_has_feat_stride(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_base_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_min_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pre_nms_topn(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_post_nms_topn(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_nms_thresh(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,33202,_Internal,1877
105768,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ProposalParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,33204,HasBits,1
107271,TYPE_DECL,,,,"class PSROIPoolingParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<PSROIPoolingParameter>()._has_bits_);
  static void set_has_spatial_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_output_dim(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_group_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
}",1,misc\caffe\opencv-caffe.pb.cc,opencv_caffe._Internal,,false,33620,_Internal,1899
107272,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<PSROIPoolingParameter>()._has_bits_);,3,misc\caffe\opencv-caffe.pb.cc,HasBits,,false,33622,HasBits,1
109293,TYPE_DECL,,misc\caffe\opencv-caffe.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\caffe\opencv-caffe.pb.hpp,misc\caffe\opencv-caffe.pb.hpp:<global>,,false,1,<global>,19
109298,TYPE_DECL,,,,class AnyMetadata,1,misc\caffe\opencv-caffe.pb.hpp,internal.AnyMetadata,,false,40,AnyMetadata,1
109300,TYPE_DECL,,,,"struct TableStruct_opencv_2dcaffe_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[71]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\caffe\opencv-caffe.pb.hpp,TableStruct_opencv_2dcaffe_2eproto,,false,45,TableStruct_opencv_2dcaffe_2eproto,4
109326,TYPE_DECL,,,,class AccuracyParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.AccuracyParameter,,false,58,AccuracyParameter,1
109327,TYPE_DECL,,,,struct AccuracyParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.AccuracyParameterDefaultTypeInternal,,false,59,AccuracyParameterDefaultTypeInternal,2
109329,TYPE_DECL,,,,class ArgMaxParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ArgMaxParameter,,false,61,ArgMaxParameter,4
109330,TYPE_DECL,,,,struct ArgMaxParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ArgMaxParameterDefaultTypeInternal,,false,62,ArgMaxParameterDefaultTypeInternal,5
109332,TYPE_DECL,,,,class BatchNormParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BatchNormParameter,,false,64,BatchNormParameter,7
109333,TYPE_DECL,,,,struct BatchNormParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BatchNormParameterDefaultTypeInternal,,false,65,BatchNormParameterDefaultTypeInternal,8
109335,TYPE_DECL,,,,class BiasParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BiasParameter,,false,67,BiasParameter,10
109336,TYPE_DECL,,,,struct BiasParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BiasParameterDefaultTypeInternal,,false,68,BiasParameterDefaultTypeInternal,11
109338,TYPE_DECL,,,,class BlobProto,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProto,,false,70,BlobProto,13
109339,TYPE_DECL,,,,struct BlobProtoDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoDefaultTypeInternal,,false,71,BlobProtoDefaultTypeInternal,14
109341,TYPE_DECL,,,,class BlobProtoVector,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoVector,,false,73,BlobProtoVector,16
109342,TYPE_DECL,,,,struct BlobProtoVectorDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoVectorDefaultTypeInternal,,false,74,BlobProtoVectorDefaultTypeInternal,17
109344,TYPE_DECL,,,,class BlobShape,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobShape,,false,76,BlobShape,19
109345,TYPE_DECL,,,,struct BlobShapeDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobShapeDefaultTypeInternal,,false,77,BlobShapeDefaultTypeInternal,20
109347,TYPE_DECL,,,,class ConcatParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConcatParameter,,false,79,ConcatParameter,22
109348,TYPE_DECL,,,,struct ConcatParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConcatParameterDefaultTypeInternal,,false,80,ConcatParameterDefaultTypeInternal,23
109350,TYPE_DECL,,,,class ContrastiveLossParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ContrastiveLossParameter,,false,82,ContrastiveLossParameter,25
109351,TYPE_DECL,,,,struct ContrastiveLossParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ContrastiveLossParameterDefaultTypeInternal,,false,83,ContrastiveLossParameterDefaultTypeInternal,26
109353,TYPE_DECL,,,,class ConvolutionParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameter,,false,85,ConvolutionParameter,28
109354,TYPE_DECL,,,,struct ConvolutionParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameterDefaultTypeInternal,,false,86,ConvolutionParameterDefaultTypeInternal,29
109356,TYPE_DECL,,,,class CropParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.CropParameter,,false,88,CropParameter,31
109357,TYPE_DECL,,,,struct CropParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.CropParameterDefaultTypeInternal,,false,89,CropParameterDefaultTypeInternal,32
109359,TYPE_DECL,,,,class DataParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameter,,false,91,DataParameter,34
109360,TYPE_DECL,,,,struct DataParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameterDefaultTypeInternal,,false,92,DataParameterDefaultTypeInternal,35
109362,TYPE_DECL,,,,class Datum,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Datum,,false,94,Datum,37
109363,TYPE_DECL,,,,struct DatumDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DatumDefaultTypeInternal,,false,95,DatumDefaultTypeInternal,38
109365,TYPE_DECL,,,,class DetectionOutputParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DetectionOutputParameter,,false,97,DetectionOutputParameter,40
109366,TYPE_DECL,,,,struct DetectionOutputParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DetectionOutputParameterDefaultTypeInternal,,false,98,DetectionOutputParameterDefaultTypeInternal,41
109368,TYPE_DECL,,,,class DropoutParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DropoutParameter,,false,100,DropoutParameter,43
109369,TYPE_DECL,,,,struct DropoutParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DropoutParameterDefaultTypeInternal,,false,101,DropoutParameterDefaultTypeInternal,44
109371,TYPE_DECL,,,,class DummyDataParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DummyDataParameter,,false,103,DummyDataParameter,46
109372,TYPE_DECL,,,,struct DummyDataParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DummyDataParameterDefaultTypeInternal,,false,104,DummyDataParameterDefaultTypeInternal,47
109374,TYPE_DECL,,,,class ELUParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ELUParameter,,false,106,ELUParameter,49
109375,TYPE_DECL,,,,struct ELUParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ELUParameterDefaultTypeInternal,,false,107,ELUParameterDefaultTypeInternal,50
109377,TYPE_DECL,,,,class EltwiseParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameter,,false,109,EltwiseParameter,52
109378,TYPE_DECL,,,,struct EltwiseParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameterDefaultTypeInternal,,false,110,EltwiseParameterDefaultTypeInternal,53
109380,TYPE_DECL,,,,class EmbedParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EmbedParameter,,false,112,EmbedParameter,55
109381,TYPE_DECL,,,,struct EmbedParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EmbedParameterDefaultTypeInternal,,false,113,EmbedParameterDefaultTypeInternal,56
109383,TYPE_DECL,,,,class ExpParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ExpParameter,,false,115,ExpParameter,58
109384,TYPE_DECL,,,,struct ExpParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ExpParameterDefaultTypeInternal,,false,116,ExpParameterDefaultTypeInternal,59
109386,TYPE_DECL,,,,class FillerParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameter,,false,118,FillerParameter,61
109387,TYPE_DECL,,,,struct FillerParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameterDefaultTypeInternal,,false,119,FillerParameterDefaultTypeInternal,62
109389,TYPE_DECL,,,,class FlattenParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FlattenParameter,,false,121,FlattenParameter,64
109390,TYPE_DECL,,,,struct FlattenParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FlattenParameterDefaultTypeInternal,,false,122,FlattenParameterDefaultTypeInternal,65
109392,TYPE_DECL,,,,class HDF5DataParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5DataParameter,,false,124,HDF5DataParameter,67
109393,TYPE_DECL,,,,struct HDF5DataParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5DataParameterDefaultTypeInternal,,false,125,HDF5DataParameterDefaultTypeInternal,68
109395,TYPE_DECL,,,,class HDF5OutputParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5OutputParameter,,false,127,HDF5OutputParameter,70
109396,TYPE_DECL,,,,struct HDF5OutputParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5OutputParameterDefaultTypeInternal,,false,128,HDF5OutputParameterDefaultTypeInternal,71
109398,TYPE_DECL,,,,class HingeLossParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameter,,false,130,HingeLossParameter,73
109399,TYPE_DECL,,,,struct HingeLossParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameterDefaultTypeInternal,,false,131,HingeLossParameterDefaultTypeInternal,74
109401,TYPE_DECL,,,,class ImageDataParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ImageDataParameter,,false,133,ImageDataParameter,76
109402,TYPE_DECL,,,,struct ImageDataParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ImageDataParameterDefaultTypeInternal,,false,134,ImageDataParameterDefaultTypeInternal,77
109404,TYPE_DECL,,,,class InfogainLossParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InfogainLossParameter,,false,136,InfogainLossParameter,79
109405,TYPE_DECL,,,,struct InfogainLossParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InfogainLossParameterDefaultTypeInternal,,false,137,InfogainLossParameterDefaultTypeInternal,80
109407,TYPE_DECL,,,,class InnerProductParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InnerProductParameter,,false,139,InnerProductParameter,82
109408,TYPE_DECL,,,,struct InnerProductParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InnerProductParameterDefaultTypeInternal,,false,140,InnerProductParameterDefaultTypeInternal,83
109410,TYPE_DECL,,,,class InputParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InputParameter,,false,142,InputParameter,85
109411,TYPE_DECL,,,,struct InputParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InputParameterDefaultTypeInternal,,false,143,InputParameterDefaultTypeInternal,86
109413,TYPE_DECL,,,,class LRNParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter,,false,145,LRNParameter,88
109414,TYPE_DECL,,,,struct LRNParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameterDefaultTypeInternal,,false,146,LRNParameterDefaultTypeInternal,89
109416,TYPE_DECL,,,,class LayerParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LayerParameter,,false,148,LayerParameter,91
109417,TYPE_DECL,,,,struct LayerParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LayerParameterDefaultTypeInternal,,false,149,LayerParameterDefaultTypeInternal,92
109419,TYPE_DECL,,,,class LogParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LogParameter,,false,151,LogParameter,94
109420,TYPE_DECL,,,,struct LogParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LogParameterDefaultTypeInternal,,false,152,LogParameterDefaultTypeInternal,95
109422,TYPE_DECL,,,,class LossParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameter,,false,154,LossParameter,97
109423,TYPE_DECL,,,,struct LossParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameterDefaultTypeInternal,,false,155,LossParameterDefaultTypeInternal,98
109425,TYPE_DECL,,,,class MVNParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MVNParameter,,false,157,MVNParameter,100
109426,TYPE_DECL,,,,struct MVNParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MVNParameterDefaultTypeInternal,,false,158,MVNParameterDefaultTypeInternal,101
109428,TYPE_DECL,,,,class MemoryDataParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MemoryDataParameter,,false,160,MemoryDataParameter,103
109429,TYPE_DECL,,,,struct MemoryDataParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MemoryDataParameterDefaultTypeInternal,,false,161,MemoryDataParameterDefaultTypeInternal,104
109431,TYPE_DECL,,,,class NetParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetParameter,,false,163,NetParameter,106
109432,TYPE_DECL,,,,struct NetParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetParameterDefaultTypeInternal,,false,164,NetParameterDefaultTypeInternal,107
109434,TYPE_DECL,,,,class NetState,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetState,,false,166,NetState,109
109435,TYPE_DECL,,,,struct NetStateDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateDefaultTypeInternal,,false,167,NetStateDefaultTypeInternal,110
109437,TYPE_DECL,,,,class NetStateRule,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateRule,,false,169,NetStateRule,112
109438,TYPE_DECL,,,,struct NetStateRuleDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateRuleDefaultTypeInternal,,false,170,NetStateRuleDefaultTypeInternal,113
109440,TYPE_DECL,,,,class NonMaximumSuppressionParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NonMaximumSuppressionParameter,,false,172,NonMaximumSuppressionParameter,115
109441,TYPE_DECL,,,,struct NonMaximumSuppressionParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NonMaximumSuppressionParameterDefaultTypeInternal,,false,173,NonMaximumSuppressionParameterDefaultTypeInternal,116
109443,TYPE_DECL,,,,class NormalizeBBoxParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizeBBoxParameter,,false,175,NormalizeBBoxParameter,118
109444,TYPE_DECL,,,,struct NormalizeBBoxParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizeBBoxParameterDefaultTypeInternal,,false,176,NormalizeBBoxParameterDefaultTypeInternal,119
109446,TYPE_DECL,,,,class NormalizedBBox,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizedBBox,,false,178,NormalizedBBox,121
109447,TYPE_DECL,,,,struct NormalizedBBoxDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizedBBoxDefaultTypeInternal,,false,179,NormalizedBBoxDefaultTypeInternal,122
109449,TYPE_DECL,,,,class PReLUParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PReLUParameter,,false,181,PReLUParameter,124
109450,TYPE_DECL,,,,struct PReLUParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PReLUParameterDefaultTypeInternal,,false,182,PReLUParameterDefaultTypeInternal,125
109452,TYPE_DECL,,,,class PSROIPoolingParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PSROIPoolingParameter,,false,184,PSROIPoolingParameter,127
109453,TYPE_DECL,,,,struct PSROIPoolingParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PSROIPoolingParameterDefaultTypeInternal,,false,185,PSROIPoolingParameterDefaultTypeInternal,128
109455,TYPE_DECL,,,,class ParamSpec,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpec,,false,187,ParamSpec,130
109456,TYPE_DECL,,,,struct ParamSpecDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpecDefaultTypeInternal,,false,188,ParamSpecDefaultTypeInternal,131
109458,TYPE_DECL,,,,class ParameterParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParameterParameter,,false,190,ParameterParameter,133
109459,TYPE_DECL,,,,struct ParameterParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParameterParameterDefaultTypeInternal,,false,191,ParameterParameterDefaultTypeInternal,134
109461,TYPE_DECL,,,,class PermuteParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PermuteParameter,,false,193,PermuteParameter,136
109462,TYPE_DECL,,,,struct PermuteParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PermuteParameterDefaultTypeInternal,,false,194,PermuteParameterDefaultTypeInternal,137
109464,TYPE_DECL,,,,class PoolingParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter,,false,196,PoolingParameter,139
109465,TYPE_DECL,,,,struct PoolingParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameterDefaultTypeInternal,,false,197,PoolingParameterDefaultTypeInternal,140
109467,TYPE_DECL,,,,class PowerParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PowerParameter,,false,199,PowerParameter,142
109468,TYPE_DECL,,,,struct PowerParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PowerParameterDefaultTypeInternal,,false,200,PowerParameterDefaultTypeInternal,143
109470,TYPE_DECL,,,,class PriorBoxParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameter,,false,202,PriorBoxParameter,145
109471,TYPE_DECL,,,,struct PriorBoxParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameterDefaultTypeInternal,,false,203,PriorBoxParameterDefaultTypeInternal,146
109473,TYPE_DECL,,,,class ProposalParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ProposalParameter,,false,205,ProposalParameter,148
109474,TYPE_DECL,,,,struct ProposalParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ProposalParameterDefaultTypeInternal,,false,206,ProposalParameterDefaultTypeInternal,149
109476,TYPE_DECL,,,,class PythonParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PythonParameter,,false,208,PythonParameter,151
109477,TYPE_DECL,,,,struct PythonParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PythonParameterDefaultTypeInternal,,false,209,PythonParameterDefaultTypeInternal,152
109479,TYPE_DECL,,,,class ROIPoolingParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ROIPoolingParameter,,false,211,ROIPoolingParameter,154
109480,TYPE_DECL,,,,struct ROIPoolingParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ROIPoolingParameterDefaultTypeInternal,,false,212,ROIPoolingParameterDefaultTypeInternal,155
109482,TYPE_DECL,,,,class ReLUParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameter,,false,214,ReLUParameter,157
109483,TYPE_DECL,,,,struct ReLUParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameterDefaultTypeInternal,,false,215,ReLUParameterDefaultTypeInternal,158
109485,TYPE_DECL,,,,class RecurrentParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.RecurrentParameter,,false,217,RecurrentParameter,160
109486,TYPE_DECL,,,,struct RecurrentParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.RecurrentParameterDefaultTypeInternal,,false,218,RecurrentParameterDefaultTypeInternal,161
109488,TYPE_DECL,,,,class ReductionParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameter,,false,220,ReductionParameter,163
109489,TYPE_DECL,,,,struct ReductionParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameterDefaultTypeInternal,,false,221,ReductionParameterDefaultTypeInternal,164
109491,TYPE_DECL,,,,class ReshapeParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReshapeParameter,,false,223,ReshapeParameter,166
109492,TYPE_DECL,,,,struct ReshapeParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReshapeParameterDefaultTypeInternal,,false,224,ReshapeParameterDefaultTypeInternal,167
109494,TYPE_DECL,,,,class SPPParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter,,false,226,SPPParameter,169
109495,TYPE_DECL,,,,struct SPPParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameterDefaultTypeInternal,,false,227,SPPParameterDefaultTypeInternal,170
109497,TYPE_DECL,,,,class SaveOutputParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SaveOutputParameter,,false,229,SaveOutputParameter,172
109498,TYPE_DECL,,,,struct SaveOutputParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SaveOutputParameterDefaultTypeInternal,,false,230,SaveOutputParameterDefaultTypeInternal,173
109500,TYPE_DECL,,,,class ScaleParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ScaleParameter,,false,232,ScaleParameter,175
109501,TYPE_DECL,,,,struct ScaleParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ScaleParameterDefaultTypeInternal,,false,233,ScaleParameterDefaultTypeInternal,176
109503,TYPE_DECL,,,,class SigmoidParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameter,,false,235,SigmoidParameter,178
109504,TYPE_DECL,,,,struct SigmoidParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameterDefaultTypeInternal,,false,236,SigmoidParameterDefaultTypeInternal,179
109506,TYPE_DECL,,,,class SliceParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SliceParameter,,false,238,SliceParameter,181
109507,TYPE_DECL,,,,struct SliceParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SliceParameterDefaultTypeInternal,,false,239,SliceParameterDefaultTypeInternal,182
109509,TYPE_DECL,,,,class SoftmaxParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameter,,false,241,SoftmaxParameter,184
109510,TYPE_DECL,,,,struct SoftmaxParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameterDefaultTypeInternal,,false,242,SoftmaxParameterDefaultTypeInternal,185
109512,TYPE_DECL,,,,class SolverParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter,,false,244,SolverParameter,187
109513,TYPE_DECL,,,,struct SolverParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameterDefaultTypeInternal,,false,245,SolverParameterDefaultTypeInternal,188
109515,TYPE_DECL,,,,class SolverState,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverState,,false,247,SolverState,190
109516,TYPE_DECL,,,,struct SolverStateDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverStateDefaultTypeInternal,,false,248,SolverStateDefaultTypeInternal,191
109518,TYPE_DECL,,,,class TanHParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameter,,false,250,TanHParameter,193
109519,TYPE_DECL,,,,struct TanHParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameterDefaultTypeInternal,,false,251,TanHParameterDefaultTypeInternal,194
109521,TYPE_DECL,,,,class ThresholdParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ThresholdParameter,,false,253,ThresholdParameter,196
109522,TYPE_DECL,,,,struct ThresholdParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ThresholdParameterDefaultTypeInternal,,false,254,ThresholdParameterDefaultTypeInternal,197
109524,TYPE_DECL,,,,class TileParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TileParameter,,false,256,TileParameter,199
109525,TYPE_DECL,,,,struct TileParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TileParameterDefaultTypeInternal,,false,257,TileParameterDefaultTypeInternal,200
109527,TYPE_DECL,,,,class TransformationParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TransformationParameter,,false,259,TransformationParameter,202
109528,TYPE_DECL,,,,struct TransformationParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TransformationParameterDefaultTypeInternal,,false,260,TransformationParameterDefaultTypeInternal,203
109530,TYPE_DECL,,,,class V0LayerParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameter,,false,262,V0LayerParameter,205
109531,TYPE_DECL,,,,struct V0LayerParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameterDefaultTypeInternal,,false,263,V0LayerParameterDefaultTypeInternal,206
109533,TYPE_DECL,,,,class V1LayerParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter,,false,265,V1LayerParameter,208
109534,TYPE_DECL,,,,struct V1LayerParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameterDefaultTypeInternal,,false,266,V1LayerParameterDefaultTypeInternal,209
109536,TYPE_DECL,,,,class WindowDataParameter,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.WindowDataParameter,,false,268,WindowDataParameter,211
109537,TYPE_DECL,,,,struct WindowDataParameterDefaultTypeInternal,1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.WindowDataParameterDefaultTypeInternal,,false,269,WindowDataParameterDefaultTypeInternal,212
109897,TYPE_DECL,,,,"enum PriorBoxParameter_CodeType : int {
  PriorBoxParameter_CodeType_CORNER = 1,
  PriorBoxParameter_CodeType_CENTER_SIZE = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameter_CodeType,,false,347,PriorBoxParameter_CodeType,1
109984,TYPE_DECL,,,,"enum FillerParameter_VarianceNorm : int {
  FillerParameter_VarianceNorm_FAN_IN = 0,
  FillerParameter_VarianceNorm_FAN_OUT = 1,
  FillerParameter_VarianceNorm_AVERAGE = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameter_VarianceNorm,,false,370,FillerParameter_VarianceNorm,12
110075,TYPE_DECL,,,,"enum SolverParameter_SnapshotFormat : int {
  SolverParameter_SnapshotFormat_HDF5 = 0,
  SolverParameter_SnapshotFormat_BINARYPROTO = 1
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter_SnapshotFormat,,false,394,SolverParameter_SnapshotFormat,23
110162,TYPE_DECL,,,,"enum SolverParameter_SolverMode : int {
  SolverParameter_SolverMode_CPU = 0,
  SolverParameter_SolverMode_GPU = 1
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter_SolverMode,,false,417,SolverParameter_SolverMode,34
110249,TYPE_DECL,,,,"enum SolverParameter_SolverType : int {
  SolverParameter_SolverType_SGD = 0,
  SolverParameter_SolverType_NESTEROV = 1,
  SolverParameter_SolverType_ADAGRAD = 2,
  SolverParameter_SolverType_RMSPROP = 3,
  SolverParameter_SolverType_ADADELTA = 4,
  SolverParameter_SolverType_ADAM = 5
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter_SolverType,,false,440,SolverParameter_SolverType,45
110352,TYPE_DECL,,,,"enum ParamSpec_DimCheckMode : int {
  ParamSpec_DimCheckMode_STRICT = 0,
  ParamSpec_DimCheckMode_PERMISSIVE = 1
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpec_DimCheckMode,,false,467,ParamSpec_DimCheckMode,56
110439,TYPE_DECL,,,,"enum LossParameter_NormalizationMode : int {
  LossParameter_NormalizationMode_FULL = 0,
  LossParameter_NormalizationMode_VALID = 1,
  LossParameter_NormalizationMode_BATCH_SIZE = 2,
  LossParameter_NormalizationMode_NONE = 3
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameter_NormalizationMode,,false,490,LossParameter_NormalizationMode,67
110534,TYPE_DECL,,,,"enum ConvolutionParameter_Engine : int {
  ConvolutionParameter_Engine_DEFAULT = 0,
  ConvolutionParameter_Engine_CAFFE = 1,
  ConvolutionParameter_Engine_CUDNN = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameter_Engine,,false,515,ConvolutionParameter_Engine,78
110625,TYPE_DECL,,,,"enum DataParameter_DB : int {
  DataParameter_DB_LEVELDB = 0,
  DataParameter_DB_LMDB = 1
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameter_DB,,false,539,DataParameter_DB,89
110712,TYPE_DECL,,,,"enum EltwiseParameter_EltwiseOp : int {
  EltwiseParameter_EltwiseOp_PROD = 0,
  EltwiseParameter_EltwiseOp_SUM = 1,
  EltwiseParameter_EltwiseOp_MAX = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameter_EltwiseOp,,false,562,EltwiseParameter_EltwiseOp,100
110803,TYPE_DECL,,,,"enum HingeLossParameter_Norm : int {
  HingeLossParameter_Norm_L1 = 1,
  HingeLossParameter_Norm_L2 = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameter_Norm,,false,586,HingeLossParameter_Norm,111
110890,TYPE_DECL,,,,"enum LRNParameter_NormRegion : int {
  LRNParameter_NormRegion_ACROSS_CHANNELS = 0,
  LRNParameter_NormRegion_WITHIN_CHANNEL = 1
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter_NormRegion,,false,609,LRNParameter_NormRegion,122
110977,TYPE_DECL,,,,"enum LRNParameter_Engine : int {
  LRNParameter_Engine_DEFAULT = 0,
  LRNParameter_Engine_CAFFE = 1,
  LRNParameter_Engine_CUDNN = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter_Engine,,false,632,LRNParameter_Engine,133
111068,TYPE_DECL,,,,"enum PoolingParameter_PoolMethod : int {
  PoolingParameter_PoolMethod_MAX = 0,
  PoolingParameter_PoolMethod_AVE = 1,
  PoolingParameter_PoolMethod_STOCHASTIC = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter_PoolMethod,,false,656,PoolingParameter_PoolMethod,144
111159,TYPE_DECL,,,,"enum PoolingParameter_Engine : int {
  PoolingParameter_Engine_DEFAULT = 0,
  PoolingParameter_Engine_CAFFE = 1,
  PoolingParameter_Engine_CUDNN = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter_Engine,,false,680,PoolingParameter_Engine,155
111250,TYPE_DECL,,,,"enum ReductionParameter_ReductionOp : int {
  ReductionParameter_ReductionOp_SUM = 1,
  ReductionParameter_ReductionOp_ASUM = 2,
  ReductionParameter_ReductionOp_SUMSQ = 3,
  ReductionParameter_ReductionOp_MEAN = 4
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameter_ReductionOp,,false,704,ReductionParameter_ReductionOp,166
111345,TYPE_DECL,,,,"enum ReLUParameter_Engine : int {
  ReLUParameter_Engine_DEFAULT = 0,
  ReLUParameter_Engine_CAFFE = 1,
  ReLUParameter_Engine_CUDNN = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameter_Engine,,false,729,ReLUParameter_Engine,177
111436,TYPE_DECL,,,,"enum SigmoidParameter_Engine : int {
  SigmoidParameter_Engine_DEFAULT = 0,
  SigmoidParameter_Engine_CAFFE = 1,
  SigmoidParameter_Engine_CUDNN = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameter_Engine,,false,753,SigmoidParameter_Engine,188
111527,TYPE_DECL,,,,"enum SoftmaxParameter_Engine : int {
  SoftmaxParameter_Engine_DEFAULT = 0,
  SoftmaxParameter_Engine_CAFFE = 1,
  SoftmaxParameter_Engine_CUDNN = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameter_Engine,,false,777,SoftmaxParameter_Engine,199
111618,TYPE_DECL,,,,"enum TanHParameter_Engine : int {
  TanHParameter_Engine_DEFAULT = 0,
  TanHParameter_Engine_CAFFE = 1,
  TanHParameter_Engine_CUDNN = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameter_Engine,,false,801,TanHParameter_Engine,210
111709,TYPE_DECL,,,,"enum SPPParameter_PoolMethod : int {
  SPPParameter_PoolMethod_MAX = 0,
  SPPParameter_PoolMethod_AVE = 1,
  SPPParameter_PoolMethod_STOCHASTIC = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter_PoolMethod,,false,825,SPPParameter_PoolMethod,221
111800,TYPE_DECL,,,,"enum SPPParameter_Engine : int {
  SPPParameter_Engine_DEFAULT = 0,
  SPPParameter_Engine_CAFFE = 1,
  SPPParameter_Engine_CUDNN = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter_Engine,,false,849,SPPParameter_Engine,232
111891,TYPE_DECL,,,,"enum V1LayerParameter_LayerType : int {
  V1LayerParameter_LayerType_NONE = 0,
  V1LayerParameter_LayerType_ABSVAL = 35,
  V1LayerParameter_LayerType_ACCURACY = 1,
  V1LayerParameter_LayerType_ARGMAX = 30,
  V1LayerParameter_LayerType_BNLL = 2,
  V1LayerParameter_LayerType_CONCAT = 3,
  V1LayerParameter_LayerType_CONTRASTIVE_LOSS = 37,
  V1LayerParameter_LayerType_CONVOLUTION = 4,
  V1LayerParameter_LayerType_DATA = 5,
  V1LayerParameter_LayerType_DECONVOLUTION = 39,
  V1LayerParameter_LayerType_DROPOUT = 6,
  V1LayerParameter_LayerType_DUMMY_DATA = 32,
  V1LayerParameter_LayerType_EUCLIDEAN_LOSS = 7,
  V1LayerParameter_LayerType_ELTWISE = 25,
  V1LayerParameter_LayerType_EXP = 38,
  V1LayerParameter_LayerType_FLATTEN = 8,
  V1LayerParameter_LayerType_HDF5_DATA = 9,
  V1LayerParameter_LayerType_HDF5_OUTPUT = 10,
  V1LayerParameter_LayerType_HINGE_LOSS = 28,
  V1LayerParameter_LayerType_IM2COL = 11,
  V1LayerParameter_LayerType_IMAGE_DATA = 12,
  V1LayerParameter_LayerType_INFOGAIN_L...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter_LayerType,,false,873,V1LayerParameter_LayerType,243
112130,TYPE_DECL,,,,"enum V1LayerParameter_DimCheckMode : int {
  V1LayerParameter_DimCheckMode_STRICT = 0,
  V1LayerParameter_DimCheckMode_PERMISSIVE = 1
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter_DimCheckMode,,false,934,V1LayerParameter_DimCheckMode,254
112217,TYPE_DECL,,,,"enum V0LayerParameter_PoolMethod : int {
  V0LayerParameter_PoolMethod_MAX = 0,
  V0LayerParameter_PoolMethod_AVE = 1,
  V0LayerParameter_PoolMethod_STOCHASTIC = 2
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameter_PoolMethod,,false,957,V0LayerParameter_PoolMethod,265
112308,TYPE_DECL,,,,"enum Type : int {
  DOUBLE = 0,
  FLOAT = 1,
  FLOAT16 = 2,
  INT = 3,
  UINT = 4
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Type,,false,981,Type,276
112407,TYPE_DECL,,,,"enum Phase : int {
  TRAIN = 0,
  TEST = 1
}",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Phase,,false,1007,Phase,287
112494,TYPE_DECL,,,,"class BlobShape final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.BlobShape) */ {
 public:
  inline BlobShape() : BlobShape(nullptr) {}
  ~BlobShape() override;
  explicit constexpr BlobShape(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlobShape(const BlobShape& from);
  BlobShape(BlobShape&& from) noexcept
    : BlobShape() {
    *this = ::std::move(from);
  }

  inline BlobShape& operator=(const BlobShape& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobShape& operator=(BlobShape&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _in...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobShape,PROTOBUF_NAMESPACE_ID.Message,false,1032,BlobShape,298
112778,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobShape.AnyMetadata,,false,1139,AnyMetadata,34
112810,TYPE_DECL,,,,"enum : int {
    kDimFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobShape.anonymous_enum_0,,false,1160,anonymous_enum_0,42
112873,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobShape._Internal,,false,1187,_Internal,55
112874,TYPE_DECL,opencv_caffe.BlobShape.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobShape.InternalHelper,,false,1189,InternalHelper,56
112875,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,1190,InternalArenaConstructable_,57
112876,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,1191,DestructorSkippable_,58
112880,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobShape.TableStruct_opencv_2dcaffe_2eproto,,false,1195,TableStruct_opencv_2dcaffe_2eproto,62
112888,TYPE_DECL,,,,"class BlobProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.BlobProto) */ {
 public:
  inline BlobProto() : BlobProto(nullptr) {}
  ~BlobProto() override;
  explicit constexpr BlobProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlobProto(const BlobProto& from);
  BlobProto(BlobProto&& from) noexcept
    : BlobProto() {
    *this = ::std::move(from);
  }

  inline BlobProto& operator=(const BlobProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobProto& operator=(BlobProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _in...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProto,PROTOBUF_NAMESPACE_ID.Message,false,1199,BlobProto,299
113172,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProto.AnyMetadata,,false,1306,AnyMetadata,34
113204,TYPE_DECL,,,,"enum : int {
    kDataFieldNumber = 5,
    kDiffFieldNumber = 6,
    kDoubleDataFieldNumber = 8,
    kDoubleDiffFieldNumber = 9,
    kRawDataFieldNumber = 12,
    kShapeFieldNumber = 7,
    kNumFieldNumber = 1,
    kChannelsFieldNumber = 2,
    kHeightFieldNumber = 3,
    kWidthFieldNumber = 4,
    kRawDataTypeFieldNumber = 10,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProto.anonymous_enum_1,,false,1327,anonymous_enum_1,42
113710,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProto._Internal,,false,1531,_Internal,149
113711,TYPE_DECL,opencv_caffe.BlobProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProto.InternalHelper,,false,1533,InternalHelper,150
113712,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,1534,InternalArenaConstructable_,151
113713,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,1535,DestructorSkippable_,152
113727,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProto.TableStruct_opencv_2dcaffe_2eproto,,false,1549,TableStruct_opencv_2dcaffe_2eproto,166
113735,TYPE_DECL,,,,"class BlobProtoVector final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.BlobProtoVector) */ {
 public:
  inline BlobProtoVector() : BlobProtoVector(nullptr) {}
  ~BlobProtoVector() override;
  explicit constexpr BlobProtoVector(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlobProtoVector(const BlobProtoVector& from);
  BlobProtoVector(BlobProtoVector&& from) noexcept
    : BlobProtoVector() {
    *this = ::std::move(from);
  }

  inline BlobProtoVector& operator=(const BlobProtoVector& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobProtoVector& operator=(BlobProtoVector&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inli...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoVector,PROTOBUF_NAMESPACE_ID.Message,false,1553,BlobProtoVector,300
114019,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoVector.AnyMetadata,,false,1660,AnyMetadata,34
114051,TYPE_DECL,,,,"enum : int {
    kBlobsFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoVector.anonymous_enum_2,,false,1681,anonymous_enum_2,42
114103,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoVector._Internal,,false,1704,_Internal,53
114104,TYPE_DECL,opencv_caffe.BlobProtoVector.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoVector.InternalHelper,,false,1706,InternalHelper,54
114105,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,1707,InternalArenaConstructable_,55
114106,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,1708,DestructorSkippable_,56
114109,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BlobProtoVector.TableStruct_opencv_2dcaffe_2eproto,,false,1711,TableStruct_opencv_2dcaffe_2eproto,59
114117,TYPE_DECL,,,,"class PermuteParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.PermuteParameter) */ {
 public:
  inline PermuteParameter() : PermuteParameter(nullptr) {}
  ~PermuteParameter() override;
  explicit constexpr PermuteParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PermuteParameter(const PermuteParameter& from);
  PermuteParameter(PermuteParameter&& from) noexcept
    : PermuteParameter() {
    *this = ::std::move(from);
  }

  inline PermuteParameter& operator=(const PermuteParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PermuteParameter& operator=(PermuteParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PermuteParameter,PROTOBUF_NAMESPACE_ID.Message,false,1715,PermuteParameter,301
114401,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PermuteParameter.AnyMetadata,,false,1822,AnyMetadata,34
114433,TYPE_DECL,,,,"enum : int {
    kOrderFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PermuteParameter.anonymous_enum_3,,false,1843,anonymous_enum_3,42
114496,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PermuteParameter._Internal,,false,1870,_Internal,55
114497,TYPE_DECL,opencv_caffe.PermuteParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PermuteParameter.InternalHelper,,false,1872,InternalHelper,56
114498,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,1873,InternalArenaConstructable_,57
114499,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,1874,DestructorSkippable_,58
114502,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PermuteParameter.TableStruct_opencv_2dcaffe_2eproto,,false,1877,TableStruct_opencv_2dcaffe_2eproto,61
114510,TYPE_DECL,,,,"class NormalizeBBoxParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.NormalizeBBoxParameter) */ {
 public:
  inline NormalizeBBoxParameter() : NormalizeBBoxParameter(nullptr) {}
  ~NormalizeBBoxParameter() override;
  explicit constexpr NormalizeBBoxParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NormalizeBBoxParameter(const NormalizeBBoxParameter& from);
  NormalizeBBoxParameter(NormalizeBBoxParameter&& from) noexcept
    : NormalizeBBoxParameter() {
    *this = ::std::move(from);
  }

  inline NormalizeBBoxParameter& operator=(const NormalizeBBoxParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline NormalizeBBoxParameter& operator=(NormalizeBBoxParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizeBBoxParameter,PROTOBUF_NAMESPACE_ID.Message,false,1881,NormalizeBBoxParameter,302
114794,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizeBBoxParameter.AnyMetadata,,false,1988,AnyMetadata,34
114826,TYPE_DECL,,,,"enum : int {
    kScaleFillerFieldNumber = 2,
    kAcrossSpatialFieldNumber = 1,
    kChannelSharedFieldNumber = 3,
    kEpsFieldNumber = 4,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizeBBoxParameter.anonymous_enum_4,,false,2009,anonymous_enum_4,42
114983,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizeBBoxParameter._Internal,,false,2074,_Internal,75
114984,TYPE_DECL,opencv_caffe.NormalizeBBoxParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizeBBoxParameter.InternalHelper,,false,2076,InternalHelper,76
114985,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,2077,InternalArenaConstructable_,77
114986,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,2078,DestructorSkippable_,78
114993,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizeBBoxParameter.TableStruct_opencv_2dcaffe_2eproto,,false,2085,TableStruct_opencv_2dcaffe_2eproto,85
115001,TYPE_DECL,,,,"class PriorBoxParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.PriorBoxParameter) */ {
 public:
  inline PriorBoxParameter() : PriorBoxParameter(nullptr) {}
  ~PriorBoxParameter() override;
  explicit constexpr PriorBoxParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PriorBoxParameter(const PriorBoxParameter& from);
  PriorBoxParameter(PriorBoxParameter&& from) noexcept
    : PriorBoxParameter() {
    *this = ::std::move(from);
  }

  inline PriorBoxParameter& operator=(const PriorBoxParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PriorBoxParameter& operator=(PriorBoxParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameter,PROTOBUF_NAMESPACE_ID.Message,false,2089,PriorBoxParameter,303
115285,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameter.AnyMetadata,,false,2196,AnyMetadata,34
115317,TYPE_DECL,ANY,,,typedef PriorBoxParameter_CodeType CodeType;,38,misc\caffe\opencv-caffe.pb.hpp,CodeType,,false,2215,CodeType,42
115372,TYPE_DECL,,,,"enum : int {
    kMinSizeFieldNumber = 1,
    kMaxSizeFieldNumber = 2,
    kAspectRatioFieldNumber = 3,
    kVarianceFieldNumber = 6,
    kOffsetHFieldNumber = 14,
    kOffsetWFieldNumber = 15,
    kWidthFieldNumber = 16,
    kHeightFieldNumber = 17,
    kImgSizeFieldNumber = 7,
    kImgHFieldNumber = 8,
    kImgWFieldNumber = 9,
    kStepFieldNumber = 10,
    kStepHFieldNumber = 11,
    kStepWFieldNumber = 12,
    kFlipFieldNumber = 4,
    kClipFieldNumber = 5,
    kOffsetFieldNumber = 13,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameter.anonymous_enum_5,,false,2247,anonymous_enum_5,52
116147,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameter._Internal,,false,2561,_Internal,212
116148,TYPE_DECL,opencv_caffe.PriorBoxParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameter.InternalHelper,,false,2563,InternalHelper,213
116149,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,2564,InternalArenaConstructable_,214
116150,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,2565,DestructorSkippable_,215
116170,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PriorBoxParameter.TableStruct_opencv_2dcaffe_2eproto,,false,2585,TableStruct_opencv_2dcaffe_2eproto,235
116193,TYPE_DECL,,,,"class DetectionOutputParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.DetectionOutputParameter) */ {
 public:
  inline DetectionOutputParameter() : DetectionOutputParameter(nullptr) {}
  ~DetectionOutputParameter() override;
  explicit constexpr DetectionOutputParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DetectionOutputParameter(const DetectionOutputParameter& from);
  DetectionOutputParameter(DetectionOutputParameter&& from) noexcept
    : DetectionOutputParameter() {
    *this = ::std::move(from);
  }

  inline DetectionOutputParameter& operator=(const DetectionOutputParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline DetectionOutputParameter& operator=(DetectionOutputParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  //...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DetectionOutputParameter,PROTOBUF_NAMESPACE_ID.Message,false,2589,DetectionOutputParameter,304
116477,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DetectionOutputParameter.AnyMetadata,,false,2696,AnyMetadata,34
116509,TYPE_DECL,,,,"enum : int {
    kNmsParamFieldNumber = 4,
    kSaveOutputParamFieldNumber = 5,
    kNumClassesFieldNumber = 1,
    kBackgroundLabelIdFieldNumber = 3,
    kConfidenceThresholdFieldNumber = 9,
    kVarianceEncodedInTargetFieldNumber = 8,
    kClipFieldNumber = 1000,
    kKeepTopKFieldNumber = 7,
    kCodeTypeFieldNumber = 6,
    kShareLocationFieldNumber = 2,
    kNormalizedBboxFieldNumber = 10,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DetectionOutputParameter.anonymous_enum_6,,false,2717,anonymous_enum_6,42
116920,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DetectionOutputParameter._Internal,,false,2885,_Internal,128
116921,TYPE_DECL,opencv_caffe.DetectionOutputParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DetectionOutputParameter.InternalHelper,,false,2887,InternalHelper,129
116922,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,2888,InternalArenaConstructable_,130
116923,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,2889,DestructorSkippable_,131
116937,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DetectionOutputParameter.TableStruct_opencv_2dcaffe_2eproto,,false,2903,TableStruct_opencv_2dcaffe_2eproto,145
116945,TYPE_DECL,,,,"class Datum final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.Datum) */ {
 public:
  inline Datum() : Datum(nullptr) {}
  ~Datum() override;
  explicit constexpr Datum(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Datum(const Datum& from);
  Datum(Datum&& from) noexcept
    : Datum() {
    *this = ::std::move(from);
  }

  inline Datum& operator=(const Datum& from) {
    CopyFrom(from);
    return *this;
  }
  inline Datum& operator=(Datum&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::Unk...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Datum,PROTOBUF_NAMESPACE_ID.Message,false,2907,Datum,305
117229,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Datum.AnyMetadata,,false,3014,AnyMetadata,34
117261,TYPE_DECL,,,,"enum : int {
    kFloatDataFieldNumber = 6,
    kDataFieldNumber = 4,
    kChannelsFieldNumber = 1,
    kHeightFieldNumber = 2,
    kWidthFieldNumber = 3,
    kLabelFieldNumber = 5,
    kEncodedFieldNumber = 7,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Datum.anonymous_enum_7,,false,3035,anonymous_enum_7,42
117543,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Datum._Internal,,false,3151,_Internal,102
117544,TYPE_DECL,opencv_caffe.Datum.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Datum.InternalHelper,,false,3153,InternalHelper,103
117545,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,3154,InternalArenaConstructable_,104
117546,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,3155,DestructorSkippable_,105
117556,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.Datum.TableStruct_opencv_2dcaffe_2eproto,,false,3165,TableStruct_opencv_2dcaffe_2eproto,115
117564,TYPE_DECL,,,,"class FillerParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.FillerParameter) */ {
 public:
  inline FillerParameter() : FillerParameter(nullptr) {}
  ~FillerParameter() override;
  explicit constexpr FillerParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FillerParameter(const FillerParameter& from);
  FillerParameter(FillerParameter&& from) noexcept
    : FillerParameter() {
    *this = ::std::move(from);
  }

  inline FillerParameter& operator=(const FillerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline FillerParameter& operator=(FillerParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inli...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameter,PROTOBUF_NAMESPACE_ID.Message,false,3169,FillerParameter,306
117848,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameter.AnyMetadata,,false,3276,AnyMetadata,34
117880,TYPE_DECL,ANY,,,typedef FillerParameter_VarianceNorm VarianceNorm;,40,misc\caffe\opencv-caffe.pb.hpp,VarianceNorm,,false,3295,VarianceNorm,42
117936,TYPE_DECL,,,,"enum : int {
    kTypeFieldNumber = 1,
    kValueFieldNumber = 2,
    kMinFieldNumber = 3,
    kMeanFieldNumber = 5,
    kVarianceNormFieldNumber = 8,
    kSparseFieldNumber = 7,
    kMaxFieldNumber = 4,
    kStdFieldNumber = 6,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameter.anonymous_enum_8,,false,3329,anonymous_enum_8,53
118228,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameter._Internal,,false,3450,_Internal,115
118229,TYPE_DECL,opencv_caffe.FillerParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameter.InternalHelper,,false,3452,InternalHelper,116
118230,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,3453,InternalArenaConstructable_,117
118231,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,3454,DestructorSkippable_,118
118243,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FillerParameter.TableStruct_opencv_2dcaffe_2eproto,,false,3466,TableStruct_opencv_2dcaffe_2eproto,130
118269,TYPE_DECL,,,,"class NetParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.NetParameter) */ {
 public:
  inline NetParameter() : NetParameter(nullptr) {}
  ~NetParameter() override;
  explicit constexpr NetParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NetParameter(const NetParameter& from);
  NetParameter(NetParameter&& from) noexcept
    : NetParameter() {
    *this = ::std::move(from);
  }

  inline NetParameter& operator=(const NetParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetParameter& operator=(NetParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFiel...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetParameter,PROTOBUF_NAMESPACE_ID.Message,false,3470,NetParameter,307
118553,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetParameter.AnyMetadata,,false,3577,AnyMetadata,34
118585,TYPE_DECL,,,,"enum : int {
    kLayersFieldNumber = 2,
    kInputFieldNumber = 3,
    kInputDimFieldNumber = 4,
    kInputShapeFieldNumber = 8,
    kLayerFieldNumber = 100,
    kNameFieldNumber = 1,
    kStateFieldNumber = 6,
    kForceBackwardFieldNumber = 5,
    kDebugInfoFieldNumber = 7,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetParameter.anonymous_enum_9,,false,3598,anonymous_enum_9,42
119038,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetParameter._Internal,,false,3773,_Internal,138
119039,TYPE_DECL,opencv_caffe.NetParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetParameter.InternalHelper,,false,3775,InternalHelper,139
119040,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,3776,InternalArenaConstructable_,140
119041,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,3777,DestructorSkippable_,141
119053,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetParameter.TableStruct_opencv_2dcaffe_2eproto,,false,3789,TableStruct_opencv_2dcaffe_2eproto,153
119061,TYPE_DECL,,,,"class SolverParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.SolverParameter) */ {
 public:
  inline SolverParameter() : SolverParameter(nullptr) {}
  ~SolverParameter() override;
  explicit constexpr SolverParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SolverParameter(const SolverParameter& from);
  SolverParameter(SolverParameter&& from) noexcept
    : SolverParameter() {
    *this = ::std::move(from);
  }

  inline SolverParameter& operator=(const SolverParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolverParameter& operator=(SolverParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inli...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter,PROTOBUF_NAMESPACE_ID.Message,false,3793,SolverParameter,308
119345,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter.AnyMetadata,,false,3900,AnyMetadata,34
119377,TYPE_DECL,ANY,,,typedef SolverParameter_SnapshotFormat SnapshotFormat;,42,misc\caffe\opencv-caffe.pb.hpp,SnapshotFormat,,false,3919,SnapshotFormat,42
119432,TYPE_DECL,ANY,,,typedef SolverParameter_SolverMode SolverMode;,38,misc\caffe\opencv-caffe.pb.hpp,SolverMode,,false,3949,SolverMode,52
119487,TYPE_DECL,ANY,,,typedef SolverParameter_SolverType SolverType;,38,misc\caffe\opencv-caffe.pb.hpp,SolverType,,false,3979,SolverType,62
119546,TYPE_DECL,,,,"enum : int {
    kTestNetFieldNumber = 2,
    kTestIterFieldNumber = 3,
    kTestNetParamFieldNumber = 22,
    kTestStateFieldNumber = 27,
    kStepvalueFieldNumber = 34,
    kTrainNetFieldNumber = 1,
    kLrPolicyFieldNumber = 8,
    kSnapshotPrefixFieldNumber = 15,
    kNetFieldNumber = 24,
    kRegularizationTypeFieldNumber = 29,
    kTypeFieldNumber = 40,
    kTrainNetParamFieldNumber = 21,
    kNetParamFieldNumber = 25,
    kTrainStateFieldNumber = 26,
    kTestIntervalFieldNumber = 4,
    kBaseLrFieldNumber = 5,
    kDisplayFieldNumber = 6,
    kMaxIterFieldNumber = 7,
    kGammaFieldNumber = 9,
    kPowerFieldNumber = 10,
    kMomentumFieldNumber = 11,
    kWeightDecayFieldNumber = 12,
    kStepsizeFieldNumber = 13,
    kSnapshotFieldNumber = 14,
    kDeviceIdFieldNumber = 18,
    kTestComputeLossFieldNumber = 19,
    kSnapshotDiffFieldNumber = 16,
    kDebugInfoFieldNumber = 23,
    kSolverTypeFieldNumber = 30,
    kMomentum2FieldNumber = 39,
    kRandomSeedFieldNumber = 20,...",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter.anonymous_enum_10,,false,4019,anonymous_enum_10,76
121171,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter._Internal,,false,4667,_Internal,424
121172,TYPE_DECL,opencv_caffe.SolverParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter.InternalHelper,,false,4669,InternalHelper,425
121173,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,4670,InternalArenaConstructable_,426
121174,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,4671,DestructorSkippable_,427
121219,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverParameter.TableStruct_opencv_2dcaffe_2eproto,,false,4716,TableStruct_opencv_2dcaffe_2eproto,472
121284,TYPE_DECL,,,,"class SolverState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.SolverState) */ {
 public:
  inline SolverState() : SolverState(nullptr) {}
  ~SolverState() override;
  explicit constexpr SolverState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SolverState(const SolverState& from);
  SolverState(SolverState&& from) noexcept
    : SolverState() {
    *this = ::std::move(from);
  }

  inline SolverState& operator=(const SolverState& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolverState& operator=(SolverState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_f...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverState,PROTOBUF_NAMESPACE_ID.Message,false,4720,SolverState,309
121568,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverState.AnyMetadata,,false,4827,AnyMetadata,34
121600,TYPE_DECL,,,,"enum : int {
    kHistoryFieldNumber = 3,
    kLearnedNetFieldNumber = 2,
    kIterFieldNumber = 1,
    kCurrentStepFieldNumber = 4,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverState.anonymous_enum_11,,false,4848,anonymous_enum_11,42
121769,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverState._Internal,,false,4918,_Internal,79
121770,TYPE_DECL,opencv_caffe.SolverState.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverState.InternalHelper,,false,4920,InternalHelper,80
121771,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,4921,InternalArenaConstructable_,81
121772,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,4922,DestructorSkippable_,82
121779,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SolverState.TableStruct_opencv_2dcaffe_2eproto,,false,4929,TableStruct_opencv_2dcaffe_2eproto,89
121787,TYPE_DECL,,,,"class NetState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.NetState) */ {
 public:
  inline NetState() : NetState(nullptr) {}
  ~NetState() override;
  explicit constexpr NetState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NetState(const NetState& from);
  NetState(NetState&& from) noexcept
    : NetState() {
    *this = ::std::move(from);
  }

  inline NetState& operator=(const NetState& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetState& operator=(NetState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetState,PROTOBUF_NAMESPACE_ID.Message,false,4933,NetState,310
122071,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetState.AnyMetadata,,false,5040,AnyMetadata,34
122103,TYPE_DECL,,,,"enum : int {
    kStageFieldNumber = 3,
    kLevelFieldNumber = 2,
    kPhaseFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetState.anonymous_enum_12,,false,5061,anonymous_enum_12,42
122258,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetState._Internal,,false,5118,_Internal,73
122259,TYPE_DECL,opencv_caffe.NetState.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetState.InternalHelper,,false,5120,InternalHelper,74
122260,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,5121,InternalArenaConstructable_,75
122261,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,5122,DestructorSkippable_,76
122267,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetState.TableStruct_opencv_2dcaffe_2eproto,,false,5128,TableStruct_opencv_2dcaffe_2eproto,82
122275,TYPE_DECL,,,,"class NetStateRule final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.NetStateRule) */ {
 public:
  inline NetStateRule() : NetStateRule(nullptr) {}
  ~NetStateRule() override;
  explicit constexpr NetStateRule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NetStateRule(const NetStateRule& from);
  NetStateRule(NetStateRule&& from) noexcept
    : NetStateRule() {
    *this = ::std::move(from);
  }

  inline NetStateRule& operator=(const NetStateRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetStateRule& operator=(NetStateRule&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFiel...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateRule,PROTOBUF_NAMESPACE_ID.Message,false,5132,NetStateRule,311
122559,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateRule.AnyMetadata,,false,5239,AnyMetadata,34
122591,TYPE_DECL,,,,"enum : int {
    kStageFieldNumber = 4,
    kNotStageFieldNumber = 5,
    kPhaseFieldNumber = 1,
    kMinLevelFieldNumber = 2,
    kMaxLevelFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateRule.anonymous_enum_13,,false,5260,anonymous_enum_13,42
122862,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateRule._Internal,,false,5356,_Internal,96
122863,TYPE_DECL,opencv_caffe.NetStateRule.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateRule.InternalHelper,,false,5358,InternalHelper,97
122864,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,5359,InternalArenaConstructable_,98
122865,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,5360,DestructorSkippable_,99
122873,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NetStateRule.TableStruct_opencv_2dcaffe_2eproto,,false,5368,TableStruct_opencv_2dcaffe_2eproto,107
122881,TYPE_DECL,,,,"class ParamSpec final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ParamSpec) */ {
 public:
  inline ParamSpec() : ParamSpec(nullptr) {}
  ~ParamSpec() override;
  explicit constexpr ParamSpec(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParamSpec(const ParamSpec& from);
  ParamSpec(ParamSpec&& from) noexcept
    : ParamSpec() {
    *this = ::std::move(from);
  }

  inline ParamSpec& operator=(const ParamSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParamSpec& operator=(ParamSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _in...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpec,PROTOBUF_NAMESPACE_ID.Message,false,5372,ParamSpec,312
123165,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpec.AnyMetadata,,false,5479,AnyMetadata,34
123197,TYPE_DECL,ANY,,,typedef ParamSpec_DimCheckMode DimCheckMode;,34,misc\caffe\opencv-caffe.pb.hpp,DimCheckMode,,false,5498,DimCheckMode,42
123252,TYPE_DECL,,,,"enum : int {
    kNameFieldNumber = 1,
    kShareModeFieldNumber = 2,
    kLrMultFieldNumber = 3,
    kDecayMultFieldNumber = 4,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpec.anonymous_enum_14,,false,5530,anonymous_enum_14,52
123408,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpec._Internal,,false,5595,_Internal,86
123409,TYPE_DECL,opencv_caffe.ParamSpec.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpec.InternalHelper,,false,5597,InternalHelper,87
123410,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,5598,InternalArenaConstructable_,88
123411,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,5599,DestructorSkippable_,89
123418,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParamSpec.TableStruct_opencv_2dcaffe_2eproto,,false,5606,TableStruct_opencv_2dcaffe_2eproto,96
123441,TYPE_DECL,,,,"class LayerParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.LayerParameter) */ {
 public:
  inline LayerParameter() : LayerParameter(nullptr) {}
  ~LayerParameter() override;
  explicit constexpr LayerParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LayerParameter(const LayerParameter& from);
  LayerParameter(LayerParameter&& from) noexcept
    : LayerParameter() {
    *this = ::std::move(from);
  }

  inline LayerParameter& operator=(const LayerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline LayerParameter& operator=(LayerParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROT...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LayerParameter,PROTOBUF_NAMESPACE_ID.Message,false,5610,LayerParameter,313
123725,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LayerParameter.AnyMetadata,,false,5717,AnyMetadata,34
123757,TYPE_DECL,,,,"enum : int {
    kBottomFieldNumber = 3,
    kTopFieldNumber = 4,
    kLossWeightFieldNumber = 5,
    kParamFieldNumber = 6,
    kBlobsFieldNumber = 7,
    kIncludeFieldNumber = 8,
    kExcludeFieldNumber = 9,
    kPropagateDownFieldNumber = 11,
    kNameFieldNumber = 1,
    kTypeFieldNumber = 2,
    kTransformParamFieldNumber = 100,
    kLossParamFieldNumber = 101,
    kAccuracyParamFieldNumber = 102,
    kArgmaxParamFieldNumber = 103,
    kConcatParamFieldNumber = 104,
    kContrastiveLossParamFieldNumber = 105,
    kConvolutionParamFieldNumber = 106,
    kDataParamFieldNumber = 107,
    kDropoutParamFieldNumber = 108,
    kDummyDataParamFieldNumber = 109,
    kEltwiseParamFieldNumber = 110,
    kExpParamFieldNumber = 111,
    kHdf5DataParamFieldNumber = 112,
    kHdf5OutputParamFieldNumber = 113,
    kHingeLossParamFieldNumber = 114,
    kImageDataParamFieldNumber = 115,
    kInfogainLossParamFieldNumber = 116,
    kInnerProductParamFieldNumber = 117,
    kLrnParamFieldNumber = 1...",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LayerParameter.anonymous_enum_15,,false,5738,anonymous_enum_15,42
127062,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LayerParameter._Internal,,false,6992,_Internal,764
127063,TYPE_DECL,opencv_caffe.LayerParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LayerParameter.InternalHelper,,false,6994,InternalHelper,765
127064,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,6995,InternalArenaConstructable_,766
127065,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,6996,DestructorSkippable_,767
127133,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LayerParameter.TableStruct_opencv_2dcaffe_2eproto,,false,7064,TableStruct_opencv_2dcaffe_2eproto,835
127141,TYPE_DECL,,,,"class TransformationParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.TransformationParameter) */ {
 public:
  inline TransformationParameter() : TransformationParameter(nullptr) {}
  ~TransformationParameter() override;
  explicit constexpr TransformationParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TransformationParameter(const TransformationParameter& from);
  TransformationParameter(TransformationParameter&& from) noexcept
    : TransformationParameter() {
    *this = ::std::move(from);
  }

  inline TransformationParameter& operator=(const TransformationParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformationParameter& operator=(TransformationParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORC...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TransformationParameter,PROTOBUF_NAMESPACE_ID.Message,false,7068,TransformationParameter,314
127425,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TransformationParameter.AnyMetadata,,false,7175,AnyMetadata,34
127457,TYPE_DECL,,,,"enum : int {
    kMeanValueFieldNumber = 5,
    kMeanFileFieldNumber = 4,
    kCropSizeFieldNumber = 3,
    kMirrorFieldNumber = 2,
    kForceColorFieldNumber = 6,
    kForceGrayFieldNumber = 7,
    kScaleFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TransformationParameter.anonymous_enum_16,,false,7196,anonymous_enum_16,42
127739,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TransformationParameter._Internal,,false,7312,_Internal,102
127740,TYPE_DECL,opencv_caffe.TransformationParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TransformationParameter.InternalHelper,,false,7314,InternalHelper,103
127741,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,7315,InternalArenaConstructable_,104
127742,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,7316,DestructorSkippable_,105
127752,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TransformationParameter.TableStruct_opencv_2dcaffe_2eproto,,false,7326,TableStruct_opencv_2dcaffe_2eproto,115
127760,TYPE_DECL,,,,"class LossParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.LossParameter) */ {
 public:
  inline LossParameter() : LossParameter(nullptr) {}
  ~LossParameter() override;
  explicit constexpr LossParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LossParameter(const LossParameter& from);
  LossParameter(LossParameter&& from) noexcept
    : LossParameter() {
    *this = ::std::move(from);
  }

  inline LossParameter& operator=(const LossParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline LossParameter& operator=(LossParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameter,PROTOBUF_NAMESPACE_ID.Message,false,7330,LossParameter,315
128044,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameter.AnyMetadata,,false,7437,AnyMetadata,34
128076,TYPE_DECL,ANY,,,typedef LossParameter_NormalizationMode NormalizationMode;,43,misc\caffe\opencv-caffe.pb.hpp,NormalizationMode,,false,7456,NormalizationMode,42
128133,TYPE_DECL,,,,"enum : int {
    kIgnoreLabelFieldNumber = 1,
    kNormalizeFieldNumber = 2,
    kNormalizationFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameter.anonymous_enum_17,,false,7492,anonymous_enum_17,54
128240,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameter._Internal,,false,7538,_Internal,76
128241,TYPE_DECL,opencv_caffe.LossParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameter.InternalHelper,,false,7540,InternalHelper,77
128242,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,7541,InternalArenaConstructable_,78
128243,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,7542,DestructorSkippable_,79
128249,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LossParameter.TableStruct_opencv_2dcaffe_2eproto,,false,7548,TableStruct_opencv_2dcaffe_2eproto,85
128278,TYPE_DECL,,,,"class AccuracyParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.AccuracyParameter) */ {
 public:
  inline AccuracyParameter() : AccuracyParameter(nullptr) {}
  ~AccuracyParameter() override;
  explicit constexpr AccuracyParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AccuracyParameter(const AccuracyParameter& from);
  AccuracyParameter(AccuracyParameter&& from) noexcept
    : AccuracyParameter() {
    *this = ::std::move(from);
  }

  inline AccuracyParameter& operator=(const AccuracyParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccuracyParameter& operator=(AccuracyParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.AccuracyParameter,PROTOBUF_NAMESPACE_ID.Message,false,7552,AccuracyParameter,316
128562,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.AccuracyParameter.AnyMetadata,,false,7659,AnyMetadata,34
128594,TYPE_DECL,,,,"enum : int {
    kIgnoreLabelFieldNumber = 3,
    kTopKFieldNumber = 1,
    kAxisFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.AccuracyParameter.anonymous_enum_18,,false,7680,anonymous_enum_18,42
128701,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.AccuracyParameter._Internal,,false,7726,_Internal,64
128702,TYPE_DECL,opencv_caffe.AccuracyParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.AccuracyParameter.InternalHelper,,false,7728,InternalHelper,65
128703,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,7729,InternalArenaConstructable_,66
128704,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,7730,DestructorSkippable_,67
128710,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.AccuracyParameter.TableStruct_opencv_2dcaffe_2eproto,,false,7736,TableStruct_opencv_2dcaffe_2eproto,73
128718,TYPE_DECL,,,,"class ArgMaxParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ArgMaxParameter) */ {
 public:
  inline ArgMaxParameter() : ArgMaxParameter(nullptr) {}
  ~ArgMaxParameter() override;
  explicit constexpr ArgMaxParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ArgMaxParameter(const ArgMaxParameter& from);
  ArgMaxParameter(ArgMaxParameter&& from) noexcept
    : ArgMaxParameter() {
    *this = ::std::move(from);
  }

  inline ArgMaxParameter& operator=(const ArgMaxParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArgMaxParameter& operator=(ArgMaxParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inli...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ArgMaxParameter,PROTOBUF_NAMESPACE_ID.Message,false,7740,ArgMaxParameter,317
129002,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ArgMaxParameter.AnyMetadata,,false,7847,AnyMetadata,34
129034,TYPE_DECL,,,,"enum : int {
    kOutMaxValFieldNumber = 1,
    kAxisFieldNumber = 3,
    kTopKFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ArgMaxParameter.anonymous_enum_19,,false,7868,anonymous_enum_19,42
129141,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ArgMaxParameter._Internal,,false,7914,_Internal,64
129142,TYPE_DECL,opencv_caffe.ArgMaxParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ArgMaxParameter.InternalHelper,,false,7916,InternalHelper,65
129143,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,7917,InternalArenaConstructable_,66
129144,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,7918,DestructorSkippable_,67
129150,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ArgMaxParameter.TableStruct_opencv_2dcaffe_2eproto,,false,7924,TableStruct_opencv_2dcaffe_2eproto,73
129158,TYPE_DECL,,,,"class ConcatParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ConcatParameter) */ {
 public:
  inline ConcatParameter() : ConcatParameter(nullptr) {}
  ~ConcatParameter() override;
  explicit constexpr ConcatParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConcatParameter(const ConcatParameter& from);
  ConcatParameter(ConcatParameter&& from) noexcept
    : ConcatParameter() {
    *this = ::std::move(from);
  }

  inline ConcatParameter& operator=(const ConcatParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConcatParameter& operator=(ConcatParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inli...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConcatParameter,PROTOBUF_NAMESPACE_ID.Message,false,7928,ConcatParameter,318
129442,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConcatParameter.AnyMetadata,,false,8035,AnyMetadata,34
129474,TYPE_DECL,,,,"enum : int {
    kConcatDimFieldNumber = 1,
    kAxisFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConcatParameter.anonymous_enum_20,,false,8056,anonymous_enum_20,42
129547,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConcatParameter._Internal,,false,8088,_Internal,57
129548,TYPE_DECL,opencv_caffe.ConcatParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConcatParameter.InternalHelper,,false,8090,InternalHelper,58
129549,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,8091,InternalArenaConstructable_,59
129550,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,8092,DestructorSkippable_,60
129555,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConcatParameter.TableStruct_opencv_2dcaffe_2eproto,,false,8097,TableStruct_opencv_2dcaffe_2eproto,65
129563,TYPE_DECL,,,,"class BatchNormParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.BatchNormParameter) */ {
 public:
  inline BatchNormParameter() : BatchNormParameter(nullptr) {}
  ~BatchNormParameter() override;
  explicit constexpr BatchNormParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BatchNormParameter(const BatchNormParameter& from);
  BatchNormParameter(BatchNormParameter&& from) noexcept
    : BatchNormParameter() {
    *this = ::std::move(from);
  }

  inline BatchNormParameter& operator=(const BatchNormParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchNormParameter& operator=(BatchNormParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BatchNormParameter,PROTOBUF_NAMESPACE_ID.Message,false,8101,BatchNormParameter,319
129847,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BatchNormParameter.AnyMetadata,,false,8208,AnyMetadata,34
129879,TYPE_DECL,,,,"enum : int {
    kUseGlobalStatsFieldNumber = 1,
    kScaleBiasFieldNumber = 7,
    kMovingAverageFractionFieldNumber = 2,
    kEpsFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BatchNormParameter.anonymous_enum_21,,false,8229,anonymous_enum_21,42
130020,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BatchNormParameter._Internal,,false,8289,_Internal,71
130021,TYPE_DECL,opencv_caffe.BatchNormParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BatchNormParameter.InternalHelper,,false,8291,InternalHelper,72
130022,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,8292,InternalArenaConstructable_,73
130023,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,8293,DestructorSkippable_,74
130030,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BatchNormParameter.TableStruct_opencv_2dcaffe_2eproto,,false,8300,TableStruct_opencv_2dcaffe_2eproto,81
130038,TYPE_DECL,,,,"class BiasParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.BiasParameter) */ {
 public:
  inline BiasParameter() : BiasParameter(nullptr) {}
  ~BiasParameter() override;
  explicit constexpr BiasParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BiasParameter(const BiasParameter& from);
  BiasParameter(BiasParameter&& from) noexcept
    : BiasParameter() {
    *this = ::std::move(from);
  }

  inline BiasParameter& operator=(const BiasParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline BiasParameter& operator=(BiasParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BiasParameter,PROTOBUF_NAMESPACE_ID.Message,false,8304,BiasParameter,320
130322,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BiasParameter.AnyMetadata,,false,8411,AnyMetadata,34
130354,TYPE_DECL,,,,"enum : int {
    kFillerFieldNumber = 3,
    kAxisFieldNumber = 1,
    kNumAxesFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BiasParameter.anonymous_enum_22,,false,8432,anonymous_enum_22,42
130477,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BiasParameter._Internal,,false,8483,_Internal,68
130478,TYPE_DECL,opencv_caffe.BiasParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BiasParameter.InternalHelper,,false,8485,InternalHelper,69
130479,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,8486,InternalArenaConstructable_,70
130480,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,8487,DestructorSkippable_,71
130486,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.BiasParameter.TableStruct_opencv_2dcaffe_2eproto,,false,8493,TableStruct_opencv_2dcaffe_2eproto,77
130494,TYPE_DECL,,,,"class ContrastiveLossParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ContrastiveLossParameter) */ {
 public:
  inline ContrastiveLossParameter() : ContrastiveLossParameter(nullptr) {}
  ~ContrastiveLossParameter() override;
  explicit constexpr ContrastiveLossParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ContrastiveLossParameter(const ContrastiveLossParameter& from);
  ContrastiveLossParameter(ContrastiveLossParameter&& from) noexcept
    : ContrastiveLossParameter() {
    *this = ::std::move(from);
  }

  inline ContrastiveLossParameter& operator=(const ContrastiveLossParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContrastiveLossParameter& operator=(ContrastiveLossParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  //...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ContrastiveLossParameter,PROTOBUF_NAMESPACE_ID.Message,false,8497,ContrastiveLossParameter,321
130778,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ContrastiveLossParameter.AnyMetadata,,false,8604,AnyMetadata,34
130810,TYPE_DECL,,,,"enum : int {
    kLegacyVersionFieldNumber = 2,
    kMarginFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ContrastiveLossParameter.anonymous_enum_23,,false,8625,anonymous_enum_23,42
130883,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ContrastiveLossParameter._Internal,,false,8657,_Internal,57
130884,TYPE_DECL,opencv_caffe.ContrastiveLossParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ContrastiveLossParameter.InternalHelper,,false,8659,InternalHelper,58
130885,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,8660,InternalArenaConstructable_,59
130886,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,8661,DestructorSkippable_,60
130891,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ContrastiveLossParameter.TableStruct_opencv_2dcaffe_2eproto,,false,8666,TableStruct_opencv_2dcaffe_2eproto,65
130899,TYPE_DECL,,,,"class ConvolutionParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ConvolutionParameter) */ {
 public:
  inline ConvolutionParameter() : ConvolutionParameter(nullptr) {}
  ~ConvolutionParameter() override;
  explicit constexpr ConvolutionParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConvolutionParameter(const ConvolutionParameter& from);
  ConvolutionParameter(ConvolutionParameter&& from) noexcept
    : ConvolutionParameter() {
    *this = ::std::move(from);
  }

  inline ConvolutionParameter& operator=(const ConvolutionParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvolutionParameter& operator=(ConvolutionParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&fr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameter,PROTOBUF_NAMESPACE_ID.Message,false,8670,ConvolutionParameter,322
131183,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameter.AnyMetadata,,false,8777,AnyMetadata,34
131215,TYPE_DECL,ANY,,,typedef ConvolutionParameter_Engine Engine;,39,misc\caffe\opencv-caffe.pb.hpp,Engine,,false,8796,Engine,42
131271,TYPE_DECL,,,,"enum : int {
    kPadFieldNumber = 3,
    kKernelSizeFieldNumber = 4,
    kStrideFieldNumber = 6,
    kDilationFieldNumber = 18,
    kWeightFillerFieldNumber = 7,
    kBiasFillerFieldNumber = 8,
    kNumOutputFieldNumber = 1,
    kPadHFieldNumber = 9,
    kPadWFieldNumber = 10,
    kKernelHFieldNumber = 11,
    kKernelWFieldNumber = 12,
    kStrideHFieldNumber = 13,
    kStrideWFieldNumber = 14,
    kEngineFieldNumber = 15,
    kForceNdIm2ColFieldNumber = 17,
    kAxisFieldNumber = 16,
    kBiasTermFieldNumber = 2,
    kGroupFieldNumber = 5,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameter.anonymous_enum_24,,false,8830,anonymous_enum_24,53
132016,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameter._Internal,,false,9132,_Internal,208
132017,TYPE_DECL,opencv_caffe.ConvolutionParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameter.InternalHelper,,false,9134,InternalHelper,209
132018,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,9135,InternalArenaConstructable_,210
132019,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,9136,DestructorSkippable_,211
132040,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ConvolutionParameter.TableStruct_opencv_2dcaffe_2eproto,,false,9157,TableStruct_opencv_2dcaffe_2eproto,232
132066,TYPE_DECL,,,,"class CropParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.CropParameter) */ {
 public:
  inline CropParameter() : CropParameter(nullptr) {}
  ~CropParameter() override;
  explicit constexpr CropParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CropParameter(const CropParameter& from);
  CropParameter(CropParameter&& from) noexcept
    : CropParameter() {
    *this = ::std::move(from);
  }

  inline CropParameter& operator=(const CropParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CropParameter& operator=(CropParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.CropParameter,PROTOBUF_NAMESPACE_ID.Message,false,9161,CropParameter,323
132350,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.CropParameter.AnyMetadata,,false,9268,AnyMetadata,34
132382,TYPE_DECL,,,,"enum : int {
    kOffsetFieldNumber = 2,
    kAxisFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.CropParameter.anonymous_enum_25,,false,9289,anonymous_enum_25,42
132479,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.CropParameter._Internal,,false,9330,_Internal,62
132480,TYPE_DECL,opencv_caffe.CropParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.CropParameter.InternalHelper,,false,9332,InternalHelper,63
132481,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,9333,InternalArenaConstructable_,64
132482,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,9334,DestructorSkippable_,65
132487,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.CropParameter.TableStruct_opencv_2dcaffe_2eproto,,false,9339,TableStruct_opencv_2dcaffe_2eproto,70
132495,TYPE_DECL,,,,"class DataParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.DataParameter) */ {
 public:
  inline DataParameter() : DataParameter(nullptr) {}
  ~DataParameter() override;
  explicit constexpr DataParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataParameter(const DataParameter& from);
  DataParameter(DataParameter&& from) noexcept
    : DataParameter() {
    *this = ::std::move(from);
  }

  inline DataParameter& operator=(const DataParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataParameter& operator=(DataParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameter,PROTOBUF_NAMESPACE_ID.Message,false,9343,DataParameter,324
132779,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameter.AnyMetadata,,false,9450,AnyMetadata,34
132811,TYPE_DECL,ANY,,,typedef DataParameter_DB DB;,28,misc\caffe\opencv-caffe.pb.hpp,DB,,false,9469,DB,42
132866,TYPE_DECL,,,,"enum : int {
    kSourceFieldNumber = 1,
    kMeanFileFieldNumber = 3,
    kBatchSizeFieldNumber = 4,
    kCropSizeFieldNumber = 5,
    kRandSkipFieldNumber = 7,
    kMirrorFieldNumber = 6,
    kForceEncodedColorFieldNumber = 9,
    kBackendFieldNumber = 8,
    kScaleFieldNumber = 2,
    kPrefetchFieldNumber = 10,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameter.anonymous_enum_26,,false,9501,anonymous_enum_26,52
133241,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameter._Internal,,false,9655,_Internal,133
133242,TYPE_DECL,opencv_caffe.DataParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameter.InternalHelper,,false,9657,InternalHelper,134
133243,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,9658,InternalArenaConstructable_,135
133244,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,9659,DestructorSkippable_,136
133257,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DataParameter.TableStruct_opencv_2dcaffe_2eproto,,false,9672,TableStruct_opencv_2dcaffe_2eproto,149
133280,TYPE_DECL,,,,"class NonMaximumSuppressionParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.NonMaximumSuppressionParameter) */ {
 public:
  inline NonMaximumSuppressionParameter() : NonMaximumSuppressionParameter(nullptr) {}
  ~NonMaximumSuppressionParameter() override;
  explicit constexpr NonMaximumSuppressionParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NonMaximumSuppressionParameter(const NonMaximumSuppressionParameter& from);
  NonMaximumSuppressionParameter(NonMaximumSuppressionParameter&& from) noexcept
    : NonMaximumSuppressionParameter() {
    *this = ::std::move(from);
  }

  inline NonMaximumSuppressionParameter& operator=(const NonMaximumSuppressionParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline NonMaximumSuppressionParameter& operator=(NonMaximumSuppressionParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena(...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NonMaximumSuppressionParameter,PROTOBUF_NAMESPACE_ID.Message,false,9676,NonMaximumSuppressionParameter,325
133564,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NonMaximumSuppressionParameter.AnyMetadata,,false,9783,AnyMetadata,34
133596,TYPE_DECL,,,,"enum : int {
    kTopKFieldNumber = 2,
    kNmsThresholdFieldNumber = 1,
    kEtaFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NonMaximumSuppressionParameter.anonymous_enum_27,,false,9804,anonymous_enum_27,42
133703,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NonMaximumSuppressionParameter._Internal,,false,9850,_Internal,64
133704,TYPE_DECL,opencv_caffe.NonMaximumSuppressionParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NonMaximumSuppressionParameter.InternalHelper,,false,9852,InternalHelper,65
133705,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,9853,InternalArenaConstructable_,66
133706,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,9854,DestructorSkippable_,67
133712,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NonMaximumSuppressionParameter.TableStruct_opencv_2dcaffe_2eproto,,false,9860,TableStruct_opencv_2dcaffe_2eproto,73
133720,TYPE_DECL,,,,"class SaveOutputParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.SaveOutputParameter) */ {
 public:
  inline SaveOutputParameter() : SaveOutputParameter(nullptr) {}
  ~SaveOutputParameter() override;
  explicit constexpr SaveOutputParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SaveOutputParameter(const SaveOutputParameter& from);
  SaveOutputParameter(SaveOutputParameter&& from) noexcept
    : SaveOutputParameter() {
    *this = ::std::move(from);
  }

  inline SaveOutputParameter& operator=(const SaveOutputParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveOutputParameter& operator=(SaveOutputParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SaveOutputParameter,PROTOBUF_NAMESPACE_ID.Message,false,9864,SaveOutputParameter,326
134004,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SaveOutputParameter.AnyMetadata,,false,9971,AnyMetadata,34
134036,TYPE_DECL,,,,"enum : int {
    kOutputDirectoryFieldNumber = 1,
    kOutputNamePrefixFieldNumber = 2,
    kOutputFormatFieldNumber = 3,
    kLabelMapFileFieldNumber = 4,
    kNameSizeFileFieldNumber = 5,
    kNumTestImageFieldNumber = 6,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SaveOutputParameter.anonymous_enum_28,,false,9992,anonymous_enum_28,42
134320,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SaveOutputParameter._Internal,,false,10105,_Internal,110
134321,TYPE_DECL,opencv_caffe.SaveOutputParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SaveOutputParameter.InternalHelper,,false,10107,InternalHelper,111
134322,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,10108,InternalArenaConstructable_,112
134323,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,10109,DestructorSkippable_,113
134332,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SaveOutputParameter.TableStruct_opencv_2dcaffe_2eproto,,false,10118,TableStruct_opencv_2dcaffe_2eproto,122
134340,TYPE_DECL,,,,"class DropoutParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.DropoutParameter) */ {
 public:
  inline DropoutParameter() : DropoutParameter(nullptr) {}
  ~DropoutParameter() override;
  explicit constexpr DropoutParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DropoutParameter(const DropoutParameter& from);
  DropoutParameter(DropoutParameter&& from) noexcept
    : DropoutParameter() {
    *this = ::std::move(from);
  }

  inline DropoutParameter& operator=(const DropoutParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline DropoutParameter& operator=(DropoutParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DropoutParameter,PROTOBUF_NAMESPACE_ID.Message,false,10122,DropoutParameter,327
134624,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DropoutParameter.AnyMetadata,,false,10229,AnyMetadata,34
134656,TYPE_DECL,,,,"enum : int {
    kDropoutRatioFieldNumber = 1,
    kScaleTrainFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DropoutParameter.anonymous_enum_29,,false,10250,anonymous_enum_29,42
134729,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DropoutParameter._Internal,,false,10282,_Internal,57
134730,TYPE_DECL,opencv_caffe.DropoutParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DropoutParameter.InternalHelper,,false,10284,InternalHelper,58
134731,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,10285,InternalArenaConstructable_,59
134732,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,10286,DestructorSkippable_,60
134737,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DropoutParameter.TableStruct_opencv_2dcaffe_2eproto,,false,10291,TableStruct_opencv_2dcaffe_2eproto,65
134745,TYPE_DECL,,,,"class DummyDataParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.DummyDataParameter) */ {
 public:
  inline DummyDataParameter() : DummyDataParameter(nullptr) {}
  ~DummyDataParameter() override;
  explicit constexpr DummyDataParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DummyDataParameter(const DummyDataParameter& from);
  DummyDataParameter(DummyDataParameter&& from) noexcept
    : DummyDataParameter() {
    *this = ::std::move(from);
  }

  inline DummyDataParameter& operator=(const DummyDataParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline DummyDataParameter& operator=(DummyDataParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DummyDataParameter,PROTOBUF_NAMESPACE_ID.Message,false,10295,DummyDataParameter,328
135029,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DummyDataParameter.AnyMetadata,,false,10402,AnyMetadata,34
135061,TYPE_DECL,,,,"enum : int {
    kDataFillerFieldNumber = 1,
    kNumFieldNumber = 2,
    kChannelsFieldNumber = 3,
    kHeightFieldNumber = 4,
    kWidthFieldNumber = 5,
    kShapeFieldNumber = 6,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DummyDataParameter.anonymous_enum_30,,false,10423,anonymous_enum_30,42
135392,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DummyDataParameter._Internal,,false,10557,_Internal,111
135393,TYPE_DECL,opencv_caffe.DummyDataParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DummyDataParameter.InternalHelper,,false,10559,InternalHelper,112
135394,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,10560,InternalArenaConstructable_,113
135395,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,10561,DestructorSkippable_,114
135403,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.DummyDataParameter.TableStruct_opencv_2dcaffe_2eproto,,false,10569,TableStruct_opencv_2dcaffe_2eproto,122
135411,TYPE_DECL,,,,"class EltwiseParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.EltwiseParameter) */ {
 public:
  inline EltwiseParameter() : EltwiseParameter(nullptr) {}
  ~EltwiseParameter() override;
  explicit constexpr EltwiseParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EltwiseParameter(const EltwiseParameter& from);
  EltwiseParameter(EltwiseParameter&& from) noexcept
    : EltwiseParameter() {
    *this = ::std::move(from);
  }

  inline EltwiseParameter& operator=(const EltwiseParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline EltwiseParameter& operator=(EltwiseParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameter,PROTOBUF_NAMESPACE_ID.Message,false,10573,EltwiseParameter,329
135695,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameter.AnyMetadata,,false,10680,AnyMetadata,34
135727,TYPE_DECL,ANY,,,typedef EltwiseParameter_EltwiseOp EltwiseOp;,38,misc\caffe\opencv-caffe.pb.hpp,EltwiseOp,,false,10699,EltwiseOp,42
135783,TYPE_DECL,,,,"enum : int {
    kCoeffFieldNumber = 2,
    kOperationFieldNumber = 1,
    kStableProdGradFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameter.anonymous_enum_31,,false,10733,anonymous_enum_31,53
135914,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameter._Internal,,false,10788,_Internal,80
135915,TYPE_DECL,opencv_caffe.EltwiseParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameter.InternalHelper,,false,10790,InternalHelper,81
135916,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,10791,InternalArenaConstructable_,82
135917,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,10792,DestructorSkippable_,83
135923,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EltwiseParameter.TableStruct_opencv_2dcaffe_2eproto,,false,10798,TableStruct_opencv_2dcaffe_2eproto,89
135949,TYPE_DECL,,,,"class ELUParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ELUParameter) */ {
 public:
  inline ELUParameter() : ELUParameter(nullptr) {}
  ~ELUParameter() override;
  explicit constexpr ELUParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ELUParameter(const ELUParameter& from);
  ELUParameter(ELUParameter&& from) noexcept
    : ELUParameter() {
    *this = ::std::move(from);
  }

  inline ELUParameter& operator=(const ELUParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ELUParameter& operator=(ELUParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFiel...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ELUParameter,PROTOBUF_NAMESPACE_ID.Message,false,10802,ELUParameter,330
136233,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ELUParameter.AnyMetadata,,false,10909,AnyMetadata,34
136265,TYPE_DECL,,,,"enum : int {
    kAlphaFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ELUParameter.anonymous_enum_32,,false,10930,anonymous_enum_32,42
136304,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ELUParameter._Internal,,false,10948,_Internal,50
136305,TYPE_DECL,opencv_caffe.ELUParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ELUParameter.InternalHelper,,false,10950,InternalHelper,51
136306,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,10951,InternalArenaConstructable_,52
136307,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,10952,DestructorSkippable_,53
136311,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ELUParameter.TableStruct_opencv_2dcaffe_2eproto,,false,10956,TableStruct_opencv_2dcaffe_2eproto,57
136319,TYPE_DECL,,,,"class EmbedParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.EmbedParameter) */ {
 public:
  inline EmbedParameter() : EmbedParameter(nullptr) {}
  ~EmbedParameter() override;
  explicit constexpr EmbedParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EmbedParameter(const EmbedParameter& from);
  EmbedParameter(EmbedParameter&& from) noexcept
    : EmbedParameter() {
    *this = ::std::move(from);
  }

  inline EmbedParameter& operator=(const EmbedParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmbedParameter& operator=(EmbedParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROT...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EmbedParameter,PROTOBUF_NAMESPACE_ID.Message,false,10960,EmbedParameter,331
136603,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EmbedParameter.AnyMetadata,,false,11067,AnyMetadata,34
136635,TYPE_DECL,,,,"enum : int {
    kWeightFillerFieldNumber = 4,
    kBiasFillerFieldNumber = 5,
    kNumOutputFieldNumber = 1,
    kInputDimFieldNumber = 2,
    kBiasTermFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EmbedParameter.anonymous_enum_33,,false,11088,anonymous_enum_33,42
136842,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EmbedParameter._Internal,,false,11172,_Internal,86
136843,TYPE_DECL,opencv_caffe.EmbedParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EmbedParameter.InternalHelper,,false,11174,InternalHelper,87
136844,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,11175,InternalArenaConstructable_,88
136845,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,11176,DestructorSkippable_,89
136853,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.EmbedParameter.TableStruct_opencv_2dcaffe_2eproto,,false,11184,TableStruct_opencv_2dcaffe_2eproto,97
136861,TYPE_DECL,,,,"class ExpParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ExpParameter) */ {
 public:
  inline ExpParameter() : ExpParameter(nullptr) {}
  ~ExpParameter() override;
  explicit constexpr ExpParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExpParameter(const ExpParameter& from);
  ExpParameter(ExpParameter&& from) noexcept
    : ExpParameter() {
    *this = ::std::move(from);
  }

  inline ExpParameter& operator=(const ExpParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpParameter& operator=(ExpParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFiel...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ExpParameter,PROTOBUF_NAMESPACE_ID.Message,false,11188,ExpParameter,332
137145,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ExpParameter.AnyMetadata,,false,11295,AnyMetadata,34
137177,TYPE_DECL,,,,"enum : int {
    kShiftFieldNumber = 3,
    kBaseFieldNumber = 1,
    kScaleFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ExpParameter.anonymous_enum_34,,false,11316,anonymous_enum_34,42
137284,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ExpParameter._Internal,,false,11362,_Internal,64
137285,TYPE_DECL,opencv_caffe.ExpParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ExpParameter.InternalHelper,,false,11364,InternalHelper,65
137286,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,11365,InternalArenaConstructable_,66
137287,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,11366,DestructorSkippable_,67
137293,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ExpParameter.TableStruct_opencv_2dcaffe_2eproto,,false,11372,TableStruct_opencv_2dcaffe_2eproto,73
137301,TYPE_DECL,,,,"class FlattenParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.FlattenParameter) */ {
 public:
  inline FlattenParameter() : FlattenParameter(nullptr) {}
  ~FlattenParameter() override;
  explicit constexpr FlattenParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FlattenParameter(const FlattenParameter& from);
  FlattenParameter(FlattenParameter&& from) noexcept
    : FlattenParameter() {
    *this = ::std::move(from);
  }

  inline FlattenParameter& operator=(const FlattenParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlattenParameter& operator=(FlattenParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FlattenParameter,PROTOBUF_NAMESPACE_ID.Message,false,11376,FlattenParameter,333
137585,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FlattenParameter.AnyMetadata,,false,11483,AnyMetadata,34
137617,TYPE_DECL,,,,"enum : int {
    kAxisFieldNumber = 1,
    kEndAxisFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FlattenParameter.anonymous_enum_35,,false,11504,anonymous_enum_35,42
137690,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FlattenParameter._Internal,,false,11536,_Internal,57
137691,TYPE_DECL,opencv_caffe.FlattenParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FlattenParameter.InternalHelper,,false,11538,InternalHelper,58
137692,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,11539,InternalArenaConstructable_,59
137693,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,11540,DestructorSkippable_,60
137698,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.FlattenParameter.TableStruct_opencv_2dcaffe_2eproto,,false,11545,TableStruct_opencv_2dcaffe_2eproto,65
137706,TYPE_DECL,,,,"class HDF5DataParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.HDF5DataParameter) */ {
 public:
  inline HDF5DataParameter() : HDF5DataParameter(nullptr) {}
  ~HDF5DataParameter() override;
  explicit constexpr HDF5DataParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HDF5DataParameter(const HDF5DataParameter& from);
  HDF5DataParameter(HDF5DataParameter&& from) noexcept
    : HDF5DataParameter() {
    *this = ::std::move(from);
  }

  inline HDF5DataParameter& operator=(const HDF5DataParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline HDF5DataParameter& operator=(HDF5DataParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5DataParameter,PROTOBUF_NAMESPACE_ID.Message,false,11549,HDF5DataParameter,334
137990,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5DataParameter.AnyMetadata,,false,11656,AnyMetadata,34
138022,TYPE_DECL,,,,"enum : int {
    kSourceFieldNumber = 1,
    kBatchSizeFieldNumber = 2,
    kShuffleFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5DataParameter.anonymous_enum_36,,false,11677,anonymous_enum_36,42
138144,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5DataParameter._Internal,,false,11728,_Internal,69
138145,TYPE_DECL,opencv_caffe.HDF5DataParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5DataParameter.InternalHelper,,false,11730,InternalHelper,70
138146,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,11731,InternalArenaConstructable_,71
138147,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,11732,DestructorSkippable_,72
138153,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5DataParameter.TableStruct_opencv_2dcaffe_2eproto,,false,11738,TableStruct_opencv_2dcaffe_2eproto,78
138161,TYPE_DECL,,,,"class HDF5OutputParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.HDF5OutputParameter) */ {
 public:
  inline HDF5OutputParameter() : HDF5OutputParameter(nullptr) {}
  ~HDF5OutputParameter() override;
  explicit constexpr HDF5OutputParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HDF5OutputParameter(const HDF5OutputParameter& from);
  HDF5OutputParameter(HDF5OutputParameter&& from) noexcept
    : HDF5OutputParameter() {
    *this = ::std::move(from);
  }

  inline HDF5OutputParameter& operator=(const HDF5OutputParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline HDF5OutputParameter& operator=(HDF5OutputParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5OutputParameter,PROTOBUF_NAMESPACE_ID.Message,false,11742,HDF5OutputParameter,335
138445,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5OutputParameter.AnyMetadata,,false,11849,AnyMetadata,34
138477,TYPE_DECL,,,,"enum : int {
    kFileNameFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5OutputParameter.anonymous_enum_37,,false,11870,anonymous_enum_37,42
138531,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5OutputParameter._Internal,,false,11893,_Internal,55
138532,TYPE_DECL,opencv_caffe.HDF5OutputParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5OutputParameter.InternalHelper,,false,11895,InternalHelper,56
138533,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,11896,InternalArenaConstructable_,57
138534,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,11897,DestructorSkippable_,58
138538,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HDF5OutputParameter.TableStruct_opencv_2dcaffe_2eproto,,false,11901,TableStruct_opencv_2dcaffe_2eproto,62
138546,TYPE_DECL,,,,"class HingeLossParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.HingeLossParameter) */ {
 public:
  inline HingeLossParameter() : HingeLossParameter(nullptr) {}
  ~HingeLossParameter() override;
  explicit constexpr HingeLossParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HingeLossParameter(const HingeLossParameter& from);
  HingeLossParameter(HingeLossParameter&& from) noexcept
    : HingeLossParameter() {
    *this = ::std::move(from);
  }

  inline HingeLossParameter& operator=(const HingeLossParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline HingeLossParameter& operator=(HingeLossParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameter,PROTOBUF_NAMESPACE_ID.Message,false,11905,HingeLossParameter,336
138830,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameter.AnyMetadata,,false,12012,AnyMetadata,34
138862,TYPE_DECL,ANY,,,typedef HingeLossParameter_Norm Norm;,35,misc\caffe\opencv-caffe.pb.hpp,Norm,,false,12031,Norm,42
138917,TYPE_DECL,,,,"enum : int {
    kNormFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameter.anonymous_enum_38,,false,12063,anonymous_enum_38,52
138956,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameter._Internal,,false,12081,_Internal,60
138957,TYPE_DECL,opencv_caffe.HingeLossParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameter.InternalHelper,,false,12083,InternalHelper,61
138958,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,12084,InternalArenaConstructable_,62
138959,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,12085,DestructorSkippable_,63
138963,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.HingeLossParameter.TableStruct_opencv_2dcaffe_2eproto,,false,12089,TableStruct_opencv_2dcaffe_2eproto,67
138986,TYPE_DECL,,,,"class ImageDataParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ImageDataParameter) */ {
 public:
  inline ImageDataParameter() : ImageDataParameter(nullptr) {}
  ~ImageDataParameter() override;
  explicit constexpr ImageDataParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImageDataParameter(const ImageDataParameter& from);
  ImageDataParameter(ImageDataParameter&& from) noexcept
    : ImageDataParameter() {
    *this = ::std::move(from);
  }

  inline ImageDataParameter& operator=(const ImageDataParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageDataParameter& operator=(ImageDataParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ImageDataParameter,PROTOBUF_NAMESPACE_ID.Message,false,12093,ImageDataParameter,337
139270,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ImageDataParameter.AnyMetadata,,false,12200,AnyMetadata,34
139302,TYPE_DECL,,,,"enum : int {
    kSourceFieldNumber = 1,
    kMeanFileFieldNumber = 3,
    kRootFolderFieldNumber = 12,
    kCropSizeFieldNumber = 5,
    kRandSkipFieldNumber = 7,
    kShuffleFieldNumber = 8,
    kMirrorFieldNumber = 6,
    kNewHeightFieldNumber = 9,
    kNewWidthFieldNumber = 10,
    kIsColorFieldNumber = 11,
    kScaleFieldNumber = 2,
    kBatchSizeFieldNumber = 4,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ImageDataParameter.anonymous_enum_39,,false,12221,anonymous_enum_39,42
139760,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ImageDataParameter._Internal,,false,12408,_Internal,142
139761,TYPE_DECL,opencv_caffe.ImageDataParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ImageDataParameter.InternalHelper,,false,12410,InternalHelper,143
139762,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,12411,InternalArenaConstructable_,144
139763,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,12412,DestructorSkippable_,145
139778,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ImageDataParameter.TableStruct_opencv_2dcaffe_2eproto,,false,12427,TableStruct_opencv_2dcaffe_2eproto,160
139786,TYPE_DECL,,,,"class InfogainLossParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.InfogainLossParameter) */ {
 public:
  inline InfogainLossParameter() : InfogainLossParameter(nullptr) {}
  ~InfogainLossParameter() override;
  explicit constexpr InfogainLossParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InfogainLossParameter(const InfogainLossParameter& from);
  InfogainLossParameter(InfogainLossParameter&& from) noexcept
    : InfogainLossParameter() {
    *this = ::std::move(from);
  }

  inline InfogainLossParameter& operator=(const InfogainLossParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline InfogainLossParameter& operator=(InfogainLossParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      I...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InfogainLossParameter,PROTOBUF_NAMESPACE_ID.Message,false,12431,InfogainLossParameter,338
140070,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InfogainLossParameter.AnyMetadata,,false,12538,AnyMetadata,34
140102,TYPE_DECL,,,,"enum : int {
    kSourceFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InfogainLossParameter.anonymous_enum_40,,false,12559,anonymous_enum_40,42
140156,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InfogainLossParameter._Internal,,false,12582,_Internal,55
140157,TYPE_DECL,opencv_caffe.InfogainLossParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InfogainLossParameter.InternalHelper,,false,12584,InternalHelper,56
140158,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,12585,InternalArenaConstructable_,57
140159,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,12586,DestructorSkippable_,58
140163,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InfogainLossParameter.TableStruct_opencv_2dcaffe_2eproto,,false,12590,TableStruct_opencv_2dcaffe_2eproto,62
140171,TYPE_DECL,,,,"class InnerProductParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.InnerProductParameter) */ {
 public:
  inline InnerProductParameter() : InnerProductParameter(nullptr) {}
  ~InnerProductParameter() override;
  explicit constexpr InnerProductParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InnerProductParameter(const InnerProductParameter& from);
  InnerProductParameter(InnerProductParameter&& from) noexcept
    : InnerProductParameter() {
    *this = ::std::move(from);
  }

  inline InnerProductParameter& operator=(const InnerProductParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline InnerProductParameter& operator=(InnerProductParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      I...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InnerProductParameter,PROTOBUF_NAMESPACE_ID.Message,false,12594,InnerProductParameter,339
140455,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InnerProductParameter.AnyMetadata,,false,12701,AnyMetadata,34
140487,TYPE_DECL,,,,"enum : int {
    kWeightFillerFieldNumber = 3,
    kBiasFillerFieldNumber = 4,
    kNumOutputFieldNumber = 1,
    kTransposeFieldNumber = 6,
    kBiasTermFieldNumber = 2,
    kAxisFieldNumber = 5,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InnerProductParameter.anonymous_enum_41,,false,12722,anonymous_enum_41,42
140728,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InnerProductParameter._Internal,,false,12820,_Internal,93
140729,TYPE_DECL,opencv_caffe.InnerProductParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InnerProductParameter.InternalHelper,,false,12822,InternalHelper,94
140730,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,12823,InternalArenaConstructable_,95
140731,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,12824,DestructorSkippable_,96
140740,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InnerProductParameter.TableStruct_opencv_2dcaffe_2eproto,,false,12833,TableStruct_opencv_2dcaffe_2eproto,105
140748,TYPE_DECL,,,,"class InputParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.InputParameter) */ {
 public:
  inline InputParameter() : InputParameter(nullptr) {}
  ~InputParameter() override;
  explicit constexpr InputParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InputParameter(const InputParameter& from);
  InputParameter(InputParameter&& from) noexcept
    : InputParameter() {
    *this = ::std::move(from);
  }

  inline InputParameter& operator=(const InputParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputParameter& operator=(InputParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROT...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InputParameter,PROTOBUF_NAMESPACE_ID.Message,false,12837,InputParameter,340
141032,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InputParameter.AnyMetadata,,false,12944,AnyMetadata,34
141064,TYPE_DECL,,,,"enum : int {
    kShapeFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InputParameter.anonymous_enum_42,,false,12965,anonymous_enum_42,42
141116,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InputParameter._Internal,,false,12988,_Internal,53
141117,TYPE_DECL,opencv_caffe.InputParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InputParameter.InternalHelper,,false,12990,InternalHelper,54
141118,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,12991,InternalArenaConstructable_,55
141119,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,12992,DestructorSkippable_,56
141122,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.InputParameter.TableStruct_opencv_2dcaffe_2eproto,,false,12995,TableStruct_opencv_2dcaffe_2eproto,59
141130,TYPE_DECL,,,,"class LogParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.LogParameter) */ {
 public:
  inline LogParameter() : LogParameter(nullptr) {}
  ~LogParameter() override;
  explicit constexpr LogParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LogParameter(const LogParameter& from);
  LogParameter(LogParameter&& from) noexcept
    : LogParameter() {
    *this = ::std::move(from);
  }

  inline LogParameter& operator=(const LogParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogParameter& operator=(LogParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFiel...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LogParameter,PROTOBUF_NAMESPACE_ID.Message,false,12999,LogParameter,341
141414,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LogParameter.AnyMetadata,,false,13106,AnyMetadata,34
141446,TYPE_DECL,,,,"enum : int {
    kShiftFieldNumber = 3,
    kBaseFieldNumber = 1,
    kScaleFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LogParameter.anonymous_enum_43,,false,13127,anonymous_enum_43,42
141553,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LogParameter._Internal,,false,13173,_Internal,64
141554,TYPE_DECL,opencv_caffe.LogParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LogParameter.InternalHelper,,false,13175,InternalHelper,65
141555,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,13176,InternalArenaConstructable_,66
141556,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,13177,DestructorSkippable_,67
141562,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LogParameter.TableStruct_opencv_2dcaffe_2eproto,,false,13183,TableStruct_opencv_2dcaffe_2eproto,73
141570,TYPE_DECL,,,,"class LRNParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.LRNParameter) */ {
 public:
  inline LRNParameter() : LRNParameter(nullptr) {}
  ~LRNParameter() override;
  explicit constexpr LRNParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LRNParameter(const LRNParameter& from);
  LRNParameter(LRNParameter&& from) noexcept
    : LRNParameter() {
    *this = ::std::move(from);
  }

  inline LRNParameter& operator=(const LRNParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline LRNParameter& operator=(LRNParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFiel...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter,PROTOBUF_NAMESPACE_ID.Message,false,13187,LRNParameter,342
141854,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter.AnyMetadata,,false,13294,AnyMetadata,34
141886,TYPE_DECL,ANY,,,typedef LRNParameter_NormRegion NormRegion;,35,misc\caffe\opencv-caffe.pb.hpp,NormRegion,,false,13313,NormRegion,42
141941,TYPE_DECL,ANY,,,typedef LRNParameter_Engine Engine;,31,misc\caffe\opencv-caffe.pb.hpp,Engine,,false,13343,Engine,52
141997,TYPE_DECL,,,,"enum : int {
    kNormRegionFieldNumber = 4,
    kEngineFieldNumber = 6,
    kLocalSizeFieldNumber = 1,
    kAlphaFieldNumber = 2,
    kBetaFieldNumber = 3,
    kKFieldNumber = 5,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter.anonymous_enum_44,,false,13377,anonymous_enum_44,63
142206,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter._Internal,,false,13465,_Internal,106
142207,TYPE_DECL,opencv_caffe.LRNParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter.InternalHelper,,false,13467,InternalHelper,107
142208,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,13468,InternalArenaConstructable_,108
142209,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,13469,DestructorSkippable_,109
142218,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.LRNParameter.TableStruct_opencv_2dcaffe_2eproto,,false,13478,TableStruct_opencv_2dcaffe_2eproto,118
142259,TYPE_DECL,,,,"class MemoryDataParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.MemoryDataParameter) */ {
 public:
  inline MemoryDataParameter() : MemoryDataParameter(nullptr) {}
  ~MemoryDataParameter() override;
  explicit constexpr MemoryDataParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MemoryDataParameter(const MemoryDataParameter& from);
  MemoryDataParameter(MemoryDataParameter&& from) noexcept
    : MemoryDataParameter() {
    *this = ::std::move(from);
  }

  inline MemoryDataParameter& operator=(const MemoryDataParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemoryDataParameter& operator=(MemoryDataParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MemoryDataParameter,PROTOBUF_NAMESPACE_ID.Message,false,13482,MemoryDataParameter,343
142543,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MemoryDataParameter.AnyMetadata,,false,13589,AnyMetadata,34
142575,TYPE_DECL,,,,"enum : int {
    kBatchSizeFieldNumber = 1,
    kChannelsFieldNumber = 2,
    kHeightFieldNumber = 3,
    kWidthFieldNumber = 4,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MemoryDataParameter.anonymous_enum_45,,false,13610,anonymous_enum_45,42
142716,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MemoryDataParameter._Internal,,false,13670,_Internal,71
142717,TYPE_DECL,opencv_caffe.MemoryDataParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MemoryDataParameter.InternalHelper,,false,13672,InternalHelper,72
142718,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,13673,InternalArenaConstructable_,73
142719,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,13674,DestructorSkippable_,74
142726,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MemoryDataParameter.TableStruct_opencv_2dcaffe_2eproto,,false,13681,TableStruct_opencv_2dcaffe_2eproto,81
142734,TYPE_DECL,,,,"class MVNParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.MVNParameter) */ {
 public:
  inline MVNParameter() : MVNParameter(nullptr) {}
  ~MVNParameter() override;
  explicit constexpr MVNParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MVNParameter(const MVNParameter& from);
  MVNParameter(MVNParameter&& from) noexcept
    : MVNParameter() {
    *this = ::std::move(from);
  }

  inline MVNParameter& operator=(const MVNParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline MVNParameter& operator=(MVNParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFiel...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MVNParameter,PROTOBUF_NAMESPACE_ID.Message,false,13685,MVNParameter,344
143018,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MVNParameter.AnyMetadata,,false,13792,AnyMetadata,34
143050,TYPE_DECL,,,,"enum : int {
    kAcrossChannelsFieldNumber = 2,
    kNormalizeVarianceFieldNumber = 1,
    kEpsFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MVNParameter.anonymous_enum_46,,false,13813,anonymous_enum_46,42
143157,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MVNParameter._Internal,,false,13859,_Internal,64
143158,TYPE_DECL,opencv_caffe.MVNParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MVNParameter.InternalHelper,,false,13861,InternalHelper,65
143159,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,13862,InternalArenaConstructable_,66
143160,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,13863,DestructorSkippable_,67
143166,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.MVNParameter.TableStruct_opencv_2dcaffe_2eproto,,false,13869,TableStruct_opencv_2dcaffe_2eproto,73
143174,TYPE_DECL,,,,"class ParameterParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ParameterParameter) */ {
 public:
  inline ParameterParameter() : ParameterParameter(nullptr) {}
  ~ParameterParameter() override;
  explicit constexpr ParameterParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParameterParameter(const ParameterParameter& from);
  ParameterParameter(ParameterParameter&& from) noexcept
    : ParameterParameter() {
    *this = ::std::move(from);
  }

  inline ParameterParameter& operator=(const ParameterParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterParameter& operator=(ParameterParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParameterParameter,PROTOBUF_NAMESPACE_ID.Message,false,13873,ParameterParameter,345
143458,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParameterParameter.AnyMetadata,,false,13980,AnyMetadata,34
143490,TYPE_DECL,,,,"enum : int {
    kShapeFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParameterParameter.anonymous_enum_47,,false,14001,anonymous_enum_47,42
143545,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParameterParameter._Internal,,false,14024,_Internal,54
143546,TYPE_DECL,opencv_caffe.ParameterParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParameterParameter.InternalHelper,,false,14026,InternalHelper,55
143547,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,14027,InternalArenaConstructable_,56
143548,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,14028,DestructorSkippable_,57
143552,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ParameterParameter.TableStruct_opencv_2dcaffe_2eproto,,false,14032,TableStruct_opencv_2dcaffe_2eproto,61
143560,TYPE_DECL,,,,"class PoolingParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.PoolingParameter) */ {
 public:
  inline PoolingParameter() : PoolingParameter(nullptr) {}
  ~PoolingParameter() override;
  explicit constexpr PoolingParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PoolingParameter(const PoolingParameter& from);
  PoolingParameter(PoolingParameter&& from) noexcept
    : PoolingParameter() {
    *this = ::std::move(from);
  }

  inline PoolingParameter& operator=(const PoolingParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PoolingParameter& operator=(PoolingParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter,PROTOBUF_NAMESPACE_ID.Message,false,14036,PoolingParameter,346
143844,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter.AnyMetadata,,false,14143,AnyMetadata,34
143876,TYPE_DECL,ANY,,,typedef PoolingParameter_PoolMethod PoolMethod;,39,misc\caffe\opencv-caffe.pb.hpp,PoolMethod,,false,14162,PoolMethod,42
143932,TYPE_DECL,ANY,,,typedef PoolingParameter_Engine Engine;,35,misc\caffe\opencv-caffe.pb.hpp,Engine,,false,14194,Engine,53
143988,TYPE_DECL,,,,"enum : int {
    kPoolFieldNumber = 1,
    kKernelSizeFieldNumber = 2,
    kPadFieldNumber = 4,
    kKernelHFieldNumber = 5,
    kKernelWFieldNumber = 6,
    kStrideHFieldNumber = 7,
    kStrideWFieldNumber = 8,
    kPadHFieldNumber = 9,
    kPadWFieldNumber = 10,
    kEngineFieldNumber = 11,
    kGlobalPoolingFieldNumber = 12,
    kStrideFieldNumber = 3,
    kCeilModeFieldNumber = 13,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter.anonymous_enum_48,,false,14228,anonymous_enum_48,64
144435,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter._Internal,,false,14414,_Internal,156
144436,TYPE_DECL,opencv_caffe.PoolingParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter.InternalHelper,,false,14416,InternalHelper,157
144437,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,14417,InternalArenaConstructable_,158
144438,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,14418,DestructorSkippable_,159
144454,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PoolingParameter.TableStruct_opencv_2dcaffe_2eproto,,false,14434,TableStruct_opencv_2dcaffe_2eproto,175
144498,TYPE_DECL,,,,"class PowerParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.PowerParameter) */ {
 public:
  inline PowerParameter() : PowerParameter(nullptr) {}
  ~PowerParameter() override;
  explicit constexpr PowerParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PowerParameter(const PowerParameter& from);
  PowerParameter(PowerParameter&& from) noexcept
    : PowerParameter() {
    *this = ::std::move(from);
  }

  inline PowerParameter& operator=(const PowerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerParameter& operator=(PowerParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROT...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PowerParameter,PROTOBUF_NAMESPACE_ID.Message,false,14438,PowerParameter,347
144782,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PowerParameter.AnyMetadata,,false,14545,AnyMetadata,34
144814,TYPE_DECL,,,,"enum : int {
    kShiftFieldNumber = 3,
    kPowerFieldNumber = 1,
    kScaleFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PowerParameter.anonymous_enum_49,,false,14566,anonymous_enum_49,42
144921,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PowerParameter._Internal,,false,14612,_Internal,64
144922,TYPE_DECL,opencv_caffe.PowerParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PowerParameter.InternalHelper,,false,14614,InternalHelper,65
144923,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,14615,InternalArenaConstructable_,66
144924,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,14616,DestructorSkippable_,67
144930,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PowerParameter.TableStruct_opencv_2dcaffe_2eproto,,false,14622,TableStruct_opencv_2dcaffe_2eproto,73
144938,TYPE_DECL,,,,"class PythonParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.PythonParameter) */ {
 public:
  inline PythonParameter() : PythonParameter(nullptr) {}
  ~PythonParameter() override;
  explicit constexpr PythonParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PythonParameter(const PythonParameter& from);
  PythonParameter(PythonParameter&& from) noexcept
    : PythonParameter() {
    *this = ::std::move(from);
  }

  inline PythonParameter& operator=(const PythonParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PythonParameter& operator=(PythonParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inli...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PythonParameter,PROTOBUF_NAMESPACE_ID.Message,false,14626,PythonParameter,348
145222,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PythonParameter.AnyMetadata,,false,14733,AnyMetadata,34
145254,TYPE_DECL,,,,"enum : int {
    kModuleFieldNumber = 1,
    kLayerFieldNumber = 2,
    kParamStrFieldNumber = 3,
    kShareInParallelFieldNumber = 4,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PythonParameter.anonymous_enum_50,,false,14754,anonymous_enum_50,42
145440,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PythonParameter._Internal,,false,14829,_Internal,86
145441,TYPE_DECL,opencv_caffe.PythonParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PythonParameter.InternalHelper,,false,14831,InternalHelper,87
145442,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,14832,InternalArenaConstructable_,88
145443,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,14833,DestructorSkippable_,89
145450,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PythonParameter.TableStruct_opencv_2dcaffe_2eproto,,false,14840,TableStruct_opencv_2dcaffe_2eproto,96
145458,TYPE_DECL,,,,"class RecurrentParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.RecurrentParameter) */ {
 public:
  inline RecurrentParameter() : RecurrentParameter(nullptr) {}
  ~RecurrentParameter() override;
  explicit constexpr RecurrentParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RecurrentParameter(const RecurrentParameter& from);
  RecurrentParameter(RecurrentParameter&& from) noexcept
    : RecurrentParameter() {
    *this = ::std::move(from);
  }

  inline RecurrentParameter& operator=(const RecurrentParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecurrentParameter& operator=(RecurrentParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.RecurrentParameter,PROTOBUF_NAMESPACE_ID.Message,false,14844,RecurrentParameter,349
145742,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.RecurrentParameter.AnyMetadata,,false,14951,AnyMetadata,34
145774,TYPE_DECL,,,,"enum : int {
    kWeightFillerFieldNumber = 2,
    kBiasFillerFieldNumber = 3,
    kNumOutputFieldNumber = 1,
    kDebugInfoFieldNumber = 4,
    kExposeHiddenFieldNumber = 5,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.RecurrentParameter.anonymous_enum_51,,false,14972,anonymous_enum_51,42
145981,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.RecurrentParameter._Internal,,false,15056,_Internal,86
145982,TYPE_DECL,opencv_caffe.RecurrentParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.RecurrentParameter.InternalHelper,,false,15058,InternalHelper,87
145983,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,15059,InternalArenaConstructable_,88
145984,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,15060,DestructorSkippable_,89
145992,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.RecurrentParameter.TableStruct_opencv_2dcaffe_2eproto,,false,15068,TableStruct_opencv_2dcaffe_2eproto,97
146000,TYPE_DECL,,,,"class ReductionParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ReductionParameter) */ {
 public:
  inline ReductionParameter() : ReductionParameter(nullptr) {}
  ~ReductionParameter() override;
  explicit constexpr ReductionParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReductionParameter(const ReductionParameter& from);
  ReductionParameter(ReductionParameter&& from) noexcept
    : ReductionParameter() {
    *this = ::std::move(from);
  }

  inline ReductionParameter& operator=(const ReductionParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReductionParameter& operator=(ReductionParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameter,PROTOBUF_NAMESPACE_ID.Message,false,15072,ReductionParameter,350
146284,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameter.AnyMetadata,,false,15179,AnyMetadata,34
146316,TYPE_DECL,ANY,,,typedef ReductionParameter_ReductionOp ReductionOp;,42,misc\caffe\opencv-caffe.pb.hpp,ReductionOp,,false,15198,ReductionOp,42
146373,TYPE_DECL,,,,"enum : int {
    kAxisFieldNumber = 2,
    kOperationFieldNumber = 1,
    kCoeffFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameter.anonymous_enum_52,,false,15234,anonymous_enum_52,54
146480,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameter._Internal,,false,15280,_Internal,76
146481,TYPE_DECL,opencv_caffe.ReductionParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameter.InternalHelper,,false,15282,InternalHelper,77
146482,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,15283,InternalArenaConstructable_,78
146483,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,15284,DestructorSkippable_,79
146489,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReductionParameter.TableStruct_opencv_2dcaffe_2eproto,,false,15290,TableStruct_opencv_2dcaffe_2eproto,85
146518,TYPE_DECL,,,,"class ReLUParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ReLUParameter) */ {
 public:
  inline ReLUParameter() : ReLUParameter(nullptr) {}
  ~ReLUParameter() override;
  explicit constexpr ReLUParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReLUParameter(const ReLUParameter& from);
  ReLUParameter(ReLUParameter&& from) noexcept
    : ReLUParameter() {
    *this = ::std::move(from);
  }

  inline ReLUParameter& operator=(const ReLUParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReLUParameter& operator=(ReLUParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameter,PROTOBUF_NAMESPACE_ID.Message,false,15294,ReLUParameter,351
146802,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameter.AnyMetadata,,false,15401,AnyMetadata,34
146834,TYPE_DECL,ANY,,,typedef ReLUParameter_Engine Engine;,32,misc\caffe\opencv-caffe.pb.hpp,Engine,,false,15420,Engine,42
146890,TYPE_DECL,,,,"enum : int {
    kNegativeSlopeFieldNumber = 1,
    kEngineFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameter.anonymous_enum_53,,false,15454,anonymous_enum_53,53
146963,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameter._Internal,,false,15486,_Internal,68
146964,TYPE_DECL,opencv_caffe.ReLUParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameter.InternalHelper,,false,15488,InternalHelper,69
146965,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,15489,InternalArenaConstructable_,70
146966,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,15490,DestructorSkippable_,71
146971,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReLUParameter.TableStruct_opencv_2dcaffe_2eproto,,false,15495,TableStruct_opencv_2dcaffe_2eproto,76
146997,TYPE_DECL,,,,"class ReshapeParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ReshapeParameter) */ {
 public:
  inline ReshapeParameter() : ReshapeParameter(nullptr) {}
  ~ReshapeParameter() override;
  explicit constexpr ReshapeParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReshapeParameter(const ReshapeParameter& from);
  ReshapeParameter(ReshapeParameter&& from) noexcept
    : ReshapeParameter() {
    *this = ::std::move(from);
  }

  inline ReshapeParameter& operator=(const ReshapeParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReshapeParameter& operator=(ReshapeParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReshapeParameter,PROTOBUF_NAMESPACE_ID.Message,false,15499,ReshapeParameter,352
147281,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReshapeParameter.AnyMetadata,,false,15606,AnyMetadata,34
147313,TYPE_DECL,,,,"enum : int {
    kShapeFieldNumber = 1,
    kAxisFieldNumber = 2,
    kNumAxesFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReshapeParameter.anonymous_enum_54,,false,15627,anonymous_enum_54,42
147436,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReshapeParameter._Internal,,false,15678,_Internal,68
147437,TYPE_DECL,opencv_caffe.ReshapeParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReshapeParameter.InternalHelper,,false,15680,InternalHelper,69
147438,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,15681,InternalArenaConstructable_,70
147439,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,15682,DestructorSkippable_,71
147445,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ReshapeParameter.TableStruct_opencv_2dcaffe_2eproto,,false,15688,TableStruct_opencv_2dcaffe_2eproto,77
147453,TYPE_DECL,,,,"class ScaleParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ScaleParameter) */ {
 public:
  inline ScaleParameter() : ScaleParameter(nullptr) {}
  ~ScaleParameter() override;
  explicit constexpr ScaleParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScaleParameter(const ScaleParameter& from);
  ScaleParameter(ScaleParameter&& from) noexcept
    : ScaleParameter() {
    *this = ::std::move(from);
  }

  inline ScaleParameter& operator=(const ScaleParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScaleParameter& operator=(ScaleParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROT...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ScaleParameter,PROTOBUF_NAMESPACE_ID.Message,false,15692,ScaleParameter,353
147737,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ScaleParameter.AnyMetadata,,false,15799,AnyMetadata,34
147769,TYPE_DECL,,,,"enum : int {
    kFillerFieldNumber = 3,
    kBiasFillerFieldNumber = 5,
    kBiasTermFieldNumber = 4,
    kAxisFieldNumber = 1,
    kNumAxesFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ScaleParameter.anonymous_enum_55,,false,15820,anonymous_enum_55,42
147976,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ScaleParameter._Internal,,false,15904,_Internal,86
147977,TYPE_DECL,opencv_caffe.ScaleParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ScaleParameter.InternalHelper,,false,15906,InternalHelper,87
147978,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,15907,InternalArenaConstructable_,88
147979,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,15908,DestructorSkippable_,89
147987,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ScaleParameter.TableStruct_opencv_2dcaffe_2eproto,,false,15916,TableStruct_opencv_2dcaffe_2eproto,97
147995,TYPE_DECL,,,,"class SigmoidParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.SigmoidParameter) */ {
 public:
  inline SigmoidParameter() : SigmoidParameter(nullptr) {}
  ~SigmoidParameter() override;
  explicit constexpr SigmoidParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SigmoidParameter(const SigmoidParameter& from);
  SigmoidParameter(SigmoidParameter&& from) noexcept
    : SigmoidParameter() {
    *this = ::std::move(from);
  }

  inline SigmoidParameter& operator=(const SigmoidParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SigmoidParameter& operator=(SigmoidParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameter,PROTOBUF_NAMESPACE_ID.Message,false,15920,SigmoidParameter,354
148279,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameter.AnyMetadata,,false,16027,AnyMetadata,34
148311,TYPE_DECL,ANY,,,typedef SigmoidParameter_Engine Engine;,35,misc\caffe\opencv-caffe.pb.hpp,Engine,,false,16046,Engine,42
148367,TYPE_DECL,,,,"enum : int {
    kEngineFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameter.anonymous_enum_56,,false,16080,anonymous_enum_56,53
148406,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameter._Internal,,false,16098,_Internal,61
148407,TYPE_DECL,opencv_caffe.SigmoidParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameter.InternalHelper,,false,16100,InternalHelper,62
148408,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,16101,InternalArenaConstructable_,63
148409,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,16102,DestructorSkippable_,64
148413,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SigmoidParameter.TableStruct_opencv_2dcaffe_2eproto,,false,16106,TableStruct_opencv_2dcaffe_2eproto,68
148439,TYPE_DECL,,,,"class SliceParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.SliceParameter) */ {
 public:
  inline SliceParameter() : SliceParameter(nullptr) {}
  ~SliceParameter() override;
  explicit constexpr SliceParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SliceParameter(const SliceParameter& from);
  SliceParameter(SliceParameter&& from) noexcept
    : SliceParameter() {
    *this = ::std::move(from);
  }

  inline SliceParameter& operator=(const SliceParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SliceParameter& operator=(SliceParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROT...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SliceParameter,PROTOBUF_NAMESPACE_ID.Message,false,16110,SliceParameter,355
148723,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SliceParameter.AnyMetadata,,false,16217,AnyMetadata,34
148755,TYPE_DECL,,,,"enum : int {
    kSlicePointFieldNumber = 2,
    kSliceDimFieldNumber = 1,
    kAxisFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SliceParameter.anonymous_enum_57,,false,16238,anonymous_enum_57,42
148886,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SliceParameter._Internal,,false,16293,_Internal,69
148887,TYPE_DECL,opencv_caffe.SliceParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SliceParameter.InternalHelper,,false,16295,InternalHelper,70
148888,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,16296,InternalArenaConstructable_,71
148889,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,16297,DestructorSkippable_,72
148895,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SliceParameter.TableStruct_opencv_2dcaffe_2eproto,,false,16303,TableStruct_opencv_2dcaffe_2eproto,78
148903,TYPE_DECL,,,,"class SoftmaxParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.SoftmaxParameter) */ {
 public:
  inline SoftmaxParameter() : SoftmaxParameter(nullptr) {}
  ~SoftmaxParameter() override;
  explicit constexpr SoftmaxParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SoftmaxParameter(const SoftmaxParameter& from);
  SoftmaxParameter(SoftmaxParameter&& from) noexcept
    : SoftmaxParameter() {
    *this = ::std::move(from);
  }

  inline SoftmaxParameter& operator=(const SoftmaxParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SoftmaxParameter& operator=(SoftmaxParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameter,PROTOBUF_NAMESPACE_ID.Message,false,16307,SoftmaxParameter,356
149187,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameter.AnyMetadata,,false,16414,AnyMetadata,34
149219,TYPE_DECL,ANY,,,typedef SoftmaxParameter_Engine Engine;,35,misc\caffe\opencv-caffe.pb.hpp,Engine,,false,16433,Engine,42
149275,TYPE_DECL,,,,"enum : int {
    kEngineFieldNumber = 1,
    kAxisFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameter.anonymous_enum_58,,false,16467,anonymous_enum_58,53
149348,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameter._Internal,,false,16499,_Internal,68
149349,TYPE_DECL,opencv_caffe.SoftmaxParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameter.InternalHelper,,false,16501,InternalHelper,69
149350,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,16502,InternalArenaConstructable_,70
149351,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,16503,DestructorSkippable_,71
149356,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SoftmaxParameter.TableStruct_opencv_2dcaffe_2eproto,,false,16508,TableStruct_opencv_2dcaffe_2eproto,76
149382,TYPE_DECL,,,,"class TanHParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.TanHParameter) */ {
 public:
  inline TanHParameter() : TanHParameter(nullptr) {}
  ~TanHParameter() override;
  explicit constexpr TanHParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TanHParameter(const TanHParameter& from);
  TanHParameter(TanHParameter&& from) noexcept
    : TanHParameter() {
    *this = ::std::move(from);
  }

  inline TanHParameter& operator=(const TanHParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline TanHParameter& operator=(TanHParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameter,PROTOBUF_NAMESPACE_ID.Message,false,16512,TanHParameter,357
149666,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameter.AnyMetadata,,false,16619,AnyMetadata,34
149698,TYPE_DECL,ANY,,,typedef TanHParameter_Engine Engine;,32,misc\caffe\opencv-caffe.pb.hpp,Engine,,false,16638,Engine,42
149754,TYPE_DECL,,,,"enum : int {
    kEngineFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameter.anonymous_enum_59,,false,16672,anonymous_enum_59,53
149793,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameter._Internal,,false,16690,_Internal,61
149794,TYPE_DECL,opencv_caffe.TanHParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameter.InternalHelper,,false,16692,InternalHelper,62
149795,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,16693,InternalArenaConstructable_,63
149796,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,16694,DestructorSkippable_,64
149800,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TanHParameter.TableStruct_opencv_2dcaffe_2eproto,,false,16698,TableStruct_opencv_2dcaffe_2eproto,68
149826,TYPE_DECL,,,,"class TileParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.TileParameter) */ {
 public:
  inline TileParameter() : TileParameter(nullptr) {}
  ~TileParameter() override;
  explicit constexpr TileParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TileParameter(const TileParameter& from);
  TileParameter(TileParameter&& from) noexcept
    : TileParameter() {
    *this = ::std::move(from);
  }

  inline TileParameter& operator=(const TileParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline TileParameter& operator=(TileParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TileParameter,PROTOBUF_NAMESPACE_ID.Message,false,16702,TileParameter,358
150110,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TileParameter.AnyMetadata,,false,16809,AnyMetadata,34
150142,TYPE_DECL,,,,"enum : int {
    kTilesFieldNumber = 2,
    kAxisFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TileParameter.anonymous_enum_60,,false,16830,anonymous_enum_60,42
150215,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TileParameter._Internal,,false,16862,_Internal,57
150216,TYPE_DECL,opencv_caffe.TileParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TileParameter.InternalHelper,,false,16864,InternalHelper,58
150217,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,16865,InternalArenaConstructable_,59
150218,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,16866,DestructorSkippable_,60
150223,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.TileParameter.TableStruct_opencv_2dcaffe_2eproto,,false,16871,TableStruct_opencv_2dcaffe_2eproto,65
150231,TYPE_DECL,,,,"class ThresholdParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ThresholdParameter) */ {
 public:
  inline ThresholdParameter() : ThresholdParameter(nullptr) {}
  ~ThresholdParameter() override;
  explicit constexpr ThresholdParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ThresholdParameter(const ThresholdParameter& from);
  ThresholdParameter(ThresholdParameter&& from) noexcept
    : ThresholdParameter() {
    *this = ::std::move(from);
  }

  inline ThresholdParameter& operator=(const ThresholdParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ThresholdParameter& operator=(ThresholdParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFr...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ThresholdParameter,PROTOBUF_NAMESPACE_ID.Message,false,16875,ThresholdParameter,359
150515,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ThresholdParameter.AnyMetadata,,false,16982,AnyMetadata,34
150547,TYPE_DECL,,,,"enum : int {
    kThresholdFieldNumber = 1,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ThresholdParameter.anonymous_enum_61,,false,17003,anonymous_enum_61,42
150586,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ThresholdParameter._Internal,,false,17021,_Internal,50
150587,TYPE_DECL,opencv_caffe.ThresholdParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ThresholdParameter.InternalHelper,,false,17023,InternalHelper,51
150588,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,17024,InternalArenaConstructable_,52
150589,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,17025,DestructorSkippable_,53
150593,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ThresholdParameter.TableStruct_opencv_2dcaffe_2eproto,,false,17029,TableStruct_opencv_2dcaffe_2eproto,57
150601,TYPE_DECL,,,,"class WindowDataParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.WindowDataParameter) */ {
 public:
  inline WindowDataParameter() : WindowDataParameter(nullptr) {}
  ~WindowDataParameter() override;
  explicit constexpr WindowDataParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WindowDataParameter(const WindowDataParameter& from);
  WindowDataParameter(WindowDataParameter&& from) noexcept
    : WindowDataParameter() {
    *this = ::std::move(from);
  }

  inline WindowDataParameter& operator=(const WindowDataParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline WindowDataParameter& operator=(WindowDataParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.WindowDataParameter,PROTOBUF_NAMESPACE_ID.Message,false,17033,WindowDataParameter,360
150885,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.WindowDataParameter.AnyMetadata,,false,17140,AnyMetadata,34
150917,TYPE_DECL,,,,"enum : int {
    kSourceFieldNumber = 1,
    kMeanFileFieldNumber = 3,
    kCropModeFieldNumber = 11,
    kRootFolderFieldNumber = 13,
    kBatchSizeFieldNumber = 4,
    kCropSizeFieldNumber = 5,
    kMirrorFieldNumber = 6,
    kCacheImagesFieldNumber = 12,
    kContextPadFieldNumber = 10,
    kScaleFieldNumber = 2,
    kFgThresholdFieldNumber = 7,
    kBgThresholdFieldNumber = 8,
    kFgFractionFieldNumber = 9,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.WindowDataParameter.anonymous_enum_62,,false,17161,anonymous_enum_62,42
151424,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.WindowDataParameter._Internal,,false,17367,_Internal,154
151425,TYPE_DECL,opencv_caffe.WindowDataParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.WindowDataParameter.InternalHelper,,false,17369,InternalHelper,155
151426,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,17370,InternalArenaConstructable_,156
151427,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,17371,DestructorSkippable_,157
151444,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.WindowDataParameter.TableStruct_opencv_2dcaffe_2eproto,,false,17388,TableStruct_opencv_2dcaffe_2eproto,174
151452,TYPE_DECL,,,,"class SPPParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.SPPParameter) */ {
 public:
  inline SPPParameter() : SPPParameter(nullptr) {}
  ~SPPParameter() override;
  explicit constexpr SPPParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SPPParameter(const SPPParameter& from);
  SPPParameter(SPPParameter&& from) noexcept
    : SPPParameter() {
    *this = ::std::move(from);
  }

  inline SPPParameter& operator=(const SPPParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SPPParameter& operator=(SPPParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFiel...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter,PROTOBUF_NAMESPACE_ID.Message,false,17392,SPPParameter,361
151736,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter.AnyMetadata,,false,17499,AnyMetadata,34
151768,TYPE_DECL,ANY,,,typedef SPPParameter_PoolMethod PoolMethod;,35,misc\caffe\opencv-caffe.pb.hpp,PoolMethod,,false,17518,PoolMethod,42
151824,TYPE_DECL,ANY,,,typedef SPPParameter_Engine Engine;,31,misc\caffe\opencv-caffe.pb.hpp,Engine,,false,17550,Engine,53
151880,TYPE_DECL,,,,"enum : int {
    kPyramidHeightFieldNumber = 1,
    kPoolFieldNumber = 2,
    kEngineFieldNumber = 6,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter.anonymous_enum_63,,false,17584,anonymous_enum_63,64
151987,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter._Internal,,false,17630,_Internal,86
151988,TYPE_DECL,opencv_caffe.SPPParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter.InternalHelper,,false,17632,InternalHelper,87
151989,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,17633,InternalArenaConstructable_,88
151990,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,17634,DestructorSkippable_,89
151996,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.SPPParameter.TableStruct_opencv_2dcaffe_2eproto,,false,17640,TableStruct_opencv_2dcaffe_2eproto,95
152040,TYPE_DECL,,,,"class V1LayerParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.V1LayerParameter) */ {
 public:
  inline V1LayerParameter() : V1LayerParameter(nullptr) {}
  ~V1LayerParameter() override;
  explicit constexpr V1LayerParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  V1LayerParameter(const V1LayerParameter& from);
  V1LayerParameter(V1LayerParameter&& from) noexcept
    : V1LayerParameter() {
    *this = ::std::move(from);
  }

  inline V1LayerParameter& operator=(const V1LayerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline V1LayerParameter& operator=(V1LayerParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter,PROTOBUF_NAMESPACE_ID.Message,false,17644,V1LayerParameter,362
152324,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter.AnyMetadata,,false,17751,AnyMetadata,34
152356,TYPE_DECL,ANY,,,typedef V1LayerParameter_LayerType LayerType;,38,misc\caffe\opencv-caffe.pb.hpp,LayerType,,false,17770,LayerType,42
152449,TYPE_DECL,ANY,,,typedef V1LayerParameter_DimCheckMode DimCheckMode;,41,misc\caffe\opencv-caffe.pb.hpp,DimCheckMode,,false,17876,DimCheckMode,90
152504,TYPE_DECL,,,,"enum : int {
    kBottomFieldNumber = 2,
    kTopFieldNumber = 3,
    kBlobsFieldNumber = 6,
    kBlobsLrFieldNumber = 7,
    kWeightDecayFieldNumber = 8,
    kIncludeFieldNumber = 32,
    kExcludeFieldNumber = 33,
    kLossWeightFieldNumber = 35,
    kParamFieldNumber = 1001,
    kBlobShareModeFieldNumber = 1002,
    kNameFieldNumber = 4,
    kLayerFieldNumber = 1,
    kConcatParamFieldNumber = 9,
    kConvolutionParamFieldNumber = 10,
    kDataParamFieldNumber = 11,
    kDropoutParamFieldNumber = 12,
    kHdf5DataParamFieldNumber = 13,
    kHdf5OutputParamFieldNumber = 14,
    kImageDataParamFieldNumber = 15,
    kInfogainLossParamFieldNumber = 16,
    kInnerProductParamFieldNumber = 17,
    kLrnParamFieldNumber = 18,
    kPoolingParamFieldNumber = 19,
    kWindowDataParamFieldNumber = 20,
    kPowerParamFieldNumber = 21,
    kMemoryDataParamFieldNumber = 22,
    kArgmaxParamFieldNumber = 23,
    kEltwiseParamFieldNumber = 24,
    kThresholdParamFieldNumber = 25,
    kDummyDataPar...",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter.anonymous_enum_64,,false,17908,anonymous_enum_64,100
154757,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter._Internal,,false,18753,_Internal,586
154758,TYPE_DECL,opencv_caffe.V1LayerParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter.InternalHelper,,false,18755,InternalHelper,587
154759,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,18756,InternalArenaConstructable_,588
154760,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,18757,DestructorSkippable_,589
154806,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V1LayerParameter.TableStruct_opencv_2dcaffe_2eproto,,false,18803,TableStruct_opencv_2dcaffe_2eproto,635
154958,TYPE_DECL,,,,"class V0LayerParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.V0LayerParameter) */ {
 public:
  inline V0LayerParameter() : V0LayerParameter(nullptr) {}
  ~V0LayerParameter() override;
  explicit constexpr V0LayerParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  V0LayerParameter(const V0LayerParameter& from);
  V0LayerParameter(V0LayerParameter&& from) noexcept
    : V0LayerParameter() {
    *this = ::std::move(from);
  }

  inline V0LayerParameter& operator=(const V0LayerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline V0LayerParameter& operator=(V0LayerParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *th...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameter,PROTOBUF_NAMESPACE_ID.Message,false,18807,V0LayerParameter,363
155242,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameter.AnyMetadata,,false,18914,AnyMetadata,34
155274,TYPE_DECL,ANY,,,typedef V0LayerParameter_PoolMethod PoolMethod;,39,misc\caffe\opencv-caffe.pb.hpp,PoolMethod,,false,18933,PoolMethod,42
155330,TYPE_DECL,,,,"enum : int {
    kBlobsFieldNumber = 50,
    kBlobsLrFieldNumber = 51,
    kWeightDecayFieldNumber = 52,
    kNameFieldNumber = 1,
    kTypeFieldNumber = 2,
    kSourceFieldNumber = 16,
    kMeanfileFieldNumber = 18,
    kDetCropModeFieldNumber = 59,
    kWeightFillerFieldNumber = 5,
    kBiasFillerFieldNumber = 6,
    kHdf5OutputParamFieldNumber = 1001,
    kNumOutputFieldNumber = 3,
    kPadFieldNumber = 7,
    kKernelsizeFieldNumber = 8,
    kPoolFieldNumber = 11,
    kBatchsizeFieldNumber = 19,
    kCropsizeFieldNumber = 20,
    kNewWidthFieldNumber = 63,
    kMirrorFieldNumber = 21,
    kShuffleImagesFieldNumber = 64,
    kRandSkipFieldNumber = 53,
    kDetContextPadFieldNumber = 58,
    kNewNumFieldNumber = 60,
    kNewChannelsFieldNumber = 61,
    kNewHeightFieldNumber = 62,
    kConcatDimFieldNumber = 65,
    kBiastermFieldNumber = 4,
    kGroupFieldNumber = 9,
    kStrideFieldNumber = 10,
    kDropoutRatioFieldNumber = 12,
    kLocalSizeFieldNumber = 13,
    kAlphaFieldNumb...",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameter.anonymous_enum_65,,false,18967,anonymous_enum_65,53
156811,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameter._Internal,,false,19566,_Internal,370
156812,TYPE_DECL,opencv_caffe.V0LayerParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameter.InternalHelper,,false,19568,InternalHelper,371
156813,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,19569,InternalArenaConstructable_,372
156814,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,19570,DestructorSkippable_,373
156856,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.V0LayerParameter.TableStruct_opencv_2dcaffe_2eproto,,false,19612,TableStruct_opencv_2dcaffe_2eproto,415
156882,TYPE_DECL,,,,"class PReLUParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.PReLUParameter) */ {
 public:
  inline PReLUParameter() : PReLUParameter(nullptr) {}
  ~PReLUParameter() override;
  explicit constexpr PReLUParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PReLUParameter(const PReLUParameter& from);
  PReLUParameter(PReLUParameter&& from) noexcept
    : PReLUParameter() {
    *this = ::std::move(from);
  }

  inline PReLUParameter& operator=(const PReLUParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PReLUParameter& operator=(PReLUParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROT...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PReLUParameter,PROTOBUF_NAMESPACE_ID.Message,false,19616,PReLUParameter,364
157166,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PReLUParameter.AnyMetadata,,false,19723,AnyMetadata,34
157198,TYPE_DECL,,,,"enum : int {
    kFillerFieldNumber = 1,
    kChannelSharedFieldNumber = 2,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PReLUParameter.anonymous_enum_66,,false,19744,anonymous_enum_66,42
157287,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PReLUParameter._Internal,,false,19781,_Internal,61
157288,TYPE_DECL,opencv_caffe.PReLUParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PReLUParameter.InternalHelper,,false,19783,InternalHelper,62
157289,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,19784,InternalArenaConstructable_,63
157290,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,19785,DestructorSkippable_,64
157295,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PReLUParameter.TableStruct_opencv_2dcaffe_2eproto,,false,19790,TableStruct_opencv_2dcaffe_2eproto,69
157303,TYPE_DECL,,,,"class NormalizedBBox final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.NormalizedBBox) */ {
 public:
  inline NormalizedBBox() : NormalizedBBox(nullptr) {}
  ~NormalizedBBox() override;
  explicit constexpr NormalizedBBox(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NormalizedBBox(const NormalizedBBox& from);
  NormalizedBBox(NormalizedBBox&& from) noexcept
    : NormalizedBBox() {
    *this = ::std::move(from);
  }

  inline NormalizedBBox& operator=(const NormalizedBBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline NormalizedBBox& operator=(NormalizedBBox&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROT...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizedBBox,PROTOBUF_NAMESPACE_ID.Message,false,19794,NormalizedBBox,365
157587,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizedBBox.AnyMetadata,,false,19901,AnyMetadata,34
157619,TYPE_DECL,,,,"enum : int {
    kXminFieldNumber = 1,
    kYminFieldNumber = 2,
    kXmaxFieldNumber = 3,
    kYmaxFieldNumber = 4,
    kLabelFieldNumber = 5,
    kDifficultFieldNumber = 6,
    kScoreFieldNumber = 7,
    kSizeFieldNumber = 8,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizedBBox.anonymous_enum_67,,false,19922,anonymous_enum_67,42
157896,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizedBBox._Internal,,false,20038,_Internal,99
157897,TYPE_DECL,opencv_caffe.NormalizedBBox.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizedBBox.InternalHelper,,false,20040,InternalHelper,100
157898,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,20041,InternalArenaConstructable_,101
157899,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,20042,DestructorSkippable_,102
157910,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.NormalizedBBox.TableStruct_opencv_2dcaffe_2eproto,,false,20053,TableStruct_opencv_2dcaffe_2eproto,113
157918,TYPE_DECL,,,,"class ROIPoolingParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ROIPoolingParameter) */ {
 public:
  inline ROIPoolingParameter() : ROIPoolingParameter(nullptr) {}
  ~ROIPoolingParameter() override;
  explicit constexpr ROIPoolingParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ROIPoolingParameter(const ROIPoolingParameter& from);
  ROIPoolingParameter(ROIPoolingParameter&& from) noexcept
    : ROIPoolingParameter() {
    *this = ::std::move(from);
  }

  inline ROIPoolingParameter& operator=(const ROIPoolingParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIPoolingParameter& operator=(ROIPoolingParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ROIPoolingParameter,PROTOBUF_NAMESPACE_ID.Message,false,20057,ROIPoolingParameter,366
158202,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ROIPoolingParameter.AnyMetadata,,false,20164,AnyMetadata,34
158234,TYPE_DECL,,,,"enum : int {
    kPooledHFieldNumber = 1,
    kPooledWFieldNumber = 2,
    kSpatialScaleFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ROIPoolingParameter.anonymous_enum_68,,false,20185,anonymous_enum_68,42
158341,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ROIPoolingParameter._Internal,,false,20231,_Internal,64
158342,TYPE_DECL,opencv_caffe.ROIPoolingParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ROIPoolingParameter.InternalHelper,,false,20233,InternalHelper,65
158343,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,20234,InternalArenaConstructable_,66
158344,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,20235,DestructorSkippable_,67
158350,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ROIPoolingParameter.TableStruct_opencv_2dcaffe_2eproto,,false,20241,TableStruct_opencv_2dcaffe_2eproto,73
158358,TYPE_DECL,,,,"class ProposalParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.ProposalParameter) */ {
 public:
  inline ProposalParameter() : ProposalParameter(nullptr) {}
  ~ProposalParameter() override;
  explicit constexpr ProposalParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProposalParameter(const ProposalParameter& from);
  ProposalParameter(ProposalParameter&& from) noexcept
    : ProposalParameter() {
    *this = ::std::move(from);
  }

  inline ProposalParameter& operator=(const ProposalParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProposalParameter& operator=(ProposalParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ProposalParameter,PROTOBUF_NAMESPACE_ID.Message,false,20245,ProposalParameter,367
158642,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ProposalParameter.AnyMetadata,,false,20352,AnyMetadata,34
158674,TYPE_DECL,,,,"enum : int {
    kRatioFieldNumber = 4,
    kScaleFieldNumber = 5,
    kFeatStrideFieldNumber = 1,
    kBaseSizeFieldNumber = 2,
    kMinSizeFieldNumber = 3,
    kPreNmsTopnFieldNumber = 6,
    kPostNmsTopnFieldNumber = 7,
    kNmsThreshFieldNumber = 8,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ProposalParameter.anonymous_enum_69,,false,20373,anonymous_enum_69,42
158999,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ProposalParameter._Internal,,false,20507,_Internal,109
159000,TYPE_DECL,opencv_caffe.ProposalParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ProposalParameter.InternalHelper,,false,20509,InternalHelper,110
159001,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,20510,InternalArenaConstructable_,111
159002,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,20511,DestructorSkippable_,112
159013,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.ProposalParameter.TableStruct_opencv_2dcaffe_2eproto,,false,20522,TableStruct_opencv_2dcaffe_2eproto,123
159021,TYPE_DECL,,,,"class PSROIPoolingParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_caffe.PSROIPoolingParameter) */ {
 public:
  inline PSROIPoolingParameter() : PSROIPoolingParameter(nullptr) {}
  ~PSROIPoolingParameter() override;
  explicit constexpr PSROIPoolingParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PSROIPoolingParameter(const PSROIPoolingParameter& from);
  PSROIPoolingParameter(PSROIPoolingParameter&& from) noexcept
    : PSROIPoolingParameter() {
    *this = ::std::move(from);
  }

  inline PSROIPoolingParameter& operator=(const PSROIPoolingParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PSROIPoolingParameter& operator=(PSROIPoolingParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      I...",1,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PSROIPoolingParameter,PROTOBUF_NAMESPACE_ID.Message,false,20526,PSROIPoolingParameter,368
159305,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PSROIPoolingParameter.AnyMetadata,,false,20633,AnyMetadata,34
159337,TYPE_DECL,,,,"enum : int {
    kSpatialScaleFieldNumber = 1,
    kOutputDimFieldNumber = 2,
    kGroupSizeFieldNumber = 3,
  }",3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PSROIPoolingParameter.anonymous_enum_70,,false,20654,anonymous_enum_70,42
159444,TYPE_DECL,,,,class _Internal,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PSROIPoolingParameter._Internal,,false,20700,_Internal,64
159449,TYPE_DECL,opencv_caffe.PSROIPoolingParameter.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PSROIPoolingParameter.InternalHelper,,false,20705,InternalHelper,66
159450,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\caffe\opencv-caffe.pb.hpp,InternalArenaConstructable_,,false,20706,InternalArenaConstructable_,67
159451,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\caffe\opencv-caffe.pb.hpp,DestructorSkippable_,,false,20707,DestructorSkippable_,68
159457,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2dcaffe_2eproto,3,misc\caffe\opencv-caffe.pb.hpp,opencv_caffe.PSROIPoolingParameter.TableStruct_opencv_2dcaffe_2eproto,,false,20713,TableStruct_opencv_2dcaffe_2eproto,74
221636,TYPE_DECL,is_proto_enum<opencv_caffe.PriorBoxParameter_CodeType><>,,,struct is_proto_enum< ::opencv_caffe::PriorBoxParameter_CodeType> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.PriorBoxParameter_CodeType>,std.true_type,false,44804,is_proto_enum<opencv_caffe::PriorBoxParameter_CodeType>,82
221646,TYPE_DECL,is_proto_enum<opencv_caffe.FillerParameter_VarianceNorm><>,,,struct is_proto_enum< ::opencv_caffe::FillerParameter_VarianceNorm> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.FillerParameter_VarianceNorm>,std.true_type,false,44809,is_proto_enum<opencv_caffe::FillerParameter_VarianceNorm>,84
221656,TYPE_DECL,is_proto_enum<opencv_caffe.SolverParameter_SnapshotFormat><>,,,struct is_proto_enum< ::opencv_caffe::SolverParameter_SnapshotFormat> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.SolverParameter_SnapshotFormat>,std.true_type,false,44814,is_proto_enum<opencv_caffe::SolverParameter_SnapshotFormat>,86
221666,TYPE_DECL,is_proto_enum<opencv_caffe.SolverParameter_SolverMode><>,,,struct is_proto_enum< ::opencv_caffe::SolverParameter_SolverMode> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.SolverParameter_SolverMode>,std.true_type,false,44819,is_proto_enum<opencv_caffe::SolverParameter_SolverMode>,88
221676,TYPE_DECL,is_proto_enum<opencv_caffe.SolverParameter_SolverType><>,,,struct is_proto_enum< ::opencv_caffe::SolverParameter_SolverType> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.SolverParameter_SolverType>,std.true_type,false,44824,is_proto_enum<opencv_caffe::SolverParameter_SolverType>,90
221686,TYPE_DECL,is_proto_enum<opencv_caffe.ParamSpec_DimCheckMode><>,,,struct is_proto_enum< ::opencv_caffe::ParamSpec_DimCheckMode> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.ParamSpec_DimCheckMode>,std.true_type,false,44829,is_proto_enum<opencv_caffe::ParamSpec_DimCheckMode>,92
221696,TYPE_DECL,is_proto_enum<opencv_caffe.LossParameter_NormalizationMode><>,,,struct is_proto_enum< ::opencv_caffe::LossParameter_NormalizationMode> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.LossParameter_NormalizationMode>,std.true_type,false,44834,is_proto_enum<opencv_caffe::LossParameter_NormalizationMode>,94
221706,TYPE_DECL,is_proto_enum<opencv_caffe.ConvolutionParameter_Engine><>,,,struct is_proto_enum< ::opencv_caffe::ConvolutionParameter_Engine> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.ConvolutionParameter_Engine>,std.true_type,false,44839,is_proto_enum<opencv_caffe::ConvolutionParameter_Engine>,96
221716,TYPE_DECL,is_proto_enum<opencv_caffe.DataParameter_DB><>,,,struct is_proto_enum< ::opencv_caffe::DataParameter_DB> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.DataParameter_DB>,std.true_type,false,44844,is_proto_enum<opencv_caffe::DataParameter_DB>,98
221726,TYPE_DECL,is_proto_enum<opencv_caffe.EltwiseParameter_EltwiseOp><>,,,struct is_proto_enum< ::opencv_caffe::EltwiseParameter_EltwiseOp> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.EltwiseParameter_EltwiseOp>,std.true_type,false,44849,is_proto_enum<opencv_caffe::EltwiseParameter_EltwiseOp>,100
221736,TYPE_DECL,is_proto_enum<opencv_caffe.HingeLossParameter_Norm><>,,,struct is_proto_enum< ::opencv_caffe::HingeLossParameter_Norm> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.HingeLossParameter_Norm>,std.true_type,false,44854,is_proto_enum<opencv_caffe::HingeLossParameter_Norm>,102
221746,TYPE_DECL,is_proto_enum<opencv_caffe.LRNParameter_NormRegion><>,,,struct is_proto_enum< ::opencv_caffe::LRNParameter_NormRegion> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.LRNParameter_NormRegion>,std.true_type,false,44859,is_proto_enum<opencv_caffe::LRNParameter_NormRegion>,104
221756,TYPE_DECL,is_proto_enum<opencv_caffe.LRNParameter_Engine><>,,,struct is_proto_enum< ::opencv_caffe::LRNParameter_Engine> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.LRNParameter_Engine>,std.true_type,false,44864,is_proto_enum<opencv_caffe::LRNParameter_Engine>,106
221766,TYPE_DECL,is_proto_enum<opencv_caffe.PoolingParameter_PoolMethod><>,,,struct is_proto_enum< ::opencv_caffe::PoolingParameter_PoolMethod> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.PoolingParameter_PoolMethod>,std.true_type,false,44869,is_proto_enum<opencv_caffe::PoolingParameter_PoolMethod>,108
221776,TYPE_DECL,is_proto_enum<opencv_caffe.PoolingParameter_Engine><>,,,struct is_proto_enum< ::opencv_caffe::PoolingParameter_Engine> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.PoolingParameter_Engine>,std.true_type,false,44874,is_proto_enum<opencv_caffe::PoolingParameter_Engine>,110
221786,TYPE_DECL,is_proto_enum<opencv_caffe.ReductionParameter_ReductionOp><>,,,struct is_proto_enum< ::opencv_caffe::ReductionParameter_ReductionOp> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.ReductionParameter_ReductionOp>,std.true_type,false,44879,is_proto_enum<opencv_caffe::ReductionParameter_ReductionOp>,112
221796,TYPE_DECL,is_proto_enum<opencv_caffe.ReLUParameter_Engine><>,,,struct is_proto_enum< ::opencv_caffe::ReLUParameter_Engine> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.ReLUParameter_Engine>,std.true_type,false,44884,is_proto_enum<opencv_caffe::ReLUParameter_Engine>,114
221806,TYPE_DECL,is_proto_enum<opencv_caffe.SigmoidParameter_Engine><>,,,struct is_proto_enum< ::opencv_caffe::SigmoidParameter_Engine> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.SigmoidParameter_Engine>,std.true_type,false,44889,is_proto_enum<opencv_caffe::SigmoidParameter_Engine>,116
221816,TYPE_DECL,is_proto_enum<opencv_caffe.SoftmaxParameter_Engine><>,,,struct is_proto_enum< ::opencv_caffe::SoftmaxParameter_Engine> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.SoftmaxParameter_Engine>,std.true_type,false,44894,is_proto_enum<opencv_caffe::SoftmaxParameter_Engine>,118
221826,TYPE_DECL,is_proto_enum<opencv_caffe.TanHParameter_Engine><>,,,struct is_proto_enum< ::opencv_caffe::TanHParameter_Engine> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.TanHParameter_Engine>,std.true_type,false,44899,is_proto_enum<opencv_caffe::TanHParameter_Engine>,120
221836,TYPE_DECL,is_proto_enum<opencv_caffe.SPPParameter_PoolMethod><>,,,struct is_proto_enum< ::opencv_caffe::SPPParameter_PoolMethod> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.SPPParameter_PoolMethod>,std.true_type,false,44904,is_proto_enum<opencv_caffe::SPPParameter_PoolMethod>,122
221846,TYPE_DECL,is_proto_enum<opencv_caffe.SPPParameter_Engine><>,,,struct is_proto_enum< ::opencv_caffe::SPPParameter_Engine> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.SPPParameter_Engine>,std.true_type,false,44909,is_proto_enum<opencv_caffe::SPPParameter_Engine>,124
221856,TYPE_DECL,is_proto_enum<opencv_caffe.V1LayerParameter_LayerType><>,,,struct is_proto_enum< ::opencv_caffe::V1LayerParameter_LayerType> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.V1LayerParameter_LayerType>,std.true_type,false,44914,is_proto_enum<opencv_caffe::V1LayerParameter_LayerType>,126
221866,TYPE_DECL,is_proto_enum<opencv_caffe.V1LayerParameter_DimCheckMode><>,,,struct is_proto_enum< ::opencv_caffe::V1LayerParameter_DimCheckMode> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.V1LayerParameter_DimCheckMode>,std.true_type,false,44919,is_proto_enum<opencv_caffe::V1LayerParameter_DimCheckMode>,128
221876,TYPE_DECL,is_proto_enum<opencv_caffe.V0LayerParameter_PoolMethod><>,,,struct is_proto_enum< ::opencv_caffe::V0LayerParameter_PoolMethod> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.V0LayerParameter_PoolMethod>,std.true_type,false,44924,is_proto_enum<opencv_caffe::V0LayerParameter_PoolMethod>,130
221886,TYPE_DECL,is_proto_enum<opencv_caffe.Type><>,,,struct is_proto_enum< ::opencv_caffe::Type> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.Type>,std.true_type,false,44929,is_proto_enum<opencv_caffe::Type>,132
221896,TYPE_DECL,is_proto_enum<opencv_caffe.Phase><>,,,struct is_proto_enum< ::opencv_caffe::Phase> : ::std::true_type {},13,misc\caffe\opencv-caffe.pb.hpp,is_proto_enum<opencv_caffe.Phase>,std.true_type,false,44934,is_proto_enum<opencv_caffe::Phase>,134
221911,TYPE_DECL,,misc\java\src\cpp\dnn_converters.cpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\java\src\cpp\dnn_converters.cpp,misc\java\src\cpp\dnn_converters.cpp:<global>,,false,1,<global>,2
222407,TYPE_DECL,,misc\java\src\cpp\dnn_converters.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\java\src\cpp\dnn_converters.hpp,misc\java\src\cpp\dnn_converters.hpp:<global>,,false,1,<global>,5
222470,TYPE_DECL,,misc\onnx\opencv-onnx.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\onnx\opencv-onnx.pb.cc,misc\onnx\opencv-onnx.pb.cc:<global>,,false,1,<global>,12
222480,TYPE_DECL,,,,"struct AttributeProtoDefaultTypeInternal {
  constexpr AttributeProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttributeProtoDefaultTypeInternal() {}
  union {
    AttributeProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.AttributeProtoDefaultTypeInternal,,false,37,AttributeProtoDefaultTypeInternal,2
222489,TYPE_DECL,,,,"union {
    AttributeProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.AttributeProtoDefaultTypeInternal.anonymous_composite_type_0,,false,41,opencv_onnx.AttributeProtoDefaultTypeInternal.anonymous_composite_type_0,3
222498,TYPE_DECL,,,,"struct ValueInfoProtoDefaultTypeInternal {
  constexpr ValueInfoProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ValueInfoProtoDefaultTypeInternal() {}
  union {
    ValueInfoProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.ValueInfoProtoDefaultTypeInternal,,false,51,ValueInfoProtoDefaultTypeInternal,6
222507,TYPE_DECL,,,,"union {
    ValueInfoProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.ValueInfoProtoDefaultTypeInternal.anonymous_composite_type_1,,false,55,opencv_onnx.ValueInfoProtoDefaultTypeInternal.anonymous_composite_type_1,3
222516,TYPE_DECL,,,,"struct NodeProtoDefaultTypeInternal {
  constexpr NodeProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NodeProtoDefaultTypeInternal() {}
  union {
    NodeProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.NodeProtoDefaultTypeInternal,,false,69,NodeProtoDefaultTypeInternal,10
222525,TYPE_DECL,,,,"union {
    NodeProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.NodeProtoDefaultTypeInternal.anonymous_composite_type_2,,false,73,opencv_onnx.NodeProtoDefaultTypeInternal.anonymous_composite_type_2,3
222534,TYPE_DECL,,,,"struct ModelProtoDefaultTypeInternal {
  constexpr ModelProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelProtoDefaultTypeInternal() {}
  union {
    ModelProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.ModelProtoDefaultTypeInternal,,false,89,ModelProtoDefaultTypeInternal,14
222543,TYPE_DECL,,,,"union {
    ModelProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.ModelProtoDefaultTypeInternal.anonymous_composite_type_3,,false,93,opencv_onnx.ModelProtoDefaultTypeInternal.anonymous_composite_type_3,3
222552,TYPE_DECL,,,,"struct StringStringEntryProtoDefaultTypeInternal {
  constexpr StringStringEntryProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StringStringEntryProtoDefaultTypeInternal() {}
  union {
    StringStringEntryProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.StringStringEntryProtoDefaultTypeInternal,,false,102,StringStringEntryProtoDefaultTypeInternal,18
222561,TYPE_DECL,,,,"union {
    StringStringEntryProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.StringStringEntryProtoDefaultTypeInternal.anonymous_composite_type_4,,false,106,opencv_onnx.StringStringEntryProtoDefaultTypeInternal.anonymous_composite_type_4,3
222570,TYPE_DECL,,,,"struct GraphProtoDefaultTypeInternal {
  constexpr GraphProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GraphProtoDefaultTypeInternal() {}
  union {
    GraphProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.GraphProtoDefaultTypeInternal,,false,120,GraphProtoDefaultTypeInternal,22
222579,TYPE_DECL,,,,"union {
    GraphProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.GraphProtoDefaultTypeInternal.anonymous_composite_type_5,,false,124,opencv_onnx.GraphProtoDefaultTypeInternal.anonymous_composite_type_5,3
222588,TYPE_DECL,,,,"struct TensorProto_SegmentDefaultTypeInternal {
  constexpr TensorProto_SegmentDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TensorProto_SegmentDefaultTypeInternal() {}
  union {
    TensorProto_Segment _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TensorProto_SegmentDefaultTypeInternal,,false,133,TensorProto_SegmentDefaultTypeInternal,26
222597,TYPE_DECL,,,,"union {
    TensorProto_Segment _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TensorProto_SegmentDefaultTypeInternal.anonymous_composite_type_6,,false,137,opencv_onnx.TensorProto_SegmentDefaultTypeInternal.anonymous_composite_type_6,3
222606,TYPE_DECL,,,,"struct TensorProtoDefaultTypeInternal {
  constexpr TensorProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TensorProtoDefaultTypeInternal() {}
  union {
    TensorProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TensorProtoDefaultTypeInternal,,false,160,TensorProtoDefaultTypeInternal,30
222615,TYPE_DECL,,,,"union {
    TensorProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TensorProtoDefaultTypeInternal.anonymous_composite_type_7,,false,164,opencv_onnx.TensorProtoDefaultTypeInternal.anonymous_composite_type_7,3
222624,TYPE_DECL,,,,"struct TensorShapeProto_DimensionDefaultTypeInternal {
  constexpr TensorShapeProto_DimensionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TensorShapeProto_DimensionDefaultTypeInternal() {}
  union {
    TensorShapeProto_Dimension _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TensorShapeProto_DimensionDefaultTypeInternal,,false,173,TensorShapeProto_DimensionDefaultTypeInternal,34
222633,TYPE_DECL,,,,"union {
    TensorShapeProto_Dimension _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TensorShapeProto_DimensionDefaultTypeInternal.anonymous_composite_type_8,,false,177,opencv_onnx.TensorShapeProto_DimensionDefaultTypeInternal.anonymous_composite_type_8,3
222642,TYPE_DECL,,,,"struct TensorShapeProtoDefaultTypeInternal {
  constexpr TensorShapeProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TensorShapeProtoDefaultTypeInternal() {}
  union {
    TensorShapeProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TensorShapeProtoDefaultTypeInternal,,false,185,TensorShapeProtoDefaultTypeInternal,38
222651,TYPE_DECL,,,,"union {
    TensorShapeProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TensorShapeProtoDefaultTypeInternal.anonymous_composite_type_9,,false,189,opencv_onnx.TensorShapeProtoDefaultTypeInternal.anonymous_composite_type_9,3
222660,TYPE_DECL,,,,"struct TypeProto_TensorDefaultTypeInternal {
  constexpr TypeProto_TensorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TypeProto_TensorDefaultTypeInternal() {}
  union {
    TypeProto_Tensor _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TypeProto_TensorDefaultTypeInternal,,false,199,TypeProto_TensorDefaultTypeInternal,42
222669,TYPE_DECL,,,,"union {
    TypeProto_Tensor _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TypeProto_TensorDefaultTypeInternal.anonymous_composite_type_10,,false,203,opencv_onnx.TypeProto_TensorDefaultTypeInternal.anonymous_composite_type_10,3
222678,TYPE_DECL,,,,"struct TypeProtoDefaultTypeInternal {
  constexpr TypeProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TypeProtoDefaultTypeInternal() {}
  union {
    TypeProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TypeProtoDefaultTypeInternal,,false,212,TypeProtoDefaultTypeInternal,46
222687,TYPE_DECL,,,,"union {
    TypeProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.TypeProtoDefaultTypeInternal.anonymous_composite_type_11,,false,216,opencv_onnx.TypeProtoDefaultTypeInternal.anonymous_composite_type_11,3
222696,TYPE_DECL,,,,"struct OperatorSetIdProtoDefaultTypeInternal {
  constexpr OperatorSetIdProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OperatorSetIdProtoDefaultTypeInternal() {}
  union {
    OperatorSetIdProto _instance;
  };
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.OperatorSetIdProtoDefaultTypeInternal,,false,225,OperatorSetIdProtoDefaultTypeInternal,50
222705,TYPE_DECL,,,,"union {
    OperatorSetIdProto _instance;
  }",3,misc\onnx\opencv-onnx.pb.cc,opencv_onnx.OperatorSetIdProtoDefaultTypeInternal.anonymous_composite_type_12,,false,229,opencv_onnx.OperatorSetIdProtoDefaultTypeInternal.anonymous_composite_type_12,3
223023,TYPE_DECL,,,,"class AttributeProto::_Internal {
 public:
  using HasBits = decltype(std::declval<AttributeProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ref_attr_name(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_doc_string(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_f(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_i(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_s(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::opencv_onnx::TensorProto& t(const AttributeProto* msg);
  static void set_has_t(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::opencv_onnx::GraphProto& g(const AttributeProto* msg);
  static void set_has_g(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,671,_Internal,40
223024,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<AttributeProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,673,HasBits,1
225882,TYPE_DECL,,,,"class ValueInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ValueInfoProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::opencv_onnx::TypeProto& type(const ValueInfoProto* msg);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_doc_string(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,1421,_Internal,64
225883,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ValueInfoProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,1423,HasBits,1
226927,TYPE_DECL,,,,"class NodeProto::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_op_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_doc_string(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,1749,_Internal,87
226928,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<NodeProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,1751,HasBits,1
228793,TYPE_DECL,,,,"class ModelProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ModelProto>()._has_bits_);
  static void set_has_ir_version(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_producer_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_producer_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_model_version(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_doc_string(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::opencv_onnx::GraphProto& graph(const ModelProto* msg);
  static void set_has_graph(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,2256,_Internal,109
228794,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<ModelProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,2258,HasBits,1
230895,TYPE_DECL,,,,"class StringStringEntryProto::_Internal {
 public:
  using HasBits = decltype(std::declval<StringStringEntryProto>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,2831,_Internal,132
230896,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<StringStringEntryProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,2833,HasBits,1
231774,TYPE_DECL,,,,"class GraphProto::_Internal {
 public:
  using HasBits = decltype(std::declval<GraphProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_doc_string(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,3113,_Internal,154
231775,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<GraphProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,3115,HasBits,1
233388,TYPE_DECL,,,,"class TensorProto_Segment::_Internal {
 public:
  using HasBits = decltype(std::declval<TensorProto_Segment>()._has_bits_);
  static void set_has_begin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,3560,_Internal,176
233389,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<TensorProto_Segment>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,3562,HasBits,1
234146,TYPE_DECL,,,,"class TensorProto::_Internal {
 public:
  using HasBits = decltype(std::declval<TensorProto>()._has_bits_);
  static void set_has_data_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::opencv_onnx::TensorProto_Segment& segment(const TensorProto* msg);
  static void set_has_segment(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_doc_string(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_raw_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,3797,_Internal,198
234147,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<TensorProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,3799,HasBits,1
236660,TYPE_DECL,,,,"class TensorShapeProto_Dimension::_Internal {
 public:
  using HasBits = decltype(std::declval<TensorShapeProto_Dimension>()._has_bits_);
  static void set_has_denotation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,4472,_Internal,221
236661,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<TensorShapeProto_Dimension>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,4474,HasBits,1
237611,TYPE_DECL,,,,"class TensorShapeProto::_Internal {
 public:
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,4798,_Internal,244
238128,TYPE_DECL,,,,"class TypeProto_Tensor::_Internal {
 public:
  using HasBits = decltype(std::declval<TypeProto_Tensor>()._has_bits_);
  static void set_has_elem_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::opencv_onnx::TensorShapeProto& shape(const TypeProto_Tensor* msg);
  static void set_has_shape(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,4983,_Internal,266
238129,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<TypeProto_Tensor>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,4985,HasBits,1
238915,TYPE_DECL,,,,"class TypeProto::_Internal {
 public:
  using HasBits = decltype(std::declval<TypeProto>()._has_bits_);
  static const ::opencv_onnx::TypeProto_Tensor& tensor_type(const TypeProto* msg);
  static void set_has_denotation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,5238,_Internal,289
238916,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<TypeProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,5240,HasBits,1
239804,TYPE_DECL,,,,"class OperatorSetIdProto::_Internal {
 public:
  using HasBits = decltype(std::declval<OperatorSetIdProto>()._has_bits_);
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
}",1,misc\onnx\opencv-onnx.pb.cc,opencv_onnx._Internal,,false,5548,_Internal,314
239805,TYPE_DECL,decltype,,,using HasBits = decltype(std::declval<OperatorSetIdProto>()._has_bits_);,3,misc\onnx\opencv-onnx.pb.cc,HasBits,,false,5550,HasBits,1
240826,TYPE_DECL,,misc\onnx\opencv-onnx.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\onnx\opencv-onnx.pb.hpp,misc\onnx\opencv-onnx.pb.hpp:<global>,,false,1,<global>,19
240831,TYPE_DECL,,,,class AnyMetadata,1,misc\onnx\opencv-onnx.pb.hpp,internal.AnyMetadata,,false,40,AnyMetadata,1
240833,TYPE_DECL,,,,"struct TableStruct_opencv_2donnx_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\onnx\opencv-onnx.pb.hpp,TableStruct_opencv_2donnx_2eproto,,false,45,TableStruct_opencv_2donnx_2eproto,4
240859,TYPE_DECL,,,,class AttributeProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProto,,false,58,AttributeProto,1
240860,TYPE_DECL,,,,struct AttributeProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProtoDefaultTypeInternal,,false,59,AttributeProtoDefaultTypeInternal,2
240862,TYPE_DECL,,,,class GraphProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.GraphProto,,false,61,GraphProto,4
240863,TYPE_DECL,,,,struct GraphProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.GraphProtoDefaultTypeInternal,,false,62,GraphProtoDefaultTypeInternal,5
240865,TYPE_DECL,,,,class ModelProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ModelProto,,false,64,ModelProto,7
240866,TYPE_DECL,,,,struct ModelProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ModelProtoDefaultTypeInternal,,false,65,ModelProtoDefaultTypeInternal,8
240868,TYPE_DECL,,,,class NodeProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.NodeProto,,false,67,NodeProto,10
240869,TYPE_DECL,,,,struct NodeProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.NodeProtoDefaultTypeInternal,,false,68,NodeProtoDefaultTypeInternal,11
240871,TYPE_DECL,,,,class OperatorSetIdProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.OperatorSetIdProto,,false,70,OperatorSetIdProto,13
240872,TYPE_DECL,,,,struct OperatorSetIdProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.OperatorSetIdProtoDefaultTypeInternal,,false,71,OperatorSetIdProtoDefaultTypeInternal,14
240874,TYPE_DECL,,,,class StringStringEntryProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.StringStringEntryProto,,false,73,StringStringEntryProto,16
240875,TYPE_DECL,,,,struct StringStringEntryProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.StringStringEntryProtoDefaultTypeInternal,,false,74,StringStringEntryProtoDefaultTypeInternal,17
240877,TYPE_DECL,,,,class TensorProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto,,false,76,TensorProto,19
240878,TYPE_DECL,,,,struct TensorProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProtoDefaultTypeInternal,,false,77,TensorProtoDefaultTypeInternal,20
240880,TYPE_DECL,,,,class TensorProto_Segment,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_Segment,,false,79,TensorProto_Segment,22
240881,TYPE_DECL,,,,struct TensorProto_SegmentDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_SegmentDefaultTypeInternal,,false,80,TensorProto_SegmentDefaultTypeInternal,23
240883,TYPE_DECL,,,,class TensorShapeProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto,,false,82,TensorShapeProto,25
240884,TYPE_DECL,,,,struct TensorShapeProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProtoDefaultTypeInternal,,false,83,TensorShapeProtoDefaultTypeInternal,26
240886,TYPE_DECL,,,,class TensorShapeProto_Dimension,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension,,false,85,TensorShapeProto_Dimension,28
240887,TYPE_DECL,,,,struct TensorShapeProto_DimensionDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_DimensionDefaultTypeInternal,,false,86,TensorShapeProto_DimensionDefaultTypeInternal,29
240889,TYPE_DECL,,,,class TypeProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto,,false,88,TypeProto,31
240890,TYPE_DECL,,,,struct TypeProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProtoDefaultTypeInternal,,false,89,TypeProtoDefaultTypeInternal,32
240892,TYPE_DECL,,,,class TypeProto_Tensor,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto_Tensor,,false,91,TypeProto_Tensor,34
240893,TYPE_DECL,,,,struct TypeProto_TensorDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto_TensorDefaultTypeInternal,,false,92,TypeProto_TensorDefaultTypeInternal,35
240895,TYPE_DECL,,,,class ValueInfoProto,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ValueInfoProto,,false,94,ValueInfoProto,37
240896,TYPE_DECL,,,,struct ValueInfoProtoDefaultTypeInternal,1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ValueInfoProtoDefaultTypeInternal,,false,95,ValueInfoProtoDefaultTypeInternal,38
240966,TYPE_DECL,,,,"enum AttributeProto_AttributeType : int {
  AttributeProto_AttributeType_UNDEFINED = 0,
  AttributeProto_AttributeType_FLOAT = 1,
  AttributeProto_AttributeType_INT = 2,
  AttributeProto_AttributeType_STRING = 3,
  AttributeProto_AttributeType_TENSOR = 4,
  AttributeProto_AttributeType_GRAPH = 5,
  AttributeProto_AttributeType_FLOATS = 6,
  AttributeProto_AttributeType_INTS = 7,
  AttributeProto_AttributeType_STRINGS = 8,
  AttributeProto_AttributeType_TENSORS = 9,
  AttributeProto_AttributeType_GRAPHS = 10
}",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProto_AttributeType,,false,115,AttributeProto_AttributeType,1
241089,TYPE_DECL,,,,"enum TensorProto_DataType : int {
  TensorProto_DataType_UNDEFINED = 0,
  TensorProto_DataType_FLOAT = 1,
  TensorProto_DataType_UINT8 = 2,
  TensorProto_DataType_INT8 = 3,
  TensorProto_DataType_UINT16 = 4,
  TensorProto_DataType_INT16 = 5,
  TensorProto_DataType_INT32 = 6,
  TensorProto_DataType_INT64 = 7,
  TensorProto_DataType_STRING = 8,
  TensorProto_DataType_BOOL = 9,
  TensorProto_DataType_FLOAT16 = 10,
  TensorProto_DataType_DOUBLE = 11,
  TensorProto_DataType_UINT32 = 12,
  TensorProto_DataType_UINT64 = 13,
  TensorProto_DataType_COMPLEX64 = 14,
  TensorProto_DataType_COMPLEX128 = 15
}",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_DataType,,false,147,TensorProto_DataType,12
241232,TYPE_DECL,,,,"enum Version : int {
  _START_VERSION = 0,
  IR_VERSION_2017_10_10 = 1,
  IR_VERSION_2017_10_30 = 2,
  IR_VERSION = 3
}",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.Version,,false,184,Version,23
241327,TYPE_DECL,,,,"class AttributeProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.AttributeProto) */ {
 public:
  inline AttributeProto() : AttributeProto(nullptr) {}
  ~AttributeProto() override;
  explicit constexpr AttributeProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AttributeProto(const AttributeProto& from);
  AttributeProto(AttributeProto&& from) noexcept
    : AttributeProto() {
    *this = ::std::move(from);
  }

  inline AttributeProto& operator=(const AttributeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttributeProto& operator=(AttributeProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTO...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProto,PROTOBUF_NAMESPACE_ID.Message,false,211,AttributeProto,34
241611,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProto.AnyMetadata,,false,318,AnyMetadata,34
241643,TYPE_DECL,ANY,,,typedef AttributeProto_AttributeType AttributeType;,40,misc\onnx\opencv-onnx.pb.hpp,AttributeType,,false,337,AttributeType,42
241707,TYPE_DECL,,,,"enum : int {
    kFloatsFieldNumber = 7,
    kIntsFieldNumber = 8,
    kStringsFieldNumber = 9,
    kTensorsFieldNumber = 10,
    kGraphsFieldNumber = 11,
    kNameFieldNumber = 1,
    kSFieldNumber = 4,
    kDocStringFieldNumber = 13,
    kRefAttrNameFieldNumber = 21,
    kTFieldNumber = 5,
    kGFieldNumber = 6,
    kIFieldNumber = 3,
    kFFieldNumber = 2,
    kTypeFieldNumber = 20,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProto.anonymous_enum_0,,false,387,anonymous_enum_0,61
242402,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProto._Internal,,false,656,_Internal,213
242403,TYPE_DECL,opencv_onnx.AttributeProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProto.InternalHelper,,false,658,InternalHelper,214
242404,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,659,InternalArenaConstructable_,215
242405,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,660,DestructorSkippable_,216
242422,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.AttributeProto.TableStruct_opencv_2donnx_2eproto,,false,677,TableStruct_opencv_2donnx_2eproto,233
242472,TYPE_DECL,,,,"class ValueInfoProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.ValueInfoProto) */ {
 public:
  inline ValueInfoProto() : ValueInfoProto(nullptr) {}
  ~ValueInfoProto() override;
  explicit constexpr ValueInfoProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ValueInfoProto(const ValueInfoProto& from);
  ValueInfoProto(ValueInfoProto&& from) noexcept
    : ValueInfoProto() {
    *this = ::std::move(from);
  }

  inline ValueInfoProto& operator=(const ValueInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValueInfoProto& operator=(ValueInfoProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTO...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ValueInfoProto,PROTOBUF_NAMESPACE_ID.Message,false,681,ValueInfoProto,35
242756,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ValueInfoProto.AnyMetadata,,false,788,AnyMetadata,34
242788,TYPE_DECL,,,,"enum : int {
    kNameFieldNumber = 1,
    kDocStringFieldNumber = 3,
    kTypeFieldNumber = 2,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ValueInfoProto.anonymous_enum_1,,false,809,anonymous_enum_1,42
242941,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ValueInfoProto._Internal,,false,870,_Internal,78
242942,TYPE_DECL,opencv_onnx.ValueInfoProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ValueInfoProto.InternalHelper,,false,872,InternalHelper,79
242943,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,873,InternalArenaConstructable_,80
242944,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,874,DestructorSkippable_,81
242950,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ValueInfoProto.TableStruct_opencv_2donnx_2eproto,,false,880,TableStruct_opencv_2donnx_2eproto,87
242958,TYPE_DECL,,,,"class NodeProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.NodeProto) */ {
 public:
  inline NodeProto() : NodeProto(nullptr) {}
  ~NodeProto() override;
  explicit constexpr NodeProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NodeProto(const NodeProto& from);
  NodeProto(NodeProto&& from) noexcept
    : NodeProto() {
    *this = ::std::move(from);
  }

  inline NodeProto& operator=(const NodeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeProto& operator=(NodeProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _int...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.NodeProto,PROTOBUF_NAMESPACE_ID.Message,false,884,NodeProto,36
243242,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.NodeProto.AnyMetadata,,false,991,AnyMetadata,34
243274,TYPE_DECL,,,,"enum : int {
    kInputFieldNumber = 1,
    kOutputFieldNumber = 2,
    kAttributeFieldNumber = 5,
    kNameFieldNumber = 3,
    kOpTypeFieldNumber = 4,
    kDocStringFieldNumber = 6,
    kDomainFieldNumber = 7,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.NodeProto.anonymous_enum_2,,false,1012,anonymous_enum_2,42
243686,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.NodeProto._Internal,,false,1161,_Internal,133
243687,TYPE_DECL,opencv_onnx.NodeProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.NodeProto.InternalHelper,,false,1163,InternalHelper,134
243688,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,1164,InternalArenaConstructable_,135
243689,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,1165,DestructorSkippable_,136
243699,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.NodeProto.TableStruct_opencv_2donnx_2eproto,,false,1175,TableStruct_opencv_2donnx_2eproto,146
243707,TYPE_DECL,,,,"class ModelProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.ModelProto) */ {
 public:
  inline ModelProto() : ModelProto(nullptr) {}
  ~ModelProto() override;
  explicit constexpr ModelProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ModelProto(const ModelProto& from);
  ModelProto(ModelProto&& from) noexcept
    : ModelProto() {
    *this = ::std::move(from);
  }

  inline ModelProto& operator=(const ModelProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelProto& operator=(ModelProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ModelProto,PROTOBUF_NAMESPACE_ID.Message,false,1179,ModelProto,37
243991,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ModelProto.AnyMetadata,,false,1286,AnyMetadata,34
244023,TYPE_DECL,,,,"enum : int {
    kOpsetImportFieldNumber = 8,
    kMetadataPropsFieldNumber = 14,
    kProducerNameFieldNumber = 2,
    kProducerVersionFieldNumber = 3,
    kDomainFieldNumber = 4,
    kDocStringFieldNumber = 6,
    kGraphFieldNumber = 7,
    kIrVersionFieldNumber = 1,
    kModelVersionFieldNumber = 5,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ModelProto.anonymous_enum_3,,false,1307,anonymous_enum_3,42
244436,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ModelProto._Internal,,false,1472,_Internal,136
244437,TYPE_DECL,opencv_onnx.ModelProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ModelProto.InternalHelper,,false,1474,InternalHelper,137
244438,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,1475,InternalArenaConstructable_,138
244439,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,1476,DestructorSkippable_,139
244451,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.ModelProto.TableStruct_opencv_2donnx_2eproto,,false,1488,TableStruct_opencv_2donnx_2eproto,151
244459,TYPE_DECL,,,,"class StringStringEntryProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.StringStringEntryProto) */ {
 public:
  inline StringStringEntryProto() : StringStringEntryProto(nullptr) {}
  ~StringStringEntryProto() override;
  explicit constexpr StringStringEntryProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StringStringEntryProto(const StringStringEntryProto& from);
  StringStringEntryProto(StringStringEntryProto&& from) noexcept
    : StringStringEntryProto() {
    *this = ::std::move(from);
  }

  inline StringStringEntryProto& operator=(const StringStringEntryProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringStringEntryProto& operator=(StringStringEntryProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
 ...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.StringStringEntryProto,PROTOBUF_NAMESPACE_ID.Message,false,1492,StringStringEntryProto,38
244743,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.StringStringEntryProto.AnyMetadata,,false,1599,AnyMetadata,34
244775,TYPE_DECL,,,,"enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.StringStringEntryProto.anonymous_enum_4,,false,1620,anonymous_enum_4,42
244878,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.StringStringEntryProto._Internal,,false,1662,_Internal,67
244879,TYPE_DECL,opencv_onnx.StringStringEntryProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.StringStringEntryProto.InternalHelper,,false,1664,InternalHelper,68
244880,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,1665,InternalArenaConstructable_,69
244881,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,1666,DestructorSkippable_,70
244886,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.StringStringEntryProto.TableStruct_opencv_2donnx_2eproto,,false,1671,TableStruct_opencv_2donnx_2eproto,75
244894,TYPE_DECL,,,,"class GraphProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.GraphProto) */ {
 public:
  inline GraphProto() : GraphProto(nullptr) {}
  ~GraphProto() override;
  explicit constexpr GraphProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GraphProto(const GraphProto& from);
  GraphProto(GraphProto&& from) noexcept
    : GraphProto() {
    *this = ::std::move(from);
  }

  inline GraphProto& operator=(const GraphProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphProto& operator=(GraphProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.GraphProto,PROTOBUF_NAMESPACE_ID.Message,false,1675,GraphProto,39
245178,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.GraphProto.AnyMetadata,,false,1782,AnyMetadata,34
245210,TYPE_DECL,,,,"enum : int {
    kNodeFieldNumber = 1,
    kInitializerFieldNumber = 5,
    kInputFieldNumber = 11,
    kOutputFieldNumber = 12,
    kValueInfoFieldNumber = 13,
    kNameFieldNumber = 2,
    kDocStringFieldNumber = 10,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.GraphProto.anonymous_enum_5,,false,1803,anonymous_enum_5,42
245548,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.GraphProto._Internal,,false,1940,_Internal,117
245549,TYPE_DECL,opencv_onnx.GraphProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.GraphProto.InternalHelper,,false,1942,InternalHelper,118
245550,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,1943,InternalArenaConstructable_,119
245551,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,1944,DestructorSkippable_,120
245561,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.GraphProto.TableStruct_opencv_2donnx_2eproto,,false,1954,TableStruct_opencv_2donnx_2eproto,130
245569,TYPE_DECL,,,,"class TensorProto_Segment final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.TensorProto.Segment) */ {
 public:
  inline TensorProto_Segment() : TensorProto_Segment(nullptr) {}
  ~TensorProto_Segment() override;
  explicit constexpr TensorProto_Segment(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TensorProto_Segment(const TensorProto_Segment& from);
  TensorProto_Segment(TensorProto_Segment&& from) noexcept
    : TensorProto_Segment() {
    *this = ::std::move(from);
  }

  inline TensorProto_Segment& operator=(const TensorProto_Segment& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorProto_Segment& operator=(TensorProto_Segment&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else ...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_Segment,PROTOBUF_NAMESPACE_ID.Message,false,1958,TensorProto_Segment,40
245853,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_Segment.AnyMetadata,,false,2065,AnyMetadata,34
245885,TYPE_DECL,,,,"enum : int {
    kBeginFieldNumber = 1,
    kEndFieldNumber = 2,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_Segment.anonymous_enum_6,,false,2086,anonymous_enum_6,42
245958,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_Segment._Internal,,false,2118,_Internal,57
245959,TYPE_DECL,opencv_onnx.TensorProto_Segment.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_Segment.InternalHelper,,false,2120,InternalHelper,58
245960,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,2121,InternalArenaConstructable_,59
245961,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,2122,DestructorSkippable_,60
245966,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto_Segment.TableStruct_opencv_2donnx_2eproto,,false,2127,TableStruct_opencv_2donnx_2eproto,65
245974,TYPE_DECL,,,,"class TensorProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.TensorProto) */ {
 public:
  inline TensorProto() : TensorProto(nullptr) {}
  ~TensorProto() override;
  explicit constexpr TensorProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TensorProto(const TensorProto& from);
  TensorProto(TensorProto&& from) noexcept
    : TensorProto() {
    *this = ::std::move(from);
  }

  inline TensorProto& operator=(const TensorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorProto& operator=(TensorProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fi...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto,PROTOBUF_NAMESPACE_ID.Message,false,2131,TensorProto,41
246258,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto.AnyMetadata,,false,2238,AnyMetadata,34
246290,TYPE_DECL,ANY,,,typedef TensorProto_Segment Segment;,31,misc\onnx\opencv-onnx.pb.hpp,Segment,,false,2257,Segment,42
246291,TYPE_DECL,ANY,,,typedef TensorProto_DataType DataType;,32,misc\onnx\opencv-onnx.pb.hpp,DataType,,false,2259,DataType,43
246360,TYPE_DECL,,,,"enum : int {
    kDimsFieldNumber = 1,
    kFloatDataFieldNumber = 4,
    kInt32DataFieldNumber = 5,
    kStringDataFieldNumber = 6,
    kInt64DataFieldNumber = 7,
    kDoubleDataFieldNumber = 10,
    kUint64DataFieldNumber = 11,
    kNameFieldNumber = 8,
    kRawDataFieldNumber = 9,
    kDocStringFieldNumber = 12,
    kSegmentFieldNumber = 3,
    kDataTypeFieldNumber = 2,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto.anonymous_enum_7,,false,2319,anonymous_enum_7,67
247026,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto._Internal,,false,2576,_Internal,210
247027,TYPE_DECL,opencv_onnx.TensorProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto.InternalHelper,,false,2578,InternalHelper,211
247028,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,2579,InternalArenaConstructable_,212
247029,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,2580,DestructorSkippable_,213
247047,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorProto.TableStruct_opencv_2donnx_2eproto,,false,2598,TableStruct_opencv_2donnx_2eproto,231
247112,TYPE_DECL,,,,"class TensorShapeProto_Dimension final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.TensorShapeProto.Dimension) */ {
 public:
  inline TensorShapeProto_Dimension() : TensorShapeProto_Dimension(nullptr) {}
  ~TensorShapeProto_Dimension() override;
  explicit constexpr TensorShapeProto_Dimension(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TensorShapeProto_Dimension(const TensorShapeProto_Dimension& from);
  TensorShapeProto_Dimension(TensorShapeProto_Dimension&& from) noexcept
    : TensorShapeProto_Dimension() {
    *this = ::std::move(from);
  }

  inline TensorShapeProto_Dimension& operator=(const TensorShapeProto_Dimension& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorShapeProto_Dimension& operator=(TensorShapeProto_Dimension&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningAr...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension,PROTOBUF_NAMESPACE_ID.Message,false,2602,TensorShapeProto_Dimension,42
247244,TYPE_DECL,,,,"enum ValueCase {
    kDimValue = 1,
    kDimParam = 2,
    VALUE_NOT_SET = 0,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension.ValueCase,,false,2652,ValueCase,14
247413,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension.AnyMetadata,,false,2715,AnyMetadata,35
247445,TYPE_DECL,,,,"enum : int {
    kDenotationFieldNumber = 3,
    kDimValueFieldNumber = 1,
    kDimParamFieldNumber = 2,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension.anonymous_enum_8,,false,2736,anonymous_enum_8,43
247590,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension._Internal,,false,2794,_Internal,77
247607,TYPE_DECL,opencv_onnx.TensorShapeProto_Dimension.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension.InternalHelper,,false,2801,InternalHelper,82
247608,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,2802,InternalArenaConstructable_,83
247609,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,2803,DestructorSkippable_,84
247613,TYPE_DECL,value_,,,"union ValueUnion {
    constexpr ValueUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    int64_t dim_value_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dim_param_;
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension.ValueUnion,,false,2807,ValueUnion,88
247623,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto_Dimension.TableStruct_opencv_2donnx_2eproto,,false,2815,TableStruct_opencv_2donnx_2eproto,91
247633,TYPE_DECL,,,,"class TensorShapeProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.TensorShapeProto) */ {
 public:
  inline TensorShapeProto() : TensorShapeProto(nullptr) {}
  ~TensorShapeProto() override;
  explicit constexpr TensorShapeProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TensorShapeProto(const TensorShapeProto& from);
  TensorShapeProto(TensorShapeProto&& from) noexcept
    : TensorShapeProto() {
    *this = ::std::move(from);
  }

  inline TensorShapeProto& operator=(const TensorShapeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorShapeProto& operator=(TensorShapeProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *thi...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto,PROTOBUF_NAMESPACE_ID.Message,false,2819,TensorShapeProto,43
247917,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto.AnyMetadata,,false,2926,AnyMetadata,34
247949,TYPE_DECL,ANY,,,typedef TensorShapeProto_Dimension Dimension;,38,misc\onnx\opencv-onnx.pb.hpp,Dimension,,false,2945,Dimension,42
247950,TYPE_DECL,,,,"enum : int {
    kDimFieldNumber = 1,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto.anonymous_enum_9,,false,2949,anonymous_enum_9,43
248002,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto._Internal,,false,2972,_Internal,54
248003,TYPE_DECL,opencv_onnx.TensorShapeProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto.InternalHelper,,false,2974,InternalHelper,55
248004,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,2975,InternalArenaConstructable_,56
248005,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,2976,DestructorSkippable_,57
248008,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TensorShapeProto.TableStruct_opencv_2donnx_2eproto,,false,2979,TableStruct_opencv_2donnx_2eproto,60
248016,TYPE_DECL,,,,"class TypeProto_Tensor final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.TypeProto.Tensor) */ {
 public:
  inline TypeProto_Tensor() : TypeProto_Tensor(nullptr) {}
  ~TypeProto_Tensor() override;
  explicit constexpr TypeProto_Tensor(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TypeProto_Tensor(const TypeProto_Tensor& from);
  TypeProto_Tensor(TypeProto_Tensor&& from) noexcept
    : TypeProto_Tensor() {
    *this = ::std::move(from);
  }

  inline TypeProto_Tensor& operator=(const TypeProto_Tensor& from) {
    CopyFrom(from);
    return *this;
  }
  inline TypeProto_Tensor& operator=(TypeProto_Tensor&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *thi...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto_Tensor,PROTOBUF_NAMESPACE_ID.Message,false,2983,TypeProto_Tensor,44
248300,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto_Tensor.AnyMetadata,,false,3090,AnyMetadata,34
248332,TYPE_DECL,,,,"enum : int {
    kShapeFieldNumber = 2,
    kElemTypeFieldNumber = 1,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto_Tensor.anonymous_enum_10,,false,3111,anonymous_enum_10,42
248421,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto_Tensor._Internal,,false,3148,_Internal,61
248422,TYPE_DECL,opencv_onnx.TypeProto_Tensor.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto_Tensor.InternalHelper,,false,3150,InternalHelper,62
248423,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,3151,InternalArenaConstructable_,63
248424,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,3152,DestructorSkippable_,64
248429,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto_Tensor.TableStruct_opencv_2donnx_2eproto,,false,3157,TableStruct_opencv_2donnx_2eproto,69
248437,TYPE_DECL,,,,"class TypeProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.TypeProto) */ {
 public:
  inline TypeProto() : TypeProto(nullptr) {}
  ~TypeProto() override;
  explicit constexpr TypeProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TypeProto(const TypeProto& from);
  TypeProto(TypeProto&& from) noexcept
    : TypeProto() {
    *this = ::std::move(from);
  }

  inline TypeProto& operator=(const TypeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TypeProto& operator=(TypeProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _int...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto,PROTOBUF_NAMESPACE_ID.Message,false,3161,TypeProto,45
248569,TYPE_DECL,,,,"enum ValueCase {
    kTensorType = 1,
    VALUE_NOT_SET = 0,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto.ValueCase,,false,3211,ValueCase,14
248734,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto.AnyMetadata,,false,3273,AnyMetadata,35
248766,TYPE_DECL,ANY,,,typedef TypeProto_Tensor Tensor;,28,misc\onnx\opencv-onnx.pb.hpp,Tensor,,false,3292,Tensor,43
248767,TYPE_DECL,,,,"enum : int {
    kDenotationFieldNumber = 6,
    kTensorTypeFieldNumber = 1,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto.anonymous_enum_11,,false,3296,anonymous_enum_11,44
248879,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto._Internal,,false,3340,_Internal,70
248892,TYPE_DECL,opencv_onnx.TypeProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto.InternalHelper,,false,3346,InternalHelper,74
248893,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,3347,InternalArenaConstructable_,75
248894,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,3348,DestructorSkippable_,76
248898,TYPE_DECL,value_,,,"union ValueUnion {
    constexpr ValueUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::opencv_onnx::TypeProto_Tensor* tensor_type_;
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto.ValueUnion,,false,3352,ValueUnion,80
248907,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.TypeProto.TableStruct_opencv_2donnx_2eproto,,false,3359,TableStruct_opencv_2donnx_2eproto,83
248917,TYPE_DECL,,,,"class OperatorSetIdProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_onnx.OperatorSetIdProto) */ {
 public:
  inline OperatorSetIdProto() : OperatorSetIdProto(nullptr) {}
  ~OperatorSetIdProto() override;
  explicit constexpr OperatorSetIdProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OperatorSetIdProto(const OperatorSetIdProto& from);
  OperatorSetIdProto(OperatorSetIdProto&& from) noexcept
    : OperatorSetIdProto() {
    *this = ::std::move(from);
  }

  inline OperatorSetIdProto& operator=(const OperatorSetIdProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperatorSetIdProto& operator=(OperatorSetIdProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFro...",1,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.OperatorSetIdProto,PROTOBUF_NAMESPACE_ID.Message,false,3363,OperatorSetIdProto,46
249201,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.OperatorSetIdProto.AnyMetadata,,false,3470,AnyMetadata,34
249233,TYPE_DECL,,,,"enum : int {
    kDomainFieldNumber = 1,
    kVersionFieldNumber = 2,
  }",3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.OperatorSetIdProto.anonymous_enum_12,,false,3491,anonymous_enum_12,42
249321,TYPE_DECL,,,,class _Internal,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.OperatorSetIdProto._Internal,,false,3528,_Internal,62
249322,TYPE_DECL,opencv_onnx.OperatorSetIdProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.OperatorSetIdProto.InternalHelper,,false,3530,InternalHelper,63
249323,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\onnx\opencv-onnx.pb.hpp,InternalArenaConstructable_,,false,3531,InternalArenaConstructable_,64
249324,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\onnx\opencv-onnx.pb.hpp,DestructorSkippable_,,false,3532,DestructorSkippable_,65
249329,TYPE_DECL,,,,friend struct ::TableStruct_opencv_2donnx_2eproto,3,misc\onnx\opencv-onnx.pb.hpp,opencv_onnx.OperatorSetIdProto.TableStruct_opencv_2donnx_2eproto,,false,3537,TableStruct_opencv_2donnx_2eproto,70
258766,TYPE_DECL,is_proto_enum<opencv_onnx.AttributeProto_AttributeType><>,,,struct is_proto_enum< ::opencv_onnx::AttributeProto_AttributeType> : ::std::true_type {},13,misc\onnx\opencv-onnx.pb.hpp,is_proto_enum<opencv_onnx.AttributeProto_AttributeType>,std.true_type,false,7439,is_proto_enum<opencv_onnx::AttributeProto_AttributeType>,24
258776,TYPE_DECL,is_proto_enum<opencv_onnx.TensorProto_DataType><>,,,struct is_proto_enum< ::opencv_onnx::TensorProto_DataType> : ::std::true_type {},13,misc\onnx\opencv-onnx.pb.hpp,is_proto_enum<opencv_onnx.TensorProto_DataType>,std.true_type,false,7444,is_proto_enum<opencv_onnx::TensorProto_DataType>,26
258786,TYPE_DECL,is_proto_enum<opencv_onnx.Version><>,,,struct is_proto_enum< ::opencv_onnx::Version> : ::std::true_type {},13,misc\onnx\opencv-onnx.pb.hpp,is_proto_enum<opencv_onnx.Version>,std.true_type,false,7449,is_proto_enum<opencv_onnx::Version>,28
258799,TYPE_DECL,,misc\python\pyopencv_dnn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\python\pyopencv_dnn.hpp,misc\python\pyopencv_dnn.hpp:<global>,,false,1,<global>,1
258826,TYPE_DECL,,misc\tensorflow\attr_value.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\attr_value.pb.cc,misc\tensorflow\attr_value.pb.cc:<global>,,false,1,<global>,12
258836,TYPE_DECL,,,,"struct AttrValue_ListValueDefaultTypeInternal {
  constexpr AttrValue_ListValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttrValue_ListValueDefaultTypeInternal() {}
  union {
    AttrValue_ListValue _instance;
  };
}",1,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow.AttrValue_ListValueDefaultTypeInternal,,false,31,AttrValue_ListValueDefaultTypeInternal,2
258845,TYPE_DECL,,,,"union {
    AttrValue_ListValue _instance;
  }",3,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow.AttrValue_ListValueDefaultTypeInternal.anonymous_composite_type_0,,false,35,opencv_tensorflow.AttrValue_ListValueDefaultTypeInternal.anonymous_composite_type_0,3
258854,TYPE_DECL,,,,"struct AttrValueDefaultTypeInternal {
  constexpr AttrValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AttrValueDefaultTypeInternal() {}
  union {
    AttrValue _instance;
  };
}",1,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow.AttrValueDefaultTypeInternal,,false,43,AttrValueDefaultTypeInternal,6
258863,TYPE_DECL,,,,"union {
    AttrValue _instance;
  }",3,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow.AttrValueDefaultTypeInternal.anonymous_composite_type_1,,false,47,opencv_tensorflow.AttrValueDefaultTypeInternal.anonymous_composite_type_1,3
258872,TYPE_DECL,,,,"struct NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal {
  constexpr NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NameAttrList_AttrEntry_DoNotUse _instance;
  };
}",1,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow.NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal,,false,54,NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal,10
258881,TYPE_DECL,,,,"union {
    NameAttrList_AttrEntry_DoNotUse _instance;
  }",3,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow.NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal.anonymous_composite_type_2,,false,58,opencv_tensorflow.NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal.anonymous_composite_type_2,3
258890,TYPE_DECL,,,,"struct NameAttrListDefaultTypeInternal {
  constexpr NameAttrListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NameAttrListDefaultTypeInternal() {}
  union {
    NameAttrList _instance;
  };
}",1,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow.NameAttrListDefaultTypeInternal,,false,67,NameAttrListDefaultTypeInternal,14
258899,TYPE_DECL,,,,"union {
    NameAttrList _instance;
  }",3,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow.NameAttrListDefaultTypeInternal.anonymous_composite_type_3,,false,71,opencv_tensorflow.NameAttrListDefaultTypeInternal.anonymous_composite_type_3,3
258998,TYPE_DECL,,,,"class AttrValue_ListValue::_Internal {
 public:
}",1,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow._Internal,,false,191,_Internal,1
260469,TYPE_DECL,,,,"class AttrValue::_Internal {
 public:
  static const ::opencv_tensorflow::TensorShapeProto& shape(const AttrValue* msg);
  static const ::opencv_tensorflow::TensorProto& tensor(const AttrValue* msg);
  static const ::opencv_tensorflow::AttrValue_ListValue& list(const AttrValue* msg);
  static const ::opencv_tensorflow::NameAttrList& func(const AttrValue* msg);
}",1,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow._Internal,,false,598,_Internal,25
262350,TYPE_DECL,,,,"class NameAttrList::_Internal {
 public:
}",1,misc\tensorflow\attr_value.pb.cc,opencv_tensorflow._Internal,,false,1246,_Internal,62
262815,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::opencv_tensorflow::AttrValue >::const_pointer
        ConstPtr;",9,misc\tensorflow\attr_value.pb.cc,ConstPtr,,false,1390,ConstPtr,1
262816,TYPE_DECL,ANY,,,typedef ConstPtr SortItem;,22,misc\tensorflow\attr_value.pb.cc,SortItem,,false,1391,SortItem,2
262817,TYPE_DECL,ANY,,,typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;,78,misc\tensorflow\attr_value.pb.cc,Less,,false,1392,Less,3
262838,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::opencv_tensorflow::AttrValue >::size_type size_type;",102,misc\tensorflow\attr_value.pb.cc,size_type,,false,1407,size_type,3
263414,TYPE_DECL,,misc\tensorflow\attr_value.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\attr_value.pb.hpp,misc\tensorflow\attr_value.pb.hpp:<global>,,false,1,<global>,24
263419,TYPE_DECL,,,,class AnyMetadata,1,misc\tensorflow\attr_value.pb.hpp,internal.AnyMetadata,,false,45,AnyMetadata,1
263421,TYPE_DECL,,,,"struct TableStruct_attr_5fvalue_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\tensorflow\attr_value.pb.hpp,TableStruct_attr_5fvalue_2eproto,,false,50,TableStruct_attr_5fvalue_2eproto,4
263447,TYPE_DECL,,,,class AttrValue,1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue,,false,63,AttrValue,1
263448,TYPE_DECL,,,,struct AttrValueDefaultTypeInternal,1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValueDefaultTypeInternal,,false,64,AttrValueDefaultTypeInternal,2
263450,TYPE_DECL,,,,class AttrValue_ListValue,1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue_ListValue,,false,66,AttrValue_ListValue,4
263451,TYPE_DECL,,,,struct AttrValue_ListValueDefaultTypeInternal,1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue_ListValueDefaultTypeInternal,,false,67,AttrValue_ListValueDefaultTypeInternal,5
263453,TYPE_DECL,,,,class NameAttrList,1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList,,false,69,NameAttrList,7
263454,TYPE_DECL,,,,struct NameAttrListDefaultTypeInternal,1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrListDefaultTypeInternal,,false,70,NameAttrListDefaultTypeInternal,8
263456,TYPE_DECL,,,,class NameAttrList_AttrEntry_DoNotUse,1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList_AttrEntry_DoNotUse,,false,72,NameAttrList_AttrEntry_DoNotUse,10
263457,TYPE_DECL,,,,struct NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal,1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal,,false,73,NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal,11
263482,TYPE_DECL,,,,"class AttrValue_ListValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.AttrValue.ListValue) */ {
 public:
  inline AttrValue_ListValue() : AttrValue_ListValue(nullptr) {}
  ~AttrValue_ListValue() override;
  explicit constexpr AttrValue_ListValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AttrValue_ListValue(const AttrValue_ListValue& from);
  AttrValue_ListValue(AttrValue_ListValue&& from) noexcept
    : AttrValue_ListValue() {
    *this = ::std::move(from);
  }

  inline AttrValue_ListValue& operator=(const AttrValue_ListValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue_ListValue& operator=(AttrValue_ListValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    }...",1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue_ListValue,PROTOBUF_NAMESPACE_ID.Message,false,86,AttrValue_ListValue,1
263739,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue_ListValue.AnyMetadata,,false,186,AnyMetadata,32
263771,TYPE_DECL,,,,"enum : int {
    kSFieldNumber = 2,
    kIFieldNumber = 3,
    kFFieldNumber = 4,
    kBFieldNumber = 5,
    kTypeFieldNumber = 6,
    kShapeFieldNumber = 7,
    kTensorFieldNumber = 8,
  }",3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue_ListValue.anonymous_enum_0,,false,207,anonymous_enum_0,40
264180,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue_ListValue._Internal,,false,361,_Internal,124
264181,TYPE_DECL,opencv_tensorflow.AttrValue_ListValue.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue_ListValue.InternalHelper,,false,363,InternalHelper,125
264182,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\attr_value.pb.hpp,InternalArenaConstructable_,,false,364,InternalArenaConstructable_,126
264183,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\attr_value.pb.hpp,DestructorSkippable_,,false,365,DestructorSkippable_,127
264194,TYPE_DECL,,,,friend struct ::TableStruct_attr_5fvalue_2eproto,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue_ListValue.TableStruct_attr_5fvalue_2eproto,,false,376,TableStruct_attr_5fvalue_2eproto,138
264202,TYPE_DECL,,,,"class AttrValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.AttrValue) */ {
 public:
  inline AttrValue() : AttrValue(nullptr) {}
  ~AttrValue() override;
  explicit constexpr AttrValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AttrValue(const AttrValue& from);
  AttrValue(AttrValue&& from) noexcept
    : AttrValue() {
    *this = ::std::move(from);
  }

  inline AttrValue& operator=(const AttrValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttrValue& operator=(AttrValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor...",1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue,PROTOBUF_NAMESPACE_ID.Message,false,380,AttrValue,2
264307,TYPE_DECL,,,,"enum ValueCase {
    kS = 2,
    kI = 3,
    kF = 4,
    kB = 5,
    kType = 6,
    kShape = 7,
    kTensor = 8,
    kList = 1,
    kFunc = 10,
    kPlaceholder = 9,
    VALUE_NOT_SET = 0,
  }",3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue.ValueCase,,false,423,ValueCase,12
264508,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue.AnyMetadata,,false,494,AnyMetadata,33
264540,TYPE_DECL,ANY,,,typedef AttrValue_ListValue ListValue;,31,misc\tensorflow\attr_value.pb.hpp,ListValue,,false,513,ListValue,41
264541,TYPE_DECL,,,,"enum : int {
    kSFieldNumber = 2,
    kIFieldNumber = 3,
    kFFieldNumber = 4,
    kBFieldNumber = 5,
    kTypeFieldNumber = 6,
    kShapeFieldNumber = 7,
    kTensorFieldNumber = 8,
    kListFieldNumber = 1,
    kFuncFieldNumber = 10,
    kPlaceholderFieldNumber = 9,
  }",3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue.anonymous_enum_1,,false,517,anonymous_enum_1,42
264988,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue._Internal,,false,693,_Internal,141
265037,TYPE_DECL,opencv_tensorflow.AttrValue.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue.InternalHelper,,false,708,InternalHelper,154
265038,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\attr_value.pb.hpp,InternalArenaConstructable_,,false,709,InternalArenaConstructable_,155
265039,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\attr_value.pb.hpp,DestructorSkippable_,,false,710,DestructorSkippable_,156
265040,TYPE_DECL,value_,,,"union ValueUnion {
    constexpr ValueUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr s_;
    int64_t i_;
    float f_;
    bool b_;
    int type_;
    ::opencv_tensorflow::TensorShapeProto* shape_;
    ::opencv_tensorflow::TensorProto* tensor_;
    ::opencv_tensorflow::AttrValue_ListValue* list_;
    ::opencv_tensorflow::NameAttrList* func_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr placeholder_;
  }",3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue.ValueUnion,,false,711,ValueUnion,157
265059,TYPE_DECL,,,,friend struct ::TableStruct_attr_5fvalue_2eproto,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.AttrValue.TableStruct_attr_5fvalue_2eproto,,false,728,TableStruct_attr_5fvalue_2eproto,161
265069,TYPE_DECL,,,,"class NameAttrList_AttrEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<NameAttrList_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<NameAttrList_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  NameAttrList_AttrEntry_DoNotUse();
  explicit constexpr NameAttrList_AttrEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit NameAttrList_AttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const NameAttrList_AttrEntry_DoNotUse& other);
  static const NameAttrList_AttrEntry_DoNotUse* internal_default_instance() { return reinter...",1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList_AttrEntry_DoNotUse,"PROTOBUF_NAMESPACE_ID.internal.MapEntry<NameAttrList_AttrEntry_DoNotUse, std.string, .opencv_tensorflow.AttrValue, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_STRING, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_MESSAGE>",false,732,NameAttrList_AttrEntry_DoNotUse,3
265070,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<NameAttrList_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;",70,misc\tensorflow\attr_value.pb.hpp,SuperType,,false,740,SuperType,1
265138,TYPE_DECL,,,,"class NameAttrList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.NameAttrList) */ {
 public:
  inline NameAttrList() : NameAttrList(nullptr) {}
  ~NameAttrList() override;
  explicit constexpr NameAttrList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NameAttrList(const NameAttrList& from);
  NameAttrList(NameAttrList&& from) noexcept
    : NameAttrList() {
    *this = ::std::move(from);
  }

  inline NameAttrList& operator=(const NameAttrList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NameAttrList& operator=(NameAttrList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descri...",1,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList,PROTOBUF_NAMESPACE_ID.Message,false,757,NameAttrList,4
265395,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList.AnyMetadata,,false,857,AnyMetadata,32
265427,TYPE_DECL,,,,"enum : int {
    kAttrFieldNumber = 2,
    kNameFieldNumber = 1,
  }",3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList.anonymous_enum_2,,false,879,anonymous_enum_2,40
265505,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList._Internal,,false,916,_Internal,58
265506,TYPE_DECL,opencv_tensorflow.NameAttrList.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList.InternalHelper,,false,918,InternalHelper,59
265507,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\attr_value.pb.hpp,InternalArenaConstructable_,,false,919,InternalArenaConstructable_,60
265508,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\attr_value.pb.hpp,DestructorSkippable_,,false,920,DestructorSkippable_,61
265512,TYPE_DECL,,,,friend struct ::TableStruct_attr_5fvalue_2eproto,3,misc\tensorflow\attr_value.pb.hpp,opencv_tensorflow.NameAttrList.TableStruct_attr_5fvalue_2eproto,,false,928,TableStruct_attr_5fvalue_2eproto,65
267959,TYPE_DECL,,misc\tensorflow\function.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\function.pb.cc,misc\tensorflow\function.pb.cc:<global>,,false,1,<global>,12
267969,TYPE_DECL,,,,"struct FunctionDefLibraryDefaultTypeInternal {
  constexpr FunctionDefLibraryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FunctionDefLibraryDefaultTypeInternal() {}
  union {
    FunctionDefLibrary _instance;
  };
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow.FunctionDefLibraryDefaultTypeInternal,,false,24,FunctionDefLibraryDefaultTypeInternal,2
267978,TYPE_DECL,,,,"union {
    FunctionDefLibrary _instance;
  }",3,misc\tensorflow\function.pb.cc,opencv_tensorflow.FunctionDefLibraryDefaultTypeInternal.anonymous_composite_type_0,,false,28,opencv_tensorflow.FunctionDefLibraryDefaultTypeInternal.anonymous_composite_type_0,3
267987,TYPE_DECL,,,,"struct FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal {
  constexpr FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FunctionDef_Node_AttrEntry_DoNotUse _instance;
  };
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow.FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal,,false,35,FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal,6
267996,TYPE_DECL,,,,"union {
    FunctionDef_Node_AttrEntry_DoNotUse _instance;
  }",3,misc\tensorflow\function.pb.cc,opencv_tensorflow.FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal.anonymous_composite_type_1,,false,39,opencv_tensorflow.FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal.anonymous_composite_type_1,3
268005,TYPE_DECL,,,,"struct FunctionDef_NodeDefaultTypeInternal {
  constexpr FunctionDef_NodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FunctionDef_NodeDefaultTypeInternal() {}
  union {
    FunctionDef_Node _instance;
  };
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow.FunctionDef_NodeDefaultTypeInternal,,false,51,FunctionDef_NodeDefaultTypeInternal,10
268014,TYPE_DECL,,,,"union {
    FunctionDef_Node _instance;
  }",3,misc\tensorflow\function.pb.cc,opencv_tensorflow.FunctionDef_NodeDefaultTypeInternal.anonymous_composite_type_2,,false,55,opencv_tensorflow.FunctionDef_NodeDefaultTypeInternal.anonymous_composite_type_2,3
268023,TYPE_DECL,,,,"struct FunctionDefDefaultTypeInternal {
  constexpr FunctionDefDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FunctionDefDefaultTypeInternal() {}
  union {
    FunctionDef _instance;
  };
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow.FunctionDefDefaultTypeInternal,,false,64,FunctionDefDefaultTypeInternal,14
268032,TYPE_DECL,,,,"union {
    FunctionDef _instance;
  }",3,misc\tensorflow\function.pb.cc,opencv_tensorflow.FunctionDefDefaultTypeInternal.anonymous_composite_type_3,,false,68,opencv_tensorflow.FunctionDefDefaultTypeInternal.anonymous_composite_type_3,3
268041,TYPE_DECL,,,,"struct GradientDefDefaultTypeInternal {
  constexpr GradientDefDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GradientDefDefaultTypeInternal() {}
  union {
    GradientDef _instance;
  };
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow.GradientDefDefaultTypeInternal,,false,77,GradientDefDefaultTypeInternal,18
268050,TYPE_DECL,,,,"union {
    GradientDef _instance;
  }",3,misc\tensorflow\function.pb.cc,opencv_tensorflow.GradientDefDefaultTypeInternal.anonymous_composite_type_4,,false,81,opencv_tensorflow.GradientDefDefaultTypeInternal.anonymous_composite_type_4,3
268151,TYPE_DECL,,,,"class FunctionDefLibrary::_Internal {
 public:
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow._Internal,,false,193,_Internal,1
268849,TYPE_DECL,,,,"class FunctionDef_Node::_Internal {
 public:
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow._Internal,,false,425,_Internal,27
269757,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::opencv_tensorflow::AttrValue >::const_pointer
        ConstPtr;",9,misc\tensorflow\function.pb.cc,ConstPtr,,false,656,ConstPtr,1
269758,TYPE_DECL,ANY,,,typedef ConstPtr SortItem;,22,misc\tensorflow\function.pb.cc,SortItem,,false,657,SortItem,2
269759,TYPE_DECL,ANY,,,typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;,78,misc\tensorflow\function.pb.cc,Less,,false,658,Less,3
269780,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::opencv_tensorflow::AttrValue >::size_type size_type;",102,misc\tensorflow\function.pb.cc,size_type,,false,673,size_type,3
270435,TYPE_DECL,,,,"class FunctionDef::_Internal {
 public:
  static const ::opencv_tensorflow::OpDef& signature(const FunctionDef* msg);
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow._Internal,,false,818,_Internal,50
271129,TYPE_DECL,,,,"class GradientDef::_Internal {
 public:
}",1,misc\tensorflow\function.pb.cc,opencv_tensorflow._Internal,,false,1052,_Internal,74
272091,TYPE_DECL,,misc\tensorflow\function.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\function.pb.hpp,misc\tensorflow\function.pb.hpp:<global>,,false,1,<global>,23
272096,TYPE_DECL,,,,class AnyMetadata,1,misc\tensorflow\function.pb.hpp,internal.AnyMetadata,,false,44,AnyMetadata,1
272098,TYPE_DECL,,,,"struct TableStruct_function_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\tensorflow\function.pb.hpp,TableStruct_function_2eproto,,false,49,TableStruct_function_2eproto,4
272124,TYPE_DECL,,,,class FunctionDef,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef,,false,62,FunctionDef,1
272125,TYPE_DECL,,,,struct FunctionDefDefaultTypeInternal,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefDefaultTypeInternal,,false,63,FunctionDefDefaultTypeInternal,2
272127,TYPE_DECL,,,,class FunctionDefLibrary,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefLibrary,,false,65,FunctionDefLibrary,4
272128,TYPE_DECL,,,,struct FunctionDefLibraryDefaultTypeInternal,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefLibraryDefaultTypeInternal,,false,66,FunctionDefLibraryDefaultTypeInternal,5
272130,TYPE_DECL,,,,class FunctionDef_Node,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node,,false,68,FunctionDef_Node,7
272131,TYPE_DECL,,,,struct FunctionDef_NodeDefaultTypeInternal,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_NodeDefaultTypeInternal,,false,69,FunctionDef_NodeDefaultTypeInternal,8
272133,TYPE_DECL,,,,class FunctionDef_Node_AttrEntry_DoNotUse,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node_AttrEntry_DoNotUse,,false,71,FunctionDef_Node_AttrEntry_DoNotUse,10
272134,TYPE_DECL,,,,struct FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal,,false,72,FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal,11
272136,TYPE_DECL,,,,class GradientDef,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.GradientDef,,false,74,GradientDef,13
272137,TYPE_DECL,,,,struct GradientDefDefaultTypeInternal,1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.GradientDefDefaultTypeInternal,,false,75,GradientDefDefaultTypeInternal,14
272167,TYPE_DECL,,,,"class FunctionDefLibrary final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.FunctionDefLibrary) */ {
 public:
  inline FunctionDefLibrary() : FunctionDefLibrary(nullptr) {}
  ~FunctionDefLibrary() override;
  explicit constexpr FunctionDefLibrary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FunctionDefLibrary(const FunctionDefLibrary& from);
  FunctionDefLibrary(FunctionDefLibrary&& from) noexcept
    : FunctionDefLibrary() {
    *this = ::std::move(from);
  }

  inline FunctionDefLibrary& operator=(const FunctionDefLibrary& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionDefLibrary& operator=(FunctionDefLibrary&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      C...",1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefLibrary,PROTOBUF_NAMESPACE_ID.Message,false,89,FunctionDefLibrary,1
272424,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefLibrary.AnyMetadata,,false,189,AnyMetadata,32
272456,TYPE_DECL,,,,"enum : int {
    kFunctionFieldNumber = 1,
    kGradientFieldNumber = 2,
  }",3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefLibrary.anonymous_enum_0,,false,210,anonymous_enum_0,40
272555,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefLibrary._Internal,,false,252,_Internal,61
272556,TYPE_DECL,opencv_tensorflow.FunctionDefLibrary.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefLibrary.InternalHelper,,false,254,InternalHelper,62
272557,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\function.pb.hpp,InternalArenaConstructable_,,false,255,InternalArenaConstructable_,63
272558,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\function.pb.hpp,DestructorSkippable_,,false,256,DestructorSkippable_,64
272562,TYPE_DECL,,,,friend struct ::TableStruct_function_2eproto,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDefLibrary.TableStruct_function_2eproto,,false,260,TableStruct_function_2eproto,68
272570,TYPE_DECL,,,,"class FunctionDef_Node_AttrEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<FunctionDef_Node_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<FunctionDef_Node_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  FunctionDef_Node_AttrEntry_DoNotUse();
  explicit constexpr FunctionDef_Node_AttrEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit FunctionDef_Node_AttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const FunctionDef_Node_AttrEntry_DoNotUse& other);
  static const FunctionDef_Node_AttrEntry_DoNotUse* internal_def...",1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node_AttrEntry_DoNotUse,"PROTOBUF_NAMESPACE_ID.internal.MapEntry<FunctionDef_Node_AttrEntry_DoNotUse, std.string, .opencv_tensorflow.AttrValue, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_STRING, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_MESSAGE>",false,264,FunctionDef_Node_AttrEntry_DoNotUse,2
272571,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<FunctionDef_Node_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;",70,misc\tensorflow\function.pb.hpp,SuperType,,false,272,SuperType,1
272639,TYPE_DECL,,,,"class FunctionDef_Node final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.FunctionDef.Node) */ {
 public:
  inline FunctionDef_Node() : FunctionDef_Node(nullptr) {}
  ~FunctionDef_Node() override;
  explicit constexpr FunctionDef_Node(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FunctionDef_Node(const FunctionDef_Node& from);
  FunctionDef_Node(FunctionDef_Node&& from) noexcept
    : FunctionDef_Node() {
    *this = ::std::move(from);
  }

  inline FunctionDef_Node& operator=(const FunctionDef_Node& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionDef_Node& operator=(FunctionDef_Node&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    retur...",1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node,PROTOBUF_NAMESPACE_ID.Message,false,289,FunctionDef_Node,3
272896,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node.AnyMetadata,,false,389,AnyMetadata,32
272928,TYPE_DECL,,,,"enum : int {
    kRetFieldNumber = 1,
    kArgFieldNumber = 3,
    kDepFieldNumber = 4,
    kAttrFieldNumber = 5,
    kOpFieldNumber = 2,
  }",3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node.anonymous_enum_1,,false,411,anonymous_enum_1,40
273252,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node._Internal,,false,523,_Internal,106
273253,TYPE_DECL,opencv_tensorflow.FunctionDef_Node.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node.InternalHelper,,false,525,InternalHelper,107
273254,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\function.pb.hpp,InternalArenaConstructable_,,false,526,InternalArenaConstructable_,108
273255,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\function.pb.hpp,DestructorSkippable_,,false,527,DestructorSkippable_,109
273262,TYPE_DECL,,,,friend struct ::TableStruct_function_2eproto,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef_Node.TableStruct_function_2eproto,,false,538,TableStruct_function_2eproto,116
273270,TYPE_DECL,,,,"class FunctionDef final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.FunctionDef) */ {
 public:
  inline FunctionDef() : FunctionDef(nullptr) {}
  ~FunctionDef() override;
  explicit constexpr FunctionDef(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FunctionDef(const FunctionDef& from);
  FunctionDef(FunctionDef&& from) noexcept
    : FunctionDef() {
    *this = ::std::move(from);
  }

  inline FunctionDef& operator=(const FunctionDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionDef& operator=(FunctionDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descripto...",1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef,PROTOBUF_NAMESPACE_ID.Message,false,542,FunctionDef,4
273527,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef.AnyMetadata,,false,642,AnyMetadata,32
273559,TYPE_DECL,ANY,,,typedef FunctionDef_Node Node;,28,misc\tensorflow\function.pb.hpp,Node,,false,661,Node,40
273560,TYPE_DECL,,,,"enum : int {
    kNodeFieldNumber = 2,
    kSignatureFieldNumber = 1,
  }",3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef.anonymous_enum_2,,false,665,anonymous_enum_2,41
273662,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef._Internal,,false,707,_Internal,63
273663,TYPE_DECL,opencv_tensorflow.FunctionDef.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef.InternalHelper,,false,709,InternalHelper,64
273664,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\function.pb.hpp,InternalArenaConstructable_,,false,710,InternalArenaConstructable_,65
273665,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\function.pb.hpp,DestructorSkippable_,,false,711,DestructorSkippable_,66
273669,TYPE_DECL,,,,friend struct ::TableStruct_function_2eproto,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.FunctionDef.TableStruct_function_2eproto,,false,715,TableStruct_function_2eproto,70
273677,TYPE_DECL,,,,"class GradientDef final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.GradientDef) */ {
 public:
  inline GradientDef() : GradientDef(nullptr) {}
  ~GradientDef() override;
  explicit constexpr GradientDef(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GradientDef(const GradientDef& from);
  GradientDef(GradientDef&& from) noexcept
    : GradientDef() {
    *this = ::std::move(from);
  }

  inline GradientDef& operator=(const GradientDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline GradientDef& operator=(GradientDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descripto...",1,misc\tensorflow\function.pb.hpp,opencv_tensorflow.GradientDef,PROTOBUF_NAMESPACE_ID.Message,false,719,GradientDef,5
273934,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.GradientDef.AnyMetadata,,false,819,AnyMetadata,32
273966,TYPE_DECL,,,,"enum : int {
    kFunctionNameFieldNumber = 1,
    kGradientFuncFieldNumber = 2,
  }",3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.GradientDef.anonymous_enum_3,,false,840,anonymous_enum_3,40
274053,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.GradientDef._Internal,,false,874,_Internal,61
274054,TYPE_DECL,opencv_tensorflow.GradientDef.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\function.pb.hpp,opencv_tensorflow.GradientDef.InternalHelper,,false,876,InternalHelper,62
274055,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\function.pb.hpp,InternalArenaConstructable_,,false,877,InternalArenaConstructable_,63
274056,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\function.pb.hpp,DestructorSkippable_,,false,878,DestructorSkippable_,64
274060,TYPE_DECL,,,,friend struct ::TableStruct_function_2eproto,3,misc\tensorflow\function.pb.hpp,opencv_tensorflow.GradientDef.TableStruct_function_2eproto,,false,882,TableStruct_function_2eproto,68
275551,TYPE_DECL,,misc\tensorflow\graph.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\graph.pb.cc,misc\tensorflow\graph.pb.cc:<global>,,false,1,<global>,12
275561,TYPE_DECL,,,,"struct GraphDefDefaultTypeInternal {
  constexpr GraphDefDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GraphDefDefaultTypeInternal() {}
  union {
    GraphDef _instance;
  };
}",1,misc\tensorflow\graph.pb.cc,opencv_tensorflow.GraphDefDefaultTypeInternal,,false,26,GraphDefDefaultTypeInternal,2
275570,TYPE_DECL,,,,"union {
    GraphDef _instance;
  }",3,misc\tensorflow\graph.pb.cc,opencv_tensorflow.GraphDefDefaultTypeInternal.anonymous_composite_type_0,,false,30,opencv_tensorflow.GraphDefDefaultTypeInternal.anonymous_composite_type_0,3
275579,TYPE_DECL,,,,"struct NodeDef_AttrEntry_DoNotUseDefaultTypeInternal {
  constexpr NodeDef_AttrEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NodeDef_AttrEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodeDef_AttrEntry_DoNotUse _instance;
  };
}",1,misc\tensorflow\graph.pb.cc,opencv_tensorflow.NodeDef_AttrEntry_DoNotUseDefaultTypeInternal,,false,37,NodeDef_AttrEntry_DoNotUseDefaultTypeInternal,6
275588,TYPE_DECL,,,,"union {
    NodeDef_AttrEntry_DoNotUse _instance;
  }",3,misc\tensorflow\graph.pb.cc,opencv_tensorflow.NodeDef_AttrEntry_DoNotUseDefaultTypeInternal.anonymous_composite_type_1,,false,41,opencv_tensorflow.NodeDef_AttrEntry_DoNotUseDefaultTypeInternal.anonymous_composite_type_1,3
275597,TYPE_DECL,,,,"struct NodeDefDefaultTypeInternal {
  constexpr NodeDefDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NodeDefDefaultTypeInternal() {}
  union {
    NodeDef _instance;
  };
}",1,misc\tensorflow\graph.pb.cc,opencv_tensorflow.NodeDefDefaultTypeInternal,,false,53,NodeDefDefaultTypeInternal,10
275606,TYPE_DECL,,,,"union {
    NodeDef _instance;
  }",3,misc\tensorflow\graph.pb.cc,opencv_tensorflow.NodeDefDefaultTypeInternal.anonymous_composite_type_2,,false,57,opencv_tensorflow.NodeDefDefaultTypeInternal.anonymous_composite_type_2,3
275699,TYPE_DECL,,,,"class GraphDef::_Internal {
 public:
  static const ::opencv_tensorflow::VersionDef& versions(const GraphDef* msg);
  static const ::opencv_tensorflow::FunctionDefLibrary& library(const GraphDef* msg);
}",1,misc\tensorflow\graph.pb.cc,opencv_tensorflow._Internal,,false,149,_Internal,1
276759,TYPE_DECL,,,,"class NodeDef::_Internal {
 public:
}",1,misc\tensorflow\graph.pb.cc,opencv_tensorflow._Internal,,false,476,_Internal,31
277707,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::opencv_tensorflow::AttrValue >::const_pointer
        ConstPtr;",9,misc\tensorflow\graph.pb.cc,ConstPtr,,false,719,ConstPtr,1
277708,TYPE_DECL,ANY,,,typedef ConstPtr SortItem;,22,misc\tensorflow\graph.pb.cc,SortItem,,false,720,SortItem,2
277709,TYPE_DECL,ANY,,,typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;,78,misc\tensorflow\graph.pb.cc,Less,,false,721,Less,3
277730,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::opencv_tensorflow::AttrValue >::size_type size_type;",102,misc\tensorflow\graph.pb.cc,size_type,,false,736,size_type,3
278482,TYPE_DECL,,misc\tensorflow\graph.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\graph.pb.hpp,misc\tensorflow\graph.pb.hpp:<global>,,false,1,<global>,24
278487,TYPE_DECL,,,,class AnyMetadata,1,misc\tensorflow\graph.pb.hpp,internal.AnyMetadata,,false,45,AnyMetadata,1
278489,TYPE_DECL,,,,"struct TableStruct_graph_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\tensorflow\graph.pb.hpp,TableStruct_graph_2eproto,,false,50,TableStruct_graph_2eproto,4
278515,TYPE_DECL,,,,class GraphDef,1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.GraphDef,,false,63,GraphDef,1
278516,TYPE_DECL,,,,struct GraphDefDefaultTypeInternal,1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.GraphDefDefaultTypeInternal,,false,64,GraphDefDefaultTypeInternal,2
278518,TYPE_DECL,,,,class NodeDef,1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef,,false,66,NodeDef,4
278519,TYPE_DECL,,,,struct NodeDefDefaultTypeInternal,1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDefDefaultTypeInternal,,false,67,NodeDefDefaultTypeInternal,5
278521,TYPE_DECL,,,,class NodeDef_AttrEntry_DoNotUse,1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef_AttrEntry_DoNotUse,,false,69,NodeDef_AttrEntry_DoNotUse,7
278522,TYPE_DECL,,,,struct NodeDef_AttrEntry_DoNotUseDefaultTypeInternal,1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef_AttrEntry_DoNotUseDefaultTypeInternal,,false,70,NodeDef_AttrEntry_DoNotUseDefaultTypeInternal,8
278542,TYPE_DECL,,,,"class GraphDef final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.GraphDef) */ {
 public:
  inline GraphDef() : GraphDef(nullptr) {}
  ~GraphDef() override;
  explicit constexpr GraphDef(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GraphDef(const GraphDef& from);
  GraphDef(GraphDef&& from) noexcept
    : GraphDef() {
    *this = ::std::move(from);
  }

  inline GraphDef& operator=(const GraphDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphDef& operator=(GraphDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  stati...",1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.GraphDef,PROTOBUF_NAMESPACE_ID.Message,false,82,GraphDef,1
278799,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.GraphDef.AnyMetadata,,false,182,AnyMetadata,32
278831,TYPE_DECL,,,,"enum : int {
    kNodeFieldNumber = 1,
    kLibraryFieldNumber = 2,
    kVersionsFieldNumber = 4,
    kVersionFieldNumber = 3,
  }",3,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.GraphDef.anonymous_enum_0,,false,203,anonymous_enum_0,40
279012,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.GraphDef._Internal,,false,274,_Internal,81
279013,TYPE_DECL,opencv_tensorflow.GraphDef.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.GraphDef.InternalHelper,,false,276,InternalHelper,82
279014,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\graph.pb.hpp,InternalArenaConstructable_,,false,277,InternalArenaConstructable_,83
279015,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\graph.pb.hpp,DestructorSkippable_,,false,278,DestructorSkippable_,84
279021,TYPE_DECL,,,,friend struct ::TableStruct_graph_2eproto,3,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.GraphDef.TableStruct_graph_2eproto,,false,284,TableStruct_graph_2eproto,90
279029,TYPE_DECL,,,,"class NodeDef_AttrEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<NodeDef_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<NodeDef_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  NodeDef_AttrEntry_DoNotUse();
  explicit constexpr NodeDef_AttrEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit NodeDef_AttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const NodeDef_AttrEntry_DoNotUse& other);
  static const NodeDef_AttrEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const NodeDef_AttrEntry_DoNotU...",1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef_AttrEntry_DoNotUse,"PROTOBUF_NAMESPACE_ID.internal.MapEntry<NodeDef_AttrEntry_DoNotUse, std.string, .opencv_tensorflow.AttrValue, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_STRING, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_MESSAGE>",false,288,NodeDef_AttrEntry_DoNotUse,2
279030,TYPE_DECL,ANY,,,"typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<NodeDef_AttrEntry_DoNotUse,
    std::string, ::opencv_tensorflow::AttrValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;",70,misc\tensorflow\graph.pb.hpp,SuperType,,false,296,SuperType,1
279098,TYPE_DECL,,,,"class NodeDef final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.NodeDef) */ {
 public:
  inline NodeDef() : NodeDef(nullptr) {}
  ~NodeDef() override;
  explicit constexpr NodeDef(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NodeDef(const NodeDef& from);
  NodeDef(NodeDef&& from) noexcept
    : NodeDef() {
    *this = ::std::move(from);
  }

  inline NodeDef& operator=(const NodeDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeDef& operator=(NodeDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTO...",1,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef,PROTOBUF_NAMESPACE_ID.Message,false,313,NodeDef,3
279355,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef.AnyMetadata,,false,413,AnyMetadata,32
279387,TYPE_DECL,,,,"enum : int {
    kInputFieldNumber = 3,
    kAttrFieldNumber = 5,
    kNameFieldNumber = 1,
    kOpFieldNumber = 2,
    kDeviceFieldNumber = 4,
  }",3,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef.anonymous_enum_1,,false,435,anonymous_enum_1,40
279629,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef._Internal,,false,527,_Internal,94
279630,TYPE_DECL,opencv_tensorflow.NodeDef.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef.InternalHelper,,false,529,InternalHelper,95
279631,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\graph.pb.hpp,InternalArenaConstructable_,,false,530,InternalArenaConstructable_,96
279632,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\graph.pb.hpp,DestructorSkippable_,,false,531,DestructorSkippable_,97
279639,TYPE_DECL,,,,friend struct ::TableStruct_graph_2eproto,3,misc\tensorflow\graph.pb.hpp,opencv_tensorflow.NodeDef.TableStruct_graph_2eproto,,false,542,TableStruct_graph_2eproto,104
280760,TYPE_DECL,,misc\tensorflow\op_def.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\op_def.pb.cc,misc\tensorflow\op_def.pb.cc:<global>,,false,1,<global>,12
280770,TYPE_DECL,,,,"struct OpDef_ArgDefDefaultTypeInternal {
  constexpr OpDef_ArgDefDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpDef_ArgDefDefaultTypeInternal() {}
  union {
    OpDef_ArgDef _instance;
  };
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpDef_ArgDefDefaultTypeInternal,,false,30,OpDef_ArgDefDefaultTypeInternal,2
280779,TYPE_DECL,,,,"union {
    OpDef_ArgDef _instance;
  }",3,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpDef_ArgDefDefaultTypeInternal.anonymous_composite_type_0,,false,34,opencv_tensorflow.OpDef_ArgDefDefaultTypeInternal.anonymous_composite_type_0,3
280788,TYPE_DECL,,,,"struct OpDef_AttrDefDefaultTypeInternal {
  constexpr OpDef_AttrDefDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpDef_AttrDefDefaultTypeInternal() {}
  union {
    OpDef_AttrDef _instance;
  };
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpDef_AttrDefDefaultTypeInternal,,false,48,OpDef_AttrDefDefaultTypeInternal,6
280797,TYPE_DECL,,,,"union {
    OpDef_AttrDef _instance;
  }",3,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpDef_AttrDefDefaultTypeInternal.anonymous_composite_type_1,,false,52,opencv_tensorflow.OpDef_AttrDefDefaultTypeInternal.anonymous_composite_type_1,3
280806,TYPE_DECL,,,,"struct OpDefDefaultTypeInternal {
  constexpr OpDefDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpDefDefaultTypeInternal() {}
  union {
    OpDef _instance;
  };
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpDefDefaultTypeInternal,,false,70,OpDefDefaultTypeInternal,10
280815,TYPE_DECL,,,,"union {
    OpDef _instance;
  }",3,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpDefDefaultTypeInternal.anonymous_composite_type_2,,false,74,opencv_tensorflow.OpDefDefaultTypeInternal.anonymous_composite_type_2,3
280824,TYPE_DECL,,,,"struct OpDeprecationDefaultTypeInternal {
  constexpr OpDeprecationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpDeprecationDefaultTypeInternal() {}
  union {
    OpDeprecation _instance;
  };
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpDeprecationDefaultTypeInternal,,false,83,OpDeprecationDefaultTypeInternal,14
280833,TYPE_DECL,,,,"union {
    OpDeprecation _instance;
  }",3,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpDeprecationDefaultTypeInternal.anonymous_composite_type_3,,false,87,opencv_tensorflow.OpDeprecationDefaultTypeInternal.anonymous_composite_type_3,3
280842,TYPE_DECL,,,,"struct OpListDefaultTypeInternal {
  constexpr OpListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpListDefaultTypeInternal() {}
  union {
    OpList _instance;
  };
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpListDefaultTypeInternal,,false,95,OpListDefaultTypeInternal,18
280851,TYPE_DECL,,,,"union {
    OpList _instance;
  }",3,misc\tensorflow\op_def.pb.cc,opencv_tensorflow.OpListDefaultTypeInternal.anonymous_composite_type_4,,false,99,opencv_tensorflow.OpListDefaultTypeInternal.anonymous_composite_type_4,3
280952,TYPE_DECL,,,,"class OpDef_ArgDef::_Internal {
 public:
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow._Internal,,false,233,_Internal,1
282783,TYPE_DECL,,,,"class OpDef_AttrDef::_Internal {
 public:
  static const ::opencv_tensorflow::AttrValue& default_value(const OpDef_AttrDef* msg);
  static const ::opencv_tensorflow::AttrValue& allowed_values(const OpDef_AttrDef* msg);
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow._Internal,,false,695,_Internal,23
284487,TYPE_DECL,,,,"class OpDef::_Internal {
 public:
  static const ::opencv_tensorflow::OpDeprecation& deprecation(const OpDef* msg);
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow._Internal,,false,1150,_Internal,49
286616,TYPE_DECL,,,,"class OpDeprecation::_Internal {
 public:
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow._Internal,,false,1695,_Internal,72
287341,TYPE_DECL,,,,"class OpList::_Internal {
 public:
}",1,misc\tensorflow\op_def.pb.cc,opencv_tensorflow._Internal,,false,1924,_Internal,94
287975,TYPE_DECL,,misc\tensorflow\op_def.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\op_def.pb.hpp,misc\tensorflow\op_def.pb.hpp:<global>,,false,1,<global>,20
287980,TYPE_DECL,,,,class AnyMetadata,1,misc\tensorflow\op_def.pb.hpp,internal.AnyMetadata,,false,41,AnyMetadata,1
287982,TYPE_DECL,,,,"struct TableStruct_op_5fdef_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\tensorflow\op_def.pb.hpp,TableStruct_op_5fdef_2eproto,,false,46,TableStruct_op_5fdef_2eproto,4
288008,TYPE_DECL,,,,class OpDef,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef,,false,59,OpDef,1
288009,TYPE_DECL,,,,struct OpDefDefaultTypeInternal,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDefDefaultTypeInternal,,false,60,OpDefDefaultTypeInternal,2
288011,TYPE_DECL,,,,class OpDef_ArgDef,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_ArgDef,,false,62,OpDef_ArgDef,4
288012,TYPE_DECL,,,,struct OpDef_ArgDefDefaultTypeInternal,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_ArgDefDefaultTypeInternal,,false,63,OpDef_ArgDefDefaultTypeInternal,5
288014,TYPE_DECL,,,,class OpDef_AttrDef,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_AttrDef,,false,65,OpDef_AttrDef,7
288015,TYPE_DECL,,,,struct OpDef_AttrDefDefaultTypeInternal,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_AttrDefDefaultTypeInternal,,false,66,OpDef_AttrDefDefaultTypeInternal,8
288017,TYPE_DECL,,,,class OpDeprecation,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDeprecation,,false,68,OpDeprecation,10
288018,TYPE_DECL,,,,struct OpDeprecationDefaultTypeInternal,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDeprecationDefaultTypeInternal,,false,69,OpDeprecationDefaultTypeInternal,11
288020,TYPE_DECL,,,,class OpList,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpList,,false,71,OpList,13
288021,TYPE_DECL,,,,struct OpListDefaultTypeInternal,1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpListDefaultTypeInternal,,false,72,OpListDefaultTypeInternal,14
288051,TYPE_DECL,,,,"class OpDef_ArgDef final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.OpDef.ArgDef) */ {
 public:
  inline OpDef_ArgDef() : OpDef_ArgDef(nullptr) {}
  ~OpDef_ArgDef() override;
  explicit constexpr OpDef_ArgDef(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpDef_ArgDef(const OpDef_ArgDef& from);
  OpDef_ArgDef(OpDef_ArgDef&& from) noexcept
    : OpDef_ArgDef() {
    *this = ::std::move(from);
  }

  inline OpDef_ArgDef& operator=(const OpDef_ArgDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpDef_ArgDef& operator=(OpDef_ArgDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descri...",1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_ArgDef,PROTOBUF_NAMESPACE_ID.Message,false,86,OpDef_ArgDef,1
288308,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_ArgDef.AnyMetadata,,false,186,AnyMetadata,32
288340,TYPE_DECL,,,,"enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kTypeAttrFieldNumber = 4,
    kNumberAttrFieldNumber = 5,
    kTypeListAttrFieldNumber = 6,
    kTypeFieldNumber = 3,
    kIsRefFieldNumber = 16,
  }",3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_ArgDef.anonymous_enum_0,,false,207,anonymous_enum_0,40
288602,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_ArgDef._Internal,,false,306,_Internal,101
288603,TYPE_DECL,opencv_tensorflow.OpDef_ArgDef.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_ArgDef.InternalHelper,,false,308,InternalHelper,102
288604,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\op_def.pb.hpp,InternalArenaConstructable_,,false,309,InternalArenaConstructable_,103
288605,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\op_def.pb.hpp,DestructorSkippable_,,false,310,DestructorSkippable_,104
288614,TYPE_DECL,,,,friend struct ::TableStruct_op_5fdef_2eproto,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_ArgDef.TableStruct_op_5fdef_2eproto,,false,319,TableStruct_op_5fdef_2eproto,113
288622,TYPE_DECL,,,,"class OpDef_AttrDef final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.OpDef.AttrDef) */ {
 public:
  inline OpDef_AttrDef() : OpDef_AttrDef(nullptr) {}
  ~OpDef_AttrDef() override;
  explicit constexpr OpDef_AttrDef(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpDef_AttrDef(const OpDef_AttrDef& from);
  OpDef_AttrDef(OpDef_AttrDef&& from) noexcept
    : OpDef_AttrDef() {
    *this = ::std::move(from);
  }

  inline OpDef_AttrDef& operator=(const OpDef_AttrDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpDef_AttrDef& operator=(OpDef_AttrDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMES...",1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_AttrDef,PROTOBUF_NAMESPACE_ID.Message,false,323,OpDef_AttrDef,2
288879,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_AttrDef.AnyMetadata,,false,423,AnyMetadata,32
288911,TYPE_DECL,,,,"enum : int {
    kNameFieldNumber = 1,
    kTypeFieldNumber = 2,
    kDescriptionFieldNumber = 4,
    kDefaultValueFieldNumber = 3,
    kAllowedValuesFieldNumber = 7,
    kMinimumFieldNumber = 6,
    kHasMinimumFieldNumber = 5,
  }",3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_AttrDef.anonymous_enum_1,,false,444,anonymous_enum_1,40
289191,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_AttrDef._Internal,,false,551,_Internal,103
289192,TYPE_DECL,opencv_tensorflow.OpDef_AttrDef.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_AttrDef.InternalHelper,,false,553,InternalHelper,104
289193,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\op_def.pb.hpp,InternalArenaConstructable_,,false,554,InternalArenaConstructable_,105
289194,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\op_def.pb.hpp,DestructorSkippable_,,false,555,DestructorSkippable_,106
289203,TYPE_DECL,,,,friend struct ::TableStruct_op_5fdef_2eproto,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef_AttrDef.TableStruct_op_5fdef_2eproto,,false,564,TableStruct_op_5fdef_2eproto,115
289211,TYPE_DECL,,,,"class OpDef final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.OpDef) */ {
 public:
  inline OpDef() : OpDef(nullptr) {}
  ~OpDef() override;
  explicit constexpr OpDef(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpDef(const OpDef& from);
  OpDef(OpDef&& from) noexcept
    : OpDef() {
    *this = ::std::move(from);
  }

  inline OpDef& operator=(const OpDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpDef& operator=(OpDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* ...",1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef,PROTOBUF_NAMESPACE_ID.Message,false,568,OpDef,3
289468,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef.AnyMetadata,,false,668,AnyMetadata,32
289500,TYPE_DECL,ANY,,,typedef OpDef_ArgDef ArgDef;,24,misc\tensorflow\op_def.pb.hpp,ArgDef,,false,687,ArgDef,40
289501,TYPE_DECL,ANY,,,typedef OpDef_AttrDef AttrDef;,25,misc\tensorflow\op_def.pb.hpp,AttrDef,,false,688,AttrDef,41
289502,TYPE_DECL,,,,"enum : int {
    kInputArgFieldNumber = 2,
    kOutputArgFieldNumber = 3,
    kAttrFieldNumber = 4,
    kNameFieldNumber = 1,
    kSummaryFieldNumber = 5,
    kDescriptionFieldNumber = 6,
    kDeprecationFieldNumber = 8,
    kIsCommutativeFieldNumber = 18,
    kIsAggregateFieldNumber = 16,
    kIsStatefulFieldNumber = 17,
    kAllowsUninitializedInputFieldNumber = 19,
  }",3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef.anonymous_enum_2,,false,692,anonymous_enum_2,42
289925,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef._Internal,,false,857,_Internal,134
289926,TYPE_DECL,opencv_tensorflow.OpDef.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef.InternalHelper,,false,859,InternalHelper,135
289927,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\op_def.pb.hpp,InternalArenaConstructable_,,false,860,InternalArenaConstructable_,136
289928,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\op_def.pb.hpp,DestructorSkippable_,,false,861,DestructorSkippable_,137
289941,TYPE_DECL,,,,friend struct ::TableStruct_op_5fdef_2eproto,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDef.TableStruct_op_5fdef_2eproto,,false,874,TableStruct_op_5fdef_2eproto,150
289949,TYPE_DECL,,,,"class OpDeprecation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.OpDeprecation) */ {
 public:
  inline OpDeprecation() : OpDeprecation(nullptr) {}
  ~OpDeprecation() override;
  explicit constexpr OpDeprecation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpDeprecation(const OpDeprecation& from);
  OpDeprecation(OpDeprecation&& from) noexcept
    : OpDeprecation() {
    *this = ::std::move(from);
  }

  inline OpDeprecation& operator=(const OpDeprecation& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpDeprecation& operator=(OpDeprecation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMES...",1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDeprecation,PROTOBUF_NAMESPACE_ID.Message,false,878,OpDeprecation,4
290206,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDeprecation.AnyMetadata,,false,978,AnyMetadata,32
290238,TYPE_DECL,,,,"enum : int {
    kExplanationFieldNumber = 2,
    kVersionFieldNumber = 1,
  }",3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDeprecation.anonymous_enum_3,,false,999,anonymous_enum_3,40
290310,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDeprecation._Internal,,false,1028,_Internal,56
290311,TYPE_DECL,opencv_tensorflow.OpDeprecation.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDeprecation.InternalHelper,,false,1030,InternalHelper,57
290312,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\op_def.pb.hpp,InternalArenaConstructable_,,false,1031,InternalArenaConstructable_,58
290313,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\op_def.pb.hpp,DestructorSkippable_,,false,1032,DestructorSkippable_,59
290317,TYPE_DECL,,,,friend struct ::TableStruct_op_5fdef_2eproto,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpDeprecation.TableStruct_op_5fdef_2eproto,,false,1036,TableStruct_op_5fdef_2eproto,63
290325,TYPE_DECL,,,,"class OpList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.OpList) */ {
 public:
  inline OpList() : OpList(nullptr) {}
  ~OpList() override;
  explicit constexpr OpList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpList(const OpList& from);
  OpList(OpList&& from) noexcept
    : OpList() {
    *this = ::std::move(from);
  }

  inline OpList& operator=(const OpList& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpList& operator=(OpList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_I...",1,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpList,PROTOBUF_NAMESPACE_ID.Message,false,1040,OpList,5
290582,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpList.AnyMetadata,,false,1140,AnyMetadata,32
290614,TYPE_DECL,,,,"enum : int {
    kOpFieldNumber = 1,
  }",3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpList.anonymous_enum_4,,false,1161,anonymous_enum_4,40
290666,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpList._Internal,,false,1184,_Internal,51
290667,TYPE_DECL,opencv_tensorflow.OpList.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpList.InternalHelper,,false,1186,InternalHelper,52
290668,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\op_def.pb.hpp,InternalArenaConstructable_,,false,1187,InternalArenaConstructable_,53
290669,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\op_def.pb.hpp,DestructorSkippable_,,false,1188,DestructorSkippable_,54
290672,TYPE_DECL,,,,friend struct ::TableStruct_op_5fdef_2eproto,3,misc\tensorflow\op_def.pb.hpp,opencv_tensorflow.OpList.TableStruct_op_5fdef_2eproto,,false,1191,TableStruct_op_5fdef_2eproto,57
293186,TYPE_DECL,,misc\tensorflow\tensor.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\tensor.pb.cc,misc\tensorflow\tensor.pb.cc:<global>,,false,1,<global>,12
293196,TYPE_DECL,,,,"struct TensorProtoDefaultTypeInternal {
  constexpr TensorProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TensorProtoDefaultTypeInternal() {}
  union {
    TensorProto _instance;
  };
}",1,misc\tensorflow\tensor.pb.cc,opencv_tensorflow.TensorProtoDefaultTypeInternal,,false,39,TensorProtoDefaultTypeInternal,2
293205,TYPE_DECL,,,,"union {
    TensorProto _instance;
  }",3,misc\tensorflow\tensor.pb.cc,opencv_tensorflow.TensorProtoDefaultTypeInternal.anonymous_composite_type_0,,false,43,opencv_tensorflow.TensorProtoDefaultTypeInternal.anonymous_composite_type_0,3
293282,TYPE_DECL,,,,"class TensorProto::_Internal {
 public:
  static const ::opencv_tensorflow::TensorShapeProto& tensor_shape(const TensorProto* msg);
}",1,misc\tensorflow\tensor.pb.cc,opencv_tensorflow._Internal,,false,118,_Internal,1
295694,TYPE_DECL,,misc\tensorflow\tensor.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\tensor.pb.hpp,misc\tensorflow\tensor.pb.hpp:<global>,,false,1,<global>,20
295699,TYPE_DECL,,,,class AnyMetadata,1,misc\tensorflow\tensor.pb.hpp,internal.AnyMetadata,,false,41,AnyMetadata,1
295701,TYPE_DECL,,,,"struct TableStruct_tensor_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\tensorflow\tensor.pb.hpp,TableStruct_tensor_2eproto,,false,46,TableStruct_tensor_2eproto,4
295727,TYPE_DECL,,,,class TensorProto,1,misc\tensorflow\tensor.pb.hpp,opencv_tensorflow.TensorProto,,false,59,TensorProto,1
295728,TYPE_DECL,,,,struct TensorProtoDefaultTypeInternal,1,misc\tensorflow\tensor.pb.hpp,opencv_tensorflow.TensorProtoDefaultTypeInternal,,false,60,TensorProtoDefaultTypeInternal,2
295738,TYPE_DECL,,,,"class TensorProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.TensorProto) */ {
 public:
  inline TensorProto() : TensorProto(nullptr) {}
  ~TensorProto() override;
  explicit constexpr TensorProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TensorProto(const TensorProto& from);
  TensorProto(TensorProto&& from) noexcept
    : TensorProto() {
    *this = ::std::move(from);
  }

  inline TensorProto& operator=(const TensorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorProto& operator=(TensorProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descripto...",1,misc\tensorflow\tensor.pb.hpp,opencv_tensorflow.TensorProto,PROTOBUF_NAMESPACE_ID.Message,false,70,TensorProto,1
295995,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\tensor.pb.hpp,opencv_tensorflow.TensorProto.AnyMetadata,,false,170,AnyMetadata,32
296027,TYPE_DECL,,,,"enum : int {
    kFloatValFieldNumber = 5,
    kDoubleValFieldNumber = 6,
    kIntValFieldNumber = 7,
    kStringValFieldNumber = 8,
    kScomplexValFieldNumber = 9,
    kInt64ValFieldNumber = 10,
    kBoolValFieldNumber = 11,
    kDcomplexValFieldNumber = 12,
    kHalfValFieldNumber = 13,
    kTensorContentFieldNumber = 4,
    kTensorShapeFieldNumber = 2,
    kDtypeFieldNumber = 1,
    kVersionNumberFieldNumber = 3,
  }",3,misc\tensorflow\tensor.pb.hpp,opencv_tensorflow.TensorProto.anonymous_enum_0,,false,191,anonymous_enum_0,40
296721,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\tensor.pb.hpp,opencv_tensorflow.TensorProto._Internal,,false,458,_Internal,184
296722,TYPE_DECL,opencv_tensorflow.TensorProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\tensor.pb.hpp,opencv_tensorflow.TensorProto.InternalHelper,,false,460,InternalHelper,185
296723,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\tensor.pb.hpp,InternalArenaConstructable_,,false,461,InternalArenaConstructable_,186
296724,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\tensor.pb.hpp,DestructorSkippable_,,false,462,DestructorSkippable_,187
296742,TYPE_DECL,,,,friend struct ::TableStruct_tensor_2eproto,3,misc\tensorflow\tensor.pb.hpp,opencv_tensorflow.TensorProto.TableStruct_tensor_2eproto,,false,480,TableStruct_tensor_2eproto,205
298133,TYPE_DECL,,misc\tensorflow\tensor_shape.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\tensor_shape.pb.cc,misc\tensorflow\tensor_shape.pb.cc:<global>,,false,1,<global>,12
298143,TYPE_DECL,,,,"struct TensorShapeProto_DimDefaultTypeInternal {
  constexpr TensorShapeProto_DimDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TensorShapeProto_DimDefaultTypeInternal() {}
  union {
    TensorShapeProto_Dim _instance;
  };
}",1,misc\tensorflow\tensor_shape.pb.cc,opencv_tensorflow.TensorShapeProto_DimDefaultTypeInternal,,false,24,TensorShapeProto_DimDefaultTypeInternal,2
298152,TYPE_DECL,,,,"union {
    TensorShapeProto_Dim _instance;
  }",3,misc\tensorflow\tensor_shape.pb.cc,opencv_tensorflow.TensorShapeProto_DimDefaultTypeInternal.anonymous_composite_type_0,,false,28,opencv_tensorflow.TensorShapeProto_DimDefaultTypeInternal.anonymous_composite_type_0,3
298161,TYPE_DECL,,,,"struct TensorShapeProtoDefaultTypeInternal {
  constexpr TensorShapeProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TensorShapeProtoDefaultTypeInternal() {}
  union {
    TensorShapeProto _instance;
  };
}",1,misc\tensorflow\tensor_shape.pb.cc,opencv_tensorflow.TensorShapeProtoDefaultTypeInternal,,false,37,TensorShapeProtoDefaultTypeInternal,6
298170,TYPE_DECL,,,,"union {
    TensorShapeProto _instance;
  }",3,misc\tensorflow\tensor_shape.pb.cc,opencv_tensorflow.TensorShapeProtoDefaultTypeInternal.anonymous_composite_type_1,,false,41,opencv_tensorflow.TensorShapeProtoDefaultTypeInternal.anonymous_composite_type_1,3
298241,TYPE_DECL,,,,"class TensorShapeProto_Dim::_Internal {
 public:
}",1,misc\tensorflow\tensor_shape.pb.cc,opencv_tensorflow._Internal,,false,104,_Internal,1
298970,TYPE_DECL,,,,"class TensorShapeProto::_Internal {
 public:
}",1,misc\tensorflow\tensor_shape.pb.cc,opencv_tensorflow._Internal,,false,333,_Internal,23
299661,TYPE_DECL,,misc\tensorflow\tensor_shape.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\tensor_shape.pb.hpp,misc\tensorflow\tensor_shape.pb.hpp:<global>,,false,1,<global>,18
299666,TYPE_DECL,,,,class AnyMetadata,1,misc\tensorflow\tensor_shape.pb.hpp,internal.AnyMetadata,,false,39,AnyMetadata,1
299668,TYPE_DECL,,,,"struct TableStruct_tensor_5fshape_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\tensorflow\tensor_shape.pb.hpp,TableStruct_tensor_5fshape_2eproto,,false,44,TableStruct_tensor_5fshape_2eproto,4
299694,TYPE_DECL,,,,class TensorShapeProto,1,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto,,false,57,TensorShapeProto,1
299695,TYPE_DECL,,,,struct TensorShapeProtoDefaultTypeInternal,1,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProtoDefaultTypeInternal,,false,58,TensorShapeProtoDefaultTypeInternal,2
299697,TYPE_DECL,,,,class TensorShapeProto_Dim,1,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto_Dim,,false,60,TensorShapeProto_Dim,4
299698,TYPE_DECL,,,,struct TensorShapeProto_DimDefaultTypeInternal,1,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto_DimDefaultTypeInternal,,false,61,TensorShapeProto_DimDefaultTypeInternal,5
299713,TYPE_DECL,,,,"class TensorShapeProto_Dim final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.TensorShapeProto.Dim) */ {
 public:
  inline TensorShapeProto_Dim() : TensorShapeProto_Dim(nullptr) {}
  ~TensorShapeProto_Dim() override;
  explicit constexpr TensorShapeProto_Dim(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TensorShapeProto_Dim(const TensorShapeProto_Dim& from);
  TensorShapeProto_Dim(TensorShapeProto_Dim&& from) noexcept
    : TensorShapeProto_Dim() {
    *this = ::std::move(from);
  }

  inline TensorShapeProto_Dim& operator=(const TensorShapeProto_Dim& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorShapeProto_Dim& operator=(TensorShapeProto_Dim&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwa...",1,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto_Dim,PROTOBUF_NAMESPACE_ID.Message,false,72,TensorShapeProto_Dim,1
299970,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto_Dim.AnyMetadata,,false,172,AnyMetadata,32
300002,TYPE_DECL,,,,"enum : int {
    kNameFieldNumber = 2,
    kSizeFieldNumber = 1,
  }",3,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto_Dim.anonymous_enum_0,,false,193,anonymous_enum_0,40
300074,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto_Dim._Internal,,false,222,_Internal,56
300075,TYPE_DECL,opencv_tensorflow.TensorShapeProto_Dim.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto_Dim.InternalHelper,,false,224,InternalHelper,57
300076,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\tensor_shape.pb.hpp,InternalArenaConstructable_,,false,225,InternalArenaConstructable_,58
300077,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\tensor_shape.pb.hpp,DestructorSkippable_,,false,226,DestructorSkippable_,59
300081,TYPE_DECL,,,,friend struct ::TableStruct_tensor_5fshape_2eproto,3,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto_Dim.TableStruct_tensor_5fshape_2eproto,,false,230,TableStruct_tensor_5fshape_2eproto,63
300089,TYPE_DECL,,,,"class TensorShapeProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.TensorShapeProto) */ {
 public:
  inline TensorShapeProto() : TensorShapeProto(nullptr) {}
  ~TensorShapeProto() override;
  explicit constexpr TensorShapeProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TensorShapeProto(const TensorShapeProto& from);
  TensorShapeProto(TensorShapeProto&& from) noexcept
    : TensorShapeProto() {
    *this = ::std::move(from);
  }

  inline TensorShapeProto& operator=(const TensorShapeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorShapeProto& operator=(TensorShapeProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    retur...",1,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto,PROTOBUF_NAMESPACE_ID.Message,false,234,TensorShapeProto,2
300346,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto.AnyMetadata,,false,334,AnyMetadata,32
300378,TYPE_DECL,ANY,,,typedef TensorShapeProto_Dim Dim;,32,misc\tensorflow\tensor_shape.pb.hpp,Dim,,false,353,Dim,40
300379,TYPE_DECL,,,,"enum : int {
    kDimFieldNumber = 2,
    kUnknownRankFieldNumber = 3,
  }",3,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto.anonymous_enum_1,,false,357,anonymous_enum_1,41
300457,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto._Internal,,false,390,_Internal,57
300458,TYPE_DECL,opencv_tensorflow.TensorShapeProto.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto.InternalHelper,,false,392,InternalHelper,58
300459,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\tensor_shape.pb.hpp,InternalArenaConstructable_,,false,393,InternalArenaConstructable_,59
300460,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\tensor_shape.pb.hpp,DestructorSkippable_,,false,394,DestructorSkippable_,60
300464,TYPE_DECL,,,,friend struct ::TableStruct_tensor_5fshape_2eproto,3,misc\tensorflow\tensor_shape.pb.hpp,opencv_tensorflow.TensorShapeProto.TableStruct_tensor_5fshape_2eproto,,false,398,TableStruct_tensor_5fshape_2eproto,64
300752,TYPE_DECL,,misc\tensorflow\types.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\types.pb.cc,misc\tensorflow\types.pb.cc:<global>,,false,1,<global>,12
300956,TYPE_DECL,,misc\tensorflow\types.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\types.pb.hpp,misc\tensorflow\types.pb.hpp:<global>,,false,1,<global>,17
300961,TYPE_DECL,,,,class AnyMetadata,1,misc\tensorflow\types.pb.hpp,internal.AnyMetadata,,false,38,AnyMetadata,1
300963,TYPE_DECL,,,,"struct TableStruct_types_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\tensorflow\types.pb.hpp,TableStruct_types_2eproto,,false,43,TableStruct_types_2eproto,4
300991,TYPE_DECL,,,,"enum DataType : int {
  DT_INVALID = 0,
  DT_FLOAT = 1,
  DT_DOUBLE = 2,
  DT_INT32 = 3,
  DT_UINT8 = 4,
  DT_INT16 = 5,
  DT_INT8 = 6,
  DT_STRING = 7,
  DT_COMPLEX64 = 8,
  DT_INT64 = 9,
  DT_BOOL = 10,
  DT_QINT8 = 11,
  DT_QUINT8 = 12,
  DT_QINT32 = 13,
  DT_BFLOAT16 = 14,
  DT_QINT16 = 15,
  DT_QUINT16 = 16,
  DT_UINT16 = 17,
  DT_COMPLEX128 = 18,
  DT_HALF = 19,
  DT_FLOAT_REF = 101,
  DT_DOUBLE_REF = 102,
  DT_INT32_REF = 103,
  DT_UINT8_REF = 104,
  DT_INT16_REF = 105,
  DT_INT8_REF = 106,
  DT_STRING_REF = 107,
  DT_COMPLEX64_REF = 108,
  DT_INT64_REF = 109,
  DT_BOOL_REF = 110,
  DT_QINT8_REF = 111,
  DT_QUINT8_REF = 112,
  DT_QINT32_REF = 113,
  DT_BFLOAT16_REF = 114,
  DT_QINT16_REF = 115,
  DT_QUINT16_REF = 116,
  DT_UINT16_REF = 117,
  DT_COMPLEX128_REF = 118,
  DT_HALF_REF = 119,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
}",1,misc\tensorflow\types.pb.hpp,opencv_tensorflow.DataType,,false,59,DataType,1
301253,TYPE_DECL,is_proto_enum<opencv_tensorflow.DataType><>,,,struct is_proto_enum< ::opencv_tensorflow::DataType> : ::std::true_type {},13,misc\tensorflow\types.pb.hpp,is_proto_enum<opencv_tensorflow.DataType>,std.true_type,false,143,is_proto_enum<opencv_tensorflow::DataType>,10
301288,TYPE_DECL,,misc\tensorflow\versions.pb.cc:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\versions.pb.cc,misc\tensorflow\versions.pb.cc:<global>,,false,1,<global>,12
301298,TYPE_DECL,,,,"struct VersionDefDefaultTypeInternal {
  constexpr VersionDefDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VersionDefDefaultTypeInternal() {}
  union {
    VersionDef _instance;
  };
}",1,misc\tensorflow\versions.pb.cc,opencv_tensorflow.VersionDefDefaultTypeInternal,,false,26,VersionDefDefaultTypeInternal,2
301307,TYPE_DECL,,,,"union {
    VersionDef _instance;
  }",3,misc\tensorflow\versions.pb.cc,opencv_tensorflow.VersionDefDefaultTypeInternal.anonymous_composite_type_0,,false,30,opencv_tensorflow.VersionDefDefaultTypeInternal.anonymous_composite_type_0,3
301372,TYPE_DECL,,,,"class VersionDef::_Internal {
 public:
}",1,misc\tensorflow\versions.pb.cc,opencv_tensorflow._Internal,,false,83,_Internal,1
302264,TYPE_DECL,,misc\tensorflow\versions.pb.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tensorflow\versions.pb.hpp,misc\tensorflow\versions.pb.hpp:<global>,,false,1,<global>,18
302269,TYPE_DECL,,,,class AnyMetadata,1,misc\tensorflow\versions.pb.hpp,internal.AnyMetadata,,false,39,AnyMetadata,1
302271,TYPE_DECL,,,,"struct TableStruct_versions_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
}",1,misc\tensorflow\versions.pb.hpp,TableStruct_versions_2eproto,,false,44,TableStruct_versions_2eproto,4
302297,TYPE_DECL,,,,class VersionDef,1,misc\tensorflow\versions.pb.hpp,opencv_tensorflow.VersionDef,,false,57,VersionDef,1
302298,TYPE_DECL,,,,struct VersionDefDefaultTypeInternal,1,misc\tensorflow\versions.pb.hpp,opencv_tensorflow.VersionDefDefaultTypeInternal,,false,58,VersionDefDefaultTypeInternal,2
302308,TYPE_DECL,,,,"class VersionDef final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opencv_tensorflow.VersionDef) */ {
 public:
  inline VersionDef() : VersionDef(nullptr) {}
  ~VersionDef() override;
  explicit constexpr VersionDef(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VersionDef(const VersionDef& from);
  VersionDef(VersionDef&& from) noexcept
    : VersionDef() {
    *this = ::std::move(from);
  }

  inline VersionDef& operator=(const VersionDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline VersionDef& operator=(VersionDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    retur...",1,misc\tensorflow\versions.pb.hpp,opencv_tensorflow.VersionDef,PROTOBUF_NAMESPACE_ID.Message,false,68,VersionDef,1
302565,TYPE_DECL,,,,friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata,3,misc\tensorflow\versions.pb.hpp,opencv_tensorflow.VersionDef.AnyMetadata,,false,168,AnyMetadata,32
302597,TYPE_DECL,,,,"enum : int {
    kBadConsumersFieldNumber = 3,
    kProducerFieldNumber = 1,
    kMinConsumerFieldNumber = 2,
  }",3,misc\tensorflow\versions.pb.hpp,opencv_tensorflow.VersionDef.anonymous_enum_0,,false,189,anonymous_enum_0,40
302712,TYPE_DECL,,,,class _Internal,3,misc\tensorflow\versions.pb.hpp,opencv_tensorflow.VersionDef._Internal,,false,236,_Internal,63
302713,TYPE_DECL,opencv_tensorflow.VersionDef.InternalHelper<T>,,,friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper,25,misc\tensorflow\versions.pb.hpp,opencv_tensorflow.VersionDef.InternalHelper,,false,238,InternalHelper,64
302714,TYPE_DECL,void,,,typedef void InternalArenaConstructable_;,16,misc\tensorflow\versions.pb.hpp,InternalArenaConstructable_,,false,239,InternalArenaConstructable_,65
302715,TYPE_DECL,void,,,typedef void DestructorSkippable_;,16,misc\tensorflow\versions.pb.hpp,DestructorSkippable_,,false,240,DestructorSkippable_,66
302721,TYPE_DECL,,,,friend struct ::TableStruct_versions_2eproto,3,misc\tensorflow\versions.pb.hpp,opencv_tensorflow.VersionDef.TableStruct_versions_2eproto,,false,246,TableStruct_versions_2eproto,72
302897,TYPE_DECL,,misc\tflite\schema_generated.hpp:<global>,NAMESPACE_BLOCK,<global>,1,misc\tflite\schema_generated.hpp,misc\tflite\schema_generated.hpp:<global>,,false,1,<global>,2
302914,TYPE_DECL,,,,struct CustomQuantization,1,misc\tflite\schema_generated.hpp,opencv_tflite.CustomQuantization,,false,18,CustomQuantization,1
302915,TYPE_DECL,,,,struct CustomQuantizationBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.CustomQuantizationBuilder,,false,19,CustomQuantizationBuilder,2
302916,TYPE_DECL,,,,struct QuantizationParameters,1,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizationParameters,,false,21,QuantizationParameters,3
302917,TYPE_DECL,,,,struct QuantizationParametersBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizationParametersBuilder,,false,22,QuantizationParametersBuilder,4
302918,TYPE_DECL,,,,struct Int32Vector,1,misc\tflite\schema_generated.hpp,opencv_tflite.Int32Vector,,false,24,Int32Vector,5
302919,TYPE_DECL,,,,struct Int32VectorBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.Int32VectorBuilder,,false,25,Int32VectorBuilder,6
302920,TYPE_DECL,,,,struct Uint16Vector,1,misc\tflite\schema_generated.hpp,opencv_tflite.Uint16Vector,,false,27,Uint16Vector,7
302921,TYPE_DECL,,,,struct Uint16VectorBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.Uint16VectorBuilder,,false,28,Uint16VectorBuilder,8
302922,TYPE_DECL,,,,struct Uint8Vector,1,misc\tflite\schema_generated.hpp,opencv_tflite.Uint8Vector,,false,30,Uint8Vector,9
302923,TYPE_DECL,,,,struct Uint8VectorBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.Uint8VectorBuilder,,false,31,Uint8VectorBuilder,10
302924,TYPE_DECL,,,,struct DimensionMetadata,1,misc\tflite\schema_generated.hpp,opencv_tflite.DimensionMetadata,,false,33,DimensionMetadata,11
302925,TYPE_DECL,,,,struct DimensionMetadataBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.DimensionMetadataBuilder,,false,34,DimensionMetadataBuilder,12
302926,TYPE_DECL,,,,struct SparsityParameters,1,misc\tflite\schema_generated.hpp,opencv_tflite.SparsityParameters,,false,36,SparsityParameters,13
302927,TYPE_DECL,,,,struct SparsityParametersBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SparsityParametersBuilder,,false,37,SparsityParametersBuilder,14
302928,TYPE_DECL,,,,struct VariantSubType,1,misc\tflite\schema_generated.hpp,opencv_tflite.VariantSubType,,false,39,VariantSubType,15
302929,TYPE_DECL,,,,struct VariantSubTypeBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.VariantSubTypeBuilder,,false,40,VariantSubTypeBuilder,16
302930,TYPE_DECL,,,,struct Tensor,1,misc\tflite\schema_generated.hpp,opencv_tflite.Tensor,,false,42,Tensor,17
302931,TYPE_DECL,,,,struct TensorBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.TensorBuilder,,false,43,TensorBuilder,18
302932,TYPE_DECL,,,,struct Conv2DOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.Conv2DOptions,,false,45,Conv2DOptions,19
302933,TYPE_DECL,,,,struct Conv2DOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.Conv2DOptionsBuilder,,false,46,Conv2DOptionsBuilder,20
302934,TYPE_DECL,,,,struct Conv3DOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.Conv3DOptions,,false,48,Conv3DOptions,21
302935,TYPE_DECL,,,,struct Conv3DOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.Conv3DOptionsBuilder,,false,49,Conv3DOptionsBuilder,22
302936,TYPE_DECL,,,,struct Pool2DOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.Pool2DOptions,,false,51,Pool2DOptions,23
302937,TYPE_DECL,,,,struct Pool2DOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.Pool2DOptionsBuilder,,false,52,Pool2DOptionsBuilder,24
302938,TYPE_DECL,,,,struct DepthwiseConv2DOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.DepthwiseConv2DOptions,,false,54,DepthwiseConv2DOptions,25
302939,TYPE_DECL,,,,struct DepthwiseConv2DOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.DepthwiseConv2DOptionsBuilder,,false,55,DepthwiseConv2DOptionsBuilder,26
302940,TYPE_DECL,,,,struct ConcatEmbeddingsOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ConcatEmbeddingsOptions,,false,57,ConcatEmbeddingsOptions,27
302941,TYPE_DECL,,,,struct ConcatEmbeddingsOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ConcatEmbeddingsOptionsBuilder,,false,58,ConcatEmbeddingsOptionsBuilder,28
302942,TYPE_DECL,,,,struct LSHProjectionOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LSHProjectionOptions,,false,60,LSHProjectionOptions,29
302943,TYPE_DECL,,,,struct LSHProjectionOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LSHProjectionOptionsBuilder,,false,61,LSHProjectionOptionsBuilder,30
302944,TYPE_DECL,,,,struct SVDFOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SVDFOptions,,false,63,SVDFOptions,31
302945,TYPE_DECL,,,,struct SVDFOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SVDFOptionsBuilder,,false,64,SVDFOptionsBuilder,32
302946,TYPE_DECL,,,,struct RNNOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.RNNOptions,,false,66,RNNOptions,33
302947,TYPE_DECL,,,,struct RNNOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.RNNOptionsBuilder,,false,67,RNNOptionsBuilder,34
302948,TYPE_DECL,,,,struct SequenceRNNOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SequenceRNNOptions,,false,69,SequenceRNNOptions,35
302949,TYPE_DECL,,,,struct SequenceRNNOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SequenceRNNOptionsBuilder,,false,70,SequenceRNNOptionsBuilder,36
302950,TYPE_DECL,,,,struct BidirectionalSequenceRNNOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.BidirectionalSequenceRNNOptions,,false,72,BidirectionalSequenceRNNOptions,37
302951,TYPE_DECL,,,,struct BidirectionalSequenceRNNOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.BidirectionalSequenceRNNOptionsBuilder,,false,73,BidirectionalSequenceRNNOptionsBuilder,38
302952,TYPE_DECL,,,,struct FullyConnectedOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.FullyConnectedOptions,,false,75,FullyConnectedOptions,39
302953,TYPE_DECL,,,,struct FullyConnectedOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.FullyConnectedOptionsBuilder,,false,76,FullyConnectedOptionsBuilder,40
302954,TYPE_DECL,,,,struct SoftmaxOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SoftmaxOptions,,false,78,SoftmaxOptions,41
302955,TYPE_DECL,,,,struct SoftmaxOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SoftmaxOptionsBuilder,,false,79,SoftmaxOptionsBuilder,42
302956,TYPE_DECL,,,,struct ConcatenationOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ConcatenationOptions,,false,81,ConcatenationOptions,43
302957,TYPE_DECL,,,,struct ConcatenationOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ConcatenationOptionsBuilder,,false,82,ConcatenationOptionsBuilder,44
302958,TYPE_DECL,,,,struct AddOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.AddOptions,,false,84,AddOptions,45
302959,TYPE_DECL,,,,struct AddOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.AddOptionsBuilder,,false,85,AddOptionsBuilder,46
302960,TYPE_DECL,,,,struct MulOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.MulOptions,,false,87,MulOptions,47
302961,TYPE_DECL,,,,struct MulOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.MulOptionsBuilder,,false,88,MulOptionsBuilder,48
302962,TYPE_DECL,,,,struct L2NormOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.L2NormOptions,,false,90,L2NormOptions,49
302963,TYPE_DECL,,,,struct L2NormOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.L2NormOptionsBuilder,,false,91,L2NormOptionsBuilder,50
302964,TYPE_DECL,,,,struct LocalResponseNormalizationOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LocalResponseNormalizationOptions,,false,93,LocalResponseNormalizationOptions,51
302965,TYPE_DECL,,,,struct LocalResponseNormalizationOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LocalResponseNormalizationOptionsBuilder,,false,94,LocalResponseNormalizationOptionsBuilder,52
302966,TYPE_DECL,,,,struct LSTMOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LSTMOptions,,false,96,LSTMOptions,53
302967,TYPE_DECL,,,,struct LSTMOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LSTMOptionsBuilder,,false,97,LSTMOptionsBuilder,54
302968,TYPE_DECL,,,,struct UnidirectionalSequenceLSTMOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnidirectionalSequenceLSTMOptions,,false,99,UnidirectionalSequenceLSTMOptions,55
302969,TYPE_DECL,,,,struct UnidirectionalSequenceLSTMOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnidirectionalSequenceLSTMOptionsBuilder,,false,100,UnidirectionalSequenceLSTMOptionsBuilder,56
302970,TYPE_DECL,,,,struct BidirectionalSequenceLSTMOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.BidirectionalSequenceLSTMOptions,,false,102,BidirectionalSequenceLSTMOptions,57
302971,TYPE_DECL,,,,struct BidirectionalSequenceLSTMOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.BidirectionalSequenceLSTMOptionsBuilder,,false,103,BidirectionalSequenceLSTMOptionsBuilder,58
302972,TYPE_DECL,,,,struct ResizeBilinearOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ResizeBilinearOptions,,false,105,ResizeBilinearOptions,59
302973,TYPE_DECL,,,,struct ResizeBilinearOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ResizeBilinearOptionsBuilder,,false,106,ResizeBilinearOptionsBuilder,60
302974,TYPE_DECL,,,,struct ResizeNearestNeighborOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ResizeNearestNeighborOptions,,false,108,ResizeNearestNeighborOptions,61
302975,TYPE_DECL,,,,struct ResizeNearestNeighborOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ResizeNearestNeighborOptionsBuilder,,false,109,ResizeNearestNeighborOptionsBuilder,62
302976,TYPE_DECL,,,,struct CallOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.CallOptions,,false,111,CallOptions,63
302977,TYPE_DECL,,,,struct CallOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.CallOptionsBuilder,,false,112,CallOptionsBuilder,64
302978,TYPE_DECL,,,,struct PadOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.PadOptions,,false,114,PadOptions,65
302979,TYPE_DECL,,,,struct PadOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.PadOptionsBuilder,,false,115,PadOptionsBuilder,66
302980,TYPE_DECL,,,,struct PadV2Options,1,misc\tflite\schema_generated.hpp,opencv_tflite.PadV2Options,,false,117,PadV2Options,67
302981,TYPE_DECL,,,,struct PadV2OptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.PadV2OptionsBuilder,,false,118,PadV2OptionsBuilder,68
302982,TYPE_DECL,,,,struct ReshapeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReshapeOptions,,false,120,ReshapeOptions,69
302983,TYPE_DECL,,,,struct ReshapeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReshapeOptionsBuilder,,false,121,ReshapeOptionsBuilder,70
302984,TYPE_DECL,,,,struct SpaceToBatchNDOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SpaceToBatchNDOptions,,false,123,SpaceToBatchNDOptions,71
302985,TYPE_DECL,,,,struct SpaceToBatchNDOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SpaceToBatchNDOptionsBuilder,,false,124,SpaceToBatchNDOptionsBuilder,72
302986,TYPE_DECL,,,,struct BatchToSpaceNDOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.BatchToSpaceNDOptions,,false,126,BatchToSpaceNDOptions,73
302987,TYPE_DECL,,,,struct BatchToSpaceNDOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.BatchToSpaceNDOptionsBuilder,,false,127,BatchToSpaceNDOptionsBuilder,74
302988,TYPE_DECL,,,,struct SkipGramOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SkipGramOptions,,false,129,SkipGramOptions,75
302989,TYPE_DECL,,,,struct SkipGramOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SkipGramOptionsBuilder,,false,130,SkipGramOptionsBuilder,76
302990,TYPE_DECL,,,,struct SpaceToDepthOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SpaceToDepthOptions,,false,132,SpaceToDepthOptions,77
302991,TYPE_DECL,,,,struct SpaceToDepthOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SpaceToDepthOptionsBuilder,,false,133,SpaceToDepthOptionsBuilder,78
302992,TYPE_DECL,,,,struct DepthToSpaceOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.DepthToSpaceOptions,,false,135,DepthToSpaceOptions,79
302993,TYPE_DECL,,,,struct DepthToSpaceOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.DepthToSpaceOptionsBuilder,,false,136,DepthToSpaceOptionsBuilder,80
302994,TYPE_DECL,,,,struct SubOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SubOptions,,false,138,SubOptions,81
302995,TYPE_DECL,,,,struct SubOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SubOptionsBuilder,,false,139,SubOptionsBuilder,82
302996,TYPE_DECL,,,,struct DivOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.DivOptions,,false,141,DivOptions,83
302997,TYPE_DECL,,,,struct DivOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.DivOptionsBuilder,,false,142,DivOptionsBuilder,84
302998,TYPE_DECL,,,,struct TopKV2Options,1,misc\tflite\schema_generated.hpp,opencv_tflite.TopKV2Options,,false,144,TopKV2Options,85
302999,TYPE_DECL,,,,struct TopKV2OptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.TopKV2OptionsBuilder,,false,145,TopKV2OptionsBuilder,86
303000,TYPE_DECL,,,,struct EmbeddingLookupSparseOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.EmbeddingLookupSparseOptions,,false,147,EmbeddingLookupSparseOptions,87
303001,TYPE_DECL,,,,struct EmbeddingLookupSparseOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.EmbeddingLookupSparseOptionsBuilder,,false,148,EmbeddingLookupSparseOptionsBuilder,88
303002,TYPE_DECL,,,,struct GatherOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.GatherOptions,,false,150,GatherOptions,89
303003,TYPE_DECL,,,,struct GatherOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.GatherOptionsBuilder,,false,151,GatherOptionsBuilder,90
303004,TYPE_DECL,,,,struct TransposeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.TransposeOptions,,false,153,TransposeOptions,91
303005,TYPE_DECL,,,,struct TransposeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.TransposeOptionsBuilder,,false,154,TransposeOptionsBuilder,92
303006,TYPE_DECL,,,,struct ExpOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ExpOptions,,false,156,ExpOptions,93
303007,TYPE_DECL,,,,struct ExpOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ExpOptionsBuilder,,false,157,ExpOptionsBuilder,94
303008,TYPE_DECL,,,,struct CosOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.CosOptions,,false,159,CosOptions,95
303009,TYPE_DECL,,,,struct CosOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.CosOptionsBuilder,,false,160,CosOptionsBuilder,96
303010,TYPE_DECL,,,,struct ReducerOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReducerOptions,,false,162,ReducerOptions,97
303011,TYPE_DECL,,,,struct ReducerOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReducerOptionsBuilder,,false,163,ReducerOptionsBuilder,98
303012,TYPE_DECL,,,,struct SqueezeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SqueezeOptions,,false,165,SqueezeOptions,99
303013,TYPE_DECL,,,,struct SqueezeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SqueezeOptionsBuilder,,false,166,SqueezeOptionsBuilder,100
303014,TYPE_DECL,,,,struct SplitOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SplitOptions,,false,168,SplitOptions,101
303015,TYPE_DECL,,,,struct SplitOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SplitOptionsBuilder,,false,169,SplitOptionsBuilder,102
303016,TYPE_DECL,,,,struct SplitVOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SplitVOptions,,false,171,SplitVOptions,103
303017,TYPE_DECL,,,,struct SplitVOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SplitVOptionsBuilder,,false,172,SplitVOptionsBuilder,104
303018,TYPE_DECL,,,,struct StridedSliceOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.StridedSliceOptions,,false,174,StridedSliceOptions,105
303019,TYPE_DECL,,,,struct StridedSliceOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.StridedSliceOptionsBuilder,,false,175,StridedSliceOptionsBuilder,106
303020,TYPE_DECL,,,,struct LogSoftmaxOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LogSoftmaxOptions,,false,177,LogSoftmaxOptions,107
303021,TYPE_DECL,,,,struct LogSoftmaxOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LogSoftmaxOptionsBuilder,,false,178,LogSoftmaxOptionsBuilder,108
303022,TYPE_DECL,,,,struct CastOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.CastOptions,,false,180,CastOptions,109
303023,TYPE_DECL,,,,struct CastOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.CastOptionsBuilder,,false,181,CastOptionsBuilder,110
303024,TYPE_DECL,,,,struct DequantizeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.DequantizeOptions,,false,183,DequantizeOptions,111
303025,TYPE_DECL,,,,struct DequantizeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.DequantizeOptionsBuilder,,false,184,DequantizeOptionsBuilder,112
303026,TYPE_DECL,,,,struct MaximumMinimumOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.MaximumMinimumOptions,,false,186,MaximumMinimumOptions,113
303027,TYPE_DECL,,,,struct MaximumMinimumOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.MaximumMinimumOptionsBuilder,,false,187,MaximumMinimumOptionsBuilder,114
303028,TYPE_DECL,,,,struct TileOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.TileOptions,,false,189,TileOptions,115
303029,TYPE_DECL,,,,struct TileOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.TileOptionsBuilder,,false,190,TileOptionsBuilder,116
303030,TYPE_DECL,,,,struct ArgMaxOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ArgMaxOptions,,false,192,ArgMaxOptions,117
303031,TYPE_DECL,,,,struct ArgMaxOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ArgMaxOptionsBuilder,,false,193,ArgMaxOptionsBuilder,118
303032,TYPE_DECL,,,,struct ArgMinOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ArgMinOptions,,false,195,ArgMinOptions,119
303033,TYPE_DECL,,,,struct ArgMinOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ArgMinOptionsBuilder,,false,196,ArgMinOptionsBuilder,120
303034,TYPE_DECL,,,,struct GreaterOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.GreaterOptions,,false,198,GreaterOptions,121
303035,TYPE_DECL,,,,struct GreaterOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.GreaterOptionsBuilder,,false,199,GreaterOptionsBuilder,122
303036,TYPE_DECL,,,,struct GreaterEqualOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.GreaterEqualOptions,,false,201,GreaterEqualOptions,123
303037,TYPE_DECL,,,,struct GreaterEqualOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.GreaterEqualOptionsBuilder,,false,202,GreaterEqualOptionsBuilder,124
303038,TYPE_DECL,,,,struct LessOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LessOptions,,false,204,LessOptions,125
303039,TYPE_DECL,,,,struct LessOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LessOptionsBuilder,,false,205,LessOptionsBuilder,126
303040,TYPE_DECL,,,,struct LessEqualOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LessEqualOptions,,false,207,LessEqualOptions,127
303041,TYPE_DECL,,,,struct LessEqualOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LessEqualOptionsBuilder,,false,208,LessEqualOptionsBuilder,128
303042,TYPE_DECL,,,,struct NegOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.NegOptions,,false,210,NegOptions,129
303043,TYPE_DECL,,,,struct NegOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.NegOptionsBuilder,,false,211,NegOptionsBuilder,130
303044,TYPE_DECL,,,,struct SelectOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SelectOptions,,false,213,SelectOptions,131
303045,TYPE_DECL,,,,struct SelectOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SelectOptionsBuilder,,false,214,SelectOptionsBuilder,132
303046,TYPE_DECL,,,,struct SliceOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SliceOptions,,false,216,SliceOptions,133
303047,TYPE_DECL,,,,struct SliceOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SliceOptionsBuilder,,false,217,SliceOptionsBuilder,134
303048,TYPE_DECL,,,,struct TransposeConvOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.TransposeConvOptions,,false,219,TransposeConvOptions,135
303049,TYPE_DECL,,,,struct TransposeConvOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.TransposeConvOptionsBuilder,,false,220,TransposeConvOptionsBuilder,136
303050,TYPE_DECL,,,,struct ExpandDimsOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ExpandDimsOptions,,false,222,ExpandDimsOptions,137
303051,TYPE_DECL,,,,struct ExpandDimsOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ExpandDimsOptionsBuilder,,false,223,ExpandDimsOptionsBuilder,138
303052,TYPE_DECL,,,,struct SparseToDenseOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SparseToDenseOptions,,false,225,SparseToDenseOptions,139
303053,TYPE_DECL,,,,struct SparseToDenseOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SparseToDenseOptionsBuilder,,false,226,SparseToDenseOptionsBuilder,140
303054,TYPE_DECL,,,,struct EqualOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.EqualOptions,,false,228,EqualOptions,141
303055,TYPE_DECL,,,,struct EqualOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.EqualOptionsBuilder,,false,229,EqualOptionsBuilder,142
303056,TYPE_DECL,,,,struct NotEqualOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.NotEqualOptions,,false,231,NotEqualOptions,143
303057,TYPE_DECL,,,,struct NotEqualOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.NotEqualOptionsBuilder,,false,232,NotEqualOptionsBuilder,144
303058,TYPE_DECL,,,,struct ShapeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ShapeOptions,,false,234,ShapeOptions,145
303059,TYPE_DECL,,,,struct ShapeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ShapeOptionsBuilder,,false,235,ShapeOptionsBuilder,146
303060,TYPE_DECL,,,,struct RankOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.RankOptions,,false,237,RankOptions,147
303061,TYPE_DECL,,,,struct RankOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.RankOptionsBuilder,,false,238,RankOptionsBuilder,148
303062,TYPE_DECL,,,,struct PowOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.PowOptions,,false,240,PowOptions,149
303063,TYPE_DECL,,,,struct PowOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.PowOptionsBuilder,,false,241,PowOptionsBuilder,150
303064,TYPE_DECL,,,,struct FakeQuantOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.FakeQuantOptions,,false,243,FakeQuantOptions,151
303065,TYPE_DECL,,,,struct FakeQuantOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.FakeQuantOptionsBuilder,,false,244,FakeQuantOptionsBuilder,152
303066,TYPE_DECL,,,,struct PackOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.PackOptions,,false,246,PackOptions,153
303067,TYPE_DECL,,,,struct PackOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.PackOptionsBuilder,,false,247,PackOptionsBuilder,154
303068,TYPE_DECL,,,,struct LogicalOrOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalOrOptions,,false,249,LogicalOrOptions,155
303069,TYPE_DECL,,,,struct LogicalOrOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalOrOptionsBuilder,,false,250,LogicalOrOptionsBuilder,156
303070,TYPE_DECL,,,,struct OneHotOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.OneHotOptions,,false,252,OneHotOptions,157
303071,TYPE_DECL,,,,struct OneHotOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.OneHotOptionsBuilder,,false,253,OneHotOptionsBuilder,158
303072,TYPE_DECL,,,,struct AbsOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.AbsOptions,,false,255,AbsOptions,159
303073,TYPE_DECL,,,,struct AbsOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.AbsOptionsBuilder,,false,256,AbsOptionsBuilder,160
303074,TYPE_DECL,,,,struct HardSwishOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.HardSwishOptions,,false,258,HardSwishOptions,161
303075,TYPE_DECL,,,,struct HardSwishOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.HardSwishOptionsBuilder,,false,259,HardSwishOptionsBuilder,162
303076,TYPE_DECL,,,,struct LogicalAndOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalAndOptions,,false,261,LogicalAndOptions,163
303077,TYPE_DECL,,,,struct LogicalAndOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalAndOptionsBuilder,,false,262,LogicalAndOptionsBuilder,164
303078,TYPE_DECL,,,,struct LogicalNotOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalNotOptions,,false,264,LogicalNotOptions,165
303079,TYPE_DECL,,,,struct LogicalNotOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalNotOptionsBuilder,,false,265,LogicalNotOptionsBuilder,166
303080,TYPE_DECL,,,,struct UnpackOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnpackOptions,,false,267,UnpackOptions,167
303081,TYPE_DECL,,,,struct UnpackOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnpackOptionsBuilder,,false,268,UnpackOptionsBuilder,168
303082,TYPE_DECL,,,,struct FloorDivOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.FloorDivOptions,,false,270,FloorDivOptions,169
303083,TYPE_DECL,,,,struct FloorDivOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.FloorDivOptionsBuilder,,false,271,FloorDivOptionsBuilder,170
303084,TYPE_DECL,,,,struct SquareOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SquareOptions,,false,273,SquareOptions,171
303085,TYPE_DECL,,,,struct SquareOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SquareOptionsBuilder,,false,274,SquareOptionsBuilder,172
303086,TYPE_DECL,,,,struct ZerosLikeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ZerosLikeOptions,,false,276,ZerosLikeOptions,173
303087,TYPE_DECL,,,,struct ZerosLikeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ZerosLikeOptionsBuilder,,false,277,ZerosLikeOptionsBuilder,174
303088,TYPE_DECL,,,,struct FillOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.FillOptions,,false,279,FillOptions,175
303089,TYPE_DECL,,,,struct FillOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.FillOptionsBuilder,,false,280,FillOptionsBuilder,176
303090,TYPE_DECL,,,,struct FloorModOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.FloorModOptions,,false,282,FloorModOptions,177
303091,TYPE_DECL,,,,struct FloorModOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.FloorModOptionsBuilder,,false,283,FloorModOptionsBuilder,178
303092,TYPE_DECL,,,,struct RangeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.RangeOptions,,false,285,RangeOptions,179
303093,TYPE_DECL,,,,struct RangeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.RangeOptionsBuilder,,false,286,RangeOptionsBuilder,180
303094,TYPE_DECL,,,,struct LeakyReluOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.LeakyReluOptions,,false,288,LeakyReluOptions,181
303095,TYPE_DECL,,,,struct LeakyReluOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.LeakyReluOptionsBuilder,,false,289,LeakyReluOptionsBuilder,182
303096,TYPE_DECL,,,,struct SquaredDifferenceOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SquaredDifferenceOptions,,false,291,SquaredDifferenceOptions,183
303097,TYPE_DECL,,,,struct SquaredDifferenceOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SquaredDifferenceOptionsBuilder,,false,292,SquaredDifferenceOptionsBuilder,184
303098,TYPE_DECL,,,,struct MirrorPadOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.MirrorPadOptions,,false,294,MirrorPadOptions,185
303099,TYPE_DECL,,,,struct MirrorPadOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.MirrorPadOptionsBuilder,,false,295,MirrorPadOptionsBuilder,186
303100,TYPE_DECL,,,,struct UniqueOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.UniqueOptions,,false,297,UniqueOptions,187
303101,TYPE_DECL,,,,struct UniqueOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.UniqueOptionsBuilder,,false,298,UniqueOptionsBuilder,188
303102,TYPE_DECL,,,,struct ReverseV2Options,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReverseV2Options,,false,300,ReverseV2Options,189
303103,TYPE_DECL,,,,struct ReverseV2OptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReverseV2OptionsBuilder,,false,301,ReverseV2OptionsBuilder,190
303104,TYPE_DECL,,,,struct AddNOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.AddNOptions,,false,303,AddNOptions,191
303105,TYPE_DECL,,,,struct AddNOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.AddNOptionsBuilder,,false,304,AddNOptionsBuilder,192
303106,TYPE_DECL,,,,struct GatherNdOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.GatherNdOptions,,false,306,GatherNdOptions,193
303107,TYPE_DECL,,,,struct GatherNdOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.GatherNdOptionsBuilder,,false,307,GatherNdOptionsBuilder,194
303108,TYPE_DECL,,,,struct WhereOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.WhereOptions,,false,309,WhereOptions,195
303109,TYPE_DECL,,,,struct WhereOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.WhereOptionsBuilder,,false,310,WhereOptionsBuilder,196
303110,TYPE_DECL,,,,struct ReverseSequenceOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReverseSequenceOptions,,false,312,ReverseSequenceOptions,197
303111,TYPE_DECL,,,,struct ReverseSequenceOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReverseSequenceOptionsBuilder,,false,313,ReverseSequenceOptionsBuilder,198
303112,TYPE_DECL,,,,struct MatrixDiagOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.MatrixDiagOptions,,false,315,MatrixDiagOptions,199
303113,TYPE_DECL,,,,struct MatrixDiagOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.MatrixDiagOptionsBuilder,,false,316,MatrixDiagOptionsBuilder,200
303114,TYPE_DECL,,,,struct QuantizeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizeOptions,,false,318,QuantizeOptions,201
303115,TYPE_DECL,,,,struct QuantizeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizeOptionsBuilder,,false,319,QuantizeOptionsBuilder,202
303116,TYPE_DECL,,,,struct MatrixSetDiagOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.MatrixSetDiagOptions,,false,321,MatrixSetDiagOptions,203
303117,TYPE_DECL,,,,struct MatrixSetDiagOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.MatrixSetDiagOptionsBuilder,,false,322,MatrixSetDiagOptionsBuilder,204
303118,TYPE_DECL,,,,struct IfOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.IfOptions,,false,324,IfOptions,205
303119,TYPE_DECL,,,,struct IfOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.IfOptionsBuilder,,false,325,IfOptionsBuilder,206
303120,TYPE_DECL,,,,struct CallOnceOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.CallOnceOptions,,false,327,CallOnceOptions,207
303121,TYPE_DECL,,,,struct CallOnceOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.CallOnceOptionsBuilder,,false,328,CallOnceOptionsBuilder,208
303122,TYPE_DECL,,,,struct WhileOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.WhileOptions,,false,330,WhileOptions,209
303123,TYPE_DECL,,,,struct WhileOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.WhileOptionsBuilder,,false,331,WhileOptionsBuilder,210
303124,TYPE_DECL,,,,struct NonMaxSuppressionV4Options,1,misc\tflite\schema_generated.hpp,opencv_tflite.NonMaxSuppressionV4Options,,false,333,NonMaxSuppressionV4Options,211
303125,TYPE_DECL,,,,struct NonMaxSuppressionV4OptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.NonMaxSuppressionV4OptionsBuilder,,false,334,NonMaxSuppressionV4OptionsBuilder,212
303126,TYPE_DECL,,,,struct NonMaxSuppressionV5Options,1,misc\tflite\schema_generated.hpp,opencv_tflite.NonMaxSuppressionV5Options,,false,336,NonMaxSuppressionV5Options,213
303127,TYPE_DECL,,,,struct NonMaxSuppressionV5OptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.NonMaxSuppressionV5OptionsBuilder,,false,337,NonMaxSuppressionV5OptionsBuilder,214
303128,TYPE_DECL,,,,struct ScatterNdOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ScatterNdOptions,,false,339,ScatterNdOptions,215
303129,TYPE_DECL,,,,struct ScatterNdOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ScatterNdOptionsBuilder,,false,340,ScatterNdOptionsBuilder,216
303130,TYPE_DECL,,,,struct SelectV2Options,1,misc\tflite\schema_generated.hpp,opencv_tflite.SelectV2Options,,false,342,SelectV2Options,217
303131,TYPE_DECL,,,,struct SelectV2OptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SelectV2OptionsBuilder,,false,343,SelectV2OptionsBuilder,218
303132,TYPE_DECL,,,,struct DensifyOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.DensifyOptions,,false,345,DensifyOptions,219
303133,TYPE_DECL,,,,struct DensifyOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.DensifyOptionsBuilder,,false,346,DensifyOptionsBuilder,220
303134,TYPE_DECL,,,,struct SegmentSumOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SegmentSumOptions,,false,348,SegmentSumOptions,221
303135,TYPE_DECL,,,,struct SegmentSumOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SegmentSumOptionsBuilder,,false,349,SegmentSumOptionsBuilder,222
303136,TYPE_DECL,,,,struct BatchMatMulOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.BatchMatMulOptions,,false,351,BatchMatMulOptions,223
303137,TYPE_DECL,,,,struct BatchMatMulOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.BatchMatMulOptionsBuilder,,false,352,BatchMatMulOptionsBuilder,224
303138,TYPE_DECL,,,,struct CumsumOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.CumsumOptions,,false,354,CumsumOptions,225
303139,TYPE_DECL,,,,struct CumsumOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.CumsumOptionsBuilder,,false,355,CumsumOptionsBuilder,226
303140,TYPE_DECL,,,,struct BroadcastToOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.BroadcastToOptions,,false,357,BroadcastToOptions,227
303141,TYPE_DECL,,,,struct BroadcastToOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.BroadcastToOptionsBuilder,,false,358,BroadcastToOptionsBuilder,228
303142,TYPE_DECL,,,,struct Rfft2dOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.Rfft2dOptions,,false,360,Rfft2dOptions,229
303143,TYPE_DECL,,,,struct Rfft2dOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.Rfft2dOptionsBuilder,,false,361,Rfft2dOptionsBuilder,230
303144,TYPE_DECL,,,,struct HashtableOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableOptions,,false,363,HashtableOptions,231
303145,TYPE_DECL,,,,struct HashtableOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableOptionsBuilder,,false,364,HashtableOptionsBuilder,232
303146,TYPE_DECL,,,,struct HashtableFindOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableFindOptions,,false,366,HashtableFindOptions,233
303147,TYPE_DECL,,,,struct HashtableFindOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableFindOptionsBuilder,,false,367,HashtableFindOptionsBuilder,234
303148,TYPE_DECL,,,,struct HashtableImportOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableImportOptions,,false,369,HashtableImportOptions,235
303149,TYPE_DECL,,,,struct HashtableImportOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableImportOptionsBuilder,,false,370,HashtableImportOptionsBuilder,236
303150,TYPE_DECL,,,,struct HashtableSizeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableSizeOptions,,false,372,HashtableSizeOptions,237
303151,TYPE_DECL,,,,struct HashtableSizeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableSizeOptionsBuilder,,false,373,HashtableSizeOptionsBuilder,238
303152,TYPE_DECL,,,,struct VarHandleOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.VarHandleOptions,,false,375,VarHandleOptions,239
303153,TYPE_DECL,,,,struct VarHandleOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.VarHandleOptionsBuilder,,false,376,VarHandleOptionsBuilder,240
303154,TYPE_DECL,,,,struct ReadVariableOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReadVariableOptions,,false,378,ReadVariableOptions,241
303155,TYPE_DECL,,,,struct ReadVariableOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ReadVariableOptionsBuilder,,false,379,ReadVariableOptionsBuilder,242
303156,TYPE_DECL,,,,struct AssignVariableOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.AssignVariableOptions,,false,381,AssignVariableOptions,243
303157,TYPE_DECL,,,,struct AssignVariableOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.AssignVariableOptionsBuilder,,false,382,AssignVariableOptionsBuilder,244
303158,TYPE_DECL,,,,struct RandomOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.RandomOptions,,false,384,RandomOptions,245
303159,TYPE_DECL,,,,struct RandomOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.RandomOptionsBuilder,,false,385,RandomOptionsBuilder,246
303160,TYPE_DECL,,,,struct BucketizeOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.BucketizeOptions,,false,387,BucketizeOptions,247
303161,TYPE_DECL,,,,struct BucketizeOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.BucketizeOptionsBuilder,,false,388,BucketizeOptionsBuilder,248
303162,TYPE_DECL,,,,struct GeluOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.GeluOptions,,false,390,GeluOptions,249
303163,TYPE_DECL,,,,struct GeluOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.GeluOptionsBuilder,,false,391,GeluOptionsBuilder,250
303164,TYPE_DECL,,,,struct DynamicUpdateSliceOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.DynamicUpdateSliceOptions,,false,393,DynamicUpdateSliceOptions,251
303165,TYPE_DECL,,,,struct DynamicUpdateSliceOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.DynamicUpdateSliceOptionsBuilder,,false,394,DynamicUpdateSliceOptionsBuilder,252
303166,TYPE_DECL,,,,struct UnsortedSegmentProdOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentProdOptions,,false,396,UnsortedSegmentProdOptions,253
303167,TYPE_DECL,,,,struct UnsortedSegmentProdOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentProdOptionsBuilder,,false,397,UnsortedSegmentProdOptionsBuilder,254
303168,TYPE_DECL,,,,struct UnsortedSegmentMaxOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentMaxOptions,,false,399,UnsortedSegmentMaxOptions,255
303169,TYPE_DECL,,,,struct UnsortedSegmentMaxOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentMaxOptionsBuilder,,false,400,UnsortedSegmentMaxOptionsBuilder,256
303170,TYPE_DECL,,,,struct UnsortedSegmentSumOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentSumOptions,,false,402,UnsortedSegmentSumOptions,257
303171,TYPE_DECL,,,,struct UnsortedSegmentSumOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentSumOptionsBuilder,,false,403,UnsortedSegmentSumOptionsBuilder,258
303172,TYPE_DECL,,,,struct ATan2Options,1,misc\tflite\schema_generated.hpp,opencv_tflite.ATan2Options,,false,405,ATan2Options,259
303173,TYPE_DECL,,,,struct ATan2OptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ATan2OptionsBuilder,,false,406,ATan2OptionsBuilder,260
303174,TYPE_DECL,,,,struct UnsortedSegmentMinOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentMinOptions,,false,408,UnsortedSegmentMinOptions,261
303175,TYPE_DECL,,,,struct UnsortedSegmentMinOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentMinOptionsBuilder,,false,409,UnsortedSegmentMinOptionsBuilder,262
303176,TYPE_DECL,,,,struct SignOptions,1,misc\tflite\schema_generated.hpp,opencv_tflite.SignOptions,,false,411,SignOptions,263
303177,TYPE_DECL,,,,struct SignOptionsBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SignOptionsBuilder,,false,412,SignOptionsBuilder,264
303178,TYPE_DECL,,,,struct OperatorCode,1,misc\tflite\schema_generated.hpp,opencv_tflite.OperatorCode,,false,414,OperatorCode,265
303179,TYPE_DECL,,,,struct OperatorCodeBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.OperatorCodeBuilder,,false,415,OperatorCodeBuilder,266
303180,TYPE_DECL,,,,struct Operator,1,misc\tflite\schema_generated.hpp,opencv_tflite.Operator,,false,417,Operator,267
303181,TYPE_DECL,,,,struct OperatorBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.OperatorBuilder,,false,418,OperatorBuilder,268
303182,TYPE_DECL,,,,struct SubGraph,1,misc\tflite\schema_generated.hpp,opencv_tflite.SubGraph,,false,420,SubGraph,269
303183,TYPE_DECL,,,,struct SubGraphBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SubGraphBuilder,,false,421,SubGraphBuilder,270
303184,TYPE_DECL,,,,struct Buffer,1,misc\tflite\schema_generated.hpp,opencv_tflite.Buffer,,false,423,Buffer,271
303185,TYPE_DECL,,,,struct BufferBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.BufferBuilder,,false,424,BufferBuilder,272
303186,TYPE_DECL,,,,struct Metadata,1,misc\tflite\schema_generated.hpp,opencv_tflite.Metadata,,false,426,Metadata,273
303187,TYPE_DECL,,,,struct MetadataBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.MetadataBuilder,,false,427,MetadataBuilder,274
303188,TYPE_DECL,,,,struct TensorMap,1,misc\tflite\schema_generated.hpp,opencv_tflite.TensorMap,,false,429,TensorMap,275
303189,TYPE_DECL,,,,struct TensorMapBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.TensorMapBuilder,,false,430,TensorMapBuilder,276
303190,TYPE_DECL,,,,struct SignatureDef,1,misc\tflite\schema_generated.hpp,opencv_tflite.SignatureDef,,false,432,SignatureDef,277
303191,TYPE_DECL,,,,struct SignatureDefBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.SignatureDefBuilder,,false,433,SignatureDefBuilder,278
303192,TYPE_DECL,,,,struct Model,1,misc\tflite\schema_generated.hpp,opencv_tflite.Model,,false,435,Model,279
303193,TYPE_DECL,,,,struct ModelBuilder,1,misc\tflite\schema_generated.hpp,opencv_tflite.ModelBuilder,,false,436,ModelBuilder,280
303194,TYPE_DECL,,,,"enum TensorType : int8_t {
  TensorType_FLOAT32 = 0,
  TensorType_FLOAT16 = 1,
  TensorType_INT32 = 2,
  TensorType_UINT8 = 3,
  TensorType_INT64 = 4,
  TensorType_STRING = 5,
  TensorType_BOOL = 6,
  TensorType_INT16 = 7,
  TensorType_COMPLEX64 = 8,
  TensorType_INT8 = 9,
  TensorType_FLOAT64 = 10,
  TensorType_COMPLEX128 = 11,
  TensorType_UINT64 = 12,
  TensorType_RESOURCE = 13,
  TensorType_VARIANT = 14,
  TensorType_UINT32 = 15,
  TensorType_UINT16 = 16,
  TensorType_INT4 = 17,
  TensorType_MIN = TensorType_FLOAT32,
  TensorType_MAX = TensorType_INT4
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.TensorType,,false,438,TensorType,281
303362,TYPE_DECL,,,,"enum QuantizationDetails : uint8_t {
  QuantizationDetails_NONE = 0,
  QuantizationDetails_CustomQuantization = 1,
  QuantizationDetails_MIN = QuantizationDetails_NONE,
  QuantizationDetails_MAX = QuantizationDetails_CustomQuantization
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizationDetails,,false,516,QuantizationDetails,285
303434,TYPE_DECL,opencv_tflite.QuantizationDetailsTraits<T>,,,"struct QuantizationDetailsTraits {
  static const QuantizationDetails enum_value = QuantizationDetails_NONE;
}",22,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizationDetailsTraits,,false,546,QuantizationDetailsTraits,289
303443,TYPE_DECL,opencv_tflite.QuantizationDetailsTraits<opencv_tflite.CustomQuantization><>,,,"struct QuantizationDetailsTraits<opencv_tflite::CustomQuantization> {
  static const QuantizationDetails enum_value = QuantizationDetails_CustomQuantization;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizationDetailsTraits<opencv_tflite.CustomQuantization>,,false,550,QuantizationDetailsTraits<opencv_tflite::CustomQuantization>,290
303466,TYPE_DECL,,,,"enum DimensionType : int8_t {
  DimensionType_DENSE = 0,
  DimensionType_SPARSE_CSR = 1,
  DimensionType_MIN = DimensionType_DENSE,
  DimensionType_MAX = DimensionType_SPARSE_CSR
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.DimensionType,,false,557,DimensionType,293
303538,TYPE_DECL,,,,"enum SparseIndexVector : uint8_t {
  SparseIndexVector_NONE = 0,
  SparseIndexVector_Int32Vector = 1,
  SparseIndexVector_Uint16Vector = 2,
  SparseIndexVector_Uint8Vector = 3,
  SparseIndexVector_MIN = SparseIndexVector_NONE,
  SparseIndexVector_MAX = SparseIndexVector_Uint8Vector
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SparseIndexVector,,false,587,SparseIndexVector,297
303622,TYPE_DECL,opencv_tflite.SparseIndexVectorTraits<T>,,,"struct SparseIndexVectorTraits {
  static const SparseIndexVector enum_value = SparseIndexVector_NONE;
}",22,misc\tflite\schema_generated.hpp,opencv_tflite.SparseIndexVectorTraits,,false,623,SparseIndexVectorTraits,301
303631,TYPE_DECL,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Int32Vector><>,,,"struct SparseIndexVectorTraits<opencv_tflite::Int32Vector> {
  static const SparseIndexVector enum_value = SparseIndexVector_Int32Vector;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Int32Vector>,,false,627,SparseIndexVectorTraits<opencv_tflite::Int32Vector>,302
303640,TYPE_DECL,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Uint16Vector><>,,,"struct SparseIndexVectorTraits<opencv_tflite::Uint16Vector> {
  static const SparseIndexVector enum_value = SparseIndexVector_Uint16Vector;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Uint16Vector>,,false,631,SparseIndexVectorTraits<opencv_tflite::Uint16Vector>,303
303649,TYPE_DECL,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Uint8Vector><>,,,"struct SparseIndexVectorTraits<opencv_tflite::Uint8Vector> {
  static const SparseIndexVector enum_value = SparseIndexVector_Uint8Vector;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Uint8Vector>,,false,635,SparseIndexVectorTraits<opencv_tflite::Uint8Vector>,304
303672,TYPE_DECL,,,,"enum BuiltinOperator : int32_t {
  BuiltinOperator_ADD = 0,
  BuiltinOperator_AVERAGE_POOL_2D = 1,
  BuiltinOperator_CONCATENATION = 2,
  BuiltinOperator_CONV_2D = 3,
  BuiltinOperator_DEPTHWISE_CONV_2D = 4,
  BuiltinOperator_DEPTH_TO_SPACE = 5,
  BuiltinOperator_DEQUANTIZE = 6,
  BuiltinOperator_EMBEDDING_LOOKUP = 7,
  BuiltinOperator_FLOOR = 8,
  BuiltinOperator_FULLY_CONNECTED = 9,
  BuiltinOperator_HASHTABLE_LOOKUP = 10,
  BuiltinOperator_L2_NORMALIZATION = 11,
  BuiltinOperator_L2_POOL_2D = 12,
  BuiltinOperator_LOCAL_RESPONSE_NORMALIZATION = 13,
  BuiltinOperator_LOGISTIC = 14,
  BuiltinOperator_LSH_PROJECTION = 15,
  BuiltinOperator_LSTM = 16,
  BuiltinOperator_MAX_POOL_2D = 17,
  BuiltinOperator_MUL = 18,
  BuiltinOperator_RELU = 19,
  BuiltinOperator_RELU_N1_TO_1 = 20,
  BuiltinOperator_RELU6 = 21,
  BuiltinOperator_RESHAPE = 22,
  BuiltinOperator_RESIZE_BILINEAR = 23,
  BuiltinOperator_RNN = 24,
  BuiltinOperator_SOFTMAX = 25,
  BuiltinOperator_SPACE_TO_DEPTH = 26,
  Built...",1,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOperator,,false,642,BuiltinOperator,307
304686,TYPE_DECL,,,,"enum BuiltinOptions : uint8_t {
  BuiltinOptions_NONE = 0,
  BuiltinOptions_Conv2DOptions = 1,
  BuiltinOptions_DepthwiseConv2DOptions = 2,
  BuiltinOptions_ConcatEmbeddingsOptions = 3,
  BuiltinOptions_LSHProjectionOptions = 4,
  BuiltinOptions_Pool2DOptions = 5,
  BuiltinOptions_SVDFOptions = 6,
  BuiltinOptions_RNNOptions = 7,
  BuiltinOptions_FullyConnectedOptions = 8,
  BuiltinOptions_SoftmaxOptions = 9,
  BuiltinOptions_ConcatenationOptions = 10,
  BuiltinOptions_AddOptions = 11,
  BuiltinOptions_L2NormOptions = 12,
  BuiltinOptions_LocalResponseNormalizationOptions = 13,
  BuiltinOptions_LSTMOptions = 14,
  BuiltinOptions_ResizeBilinearOptions = 15,
  BuiltinOptions_CallOptions = 16,
  BuiltinOptions_ReshapeOptions = 17,
  BuiltinOptions_SkipGramOptions = 18,
  BuiltinOptions_SpaceToDepthOptions = 19,
  BuiltinOptions_EmbeddingLookupSparseOptions = 20,
  BuiltinOptions_MulOptions = 21,
  BuiltinOptions_PadOptions = 22,
  BuiltinOptions_GatherOptions = 23,
  BuiltinOptions_Bat...",1,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptions,,false,1143,BuiltinOptions,311
305490,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<T>,,,"struct BuiltinOptionsTraits {
  static const BuiltinOptions enum_value = BuiltinOptions_NONE;
}",22,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits,,false,1539,BuiltinOptionsTraits,315
305499,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Conv2DOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::Conv2DOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_Conv2DOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Conv2DOptions>,,false,1543,BuiltinOptionsTraits<opencv_tflite::Conv2DOptions>,316
305508,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DepthwiseConv2DOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::DepthwiseConv2DOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_DepthwiseConv2DOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DepthwiseConv2DOptions>,,false,1547,BuiltinOptionsTraits<opencv_tflite::DepthwiseConv2DOptions>,317
305517,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ConcatEmbeddingsOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ConcatEmbeddingsOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ConcatEmbeddingsOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ConcatEmbeddingsOptions>,,false,1551,BuiltinOptionsTraits<opencv_tflite::ConcatEmbeddingsOptions>,318
305526,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LSHProjectionOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LSHProjectionOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LSHProjectionOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LSHProjectionOptions>,,false,1555,BuiltinOptionsTraits<opencv_tflite::LSHProjectionOptions>,319
305535,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Pool2DOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::Pool2DOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_Pool2DOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Pool2DOptions>,,false,1559,BuiltinOptionsTraits<opencv_tflite::Pool2DOptions>,320
305544,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SVDFOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SVDFOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SVDFOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SVDFOptions>,,false,1563,BuiltinOptionsTraits<opencv_tflite::SVDFOptions>,321
305553,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RNNOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::RNNOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_RNNOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RNNOptions>,,false,1567,BuiltinOptionsTraits<opencv_tflite::RNNOptions>,322
305562,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FullyConnectedOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::FullyConnectedOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_FullyConnectedOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FullyConnectedOptions>,,false,1571,BuiltinOptionsTraits<opencv_tflite::FullyConnectedOptions>,323
305571,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SoftmaxOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SoftmaxOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SoftmaxOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SoftmaxOptions>,,false,1575,BuiltinOptionsTraits<opencv_tflite::SoftmaxOptions>,324
305580,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ConcatenationOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ConcatenationOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ConcatenationOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ConcatenationOptions>,,false,1579,BuiltinOptionsTraits<opencv_tflite::ConcatenationOptions>,325
305589,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AddOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::AddOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_AddOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AddOptions>,,false,1583,BuiltinOptionsTraits<opencv_tflite::AddOptions>,326
305598,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.L2NormOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::L2NormOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_L2NormOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.L2NormOptions>,,false,1587,BuiltinOptionsTraits<opencv_tflite::L2NormOptions>,327
305607,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LocalResponseNormalizationOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LocalResponseNormalizationOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LocalResponseNormalizationOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LocalResponseNormalizationOptions>,,false,1591,BuiltinOptionsTraits<opencv_tflite::LocalResponseNormalizationOptions>,328
305616,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LSTMOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LSTMOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LSTMOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LSTMOptions>,,false,1595,BuiltinOptionsTraits<opencv_tflite::LSTMOptions>,329
305625,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ResizeBilinearOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ResizeBilinearOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ResizeBilinearOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ResizeBilinearOptions>,,false,1599,BuiltinOptionsTraits<opencv_tflite::ResizeBilinearOptions>,330
305634,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CallOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::CallOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_CallOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CallOptions>,,false,1603,BuiltinOptionsTraits<opencv_tflite::CallOptions>,331
305643,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReshapeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ReshapeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ReshapeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReshapeOptions>,,false,1607,BuiltinOptionsTraits<opencv_tflite::ReshapeOptions>,332
305652,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SkipGramOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SkipGramOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SkipGramOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SkipGramOptions>,,false,1611,BuiltinOptionsTraits<opencv_tflite::SkipGramOptions>,333
305661,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SpaceToDepthOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SpaceToDepthOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SpaceToDepthOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SpaceToDepthOptions>,,false,1615,BuiltinOptionsTraits<opencv_tflite::SpaceToDepthOptions>,334
305670,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.EmbeddingLookupSparseOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::EmbeddingLookupSparseOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_EmbeddingLookupSparseOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.EmbeddingLookupSparseOptions>,,false,1619,BuiltinOptionsTraits<opencv_tflite::EmbeddingLookupSparseOptions>,335
305679,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MulOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::MulOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_MulOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MulOptions>,,false,1623,BuiltinOptionsTraits<opencv_tflite::MulOptions>,336
305688,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PadOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::PadOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_PadOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PadOptions>,,false,1627,BuiltinOptionsTraits<opencv_tflite::PadOptions>,337
305697,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GatherOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::GatherOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_GatherOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GatherOptions>,,false,1631,BuiltinOptionsTraits<opencv_tflite::GatherOptions>,338
305706,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BatchToSpaceNDOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::BatchToSpaceNDOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_BatchToSpaceNDOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BatchToSpaceNDOptions>,,false,1635,BuiltinOptionsTraits<opencv_tflite::BatchToSpaceNDOptions>,339
305715,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SpaceToBatchNDOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SpaceToBatchNDOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SpaceToBatchNDOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SpaceToBatchNDOptions>,,false,1639,BuiltinOptionsTraits<opencv_tflite::SpaceToBatchNDOptions>,340
305724,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TransposeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::TransposeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_TransposeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TransposeOptions>,,false,1643,BuiltinOptionsTraits<opencv_tflite::TransposeOptions>,341
305733,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReducerOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ReducerOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ReducerOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReducerOptions>,,false,1647,BuiltinOptionsTraits<opencv_tflite::ReducerOptions>,342
305742,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SubOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SubOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SubOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SubOptions>,,false,1651,BuiltinOptionsTraits<opencv_tflite::SubOptions>,343
305751,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DivOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::DivOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_DivOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DivOptions>,,false,1655,BuiltinOptionsTraits<opencv_tflite::DivOptions>,344
305760,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SqueezeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SqueezeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SqueezeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SqueezeOptions>,,false,1659,BuiltinOptionsTraits<opencv_tflite::SqueezeOptions>,345
305769,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SequenceRNNOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SequenceRNNOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SequenceRNNOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SequenceRNNOptions>,,false,1663,BuiltinOptionsTraits<opencv_tflite::SequenceRNNOptions>,346
305778,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.StridedSliceOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::StridedSliceOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_StridedSliceOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.StridedSliceOptions>,,false,1667,BuiltinOptionsTraits<opencv_tflite::StridedSliceOptions>,347
305787,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ExpOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ExpOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ExpOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ExpOptions>,,false,1671,BuiltinOptionsTraits<opencv_tflite::ExpOptions>,348
305796,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TopKV2Options><>,,,"struct BuiltinOptionsTraits<opencv_tflite::TopKV2Options> {
  static const BuiltinOptions enum_value = BuiltinOptions_TopKV2Options;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TopKV2Options>,,false,1675,BuiltinOptionsTraits<opencv_tflite::TopKV2Options>,349
305805,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SplitOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SplitOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SplitOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SplitOptions>,,false,1679,BuiltinOptionsTraits<opencv_tflite::SplitOptions>,350
305814,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogSoftmaxOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LogSoftmaxOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LogSoftmaxOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogSoftmaxOptions>,,false,1683,BuiltinOptionsTraits<opencv_tflite::LogSoftmaxOptions>,351
305823,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CastOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::CastOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_CastOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CastOptions>,,false,1687,BuiltinOptionsTraits<opencv_tflite::CastOptions>,352
305832,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DequantizeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::DequantizeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_DequantizeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DequantizeOptions>,,false,1691,BuiltinOptionsTraits<opencv_tflite::DequantizeOptions>,353
305841,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MaximumMinimumOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::MaximumMinimumOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_MaximumMinimumOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MaximumMinimumOptions>,,false,1695,BuiltinOptionsTraits<opencv_tflite::MaximumMinimumOptions>,354
305850,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ArgMaxOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ArgMaxOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ArgMaxOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ArgMaxOptions>,,false,1699,BuiltinOptionsTraits<opencv_tflite::ArgMaxOptions>,355
305859,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LessOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LessOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LessOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LessOptions>,,false,1703,BuiltinOptionsTraits<opencv_tflite::LessOptions>,356
305868,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NegOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::NegOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_NegOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NegOptions>,,false,1707,BuiltinOptionsTraits<opencv_tflite::NegOptions>,357
305877,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PadV2Options><>,,,"struct BuiltinOptionsTraits<opencv_tflite::PadV2Options> {
  static const BuiltinOptions enum_value = BuiltinOptions_PadV2Options;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PadV2Options>,,false,1711,BuiltinOptionsTraits<opencv_tflite::PadV2Options>,358
305886,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GreaterOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::GreaterOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_GreaterOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GreaterOptions>,,false,1715,BuiltinOptionsTraits<opencv_tflite::GreaterOptions>,359
305895,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GreaterEqualOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::GreaterEqualOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_GreaterEqualOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GreaterEqualOptions>,,false,1719,BuiltinOptionsTraits<opencv_tflite::GreaterEqualOptions>,360
305904,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LessEqualOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LessEqualOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LessEqualOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LessEqualOptions>,,false,1723,BuiltinOptionsTraits<opencv_tflite::LessEqualOptions>,361
305913,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SelectOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SelectOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SelectOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SelectOptions>,,false,1727,BuiltinOptionsTraits<opencv_tflite::SelectOptions>,362
305922,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SliceOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SliceOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SliceOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SliceOptions>,,false,1731,BuiltinOptionsTraits<opencv_tflite::SliceOptions>,363
305931,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TransposeConvOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::TransposeConvOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_TransposeConvOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TransposeConvOptions>,,false,1735,BuiltinOptionsTraits<opencv_tflite::TransposeConvOptions>,364
305940,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SparseToDenseOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SparseToDenseOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SparseToDenseOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SparseToDenseOptions>,,false,1739,BuiltinOptionsTraits<opencv_tflite::SparseToDenseOptions>,365
305949,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TileOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::TileOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_TileOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TileOptions>,,false,1743,BuiltinOptionsTraits<opencv_tflite::TileOptions>,366
305958,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ExpandDimsOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ExpandDimsOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ExpandDimsOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ExpandDimsOptions>,,false,1747,BuiltinOptionsTraits<opencv_tflite::ExpandDimsOptions>,367
305967,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.EqualOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::EqualOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_EqualOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.EqualOptions>,,false,1751,BuiltinOptionsTraits<opencv_tflite::EqualOptions>,368
305976,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NotEqualOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::NotEqualOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_NotEqualOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NotEqualOptions>,,false,1755,BuiltinOptionsTraits<opencv_tflite::NotEqualOptions>,369
305985,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ShapeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ShapeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ShapeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ShapeOptions>,,false,1759,BuiltinOptionsTraits<opencv_tflite::ShapeOptions>,370
305994,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PowOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::PowOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_PowOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PowOptions>,,false,1763,BuiltinOptionsTraits<opencv_tflite::PowOptions>,371
306003,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ArgMinOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ArgMinOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ArgMinOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ArgMinOptions>,,false,1767,BuiltinOptionsTraits<opencv_tflite::ArgMinOptions>,372
306012,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FakeQuantOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::FakeQuantOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_FakeQuantOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FakeQuantOptions>,,false,1771,BuiltinOptionsTraits<opencv_tflite::FakeQuantOptions>,373
306021,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PackOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::PackOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_PackOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PackOptions>,,false,1775,BuiltinOptionsTraits<opencv_tflite::PackOptions>,374
306030,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalOrOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LogicalOrOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LogicalOrOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalOrOptions>,,false,1779,BuiltinOptionsTraits<opencv_tflite::LogicalOrOptions>,375
306039,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.OneHotOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::OneHotOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_OneHotOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.OneHotOptions>,,false,1783,BuiltinOptionsTraits<opencv_tflite::OneHotOptions>,376
306048,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalAndOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LogicalAndOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LogicalAndOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalAndOptions>,,false,1787,BuiltinOptionsTraits<opencv_tflite::LogicalAndOptions>,377
306057,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalNotOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LogicalNotOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LogicalNotOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalNotOptions>,,false,1791,BuiltinOptionsTraits<opencv_tflite::LogicalNotOptions>,378
306066,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnpackOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::UnpackOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_UnpackOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnpackOptions>,,false,1795,BuiltinOptionsTraits<opencv_tflite::UnpackOptions>,379
306075,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FloorDivOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::FloorDivOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_FloorDivOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FloorDivOptions>,,false,1799,BuiltinOptionsTraits<opencv_tflite::FloorDivOptions>,380
306084,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SquareOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SquareOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SquareOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SquareOptions>,,false,1803,BuiltinOptionsTraits<opencv_tflite::SquareOptions>,381
306093,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ZerosLikeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ZerosLikeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ZerosLikeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ZerosLikeOptions>,,false,1807,BuiltinOptionsTraits<opencv_tflite::ZerosLikeOptions>,382
306102,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FillOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::FillOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_FillOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FillOptions>,,false,1811,BuiltinOptionsTraits<opencv_tflite::FillOptions>,383
306111,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BidirectionalSequenceLSTMOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::BidirectionalSequenceLSTMOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_BidirectionalSequenceLSTMOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BidirectionalSequenceLSTMOptions>,,false,1815,BuiltinOptionsTraits<opencv_tflite::BidirectionalSequenceLSTMOptions>,384
306120,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BidirectionalSequenceRNNOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::BidirectionalSequenceRNNOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_BidirectionalSequenceRNNOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BidirectionalSequenceRNNOptions>,,false,1819,BuiltinOptionsTraits<opencv_tflite::BidirectionalSequenceRNNOptions>,385
306129,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnidirectionalSequenceLSTMOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::UnidirectionalSequenceLSTMOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_UnidirectionalSequenceLSTMOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnidirectionalSequenceLSTMOptions>,,false,1823,BuiltinOptionsTraits<opencv_tflite::UnidirectionalSequenceLSTMOptions>,386
306138,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FloorModOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::FloorModOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_FloorModOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FloorModOptions>,,false,1827,BuiltinOptionsTraits<opencv_tflite::FloorModOptions>,387
306147,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RangeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::RangeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_RangeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RangeOptions>,,false,1831,BuiltinOptionsTraits<opencv_tflite::RangeOptions>,388
306156,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ResizeNearestNeighborOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ResizeNearestNeighborOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ResizeNearestNeighborOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ResizeNearestNeighborOptions>,,false,1835,BuiltinOptionsTraits<opencv_tflite::ResizeNearestNeighborOptions>,389
306165,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LeakyReluOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::LeakyReluOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_LeakyReluOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LeakyReluOptions>,,false,1839,BuiltinOptionsTraits<opencv_tflite::LeakyReluOptions>,390
306174,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SquaredDifferenceOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SquaredDifferenceOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SquaredDifferenceOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SquaredDifferenceOptions>,,false,1843,BuiltinOptionsTraits<opencv_tflite::SquaredDifferenceOptions>,391
306183,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MirrorPadOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::MirrorPadOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_MirrorPadOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MirrorPadOptions>,,false,1847,BuiltinOptionsTraits<opencv_tflite::MirrorPadOptions>,392
306192,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AbsOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::AbsOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_AbsOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AbsOptions>,,false,1851,BuiltinOptionsTraits<opencv_tflite::AbsOptions>,393
306201,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SplitVOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SplitVOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SplitVOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SplitVOptions>,,false,1855,BuiltinOptionsTraits<opencv_tflite::SplitVOptions>,394
306210,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UniqueOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::UniqueOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_UniqueOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UniqueOptions>,,false,1859,BuiltinOptionsTraits<opencv_tflite::UniqueOptions>,395
306219,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReverseV2Options><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ReverseV2Options> {
  static const BuiltinOptions enum_value = BuiltinOptions_ReverseV2Options;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReverseV2Options>,,false,1863,BuiltinOptionsTraits<opencv_tflite::ReverseV2Options>,396
306228,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AddNOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::AddNOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_AddNOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AddNOptions>,,false,1867,BuiltinOptionsTraits<opencv_tflite::AddNOptions>,397
306237,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GatherNdOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::GatherNdOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_GatherNdOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GatherNdOptions>,,false,1871,BuiltinOptionsTraits<opencv_tflite::GatherNdOptions>,398
306246,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CosOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::CosOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_CosOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CosOptions>,,false,1875,BuiltinOptionsTraits<opencv_tflite::CosOptions>,399
306255,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.WhereOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::WhereOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_WhereOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.WhereOptions>,,false,1879,BuiltinOptionsTraits<opencv_tflite::WhereOptions>,400
306264,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RankOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::RankOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_RankOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RankOptions>,,false,1883,BuiltinOptionsTraits<opencv_tflite::RankOptions>,401
306273,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReverseSequenceOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ReverseSequenceOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ReverseSequenceOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReverseSequenceOptions>,,false,1887,BuiltinOptionsTraits<opencv_tflite::ReverseSequenceOptions>,402
306282,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MatrixDiagOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::MatrixDiagOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_MatrixDiagOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MatrixDiagOptions>,,false,1891,BuiltinOptionsTraits<opencv_tflite::MatrixDiagOptions>,403
306291,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.QuantizeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::QuantizeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_QuantizeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.QuantizeOptions>,,false,1895,BuiltinOptionsTraits<opencv_tflite::QuantizeOptions>,404
306300,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MatrixSetDiagOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::MatrixSetDiagOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_MatrixSetDiagOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MatrixSetDiagOptions>,,false,1899,BuiltinOptionsTraits<opencv_tflite::MatrixSetDiagOptions>,405
306309,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HardSwishOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::HardSwishOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_HardSwishOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HardSwishOptions>,,false,1903,BuiltinOptionsTraits<opencv_tflite::HardSwishOptions>,406
306318,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.IfOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::IfOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_IfOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.IfOptions>,,false,1907,BuiltinOptionsTraits<opencv_tflite::IfOptions>,407
306327,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.WhileOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::WhileOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_WhileOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.WhileOptions>,,false,1911,BuiltinOptionsTraits<opencv_tflite::WhileOptions>,408
306336,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DepthToSpaceOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::DepthToSpaceOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_DepthToSpaceOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DepthToSpaceOptions>,,false,1915,BuiltinOptionsTraits<opencv_tflite::DepthToSpaceOptions>,409
306345,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NonMaxSuppressionV4Options><>,,,"struct BuiltinOptionsTraits<opencv_tflite::NonMaxSuppressionV4Options> {
  static const BuiltinOptions enum_value = BuiltinOptions_NonMaxSuppressionV4Options;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NonMaxSuppressionV4Options>,,false,1919,BuiltinOptionsTraits<opencv_tflite::NonMaxSuppressionV4Options>,410
306354,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NonMaxSuppressionV5Options><>,,,"struct BuiltinOptionsTraits<opencv_tflite::NonMaxSuppressionV5Options> {
  static const BuiltinOptions enum_value = BuiltinOptions_NonMaxSuppressionV5Options;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NonMaxSuppressionV5Options>,,false,1923,BuiltinOptionsTraits<opencv_tflite::NonMaxSuppressionV5Options>,411
306363,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ScatterNdOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ScatterNdOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ScatterNdOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ScatterNdOptions>,,false,1927,BuiltinOptionsTraits<opencv_tflite::ScatterNdOptions>,412
306372,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SelectV2Options><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SelectV2Options> {
  static const BuiltinOptions enum_value = BuiltinOptions_SelectV2Options;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SelectV2Options>,,false,1931,BuiltinOptionsTraits<opencv_tflite::SelectV2Options>,413
306381,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DensifyOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::DensifyOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_DensifyOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DensifyOptions>,,false,1935,BuiltinOptionsTraits<opencv_tflite::DensifyOptions>,414
306390,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SegmentSumOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SegmentSumOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SegmentSumOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SegmentSumOptions>,,false,1939,BuiltinOptionsTraits<opencv_tflite::SegmentSumOptions>,415
306399,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BatchMatMulOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::BatchMatMulOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_BatchMatMulOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BatchMatMulOptions>,,false,1943,BuiltinOptionsTraits<opencv_tflite::BatchMatMulOptions>,416
306408,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CumsumOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::CumsumOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_CumsumOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CumsumOptions>,,false,1947,BuiltinOptionsTraits<opencv_tflite::CumsumOptions>,417
306417,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CallOnceOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::CallOnceOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_CallOnceOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CallOnceOptions>,,false,1951,BuiltinOptionsTraits<opencv_tflite::CallOnceOptions>,418
306426,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BroadcastToOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::BroadcastToOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_BroadcastToOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BroadcastToOptions>,,false,1955,BuiltinOptionsTraits<opencv_tflite::BroadcastToOptions>,419
306435,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Rfft2dOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::Rfft2dOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_Rfft2dOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Rfft2dOptions>,,false,1959,BuiltinOptionsTraits<opencv_tflite::Rfft2dOptions>,420
306444,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Conv3DOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::Conv3DOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_Conv3DOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Conv3DOptions>,,false,1963,BuiltinOptionsTraits<opencv_tflite::Conv3DOptions>,421
306453,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::HashtableOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_HashtableOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableOptions>,,false,1967,BuiltinOptionsTraits<opencv_tflite::HashtableOptions>,422
306462,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableFindOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::HashtableFindOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_HashtableFindOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableFindOptions>,,false,1971,BuiltinOptionsTraits<opencv_tflite::HashtableFindOptions>,423
306471,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableImportOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::HashtableImportOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_HashtableImportOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableImportOptions>,,false,1975,BuiltinOptionsTraits<opencv_tflite::HashtableImportOptions>,424
306480,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableSizeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::HashtableSizeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_HashtableSizeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableSizeOptions>,,false,1979,BuiltinOptionsTraits<opencv_tflite::HashtableSizeOptions>,425
306489,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.VarHandleOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::VarHandleOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_VarHandleOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.VarHandleOptions>,,false,1983,BuiltinOptionsTraits<opencv_tflite::VarHandleOptions>,426
306498,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReadVariableOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ReadVariableOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_ReadVariableOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReadVariableOptions>,,false,1987,BuiltinOptionsTraits<opencv_tflite::ReadVariableOptions>,427
306507,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AssignVariableOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::AssignVariableOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_AssignVariableOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AssignVariableOptions>,,false,1991,BuiltinOptionsTraits<opencv_tflite::AssignVariableOptions>,428
306516,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RandomOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::RandomOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_RandomOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RandomOptions>,,false,1995,BuiltinOptionsTraits<opencv_tflite::RandomOptions>,429
306525,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BucketizeOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::BucketizeOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_BucketizeOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BucketizeOptions>,,false,1999,BuiltinOptionsTraits<opencv_tflite::BucketizeOptions>,430
306534,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GeluOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::GeluOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_GeluOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GeluOptions>,,false,2003,BuiltinOptionsTraits<opencv_tflite::GeluOptions>,431
306543,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DynamicUpdateSliceOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::DynamicUpdateSliceOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_DynamicUpdateSliceOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DynamicUpdateSliceOptions>,,false,2007,BuiltinOptionsTraits<opencv_tflite::DynamicUpdateSliceOptions>,432
306552,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentProdOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::UnsortedSegmentProdOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_UnsortedSegmentProdOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentProdOptions>,,false,2011,BuiltinOptionsTraits<opencv_tflite::UnsortedSegmentProdOptions>,433
306561,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentMaxOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::UnsortedSegmentMaxOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_UnsortedSegmentMaxOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentMaxOptions>,,false,2015,BuiltinOptionsTraits<opencv_tflite::UnsortedSegmentMaxOptions>,434
306570,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentMinOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::UnsortedSegmentMinOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_UnsortedSegmentMinOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentMinOptions>,,false,2019,BuiltinOptionsTraits<opencv_tflite::UnsortedSegmentMinOptions>,435
306579,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentSumOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::UnsortedSegmentSumOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_UnsortedSegmentSumOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentSumOptions>,,false,2023,BuiltinOptionsTraits<opencv_tflite::UnsortedSegmentSumOptions>,436
306588,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ATan2Options><>,,,"struct BuiltinOptionsTraits<opencv_tflite::ATan2Options> {
  static const BuiltinOptions enum_value = BuiltinOptions_ATan2Options;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ATan2Options>,,false,2027,BuiltinOptionsTraits<opencv_tflite::ATan2Options>,437
306597,TYPE_DECL,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SignOptions><>,,,"struct BuiltinOptionsTraits<opencv_tflite::SignOptions> {
  static const BuiltinOptions enum_value = BuiltinOptions_SignOptions;
}",12,misc\tflite\schema_generated.hpp,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SignOptions>,,false,2031,BuiltinOptionsTraits<opencv_tflite::SignOptions>,438
306620,TYPE_DECL,,,,"enum Padding : int8_t {
  Padding_SAME = 0,
  Padding_VALID = 1,
  Padding_MIN = Padding_SAME,
  Padding_MAX = Padding_VALID
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.Padding,,false,2038,Padding,441
306692,TYPE_DECL,,,,"enum ActivationFunctionType : int8_t {
  ActivationFunctionType_NONE = 0,
  ActivationFunctionType_RELU = 1,
  ActivationFunctionType_RELU_N1_TO_1 = 2,
  ActivationFunctionType_RELU6 = 3,
  ActivationFunctionType_TANH = 4,
  ActivationFunctionType_SIGN_BIT = 5,
  ActivationFunctionType_MIN = ActivationFunctionType_NONE,
  ActivationFunctionType_MAX = ActivationFunctionType_SIGN_BIT
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ActivationFunctionType,,false,2068,ActivationFunctionType,445
306788,TYPE_DECL,,,,"enum LSHProjectionType : int8_t {
  LSHProjectionType_UNKNOWN = 0,
  LSHProjectionType_SPARSE = 1,
  LSHProjectionType_DENSE = 2,
  LSHProjectionType_MIN = LSHProjectionType_UNKNOWN,
  LSHProjectionType_MAX = LSHProjectionType_DENSE
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LSHProjectionType,,false,2110,LSHProjectionType,449
306866,TYPE_DECL,,,,"enum FullyConnectedOptionsWeightsFormat : int8_t {
  FullyConnectedOptionsWeightsFormat_DEFAULT = 0,
  FullyConnectedOptionsWeightsFormat_SHUFFLED4x16INT8 = 1,
  FullyConnectedOptionsWeightsFormat_MIN = FullyConnectedOptionsWeightsFormat_DEFAULT,
  FullyConnectedOptionsWeightsFormat_MAX = FullyConnectedOptionsWeightsFormat_SHUFFLED4x16INT8
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.FullyConnectedOptionsWeightsFormat,,false,2143,FullyConnectedOptionsWeightsFormat,453
306938,TYPE_DECL,,,,"enum LSTMKernelType : int8_t {
  LSTMKernelType_FULL = 0,
  LSTMKernelType_BASIC = 1,
  LSTMKernelType_MIN = LSTMKernelType_FULL,
  LSTMKernelType_MAX = LSTMKernelType_BASIC
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LSTMKernelType,,false,2173,LSTMKernelType,457
307010,TYPE_DECL,,,,"enum CombinerType : int8_t {
  CombinerType_SUM = 0,
  CombinerType_MEAN = 1,
  CombinerType_SQRTN = 2,
  CombinerType_MIN = CombinerType_SUM,
  CombinerType_MAX = CombinerType_SQRTN
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.CombinerType,,false,2203,CombinerType,461
307088,TYPE_DECL,,,,"enum MirrorPadMode : int8_t {
  MirrorPadMode_REFLECT = 0,
  MirrorPadMode_SYMMETRIC = 1,
  MirrorPadMode_MIN = MirrorPadMode_REFLECT,
  MirrorPadMode_MAX = MirrorPadMode_SYMMETRIC
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.MirrorPadMode,,false,2236,MirrorPadMode,465
307160,TYPE_DECL,,,,"enum CustomOptionsFormat : int8_t {
  CustomOptionsFormat_FLEXBUFFERS = 0,
  CustomOptionsFormat_MIN = CustomOptionsFormat_FLEXBUFFERS,
  CustomOptionsFormat_MAX = CustomOptionsFormat_FLEXBUFFERS
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.CustomOptionsFormat,,false,2266,CustomOptionsFormat,469
307227,TYPE_DECL,,,,"struct CustomQuantizationBuilder {
  typedef CustomQuantization Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_custom(::flatbuffers::Offset<::flatbuffers::Vector<uint8_t>> custom) {
    fbb_.AddOffset(CustomQuantization::VT_CUSTOM, custom);
  }
  explicit CustomQuantizationBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<CustomQuantization> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<CustomQuantization>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.CustomQuantizationBuilder,,false,2309,CustomQuantizationBuilder,474
307228,TYPE_DECL,ANY,,,typedef CustomQuantization Table;,30,misc\tflite\schema_generated.hpp,Table,,false,2310,Table,1
307346,TYPE_DECL,,,,"struct QuantizationParametersBuilder {
  typedef QuantizationParameters Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_min(::flatbuffers::Offset<::flatbuffers::Vector<float>> min) {
    fbb_.AddOffset(QuantizationParameters::VT_MIN, min);
  }
  void add_max(::flatbuffers::Offset<::flatbuffers::Vector<float>> max) {
    fbb_.AddOffset(QuantizationParameters::VT_MAX, max);
  }
  void add_scale(::flatbuffers::Offset<::flatbuffers::Vector<float>> scale) {
    fbb_.AddOffset(QuantizationParameters::VT_SCALE, scale);
  }
  void add_zero_point(::flatbuffers::Offset<::flatbuffers::Vector<int64_t>> zero_point) {
    fbb_.AddOffset(QuantizationParameters::VT_ZERO_POINT, zero_point);
  }
  void add_details_type(opencv_tflite::QuantizationDetails details_type) {
    fbb_.AddElement<uint8_t>(QuantizationParameters::VT_DETAILS_TYPE, static_cast<uint8_t>(details_type), 0);
  }
  void add_details(::flatbuffers::Offset<void> details) {
    fbb_.AddOffs...",1,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizationParametersBuilder,,false,2403,QuantizationParametersBuilder,479
307347,TYPE_DECL,ANY,,,typedef QuantizationParameters Table;,34,misc\tflite\schema_generated.hpp,Table,,false,2404,Table,1
307619,TYPE_DECL,,,,"struct Int32VectorBuilder {
  typedef Int32Vector Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_values(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> values) {
    fbb_.AddOffset(Int32Vector::VT_VALUES, values);
  }
  explicit Int32VectorBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<Int32Vector> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<Int32Vector>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.Int32VectorBuilder,,false,2499,Int32VectorBuilder,483
307620,TYPE_DECL,ANY,,,typedef Int32Vector Table;,23,misc\tflite\schema_generated.hpp,Table,,false,2500,Table,1
307718,TYPE_DECL,,,,"struct Uint16VectorBuilder {
  typedef Uint16Vector Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_values(::flatbuffers::Offset<::flatbuffers::Vector<uint16_t>> values) {
    fbb_.AddOffset(Uint16Vector::VT_VALUES, values);
  }
  explicit Uint16VectorBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<Uint16Vector> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<Uint16Vector>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.Uint16VectorBuilder,,false,2550,Uint16VectorBuilder,487
307719,TYPE_DECL,ANY,,,typedef Uint16Vector Table;,24,misc\tflite\schema_generated.hpp,Table,,false,2551,Table,1
307831,TYPE_DECL,,,,"struct Uint8VectorBuilder {
  typedef Uint8Vector Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_values(::flatbuffers::Offset<::flatbuffers::Vector<uint8_t>> values) {
    fbb_.AddOffset(Uint8Vector::VT_VALUES, values);
  }
  explicit Uint8VectorBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<Uint8Vector> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<Uint8Vector>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.Uint8VectorBuilder,,false,2602,Uint8VectorBuilder,491
307832,TYPE_DECL,ANY,,,typedef Uint8Vector Table;,23,misc\tflite\schema_generated.hpp,Table,,false,2603,Table,1
307980,TYPE_DECL,,,,"struct DimensionMetadataBuilder {
  typedef DimensionMetadata Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_format(opencv_tflite::DimensionType format) {
    fbb_.AddElement<int8_t>(DimensionMetadata::VT_FORMAT, static_cast<int8_t>(format), 0);
  }
  void add_dense_size(int32_t dense_size) {
    fbb_.AddElement<int32_t>(DimensionMetadata::VT_DENSE_SIZE, dense_size, 0);
  }
  void add_array_segments_type(opencv_tflite::SparseIndexVector array_segments_type) {
    fbb_.AddElement<uint8_t>(DimensionMetadata::VT_ARRAY_SEGMENTS_TYPE, static_cast<uint8_t>(array_segments_type), 0);
  }
  void add_array_segments(::flatbuffers::Offset<void> array_segments) {
    fbb_.AddOffset(DimensionMetadata::VT_ARRAY_SEGMENTS, array_segments);
  }
  void add_array_indices_type(opencv_tflite::SparseIndexVector array_indices_type) {
    fbb_.AddElement<uint8_t>(DimensionMetadata::VT_ARRAY_INDICES_TYPE, static_cast<uint8_t>(array_indices_type), 0);
  }
  void...",1,misc\tflite\schema_generated.hpp,opencv_tflite.DimensionMetadataBuilder,,false,2724,DimensionMetadataBuilder,501
307981,TYPE_DECL,ANY,,,typedef DimensionMetadata Table;,29,misc\tflite\schema_generated.hpp,Table,,false,2725,Table,1
308173,TYPE_DECL,,,,"struct SparsityParametersBuilder {
  typedef SparsityParameters Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_traversal_order(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> traversal_order) {
    fbb_.AddOffset(SparsityParameters::VT_TRAVERSAL_ORDER, traversal_order);
  }
  void add_block_map(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> block_map) {
    fbb_.AddOffset(SparsityParameters::VT_BLOCK_MAP, block_map);
  }
  void add_dim_metadata(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<opencv_tflite::DimensionMetadata>>> dim_metadata) {
    fbb_.AddOffset(SparsityParameters::VT_DIM_METADATA, dim_metadata);
  }
  explicit SparsityParametersBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SparsityParameters> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SparsityParameters>(end)...",1,misc\tflite\schema_generated.hpp,opencv_tflite.SparsityParametersBuilder,,false,2804,SparsityParametersBuilder,504
308174,TYPE_DECL,ANY,,,typedef SparsityParameters Table;,30,misc\tflite\schema_generated.hpp,Table,,false,2805,Table,1
308348,TYPE_DECL,,,,"struct VariantSubTypeBuilder {
  typedef VariantSubType Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_shape(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> shape) {
    fbb_.AddOffset(VariantSubType::VT_SHAPE, shape);
  }
  void add_type(opencv_tflite::TensorType type) {
    fbb_.AddElement<int8_t>(VariantSubType::VT_TYPE, static_cast<int8_t>(type), 0);
  }
  void add_has_rank(bool has_rank) {
    fbb_.AddElement<uint8_t>(VariantSubType::VT_HAS_RANK, static_cast<uint8_t>(has_rank), 0);
  }
  explicit VariantSubTypeBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<VariantSubType> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<VariantSubType>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.VariantSubTypeBuilder,,false,2881,VariantSubTypeBuilder,508
308349,TYPE_DECL,ANY,,,typedef VariantSubType Table;,26,misc\tflite\schema_generated.hpp,Table,,false,2882,Table,1
308503,TYPE_DECL,,,,"struct TensorBuilder {
  typedef Tensor Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_shape(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> shape) {
    fbb_.AddOffset(Tensor::VT_SHAPE, shape);
  }
  void add_type(opencv_tflite::TensorType type) {
    fbb_.AddElement<int8_t>(Tensor::VT_TYPE, static_cast<int8_t>(type), 0);
  }
  void add_buffer(uint32_t buffer) {
    fbb_.AddElement<uint32_t>(Tensor::VT_BUFFER, buffer, 0);
  }
  void add_name(::flatbuffers::Offset<::flatbuffers::String> name) {
    fbb_.AddOffset(Tensor::VT_NAME, name);
  }
  void add_quantization(::flatbuffers::Offset<opencv_tflite::QuantizationParameters> quantization) {
    fbb_.AddOffset(Tensor::VT_QUANTIZATION, quantization);
  }
  void add_is_variable(bool is_variable) {
    fbb_.AddElement<uint8_t>(Tensor::VT_IS_VARIABLE, static_cast<uint8_t>(is_variable), 0);
  }
  void add_sparsity(::flatbuffers::Offset<opencv_tflite::SparsityParameters> sparsity) {
    ...",1,misc\tflite\schema_generated.hpp,opencv_tflite.TensorBuilder,,false,2997,TensorBuilder,512
308504,TYPE_DECL,ANY,,,typedef Tensor Table;,18,misc\tflite\schema_generated.hpp,Table,,false,2998,Table,1
308862,TYPE_DECL,,,,"struct Conv2DOptionsBuilder {
  typedef Conv2DOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_padding(opencv_tflite::Padding padding) {
    fbb_.AddElement<int8_t>(Conv2DOptions::VT_PADDING, static_cast<int8_t>(padding), 0);
  }
  void add_stride_w(int32_t stride_w) {
    fbb_.AddElement<int32_t>(Conv2DOptions::VT_STRIDE_W, stride_w, 0);
  }
  void add_stride_h(int32_t stride_h) {
    fbb_.AddElement<int32_t>(Conv2DOptions::VT_STRIDE_H, stride_h, 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(Conv2DOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_dilation_w_factor(int32_t dilation_w_factor) {
    fbb_.AddElement<int32_t>(Conv2DOptions::VT_DILATION_W_FACTOR, dilation_w_factor, 1);
  }
  void add_dilation_h_factor(int32_t dilation_h_factor) {
    fbb_.AddElement<int32_t>(Conv2DOption...",1,misc\tflite\schema_generated.hpp,opencv_tflite.Conv2DOptionsBuilder,,false,3138,Conv2DOptionsBuilder,516
308863,TYPE_DECL,ANY,,,typedef Conv2DOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,3139,Table,1
309063,TYPE_DECL,,,,"struct Conv3DOptionsBuilder {
  typedef Conv3DOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_padding(opencv_tflite::Padding padding) {
    fbb_.AddElement<int8_t>(Conv3DOptions::VT_PADDING, static_cast<int8_t>(padding), 0);
  }
  void add_stride_d(int32_t stride_d) {
    fbb_.AddElement<int32_t>(Conv3DOptions::VT_STRIDE_D, stride_d, 0);
  }
  void add_stride_w(int32_t stride_w) {
    fbb_.AddElement<int32_t>(Conv3DOptions::VT_STRIDE_W, stride_w, 0);
  }
  void add_stride_h(int32_t stride_h) {
    fbb_.AddElement<int32_t>(Conv3DOptions::VT_STRIDE_H, stride_h, 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(Conv3DOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_dilation_d_factor(int32_t dilation_d_factor) {
    fbb_.AddElement<int32_t>(Conv3DOptions::VT_DILATION_D_FACTOR, dilation_d_...",1,misc\tflite\schema_generated.hpp,opencv_tflite.Conv3DOptionsBuilder,,false,3239,Conv3DOptionsBuilder,519
309064,TYPE_DECL,ANY,,,typedef Conv3DOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,3240,Table,1
309312,TYPE_DECL,,,,"struct Pool2DOptionsBuilder {
  typedef Pool2DOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_padding(opencv_tflite::Padding padding) {
    fbb_.AddElement<int8_t>(Pool2DOptions::VT_PADDING, static_cast<int8_t>(padding), 0);
  }
  void add_stride_w(int32_t stride_w) {
    fbb_.AddElement<int32_t>(Pool2DOptions::VT_STRIDE_W, stride_w, 0);
  }
  void add_stride_h(int32_t stride_h) {
    fbb_.AddElement<int32_t>(Pool2DOptions::VT_STRIDE_H, stride_h, 0);
  }
  void add_filter_width(int32_t filter_width) {
    fbb_.AddElement<int32_t>(Pool2DOptions::VT_FILTER_WIDTH, filter_width, 0);
  }
  void add_filter_height(int32_t filter_height) {
    fbb_.AddElement<int32_t>(Pool2DOptions::VT_FILTER_HEIGHT, filter_height, 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(Pool2DOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_fun...",1,misc\tflite\schema_generated.hpp,opencv_tflite.Pool2DOptionsBuilder,,false,3340,Pool2DOptionsBuilder,522
309313,TYPE_DECL,ANY,,,typedef Pool2DOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,3341,Table,1
309513,TYPE_DECL,,,,"struct DepthwiseConv2DOptionsBuilder {
  typedef DepthwiseConv2DOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_padding(opencv_tflite::Padding padding) {
    fbb_.AddElement<int8_t>(DepthwiseConv2DOptions::VT_PADDING, static_cast<int8_t>(padding), 0);
  }
  void add_stride_w(int32_t stride_w) {
    fbb_.AddElement<int32_t>(DepthwiseConv2DOptions::VT_STRIDE_W, stride_w, 0);
  }
  void add_stride_h(int32_t stride_h) {
    fbb_.AddElement<int32_t>(DepthwiseConv2DOptions::VT_STRIDE_H, stride_h, 0);
  }
  void add_depth_multiplier(int32_t depth_multiplier) {
    fbb_.AddElement<int32_t>(DepthwiseConv2DOptions::VT_DEPTH_MULTIPLIER, depth_multiplier, 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(DepthwiseConv2DOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_dilation_w_factor(int32_t dil...",1,misc\tflite\schema_generated.hpp,opencv_tflite.DepthwiseConv2DOptionsBuilder,,false,3436,DepthwiseConv2DOptionsBuilder,525
309514,TYPE_DECL,ANY,,,typedef DepthwiseConv2DOptions Table;,34,misc\tflite\schema_generated.hpp,Table,,false,3437,Table,1
309738,TYPE_DECL,,,,"struct ConcatEmbeddingsOptionsBuilder {
  typedef ConcatEmbeddingsOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_num_channels(int32_t num_channels) {
    fbb_.AddElement<int32_t>(ConcatEmbeddingsOptions::VT_NUM_CHANNELS, num_channels, 0);
  }
  void add_num_columns_per_channel(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> num_columns_per_channel) {
    fbb_.AddOffset(ConcatEmbeddingsOptions::VT_NUM_COLUMNS_PER_CHANNEL, num_columns_per_channel);
  }
  void add_embedding_dim_per_channel(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> embedding_dim_per_channel) {
    fbb_.AddOffset(ConcatEmbeddingsOptions::VT_EMBEDDING_DIM_PER_CHANNEL, embedding_dim_per_channel);
  }
  explicit ConcatEmbeddingsOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ConcatEmbeddingsOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto ...",1,misc\tflite\schema_generated.hpp,opencv_tflite.ConcatEmbeddingsOptionsBuilder,,false,3519,ConcatEmbeddingsOptionsBuilder,528
309739,TYPE_DECL,ANY,,,typedef ConcatEmbeddingsOptions Table;,35,misc\tflite\schema_generated.hpp,Table,,false,3520,Table,1
309898,TYPE_DECL,,,,"struct LSHProjectionOptionsBuilder {
  typedef LSHProjectionOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_type(opencv_tflite::LSHProjectionType type) {
    fbb_.AddElement<int8_t>(LSHProjectionOptions::VT_TYPE, static_cast<int8_t>(type), 0);
  }
  explicit LSHProjectionOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LSHProjectionOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LSHProjectionOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LSHProjectionOptionsBuilder,,false,3584,LSHProjectionOptionsBuilder,532
309899,TYPE_DECL,ANY,,,typedef LSHProjectionOptions Table;,32,misc\tflite\schema_generated.hpp,Table,,false,3585,Table,1
309977,TYPE_DECL,,,,"struct SVDFOptionsBuilder {
  typedef SVDFOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_rank(int32_t rank) {
    fbb_.AddElement<int32_t>(SVDFOptions::VT_RANK, rank, 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(SVDFOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_asymmetric_quantize_inputs(bool asymmetric_quantize_inputs) {
    fbb_.AddElement<uint8_t>(SVDFOptions::VT_ASYMMETRIC_QUANTIZE_INPUTS, static_cast<uint8_t>(asymmetric_quantize_inputs), 0);
  }
  explicit SVDFOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SVDFOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SVDFOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SVDFOptionsBuilder,,false,3635,SVDFOptionsBuilder,535
309978,TYPE_DECL,ANY,,,typedef SVDFOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,3636,Table,1
310106,TYPE_DECL,,,,"struct RNNOptionsBuilder {
  typedef RNNOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(RNNOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_asymmetric_quantize_inputs(bool asymmetric_quantize_inputs) {
    fbb_.AddElement<uint8_t>(RNNOptions::VT_ASYMMETRIC_QUANTIZE_INPUTS, static_cast<uint8_t>(asymmetric_quantize_inputs), 0);
  }
  explicit RNNOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<RNNOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<RNNOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.RNNOptionsBuilder,,false,3691,RNNOptionsBuilder,538
310107,TYPE_DECL,ANY,,,typedef RNNOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,3692,Table,1
310211,TYPE_DECL,,,,"struct SequenceRNNOptionsBuilder {
  typedef SequenceRNNOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_time_major(bool time_major) {
    fbb_.AddElement<uint8_t>(SequenceRNNOptions::VT_TIME_MAJOR, static_cast<uint8_t>(time_major), 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(SequenceRNNOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_asymmetric_quantize_inputs(bool asymmetric_quantize_inputs) {
    fbb_.AddElement<uint8_t>(SequenceRNNOptions::VT_ASYMMETRIC_QUANTIZE_INPUTS, static_cast<uint8_t>(asymmetric_quantize_inputs), 0);
  }
  explicit SequenceRNNOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SequenceRNNOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::fla...",1,misc\tflite\schema_generated.hpp,opencv_tflite.SequenceRNNOptionsBuilder,,false,3747,SequenceRNNOptionsBuilder,541
310212,TYPE_DECL,ANY,,,typedef SequenceRNNOptions Table;,30,misc\tflite\schema_generated.hpp,Table,,false,3748,Table,1
310342,TYPE_DECL,,,,"struct BidirectionalSequenceRNNOptionsBuilder {
  typedef BidirectionalSequenceRNNOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_time_major(bool time_major) {
    fbb_.AddElement<uint8_t>(BidirectionalSequenceRNNOptions::VT_TIME_MAJOR, static_cast<uint8_t>(time_major), 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(BidirectionalSequenceRNNOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_merge_outputs(bool merge_outputs) {
    fbb_.AddElement<uint8_t>(BidirectionalSequenceRNNOptions::VT_MERGE_OUTPUTS, static_cast<uint8_t>(merge_outputs), 0);
  }
  void add_asymmetric_quantize_inputs(bool asymmetric_quantize_inputs) {
    fbb_.AddElement<uint8_t>(BidirectionalSequenceRNNOptions::VT_ASYMMETRIC_QUANTIZE_INPUTS, static_cast<uint8_t>(asymmetric_quantize_inputs), 0);
  }
  explicit Bidir...",1,misc\tflite\schema_generated.hpp,opencv_tflite.BidirectionalSequenceRNNOptionsBuilder,,false,3813,BidirectionalSequenceRNNOptionsBuilder,544
310343,TYPE_DECL,ANY,,,typedef BidirectionalSequenceRNNOptions Table;,43,misc\tflite\schema_generated.hpp,Table,,false,3814,Table,1
310499,TYPE_DECL,,,,"struct FullyConnectedOptionsBuilder {
  typedef FullyConnectedOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(FullyConnectedOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_weights_format(opencv_tflite::FullyConnectedOptionsWeightsFormat weights_format) {
    fbb_.AddElement<int8_t>(FullyConnectedOptions::VT_WEIGHTS_FORMAT, static_cast<int8_t>(weights_format), 0);
  }
  void add_keep_num_dims(bool keep_num_dims) {
    fbb_.AddElement<uint8_t>(FullyConnectedOptions::VT_KEEP_NUM_DIMS, static_cast<uint8_t>(keep_num_dims), 0);
  }
  void add_asymmetric_quantize_inputs(bool asymmetric_quantize_inputs) {
    fbb_.AddElement<uint8_t>(FullyConnectedOptions::VT_ASYMMETRIC_QUANTIZE_INPUTS, static_cast<uint8_t>(asymmetric_quantize_inputs), 0);
  }
  explicit FullyC...",1,misc\tflite\schema_generated.hpp,opencv_tflite.FullyConnectedOptionsBuilder,,false,3884,FullyConnectedOptionsBuilder,547
310500,TYPE_DECL,ANY,,,typedef FullyConnectedOptions Table;,33,misc\tflite\schema_generated.hpp,Table,,false,3885,Table,1
310656,TYPE_DECL,,,,"struct SoftmaxOptionsBuilder {
  typedef SoftmaxOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_beta(float beta) {
    fbb_.AddElement<float>(SoftmaxOptions::VT_BETA, beta, 0.0f);
  }
  explicit SoftmaxOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SoftmaxOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SoftmaxOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SoftmaxOptionsBuilder,,false,3940,SoftmaxOptionsBuilder,550
310657,TYPE_DECL,ANY,,,typedef SoftmaxOptions Table;,26,misc\tflite\schema_generated.hpp,Table,,false,3941,Table,1
310729,TYPE_DECL,,,,"struct ConcatenationOptionsBuilder {
  typedef ConcatenationOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_axis(int32_t axis) {
    fbb_.AddElement<int32_t>(ConcatenationOptions::VT_AXIS, axis, 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(ConcatenationOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  explicit ConcatenationOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ConcatenationOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ConcatenationOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ConcatenationOptionsBuilder,,false,3986,ConcatenationOptionsBuilder,553
310730,TYPE_DECL,ANY,,,typedef ConcatenationOptions Table;,32,misc\tflite\schema_generated.hpp,Table,,false,3987,Table,1
310832,TYPE_DECL,,,,"struct AddOptionsBuilder {
  typedef AddOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(AddOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_pot_scale_int16(bool pot_scale_int16) {
    fbb_.AddElement<uint8_t>(AddOptions::VT_POT_SCALE_INT16, static_cast<uint8_t>(pot_scale_int16), 1);
  }
  explicit AddOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<AddOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<AddOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.AddOptionsBuilder,,false,4037,AddOptionsBuilder,556
310833,TYPE_DECL,ANY,,,typedef AddOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,4038,Table,1
310937,TYPE_DECL,,,,"struct MulOptionsBuilder {
  typedef MulOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(MulOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  explicit MulOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<MulOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<MulOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.MulOptionsBuilder,,false,4083,MulOptionsBuilder,559
310938,TYPE_DECL,ANY,,,typedef MulOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,4084,Table,1
311016,TYPE_DECL,,,,"struct L2NormOptionsBuilder {
  typedef L2NormOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(L2NormOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  explicit L2NormOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<L2NormOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<L2NormOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.L2NormOptionsBuilder,,false,4124,L2NormOptionsBuilder,562
311017,TYPE_DECL,ANY,,,typedef L2NormOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,4125,Table,1
311095,TYPE_DECL,,,,"struct LocalResponseNormalizationOptionsBuilder {
  typedef LocalResponseNormalizationOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_radius(int32_t radius) {
    fbb_.AddElement<int32_t>(LocalResponseNormalizationOptions::VT_RADIUS, radius, 0);
  }
  void add_bias(float bias) {
    fbb_.AddElement<float>(LocalResponseNormalizationOptions::VT_BIAS, bias, 0.0f);
  }
  void add_alpha(float alpha) {
    fbb_.AddElement<float>(LocalResponseNormalizationOptions::VT_ALPHA, alpha, 0.0f);
  }
  void add_beta(float beta) {
    fbb_.AddElement<float>(LocalResponseNormalizationOptions::VT_BETA, beta, 0.0f);
  }
  explicit LocalResponseNormalizationOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LocalResponseNormalizationOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LocalResponseNormalizationOptions>...",1,misc\tflite\schema_generated.hpp,opencv_tflite.LocalResponseNormalizationOptionsBuilder,,false,4180,LocalResponseNormalizationOptionsBuilder,565
311096,TYPE_DECL,ANY,,,typedef LocalResponseNormalizationOptions Table;,45,misc\tflite\schema_generated.hpp,Table,,false,4181,Table,1
311232,TYPE_DECL,,,,"struct LSTMOptionsBuilder {
  typedef LSTMOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(LSTMOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_cell_clip(float cell_clip) {
    fbb_.AddElement<float>(LSTMOptions::VT_CELL_CLIP, cell_clip, 0.0f);
  }
  void add_proj_clip(float proj_clip) {
    fbb_.AddElement<float>(LSTMOptions::VT_PROJ_CLIP, proj_clip, 0.0f);
  }
  void add_kernel_type(opencv_tflite::LSTMKernelType kernel_type) {
    fbb_.AddElement<int8_t>(LSTMOptions::VT_KERNEL_TYPE, static_cast<int8_t>(kernel_type), 0);
  }
  void add_asymmetric_quantize_inputs(bool asymmetric_quantize_inputs) {
    fbb_.AddElement<uint8_t>(LSTMOptions::VT_ASYMMETRIC_QUANTIZE_INPUTS, static_cast<uint8_t>(asymmetric_quantize_inputs), 0);
  }
  explicit LSTMOptionsBuilder...",1,misc\tflite\schema_generated.hpp,opencv_tflite.LSTMOptionsBuilder,,false,4256,LSTMOptionsBuilder,568
311233,TYPE_DECL,ANY,,,typedef LSTMOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,4257,Table,1
311403,TYPE_DECL,,,,"struct UnidirectionalSequenceLSTMOptionsBuilder {
  typedef UnidirectionalSequenceLSTMOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(UnidirectionalSequenceLSTMOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_cell_clip(float cell_clip) {
    fbb_.AddElement<float>(UnidirectionalSequenceLSTMOptions::VT_CELL_CLIP, cell_clip, 0.0f);
  }
  void add_proj_clip(float proj_clip) {
    fbb_.AddElement<float>(UnidirectionalSequenceLSTMOptions::VT_PROJ_CLIP, proj_clip, 0.0f);
  }
  void add_time_major(bool time_major) {
    fbb_.AddElement<uint8_t>(UnidirectionalSequenceLSTMOptions::VT_TIME_MAJOR, static_cast<uint8_t>(time_major), 0);
  }
  void add_asymmetric_quantize_inputs(bool asymmetric_quantize_inputs) {
    fbb_.AddElement<uint8_t>(UnidirectionalSequenceLSTM...",1,misc\tflite\schema_generated.hpp,opencv_tflite.UnidirectionalSequenceLSTMOptionsBuilder,,false,4342,UnidirectionalSequenceLSTMOptionsBuilder,571
311404,TYPE_DECL,ANY,,,typedef UnidirectionalSequenceLSTMOptions Table;,45,misc\tflite\schema_generated.hpp,Table,,false,4343,Table,1
311600,TYPE_DECL,,,,"struct BidirectionalSequenceLSTMOptionsBuilder {
  typedef BidirectionalSequenceLSTMOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(BidirectionalSequenceLSTMOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_cell_clip(float cell_clip) {
    fbb_.AddElement<float>(BidirectionalSequenceLSTMOptions::VT_CELL_CLIP, cell_clip, 0.0f);
  }
  void add_proj_clip(float proj_clip) {
    fbb_.AddElement<float>(BidirectionalSequenceLSTMOptions::VT_PROJ_CLIP, proj_clip, 0.0f);
  }
  void add_merge_outputs(bool merge_outputs) {
    fbb_.AddElement<uint8_t>(BidirectionalSequenceLSTMOptions::VT_MERGE_OUTPUTS, static_cast<uint8_t>(merge_outputs), 0);
  }
  void add_time_major(bool time_major) {
    fbb_.AddElement<uint8_t>(BidirectionalSequenceLSTMOptions::VT_TIME_MAJOR, sta...",1,misc\tflite\schema_generated.hpp,opencv_tflite.BidirectionalSequenceLSTMOptionsBuilder,,false,4433,BidirectionalSequenceLSTMOptionsBuilder,574
311601,TYPE_DECL,ANY,,,typedef BidirectionalSequenceLSTMOptions Table;,44,misc\tflite\schema_generated.hpp,Table,,false,4434,Table,1
311797,TYPE_DECL,,,,"struct ResizeBilinearOptionsBuilder {
  typedef ResizeBilinearOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_align_corners(bool align_corners) {
    fbb_.AddElement<uint8_t>(ResizeBilinearOptions::VT_ALIGN_CORNERS, static_cast<uint8_t>(align_corners), 0);
  }
  void add_half_pixel_centers(bool half_pixel_centers) {
    fbb_.AddElement<uint8_t>(ResizeBilinearOptions::VT_HALF_PIXEL_CENTERS, static_cast<uint8_t>(half_pixel_centers), 0);
  }
  explicit ResizeBilinearOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ResizeBilinearOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ResizeBilinearOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ResizeBilinearOptionsBuilder,,false,4504,ResizeBilinearOptionsBuilder,577
311798,TYPE_DECL,ANY,,,typedef ResizeBilinearOptions Table;,33,misc\tflite\schema_generated.hpp,Table,,false,4505,Table,1
311902,TYPE_DECL,,,,"struct ResizeNearestNeighborOptionsBuilder {
  typedef ResizeNearestNeighborOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_align_corners(bool align_corners) {
    fbb_.AddElement<uint8_t>(ResizeNearestNeighborOptions::VT_ALIGN_CORNERS, static_cast<uint8_t>(align_corners), 0);
  }
  void add_half_pixel_centers(bool half_pixel_centers) {
    fbb_.AddElement<uint8_t>(ResizeNearestNeighborOptions::VT_HALF_PIXEL_CENTERS, static_cast<uint8_t>(half_pixel_centers), 0);
  }
  explicit ResizeNearestNeighborOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ResizeNearestNeighborOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ResizeNearestNeighborOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ResizeNearestNeighborOptionsBuilder,,false,4555,ResizeNearestNeighborOptionsBuilder,580
311903,TYPE_DECL,ANY,,,typedef ResizeNearestNeighborOptions Table;,40,misc\tflite\schema_generated.hpp,Table,,false,4556,Table,1
312007,TYPE_DECL,,,,"struct CallOptionsBuilder {
  typedef CallOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_subgraph(uint32_t subgraph) {
    fbb_.AddElement<uint32_t>(CallOptions::VT_SUBGRAPH, subgraph, 0);
  }
  explicit CallOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<CallOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<CallOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.CallOptionsBuilder,,false,4601,CallOptionsBuilder,583
312008,TYPE_DECL,ANY,,,typedef CallOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,4602,Table,1
312084,TYPE_DECL,,,,"struct PadOptionsBuilder {
  typedef PadOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit PadOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<PadOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<PadOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.PadOptionsBuilder,,false,4635,PadOptionsBuilder,586
312085,TYPE_DECL,ANY,,,typedef PadOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,4636,Table,1
312137,TYPE_DECL,,,,"struct PadV2OptionsBuilder {
  typedef PadV2Options Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit PadV2OptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<PadV2Options> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<PadV2Options>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.PadV2OptionsBuilder,,false,4664,PadV2OptionsBuilder,589
312138,TYPE_DECL,ANY,,,typedef PadV2Options Table;,24,misc\tflite\schema_generated.hpp,Table,,false,4665,Table,1
312190,TYPE_DECL,,,,"struct ReshapeOptionsBuilder {
  typedef ReshapeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_new_shape(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> new_shape) {
    fbb_.AddOffset(ReshapeOptions::VT_NEW_SHAPE, new_shape);
  }
  explicit ReshapeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ReshapeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ReshapeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ReshapeOptionsBuilder,,false,4701,ReshapeOptionsBuilder,592
312191,TYPE_DECL,ANY,,,typedef ReshapeOptions Table;,26,misc\tflite\schema_generated.hpp,Table,,false,4702,Table,1
312289,TYPE_DECL,,,,"struct SpaceToBatchNDOptionsBuilder {
  typedef SpaceToBatchNDOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit SpaceToBatchNDOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SpaceToBatchNDOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SpaceToBatchNDOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SpaceToBatchNDOptionsBuilder,,false,4744,SpaceToBatchNDOptionsBuilder,596
312290,TYPE_DECL,ANY,,,typedef SpaceToBatchNDOptions Table;,33,misc\tflite\schema_generated.hpp,Table,,false,4745,Table,1
312342,TYPE_DECL,,,,"struct BatchToSpaceNDOptionsBuilder {
  typedef BatchToSpaceNDOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit BatchToSpaceNDOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<BatchToSpaceNDOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<BatchToSpaceNDOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.BatchToSpaceNDOptionsBuilder,,false,4773,BatchToSpaceNDOptionsBuilder,599
312343,TYPE_DECL,ANY,,,typedef BatchToSpaceNDOptions Table;,33,misc\tflite\schema_generated.hpp,Table,,false,4774,Table,1
312395,TYPE_DECL,,,,"struct SkipGramOptionsBuilder {
  typedef SkipGramOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_ngram_size(int32_t ngram_size) {
    fbb_.AddElement<int32_t>(SkipGramOptions::VT_NGRAM_SIZE, ngram_size, 0);
  }
  void add_max_skip_size(int32_t max_skip_size) {
    fbb_.AddElement<int32_t>(SkipGramOptions::VT_MAX_SKIP_SIZE, max_skip_size, 0);
  }
  void add_include_all_ngrams(bool include_all_ngrams) {
    fbb_.AddElement<uint8_t>(SkipGramOptions::VT_INCLUDE_ALL_NGRAMS, static_cast<uint8_t>(include_all_ngrams), 0);
  }
  explicit SkipGramOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SkipGramOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SkipGramOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SkipGramOptionsBuilder,,false,4819,SkipGramOptionsBuilder,602
312396,TYPE_DECL,ANY,,,typedef SkipGramOptions Table;,27,misc\tflite\schema_generated.hpp,Table,,false,4820,Table,1
312522,TYPE_DECL,,,,"struct SpaceToDepthOptionsBuilder {
  typedef SpaceToDepthOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_block_size(int32_t block_size) {
    fbb_.AddElement<int32_t>(SpaceToDepthOptions::VT_BLOCK_SIZE, block_size, 0);
  }
  explicit SpaceToDepthOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SpaceToDepthOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SpaceToDepthOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SpaceToDepthOptionsBuilder,,false,4870,SpaceToDepthOptionsBuilder,605
312523,TYPE_DECL,ANY,,,typedef SpaceToDepthOptions Table;,31,misc\tflite\schema_generated.hpp,Table,,false,4871,Table,1
312599,TYPE_DECL,,,,"struct DepthToSpaceOptionsBuilder {
  typedef DepthToSpaceOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_block_size(int32_t block_size) {
    fbb_.AddElement<int32_t>(DepthToSpaceOptions::VT_BLOCK_SIZE, block_size, 0);
  }
  explicit DepthToSpaceOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<DepthToSpaceOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<DepthToSpaceOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.DepthToSpaceOptionsBuilder,,false,4911,DepthToSpaceOptionsBuilder,608
312600,TYPE_DECL,ANY,,,typedef DepthToSpaceOptions Table;,31,misc\tflite\schema_generated.hpp,Table,,false,4912,Table,1
312676,TYPE_DECL,,,,"struct SubOptionsBuilder {
  typedef SubOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(SubOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  void add_pot_scale_int16(bool pot_scale_int16) {
    fbb_.AddElement<uint8_t>(SubOptions::VT_POT_SCALE_INT16, static_cast<uint8_t>(pot_scale_int16), 1);
  }
  explicit SubOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SubOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SubOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SubOptionsBuilder,,false,4957,SubOptionsBuilder,611
312677,TYPE_DECL,ANY,,,typedef SubOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,4958,Table,1
312781,TYPE_DECL,,,,"struct DivOptionsBuilder {
  typedef DivOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(DivOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  explicit DivOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<DivOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<DivOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.DivOptionsBuilder,,false,5003,DivOptionsBuilder,614
312782,TYPE_DECL,ANY,,,typedef DivOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,5004,Table,1
312860,TYPE_DECL,,,,"struct TopKV2OptionsBuilder {
  typedef TopKV2Options Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit TopKV2OptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TopKV2Options> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TopKV2Options>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.TopKV2OptionsBuilder,,false,5037,TopKV2OptionsBuilder,617
312861,TYPE_DECL,ANY,,,typedef TopKV2Options Table;,25,misc\tflite\schema_generated.hpp,Table,,false,5038,Table,1
312913,TYPE_DECL,,,,"struct EmbeddingLookupSparseOptionsBuilder {
  typedef EmbeddingLookupSparseOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_combiner(opencv_tflite::CombinerType combiner) {
    fbb_.AddElement<int8_t>(EmbeddingLookupSparseOptions::VT_COMBINER, static_cast<int8_t>(combiner), 0);
  }
  explicit EmbeddingLookupSparseOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<EmbeddingLookupSparseOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<EmbeddingLookupSparseOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.EmbeddingLookupSparseOptionsBuilder,,false,5073,EmbeddingLookupSparseOptionsBuilder,620
312914,TYPE_DECL,ANY,,,typedef EmbeddingLookupSparseOptions Table;,40,misc\tflite\schema_generated.hpp,Table,,false,5074,Table,1
312992,TYPE_DECL,,,,"struct GatherOptionsBuilder {
  typedef GatherOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_axis(int32_t axis) {
    fbb_.AddElement<int32_t>(GatherOptions::VT_AXIS, axis, 0);
  }
  void add_batch_dims(int32_t batch_dims) {
    fbb_.AddElement<int32_t>(GatherOptions::VT_BATCH_DIMS, batch_dims, 0);
  }
  explicit GatherOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<GatherOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<GatherOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.GatherOptionsBuilder,,false,5119,GatherOptionsBuilder,623
312993,TYPE_DECL,ANY,,,typedef GatherOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,5120,Table,1
313093,TYPE_DECL,,,,"struct TransposeOptionsBuilder {
  typedef TransposeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit TransposeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TransposeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TransposeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.TransposeOptionsBuilder,,false,5158,TransposeOptionsBuilder,626
313094,TYPE_DECL,ANY,,,typedef TransposeOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,5159,Table,1
313146,TYPE_DECL,,,,"struct ExpOptionsBuilder {
  typedef ExpOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit ExpOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ExpOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ExpOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ExpOptionsBuilder,,false,5187,ExpOptionsBuilder,629
313147,TYPE_DECL,ANY,,,typedef ExpOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,5188,Table,1
313199,TYPE_DECL,,,,"struct CosOptionsBuilder {
  typedef CosOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit CosOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<CosOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<CosOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.CosOptionsBuilder,,false,5216,CosOptionsBuilder,632
313200,TYPE_DECL,ANY,,,typedef CosOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,5217,Table,1
313252,TYPE_DECL,,,,"struct ReducerOptionsBuilder {
  typedef ReducerOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_keep_dims(bool keep_dims) {
    fbb_.AddElement<uint8_t>(ReducerOptions::VT_KEEP_DIMS, static_cast<uint8_t>(keep_dims), 0);
  }
  explicit ReducerOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ReducerOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ReducerOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ReducerOptionsBuilder,,false,5252,ReducerOptionsBuilder,635
313253,TYPE_DECL,ANY,,,typedef ReducerOptions Table;,26,misc\tflite\schema_generated.hpp,Table,,false,5253,Table,1
313331,TYPE_DECL,,,,"struct SqueezeOptionsBuilder {
  typedef SqueezeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_squeeze_dims(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> squeeze_dims) {
    fbb_.AddOffset(SqueezeOptions::VT_SQUEEZE_DIMS, squeeze_dims);
  }
  explicit SqueezeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SqueezeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SqueezeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SqueezeOptionsBuilder,,false,5294,SqueezeOptionsBuilder,638
313332,TYPE_DECL,ANY,,,typedef SqueezeOptions Table;,26,misc\tflite\schema_generated.hpp,Table,,false,5295,Table,1
313430,TYPE_DECL,,,,"struct SplitOptionsBuilder {
  typedef SplitOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_num_splits(int32_t num_splits) {
    fbb_.AddElement<int32_t>(SplitOptions::VT_NUM_SPLITS, num_splits, 0);
  }
  explicit SplitOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SplitOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SplitOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SplitOptionsBuilder,,false,5344,SplitOptionsBuilder,642
313431,TYPE_DECL,ANY,,,typedef SplitOptions Table;,24,misc\tflite\schema_generated.hpp,Table,,false,5345,Table,1
313507,TYPE_DECL,,,,"struct SplitVOptionsBuilder {
  typedef SplitVOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_num_splits(int32_t num_splits) {
    fbb_.AddElement<int32_t>(SplitVOptions::VT_NUM_SPLITS, num_splits, 0);
  }
  explicit SplitVOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SplitVOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SplitVOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SplitVOptionsBuilder,,false,5385,SplitVOptionsBuilder,645
313508,TYPE_DECL,ANY,,,typedef SplitVOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,5386,Table,1
313584,TYPE_DECL,,,,"struct StridedSliceOptionsBuilder {
  typedef StridedSliceOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_begin_mask(int32_t begin_mask) {
    fbb_.AddElement<int32_t>(StridedSliceOptions::VT_BEGIN_MASK, begin_mask, 0);
  }
  void add_end_mask(int32_t end_mask) {
    fbb_.AddElement<int32_t>(StridedSliceOptions::VT_END_MASK, end_mask, 0);
  }
  void add_ellipsis_mask(int32_t ellipsis_mask) {
    fbb_.AddElement<int32_t>(StridedSliceOptions::VT_ELLIPSIS_MASK, ellipsis_mask, 0);
  }
  void add_new_axis_mask(int32_t new_axis_mask) {
    fbb_.AddElement<int32_t>(StridedSliceOptions::VT_NEW_AXIS_MASK, new_axis_mask, 0);
  }
  void add_shrink_axis_mask(int32_t shrink_axis_mask) {
    fbb_.AddElement<int32_t>(StridedSliceOptions::VT_SHRINK_AXIS_MASK, shrink_axis_mask, 0);
  }
  explicit StridedSliceOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<S...",1,misc\tflite\schema_generated.hpp,opencv_tflite.StridedSliceOptionsBuilder,,false,5446,StridedSliceOptionsBuilder,648
313585,TYPE_DECL,ANY,,,typedef StridedSliceOptions Table;,31,misc\tflite\schema_generated.hpp,Table,,false,5447,Table,1
313757,TYPE_DECL,,,,"struct LogSoftmaxOptionsBuilder {
  typedef LogSoftmaxOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit LogSoftmaxOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LogSoftmaxOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LogSoftmaxOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LogSoftmaxOptionsBuilder,,false,5500,LogSoftmaxOptionsBuilder,651
313758,TYPE_DECL,ANY,,,typedef LogSoftmaxOptions Table;,29,misc\tflite\schema_generated.hpp,Table,,false,5501,Table,1
313810,TYPE_DECL,,,,"struct CastOptionsBuilder {
  typedef CastOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_in_data_type(opencv_tflite::TensorType in_data_type) {
    fbb_.AddElement<int8_t>(CastOptions::VT_IN_DATA_TYPE, static_cast<int8_t>(in_data_type), 0);
  }
  void add_out_data_type(opencv_tflite::TensorType out_data_type) {
    fbb_.AddElement<int8_t>(CastOptions::VT_OUT_DATA_TYPE, static_cast<int8_t>(out_data_type), 0);
  }
  explicit CastOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<CastOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<CastOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.CastOptionsBuilder,,false,5541,CastOptionsBuilder,654
313811,TYPE_DECL,ANY,,,typedef CastOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,5542,Table,1
313915,TYPE_DECL,,,,"struct DequantizeOptionsBuilder {
  typedef DequantizeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit DequantizeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<DequantizeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<DequantizeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.DequantizeOptionsBuilder,,false,5580,DequantizeOptionsBuilder,657
313916,TYPE_DECL,ANY,,,typedef DequantizeOptions Table;,29,misc\tflite\schema_generated.hpp,Table,,false,5581,Table,1
313968,TYPE_DECL,,,,"struct MaximumMinimumOptionsBuilder {
  typedef MaximumMinimumOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit MaximumMinimumOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<MaximumMinimumOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<MaximumMinimumOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.MaximumMinimumOptionsBuilder,,false,5609,MaximumMinimumOptionsBuilder,660
313969,TYPE_DECL,ANY,,,typedef MaximumMinimumOptions Table;,33,misc\tflite\schema_generated.hpp,Table,,false,5610,Table,1
314021,TYPE_DECL,,,,"struct TileOptionsBuilder {
  typedef TileOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit TileOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TileOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TileOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.TileOptionsBuilder,,false,5638,TileOptionsBuilder,663
314022,TYPE_DECL,ANY,,,typedef TileOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,5639,Table,1
314074,TYPE_DECL,,,,"struct ArgMaxOptionsBuilder {
  typedef ArgMaxOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_output_type(opencv_tflite::TensorType output_type) {
    fbb_.AddElement<int8_t>(ArgMaxOptions::VT_OUTPUT_TYPE, static_cast<int8_t>(output_type), 0);
  }
  explicit ArgMaxOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ArgMaxOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ArgMaxOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ArgMaxOptionsBuilder,,false,5674,ArgMaxOptionsBuilder,666
314075,TYPE_DECL,ANY,,,typedef ArgMaxOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,5675,Table,1
314153,TYPE_DECL,,,,"struct ArgMinOptionsBuilder {
  typedef ArgMinOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_output_type(opencv_tflite::TensorType output_type) {
    fbb_.AddElement<int8_t>(ArgMinOptions::VT_OUTPUT_TYPE, static_cast<int8_t>(output_type), 0);
  }
  explicit ArgMinOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ArgMinOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ArgMinOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ArgMinOptionsBuilder,,false,5715,ArgMinOptionsBuilder,669
314154,TYPE_DECL,ANY,,,typedef ArgMinOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,5716,Table,1
314232,TYPE_DECL,,,,"struct GreaterOptionsBuilder {
  typedef GreaterOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit GreaterOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<GreaterOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<GreaterOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.GreaterOptionsBuilder,,false,5749,GreaterOptionsBuilder,672
314233,TYPE_DECL,ANY,,,typedef GreaterOptions Table;,26,misc\tflite\schema_generated.hpp,Table,,false,5750,Table,1
314285,TYPE_DECL,,,,"struct GreaterEqualOptionsBuilder {
  typedef GreaterEqualOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit GreaterEqualOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<GreaterEqualOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<GreaterEqualOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.GreaterEqualOptionsBuilder,,false,5778,GreaterEqualOptionsBuilder,675
314286,TYPE_DECL,ANY,,,typedef GreaterEqualOptions Table;,31,misc\tflite\schema_generated.hpp,Table,,false,5779,Table,1
314338,TYPE_DECL,,,,"struct LessOptionsBuilder {
  typedef LessOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit LessOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LessOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LessOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LessOptionsBuilder,,false,5807,LessOptionsBuilder,678
314339,TYPE_DECL,ANY,,,typedef LessOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,5808,Table,1
314391,TYPE_DECL,,,,"struct LessEqualOptionsBuilder {
  typedef LessEqualOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit LessEqualOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LessEqualOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LessEqualOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LessEqualOptionsBuilder,,false,5836,LessEqualOptionsBuilder,681
314392,TYPE_DECL,ANY,,,typedef LessEqualOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,5837,Table,1
314444,TYPE_DECL,,,,"struct NegOptionsBuilder {
  typedef NegOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit NegOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<NegOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<NegOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.NegOptionsBuilder,,false,5865,NegOptionsBuilder,684
314445,TYPE_DECL,ANY,,,typedef NegOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,5866,Table,1
314497,TYPE_DECL,,,,"struct SelectOptionsBuilder {
  typedef SelectOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit SelectOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SelectOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SelectOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SelectOptionsBuilder,,false,5894,SelectOptionsBuilder,687
314498,TYPE_DECL,ANY,,,typedef SelectOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,5895,Table,1
314550,TYPE_DECL,,,,"struct SliceOptionsBuilder {
  typedef SliceOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit SliceOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SliceOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SliceOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SliceOptionsBuilder,,false,5923,SliceOptionsBuilder,690
314551,TYPE_DECL,ANY,,,typedef SliceOptions Table;,24,misc\tflite\schema_generated.hpp,Table,,false,5924,Table,1
314603,TYPE_DECL,,,,"struct TransposeConvOptionsBuilder {
  typedef TransposeConvOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_padding(opencv_tflite::Padding padding) {
    fbb_.AddElement<int8_t>(TransposeConvOptions::VT_PADDING, static_cast<int8_t>(padding), 0);
  }
  void add_stride_w(int32_t stride_w) {
    fbb_.AddElement<int32_t>(TransposeConvOptions::VT_STRIDE_W, stride_w, 0);
  }
  void add_stride_h(int32_t stride_h) {
    fbb_.AddElement<int32_t>(TransposeConvOptions::VT_STRIDE_H, stride_h, 0);
  }
  void add_fused_activation_function(opencv_tflite::ActivationFunctionType fused_activation_function) {
    fbb_.AddElement<int8_t>(TransposeConvOptions::VT_FUSED_ACTIVATION_FUNCTION, static_cast<int8_t>(fused_activation_function), 0);
  }
  explicit TransposeConvOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TransposeConvOptions> Finish() {
    const aut...",1,misc\tflite\schema_generated.hpp,opencv_tflite.TransposeConvOptionsBuilder,,false,5974,TransposeConvOptionsBuilder,693
314604,TYPE_DECL,ANY,,,typedef TransposeConvOptions Table;,32,misc\tflite\schema_generated.hpp,Table,,false,5975,Table,1
314756,TYPE_DECL,,,,"struct ExpandDimsOptionsBuilder {
  typedef ExpandDimsOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit ExpandDimsOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ExpandDimsOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ExpandDimsOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ExpandDimsOptionsBuilder,,false,6023,ExpandDimsOptionsBuilder,696
314757,TYPE_DECL,ANY,,,typedef ExpandDimsOptions Table;,29,misc\tflite\schema_generated.hpp,Table,,false,6024,Table,1
314809,TYPE_DECL,,,,"struct SparseToDenseOptionsBuilder {
  typedef SparseToDenseOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_validate_indices(bool validate_indices) {
    fbb_.AddElement<uint8_t>(SparseToDenseOptions::VT_VALIDATE_INDICES, static_cast<uint8_t>(validate_indices), 0);
  }
  explicit SparseToDenseOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SparseToDenseOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SparseToDenseOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SparseToDenseOptionsBuilder,,false,6059,SparseToDenseOptionsBuilder,699
314810,TYPE_DECL,ANY,,,typedef SparseToDenseOptions Table;,32,misc\tflite\schema_generated.hpp,Table,,false,6060,Table,1
314888,TYPE_DECL,,,,"struct EqualOptionsBuilder {
  typedef EqualOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit EqualOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<EqualOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<EqualOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.EqualOptionsBuilder,,false,6093,EqualOptionsBuilder,702
314889,TYPE_DECL,ANY,,,typedef EqualOptions Table;,24,misc\tflite\schema_generated.hpp,Table,,false,6094,Table,1
314941,TYPE_DECL,,,,"struct NotEqualOptionsBuilder {
  typedef NotEqualOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit NotEqualOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<NotEqualOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<NotEqualOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.NotEqualOptionsBuilder,,false,6122,NotEqualOptionsBuilder,705
314942,TYPE_DECL,ANY,,,typedef NotEqualOptions Table;,27,misc\tflite\schema_generated.hpp,Table,,false,6123,Table,1
314994,TYPE_DECL,,,,"struct ShapeOptionsBuilder {
  typedef ShapeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_out_type(opencv_tflite::TensorType out_type) {
    fbb_.AddElement<int8_t>(ShapeOptions::VT_OUT_TYPE, static_cast<int8_t>(out_type), 0);
  }
  explicit ShapeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ShapeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ShapeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ShapeOptionsBuilder,,false,6158,ShapeOptionsBuilder,708
314995,TYPE_DECL,ANY,,,typedef ShapeOptions Table;,24,misc\tflite\schema_generated.hpp,Table,,false,6159,Table,1
315073,TYPE_DECL,,,,"struct RankOptionsBuilder {
  typedef RankOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit RankOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<RankOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<RankOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.RankOptionsBuilder,,false,6192,RankOptionsBuilder,711
315074,TYPE_DECL,ANY,,,typedef RankOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,6193,Table,1
315126,TYPE_DECL,,,,"struct PowOptionsBuilder {
  typedef PowOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit PowOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<PowOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<PowOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.PowOptionsBuilder,,false,6221,PowOptionsBuilder,714
315127,TYPE_DECL,ANY,,,typedef PowOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,6222,Table,1
315179,TYPE_DECL,,,,"struct FakeQuantOptionsBuilder {
  typedef FakeQuantOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_min(float min) {
    fbb_.AddElement<float>(FakeQuantOptions::VT_MIN, min, 0.0f);
  }
  void add_max(float max) {
    fbb_.AddElement<float>(FakeQuantOptions::VT_MAX, max, 0.0f);
  }
  void add_num_bits(int32_t num_bits) {
    fbb_.AddElement<int32_t>(FakeQuantOptions::VT_NUM_BITS, num_bits, 0);
  }
  void add_narrow_range(bool narrow_range) {
    fbb_.AddElement<uint8_t>(FakeQuantOptions::VT_NARROW_RANGE, static_cast<uint8_t>(narrow_range), 0);
  }
  explicit FakeQuantOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<FakeQuantOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<FakeQuantOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.FakeQuantOptionsBuilder,,false,6272,FakeQuantOptionsBuilder,717
315180,TYPE_DECL,ANY,,,typedef FakeQuantOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,6273,Table,1
315322,TYPE_DECL,,,,"struct PackOptionsBuilder {
  typedef PackOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_values_count(int32_t values_count) {
    fbb_.AddElement<int32_t>(PackOptions::VT_VALUES_COUNT, values_count, 0);
  }
  void add_axis(int32_t axis) {
    fbb_.AddElement<int32_t>(PackOptions::VT_AXIS, axis, 0);
  }
  explicit PackOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<PackOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<PackOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.PackOptionsBuilder,,false,6333,PackOptionsBuilder,720
315323,TYPE_DECL,ANY,,,typedef PackOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,6334,Table,1
315423,TYPE_DECL,,,,"struct LogicalOrOptionsBuilder {
  typedef LogicalOrOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit LogicalOrOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LogicalOrOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LogicalOrOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalOrOptionsBuilder,,false,6372,LogicalOrOptionsBuilder,723
315424,TYPE_DECL,ANY,,,typedef LogicalOrOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,6373,Table,1
315476,TYPE_DECL,,,,"struct OneHotOptionsBuilder {
  typedef OneHotOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_axis(int32_t axis) {
    fbb_.AddElement<int32_t>(OneHotOptions::VT_AXIS, axis, 0);
  }
  explicit OneHotOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<OneHotOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<OneHotOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.OneHotOptionsBuilder,,false,6408,OneHotOptionsBuilder,726
315477,TYPE_DECL,ANY,,,typedef OneHotOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,6409,Table,1
315553,TYPE_DECL,,,,"struct AbsOptionsBuilder {
  typedef AbsOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit AbsOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<AbsOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<AbsOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.AbsOptionsBuilder,,false,6442,AbsOptionsBuilder,729
315554,TYPE_DECL,ANY,,,typedef AbsOptions Table;,22,misc\tflite\schema_generated.hpp,Table,,false,6443,Table,1
315606,TYPE_DECL,,,,"struct HardSwishOptionsBuilder {
  typedef HardSwishOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit HardSwishOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<HardSwishOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<HardSwishOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.HardSwishOptionsBuilder,,false,6471,HardSwishOptionsBuilder,732
315607,TYPE_DECL,ANY,,,typedef HardSwishOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,6472,Table,1
315659,TYPE_DECL,,,,"struct LogicalAndOptionsBuilder {
  typedef LogicalAndOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit LogicalAndOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LogicalAndOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LogicalAndOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalAndOptionsBuilder,,false,6500,LogicalAndOptionsBuilder,735
315660,TYPE_DECL,ANY,,,typedef LogicalAndOptions Table;,29,misc\tflite\schema_generated.hpp,Table,,false,6501,Table,1
315712,TYPE_DECL,,,,"struct LogicalNotOptionsBuilder {
  typedef LogicalNotOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit LogicalNotOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LogicalNotOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LogicalNotOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LogicalNotOptionsBuilder,,false,6529,LogicalNotOptionsBuilder,738
315713,TYPE_DECL,ANY,,,typedef LogicalNotOptions Table;,29,misc\tflite\schema_generated.hpp,Table,,false,6530,Table,1
315765,TYPE_DECL,,,,"struct UnpackOptionsBuilder {
  typedef UnpackOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_num(int32_t num) {
    fbb_.AddElement<int32_t>(UnpackOptions::VT_NUM, num, 0);
  }
  void add_axis(int32_t axis) {
    fbb_.AddElement<int32_t>(UnpackOptions::VT_AXIS, axis, 0);
  }
  explicit UnpackOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<UnpackOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<UnpackOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.UnpackOptionsBuilder,,false,6570,UnpackOptionsBuilder,741
315766,TYPE_DECL,ANY,,,typedef UnpackOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,6571,Table,1
315866,TYPE_DECL,,,,"struct FloorDivOptionsBuilder {
  typedef FloorDivOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit FloorDivOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<FloorDivOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<FloorDivOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.FloorDivOptionsBuilder,,false,6609,FloorDivOptionsBuilder,744
315867,TYPE_DECL,ANY,,,typedef FloorDivOptions Table;,27,misc\tflite\schema_generated.hpp,Table,,false,6610,Table,1
315919,TYPE_DECL,,,,"struct SquareOptionsBuilder {
  typedef SquareOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit SquareOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SquareOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SquareOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SquareOptionsBuilder,,false,6638,SquareOptionsBuilder,747
315920,TYPE_DECL,ANY,,,typedef SquareOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,6639,Table,1
315972,TYPE_DECL,,,,"struct ZerosLikeOptionsBuilder {
  typedef ZerosLikeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit ZerosLikeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ZerosLikeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ZerosLikeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ZerosLikeOptionsBuilder,,false,6667,ZerosLikeOptionsBuilder,750
315973,TYPE_DECL,ANY,,,typedef ZerosLikeOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,6668,Table,1
316025,TYPE_DECL,,,,"struct FillOptionsBuilder {
  typedef FillOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit FillOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<FillOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<FillOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.FillOptionsBuilder,,false,6696,FillOptionsBuilder,753
316026,TYPE_DECL,ANY,,,typedef FillOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,6697,Table,1
316078,TYPE_DECL,,,,"struct FloorModOptionsBuilder {
  typedef FloorModOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit FloorModOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<FloorModOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<FloorModOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.FloorModOptionsBuilder,,false,6725,FloorModOptionsBuilder,756
316079,TYPE_DECL,ANY,,,typedef FloorModOptions Table;,27,misc\tflite\schema_generated.hpp,Table,,false,6726,Table,1
316131,TYPE_DECL,,,,"struct RangeOptionsBuilder {
  typedef RangeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit RangeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<RangeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<RangeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.RangeOptionsBuilder,,false,6754,RangeOptionsBuilder,759
316132,TYPE_DECL,ANY,,,typedef RangeOptions Table;,24,misc\tflite\schema_generated.hpp,Table,,false,6755,Table,1
316184,TYPE_DECL,,,,"struct LeakyReluOptionsBuilder {
  typedef LeakyReluOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_alpha(float alpha) {
    fbb_.AddElement<float>(LeakyReluOptions::VT_ALPHA, alpha, 0.0f);
  }
  explicit LeakyReluOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<LeakyReluOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<LeakyReluOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.LeakyReluOptionsBuilder,,false,6790,LeakyReluOptionsBuilder,762
316185,TYPE_DECL,ANY,,,typedef LeakyReluOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,6791,Table,1
316257,TYPE_DECL,,,,"struct SquaredDifferenceOptionsBuilder {
  typedef SquaredDifferenceOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit SquaredDifferenceOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SquaredDifferenceOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SquaredDifferenceOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SquaredDifferenceOptionsBuilder,,false,6824,SquaredDifferenceOptionsBuilder,765
316258,TYPE_DECL,ANY,,,typedef SquaredDifferenceOptions Table;,36,misc\tflite\schema_generated.hpp,Table,,false,6825,Table,1
316310,TYPE_DECL,,,,"struct MirrorPadOptionsBuilder {
  typedef MirrorPadOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_mode(opencv_tflite::MirrorPadMode mode) {
    fbb_.AddElement<int8_t>(MirrorPadOptions::VT_MODE, static_cast<int8_t>(mode), 0);
  }
  explicit MirrorPadOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<MirrorPadOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<MirrorPadOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.MirrorPadOptionsBuilder,,false,6860,MirrorPadOptionsBuilder,768
316311,TYPE_DECL,ANY,,,typedef MirrorPadOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,6861,Table,1
316389,TYPE_DECL,,,,"struct UniqueOptionsBuilder {
  typedef UniqueOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_idx_out_type(opencv_tflite::TensorType idx_out_type) {
    fbb_.AddElement<int8_t>(UniqueOptions::VT_IDX_OUT_TYPE, static_cast<int8_t>(idx_out_type), 2);
  }
  explicit UniqueOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<UniqueOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<UniqueOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.UniqueOptionsBuilder,,false,6901,UniqueOptionsBuilder,771
316390,TYPE_DECL,ANY,,,typedef UniqueOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,6902,Table,1
316468,TYPE_DECL,,,,"struct ReverseV2OptionsBuilder {
  typedef ReverseV2Options Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit ReverseV2OptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ReverseV2Options> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ReverseV2Options>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ReverseV2OptionsBuilder,,false,6935,ReverseV2OptionsBuilder,774
316469,TYPE_DECL,ANY,,,typedef ReverseV2Options Table;,28,misc\tflite\schema_generated.hpp,Table,,false,6936,Table,1
316521,TYPE_DECL,,,,"struct AddNOptionsBuilder {
  typedef AddNOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit AddNOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<AddNOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<AddNOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.AddNOptionsBuilder,,false,6964,AddNOptionsBuilder,777
316522,TYPE_DECL,ANY,,,typedef AddNOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,6965,Table,1
316574,TYPE_DECL,,,,"struct GatherNdOptionsBuilder {
  typedef GatherNdOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit GatherNdOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<GatherNdOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<GatherNdOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.GatherNdOptionsBuilder,,false,6993,GatherNdOptionsBuilder,780
316575,TYPE_DECL,ANY,,,typedef GatherNdOptions Table;,27,misc\tflite\schema_generated.hpp,Table,,false,6994,Table,1
316627,TYPE_DECL,,,,"struct WhereOptionsBuilder {
  typedef WhereOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit WhereOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<WhereOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<WhereOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.WhereOptionsBuilder,,false,7022,WhereOptionsBuilder,783
316628,TYPE_DECL,ANY,,,typedef WhereOptions Table;,24,misc\tflite\schema_generated.hpp,Table,,false,7023,Table,1
316680,TYPE_DECL,,,,"struct ReverseSequenceOptionsBuilder {
  typedef ReverseSequenceOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_seq_dim(int32_t seq_dim) {
    fbb_.AddElement<int32_t>(ReverseSequenceOptions::VT_SEQ_DIM, seq_dim, 0);
  }
  void add_batch_dim(int32_t batch_dim) {
    fbb_.AddElement<int32_t>(ReverseSequenceOptions::VT_BATCH_DIM, batch_dim, 0);
  }
  explicit ReverseSequenceOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ReverseSequenceOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ReverseSequenceOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ReverseSequenceOptionsBuilder,,false,7063,ReverseSequenceOptionsBuilder,786
316681,TYPE_DECL,ANY,,,typedef ReverseSequenceOptions Table;,34,misc\tflite\schema_generated.hpp,Table,,false,7064,Table,1
316781,TYPE_DECL,,,,"struct MatrixDiagOptionsBuilder {
  typedef MatrixDiagOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit MatrixDiagOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<MatrixDiagOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<MatrixDiagOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.MatrixDiagOptionsBuilder,,false,7102,MatrixDiagOptionsBuilder,789
316782,TYPE_DECL,ANY,,,typedef MatrixDiagOptions Table;,29,misc\tflite\schema_generated.hpp,Table,,false,7103,Table,1
316834,TYPE_DECL,,,,"struct QuantizeOptionsBuilder {
  typedef QuantizeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit QuantizeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<QuantizeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<QuantizeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.QuantizeOptionsBuilder,,false,7131,QuantizeOptionsBuilder,792
316835,TYPE_DECL,ANY,,,typedef QuantizeOptions Table;,27,misc\tflite\schema_generated.hpp,Table,,false,7132,Table,1
316887,TYPE_DECL,,,,"struct MatrixSetDiagOptionsBuilder {
  typedef MatrixSetDiagOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit MatrixSetDiagOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<MatrixSetDiagOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<MatrixSetDiagOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.MatrixSetDiagOptionsBuilder,,false,7160,MatrixSetDiagOptionsBuilder,795
316888,TYPE_DECL,ANY,,,typedef MatrixSetDiagOptions Table;,32,misc\tflite\schema_generated.hpp,Table,,false,7161,Table,1
316940,TYPE_DECL,,,,"struct IfOptionsBuilder {
  typedef IfOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_then_subgraph_index(int32_t then_subgraph_index) {
    fbb_.AddElement<int32_t>(IfOptions::VT_THEN_SUBGRAPH_INDEX, then_subgraph_index, 0);
  }
  void add_else_subgraph_index(int32_t else_subgraph_index) {
    fbb_.AddElement<int32_t>(IfOptions::VT_ELSE_SUBGRAPH_INDEX, else_subgraph_index, 0);
  }
  explicit IfOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<IfOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<IfOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.IfOptionsBuilder,,false,7201,IfOptionsBuilder,798
316941,TYPE_DECL,ANY,,,typedef IfOptions Table;,21,misc\tflite\schema_generated.hpp,Table,,false,7202,Table,1
317041,TYPE_DECL,,,,"struct CallOnceOptionsBuilder {
  typedef CallOnceOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_init_subgraph_index(int32_t init_subgraph_index) {
    fbb_.AddElement<int32_t>(CallOnceOptions::VT_INIT_SUBGRAPH_INDEX, init_subgraph_index, 0);
  }
  explicit CallOnceOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<CallOnceOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<CallOnceOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.CallOnceOptionsBuilder,,false,7247,CallOnceOptionsBuilder,801
317042,TYPE_DECL,ANY,,,typedef CallOnceOptions Table;,27,misc\tflite\schema_generated.hpp,Table,,false,7248,Table,1
317118,TYPE_DECL,,,,"struct WhileOptionsBuilder {
  typedef WhileOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_cond_subgraph_index(int32_t cond_subgraph_index) {
    fbb_.AddElement<int32_t>(WhileOptions::VT_COND_SUBGRAPH_INDEX, cond_subgraph_index, 0);
  }
  void add_body_subgraph_index(int32_t body_subgraph_index) {
    fbb_.AddElement<int32_t>(WhileOptions::VT_BODY_SUBGRAPH_INDEX, body_subgraph_index, 0);
  }
  explicit WhileOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<WhileOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<WhileOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.WhileOptionsBuilder,,false,7293,WhileOptionsBuilder,804
317119,TYPE_DECL,ANY,,,typedef WhileOptions Table;,24,misc\tflite\schema_generated.hpp,Table,,false,7294,Table,1
317219,TYPE_DECL,,,,"struct NonMaxSuppressionV4OptionsBuilder {
  typedef NonMaxSuppressionV4Options Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit NonMaxSuppressionV4OptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<NonMaxSuppressionV4Options> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<NonMaxSuppressionV4Options>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.NonMaxSuppressionV4OptionsBuilder,,false,7332,NonMaxSuppressionV4OptionsBuilder,807
317220,TYPE_DECL,ANY,,,typedef NonMaxSuppressionV4Options Table;,38,misc\tflite\schema_generated.hpp,Table,,false,7333,Table,1
317272,TYPE_DECL,,,,"struct NonMaxSuppressionV5OptionsBuilder {
  typedef NonMaxSuppressionV5Options Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit NonMaxSuppressionV5OptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<NonMaxSuppressionV5Options> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<NonMaxSuppressionV5Options>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.NonMaxSuppressionV5OptionsBuilder,,false,7361,NonMaxSuppressionV5OptionsBuilder,810
317273,TYPE_DECL,ANY,,,typedef NonMaxSuppressionV5Options Table;,38,misc\tflite\schema_generated.hpp,Table,,false,7362,Table,1
317325,TYPE_DECL,,,,"struct ScatterNdOptionsBuilder {
  typedef ScatterNdOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit ScatterNdOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ScatterNdOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ScatterNdOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ScatterNdOptionsBuilder,,false,7390,ScatterNdOptionsBuilder,813
317326,TYPE_DECL,ANY,,,typedef ScatterNdOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,7391,Table,1
317378,TYPE_DECL,,,,"struct SelectV2OptionsBuilder {
  typedef SelectV2Options Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit SelectV2OptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SelectV2Options> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SelectV2Options>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SelectV2OptionsBuilder,,false,7419,SelectV2OptionsBuilder,816
317379,TYPE_DECL,ANY,,,typedef SelectV2Options Table;,27,misc\tflite\schema_generated.hpp,Table,,false,7420,Table,1
317431,TYPE_DECL,,,,"struct DensifyOptionsBuilder {
  typedef DensifyOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit DensifyOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<DensifyOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<DensifyOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.DensifyOptionsBuilder,,false,7448,DensifyOptionsBuilder,819
317432,TYPE_DECL,ANY,,,typedef DensifyOptions Table;,26,misc\tflite\schema_generated.hpp,Table,,false,7449,Table,1
317484,TYPE_DECL,,,,"struct SegmentSumOptionsBuilder {
  typedef SegmentSumOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit SegmentSumOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SegmentSumOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SegmentSumOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SegmentSumOptionsBuilder,,false,7477,SegmentSumOptionsBuilder,822
317485,TYPE_DECL,ANY,,,typedef SegmentSumOptions Table;,29,misc\tflite\schema_generated.hpp,Table,,false,7478,Table,1
317537,TYPE_DECL,,,,"struct BatchMatMulOptionsBuilder {
  typedef BatchMatMulOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_adj_x(bool adj_x) {
    fbb_.AddElement<uint8_t>(BatchMatMulOptions::VT_ADJ_X, static_cast<uint8_t>(adj_x), 0);
  }
  void add_adj_y(bool adj_y) {
    fbb_.AddElement<uint8_t>(BatchMatMulOptions::VT_ADJ_Y, static_cast<uint8_t>(adj_y), 0);
  }
  void add_asymmetric_quantize_inputs(bool asymmetric_quantize_inputs) {
    fbb_.AddElement<uint8_t>(BatchMatMulOptions::VT_ASYMMETRIC_QUANTIZE_INPUTS, static_cast<uint8_t>(asymmetric_quantize_inputs), 0);
  }
  explicit BatchMatMulOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<BatchMatMulOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<BatchMatMulOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.BatchMatMulOptionsBuilder,,false,7523,BatchMatMulOptionsBuilder,825
317538,TYPE_DECL,ANY,,,typedef BatchMatMulOptions Table;,30,misc\tflite\schema_generated.hpp,Table,,false,7524,Table,1
317668,TYPE_DECL,,,,"struct CumsumOptionsBuilder {
  typedef CumsumOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_exclusive(bool exclusive) {
    fbb_.AddElement<uint8_t>(CumsumOptions::VT_EXCLUSIVE, static_cast<uint8_t>(exclusive), 0);
  }
  void add_reverse(bool reverse) {
    fbb_.AddElement<uint8_t>(CumsumOptions::VT_REVERSE, static_cast<uint8_t>(reverse), 0);
  }
  explicit CumsumOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<CumsumOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<CumsumOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.CumsumOptionsBuilder,,false,7579,CumsumOptionsBuilder,828
317669,TYPE_DECL,ANY,,,typedef CumsumOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,7580,Table,1
317773,TYPE_DECL,,,,"struct BroadcastToOptionsBuilder {
  typedef BroadcastToOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit BroadcastToOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<BroadcastToOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<BroadcastToOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.BroadcastToOptionsBuilder,,false,7618,BroadcastToOptionsBuilder,831
317774,TYPE_DECL,ANY,,,typedef BroadcastToOptions Table;,30,misc\tflite\schema_generated.hpp,Table,,false,7619,Table,1
317826,TYPE_DECL,,,,"struct Rfft2dOptionsBuilder {
  typedef Rfft2dOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit Rfft2dOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<Rfft2dOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<Rfft2dOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.Rfft2dOptionsBuilder,,false,7647,Rfft2dOptionsBuilder,834
317827,TYPE_DECL,ANY,,,typedef Rfft2dOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,7648,Table,1
317879,TYPE_DECL,,,,"struct HashtableOptionsBuilder {
  typedef HashtableOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_table_id(int32_t table_id) {
    fbb_.AddElement<int32_t>(HashtableOptions::VT_TABLE_ID, table_id, 0);
  }
  void add_key_dtype(opencv_tflite::TensorType key_dtype) {
    fbb_.AddElement<int8_t>(HashtableOptions::VT_KEY_DTYPE, static_cast<int8_t>(key_dtype), 0);
  }
  void add_value_dtype(opencv_tflite::TensorType value_dtype) {
    fbb_.AddElement<int8_t>(HashtableOptions::VT_VALUE_DTYPE, static_cast<int8_t>(value_dtype), 0);
  }
  explicit HashtableOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<HashtableOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<HashtableOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableOptionsBuilder,,false,7693,HashtableOptionsBuilder,837
317880,TYPE_DECL,ANY,,,typedef HashtableOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,7694,Table,1
318008,TYPE_DECL,,,,"struct HashtableFindOptionsBuilder {
  typedef HashtableFindOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit HashtableFindOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<HashtableFindOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<HashtableFindOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableFindOptionsBuilder,,false,7737,HashtableFindOptionsBuilder,840
318009,TYPE_DECL,ANY,,,typedef HashtableFindOptions Table;,32,misc\tflite\schema_generated.hpp,Table,,false,7738,Table,1
318061,TYPE_DECL,,,,"struct HashtableImportOptionsBuilder {
  typedef HashtableImportOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit HashtableImportOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<HashtableImportOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<HashtableImportOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableImportOptionsBuilder,,false,7766,HashtableImportOptionsBuilder,843
318062,TYPE_DECL,ANY,,,typedef HashtableImportOptions Table;,34,misc\tflite\schema_generated.hpp,Table,,false,7767,Table,1
318114,TYPE_DECL,,,,"struct HashtableSizeOptionsBuilder {
  typedef HashtableSizeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit HashtableSizeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<HashtableSizeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<HashtableSizeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.HashtableSizeOptionsBuilder,,false,7795,HashtableSizeOptionsBuilder,846
318115,TYPE_DECL,ANY,,,typedef HashtableSizeOptions Table;,32,misc\tflite\schema_generated.hpp,Table,,false,7796,Table,1
318167,TYPE_DECL,,,,"struct VarHandleOptionsBuilder {
  typedef VarHandleOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_container(::flatbuffers::Offset<::flatbuffers::String> container) {
    fbb_.AddOffset(VarHandleOptions::VT_CONTAINER, container);
  }
  void add_shared_name(::flatbuffers::Offset<::flatbuffers::String> shared_name) {
    fbb_.AddOffset(VarHandleOptions::VT_SHARED_NAME, shared_name);
  }
  explicit VarHandleOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<VarHandleOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<VarHandleOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.VarHandleOptionsBuilder,,false,7838,VarHandleOptionsBuilder,849
318168,TYPE_DECL,ANY,,,typedef VarHandleOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,7839,Table,1
318295,TYPE_DECL,,,,"struct ReadVariableOptionsBuilder {
  typedef ReadVariableOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit ReadVariableOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ReadVariableOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ReadVariableOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ReadVariableOptionsBuilder,,false,7889,ReadVariableOptionsBuilder,853
318296,TYPE_DECL,ANY,,,typedef ReadVariableOptions Table;,31,misc\tflite\schema_generated.hpp,Table,,false,7890,Table,1
318348,TYPE_DECL,,,,"struct AssignVariableOptionsBuilder {
  typedef AssignVariableOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit AssignVariableOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<AssignVariableOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<AssignVariableOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.AssignVariableOptionsBuilder,,false,7918,AssignVariableOptionsBuilder,856
318349,TYPE_DECL,ANY,,,typedef AssignVariableOptions Table;,33,misc\tflite\schema_generated.hpp,Table,,false,7919,Table,1
318401,TYPE_DECL,,,,"struct RandomOptionsBuilder {
  typedef RandomOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_seed(int64_t seed) {
    fbb_.AddElement<int64_t>(RandomOptions::VT_SEED, seed, 0);
  }
  void add_seed2(int64_t seed2) {
    fbb_.AddElement<int64_t>(RandomOptions::VT_SEED2, seed2, 0);
  }
  explicit RandomOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<RandomOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<RandomOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.RandomOptionsBuilder,,false,7959,RandomOptionsBuilder,859
318402,TYPE_DECL,ANY,,,typedef RandomOptions Table;,25,misc\tflite\schema_generated.hpp,Table,,false,7960,Table,1
318502,TYPE_DECL,,,,"struct BucketizeOptionsBuilder {
  typedef BucketizeOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_boundaries(::flatbuffers::Offset<::flatbuffers::Vector<float>> boundaries) {
    fbb_.AddOffset(BucketizeOptions::VT_BOUNDARIES, boundaries);
  }
  explicit BucketizeOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<BucketizeOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<BucketizeOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.BucketizeOptionsBuilder,,false,8006,BucketizeOptionsBuilder,862
318503,TYPE_DECL,ANY,,,typedef BucketizeOptions Table;,28,misc\tflite\schema_generated.hpp,Table,,false,8007,Table,1
318599,TYPE_DECL,,,,"struct GeluOptionsBuilder {
  typedef GeluOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_approximate(bool approximate) {
    fbb_.AddElement<uint8_t>(GeluOptions::VT_APPROXIMATE, static_cast<uint8_t>(approximate), 0);
  }
  explicit GeluOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<GeluOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<GeluOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.GeluOptionsBuilder,,false,8056,GeluOptionsBuilder,866
318600,TYPE_DECL,ANY,,,typedef GeluOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,8057,Table,1
318678,TYPE_DECL,,,,"struct DynamicUpdateSliceOptionsBuilder {
  typedef DynamicUpdateSliceOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit DynamicUpdateSliceOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<DynamicUpdateSliceOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<DynamicUpdateSliceOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.DynamicUpdateSliceOptionsBuilder,,false,8090,DynamicUpdateSliceOptionsBuilder,869
318679,TYPE_DECL,ANY,,,typedef DynamicUpdateSliceOptions Table;,37,misc\tflite\schema_generated.hpp,Table,,false,8091,Table,1
318731,TYPE_DECL,,,,"struct UnsortedSegmentProdOptionsBuilder {
  typedef UnsortedSegmentProdOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit UnsortedSegmentProdOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<UnsortedSegmentProdOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<UnsortedSegmentProdOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentProdOptionsBuilder,,false,8119,UnsortedSegmentProdOptionsBuilder,872
318732,TYPE_DECL,ANY,,,typedef UnsortedSegmentProdOptions Table;,38,misc\tflite\schema_generated.hpp,Table,,false,8120,Table,1
318784,TYPE_DECL,,,,"struct UnsortedSegmentMaxOptionsBuilder {
  typedef UnsortedSegmentMaxOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit UnsortedSegmentMaxOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<UnsortedSegmentMaxOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<UnsortedSegmentMaxOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentMaxOptionsBuilder,,false,8148,UnsortedSegmentMaxOptionsBuilder,875
318785,TYPE_DECL,ANY,,,typedef UnsortedSegmentMaxOptions Table;,37,misc\tflite\schema_generated.hpp,Table,,false,8149,Table,1
318837,TYPE_DECL,,,,"struct UnsortedSegmentSumOptionsBuilder {
  typedef UnsortedSegmentSumOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit UnsortedSegmentSumOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<UnsortedSegmentSumOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<UnsortedSegmentSumOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentSumOptionsBuilder,,false,8177,UnsortedSegmentSumOptionsBuilder,878
318838,TYPE_DECL,ANY,,,typedef UnsortedSegmentSumOptions Table;,37,misc\tflite\schema_generated.hpp,Table,,false,8178,Table,1
318890,TYPE_DECL,,,,"struct ATan2OptionsBuilder {
  typedef ATan2Options Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit ATan2OptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<ATan2Options> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<ATan2Options>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.ATan2OptionsBuilder,,false,8206,ATan2OptionsBuilder,881
318891,TYPE_DECL,ANY,,,typedef ATan2Options Table;,24,misc\tflite\schema_generated.hpp,Table,,false,8207,Table,1
318943,TYPE_DECL,,,,"struct UnsortedSegmentMinOptionsBuilder {
  typedef UnsortedSegmentMinOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit UnsortedSegmentMinOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<UnsortedSegmentMinOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<UnsortedSegmentMinOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.UnsortedSegmentMinOptionsBuilder,,false,8235,UnsortedSegmentMinOptionsBuilder,884
318944,TYPE_DECL,ANY,,,typedef UnsortedSegmentMinOptions Table;,37,misc\tflite\schema_generated.hpp,Table,,false,8236,Table,1
318996,TYPE_DECL,,,,"struct SignOptionsBuilder {
  typedef SignOptions Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  explicit SignOptionsBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SignOptions> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SignOptions>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.SignOptionsBuilder,,false,8264,SignOptionsBuilder,887
318997,TYPE_DECL,ANY,,,typedef SignOptions Table;,23,misc\tflite\schema_generated.hpp,Table,,false,8265,Table,1
319049,TYPE_DECL,,,,"struct OperatorCodeBuilder {
  typedef OperatorCode Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_deprecated_builtin_code(int8_t deprecated_builtin_code) {
    fbb_.AddElement<int8_t>(OperatorCode::VT_DEPRECATED_BUILTIN_CODE, deprecated_builtin_code, 0);
  }
  void add_custom_code(::flatbuffers::Offset<::flatbuffers::String> custom_code) {
    fbb_.AddOffset(OperatorCode::VT_CUSTOM_CODE, custom_code);
  }
  void add_version(int32_t version) {
    fbb_.AddElement<int32_t>(OperatorCode::VT_VERSION, version, 1);
  }
  void add_builtin_code(opencv_tflite::BuiltinOperator builtin_code) {
    fbb_.AddElement<int32_t>(OperatorCode::VT_BUILTIN_CODE, static_cast<int32_t>(builtin_code), 0);
  }
  explicit OperatorCodeBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<OperatorCode> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Off...",1,misc\tflite\schema_generated.hpp,opencv_tflite.OperatorCodeBuilder,,false,8316,OperatorCodeBuilder,890
319050,TYPE_DECL,ANY,,,typedef OperatorCode Table;,24,misc\tflite\schema_generated.hpp,Table,,false,8317,Table,1
319963,TYPE_DECL,,,,"struct OperatorBuilder {
  typedef Operator Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_opcode_index(uint32_t opcode_index) {
    fbb_.AddElement<uint32_t>(Operator::VT_OPCODE_INDEX, opcode_index, 0);
  }
  void add_inputs(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> inputs) {
    fbb_.AddOffset(Operator::VT_INPUTS, inputs);
  }
  void add_outputs(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> outputs) {
    fbb_.AddOffset(Operator::VT_OUTPUTS, outputs);
  }
  void add_builtin_options_type(opencv_tflite::BuiltinOptions builtin_options_type) {
    fbb_.AddElement<uint8_t>(Operator::VT_BUILTIN_OPTIONS_TYPE, static_cast<uint8_t>(builtin_options_type), 0);
  }
  void add_builtin_options(::flatbuffers::Offset<void> builtin_options) {
    fbb_.AddOffset(Operator::VT_BUILTIN_OPTIONS, builtin_options);
  }
  void add_custom_options(::flatbuffers::Offset<::flatbuffers::Vector<uint8_t>> custom_options) {
    fbb_.AddOffset(Ope...",1,misc\tflite\schema_generated.hpp,opencv_tflite.OperatorBuilder,,false,9295,OperatorBuilder,1017
319964,TYPE_DECL,ANY,,,typedef Operator Table;,20,misc\tflite\schema_generated.hpp,Table,,false,9296,Table,1
320305,TYPE_DECL,,,,"struct SubGraphBuilder {
  typedef SubGraph Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_tensors(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<opencv_tflite::Tensor>>> tensors) {
    fbb_.AddOffset(SubGraph::VT_TENSORS, tensors);
  }
  void add_inputs(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> inputs) {
    fbb_.AddOffset(SubGraph::VT_INPUTS, inputs);
  }
  void add_outputs(::flatbuffers::Offset<::flatbuffers::Vector<int32_t>> outputs) {
    fbb_.AddOffset(SubGraph::VT_OUTPUTS, outputs);
  }
  void add_operators(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<opencv_tflite::Operator>>> operators) {
    fbb_.AddOffset(SubGraph::VT_OPERATORS, operators);
  }
  void add_name(::flatbuffers::Offset<::flatbuffers::String> name) {
    fbb_.AddOffset(SubGraph::VT_NAME, name);
  }
  explicit SubGraphBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTa...",1,misc\tflite\schema_generated.hpp,opencv_tflite.SubGraphBuilder,,false,9432,SubGraphBuilder,1021
320306,TYPE_DECL,ANY,,,typedef SubGraph Table;,20,misc\tflite\schema_generated.hpp,Table,,false,9433,Table,1
320553,TYPE_DECL,,,,"struct BufferBuilder {
  typedef Buffer Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_data(::flatbuffers::Offset<::flatbuffers::Vector<uint8_t>> data) {
    fbb_.AddOffset(Buffer::VT_DATA, data);
  }
  explicit BufferBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<Buffer> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<Buffer>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.BufferBuilder,,false,9515,BufferBuilder,1025
320554,TYPE_DECL,ANY,,,typedef Buffer Table;,18,misc\tflite\schema_generated.hpp,Table,,false,9516,Table,1
320666,TYPE_DECL,,,,"struct MetadataBuilder {
  typedef Metadata Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_name(::flatbuffers::Offset<::flatbuffers::String> name) {
    fbb_.AddOffset(Metadata::VT_NAME, name);
  }
  void add_buffer(uint32_t buffer) {
    fbb_.AddElement<uint32_t>(Metadata::VT_BUFFER, buffer, 0);
  }
  explicit MetadataBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<Metadata> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<Metadata>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.MetadataBuilder,,false,9572,MetadataBuilder,1029
320667,TYPE_DECL,ANY,,,typedef Metadata Table;,20,misc\tflite\schema_generated.hpp,Table,,false,9573,Table,1
320788,TYPE_DECL,,,,"struct TensorMapBuilder {
  typedef TensorMap Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_name(::flatbuffers::Offset<::flatbuffers::String> name) {
    fbb_.AddOffset(TensorMap::VT_NAME, name);
  }
  void add_tensor_index(uint32_t tensor_index) {
    fbb_.AddElement<uint32_t>(TensorMap::VT_TENSOR_INDEX, tensor_index, 0);
  }
  explicit TensorMapBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TensorMap> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TensorMap>(end);
    return o;
  }
}",1,misc\tflite\schema_generated.hpp,opencv_tflite.TensorMapBuilder,,false,9635,TensorMapBuilder,1033
320789,TYPE_DECL,ANY,,,typedef TensorMap Table;,21,misc\tflite\schema_generated.hpp,Table,,false,9636,Table,1
320910,TYPE_DECL,,,,"struct SignatureDefBuilder {
  typedef SignatureDef Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_inputs(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<opencv_tflite::TensorMap>>> inputs) {
    fbb_.AddOffset(SignatureDef::VT_INPUTS, inputs);
  }
  void add_outputs(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<opencv_tflite::TensorMap>>> outputs) {
    fbb_.AddOffset(SignatureDef::VT_OUTPUTS, outputs);
  }
  void add_signature_key(::flatbuffers::Offset<::flatbuffers::String> signature_key) {
    fbb_.AddOffset(SignatureDef::VT_SIGNATURE_KEY, signature_key);
  }
  void add_subgraph_index(uint32_t subgraph_index) {
    fbb_.AddElement<uint32_t>(SignatureDef::VT_SUBGRAPH_INDEX, subgraph_index, 0);
  }
  explicit SignatureDefBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SignatureDef> Finish() {
    const auto end = f...",1,misc\tflite\schema_generated.hpp,opencv_tflite.SignatureDefBuilder,,false,9712,SignatureDefBuilder,1037
320911,TYPE_DECL,ANY,,,typedef SignatureDef Table;,24,misc\tflite\schema_generated.hpp,Table,,false,9713,Table,1
321114,TYPE_DECL,,,,"struct ModelBuilder {
  typedef Model Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_version(uint32_t version) {
    fbb_.AddElement<uint32_t>(Model::VT_VERSION, version, 0);
  }
  void add_operator_codes(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<opencv_tflite::OperatorCode>>> operator_codes) {
    fbb_.AddOffset(Model::VT_OPERATOR_CODES, operator_codes);
  }
  void add_subgraphs(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<opencv_tflite::SubGraph>>> subgraphs) {
    fbb_.AddOffset(Model::VT_SUBGRAPHS, subgraphs);
  }
  void add_description(::flatbuffers::Offset<::flatbuffers::String> description) {
    fbb_.AddOffset(Model::VT_DESCRIPTION, description);
  }
  void add_buffers(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<opencv_tflite::Buffer>>> buffers) {
    fbb_.AddOffset(Model::VT_BUFFERS, buffers);
  }
  void add_metadata_buffer(::flatbuffers::Offset<::flatbuffers::...",1,misc\tflite\schema_generated.hpp,opencv_tflite.ModelBuilder,,false,9832,ModelBuilder,1041
321115,TYPE_DECL,ANY,,,typedef Model Table;,17,misc\tflite\schema_generated.hpp,Table,,false,9833,Table,1
323770,TYPE_DECL,,perf\perf_caffe.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_caffe.cpp,perf\perf_caffe.cpp:<global>,,false,1,<global>,4
323779,TYPE_DECL,,perf\perf_common.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_common.cpp,perf\perf_common.cpp:<global>,,false,1,<global>,3
323790,TYPE_DECL,,perf\perf_convolution.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_convolution.cpp,perf\perf_convolution.cpp:<global>,,false,1,<global>,4
323794,TYPE_DECL,,,,"struct TestSize_ {
    int width, height;
    operator Size() const { return Size(width, height); }
}",1,perf\perf_convolution.cpp,opencv_test.TestSize_,,false,12,TestSize_,1
323805,TYPE_DECL,,,,"struct ConvParam_t {
    struct TestSize_ kernel;
    struct BlobShape { int dims[4]; } shapeIn;
    int outCN;
    int groups;
    struct TestSize_ stride;
    struct TestSize_ dilation;
    struct TestSize_ pad;
    struct TestSize_ padAdjust;
    const char* padMode;
    bool hasBias;
    double declared_flops;
}",1,perf\perf_convolution.cpp,opencv_test.ConvParam_t,,false,16,ConvParam_t,2
323806,TYPE_DECL,kernel,,,struct TestSize_,5,perf\perf_convolution.cpp,opencv_test.ConvParam_t.TestSize_,,false,17,TestSize_,1
323808,TYPE_DECL,shapeIn,,,struct BlobShape { int dims[4]; },5,perf\perf_convolution.cpp,opencv_test.ConvParam_t.BlobShape,,false,18,BlobShape,3
323819,TYPE_DECL,stride,,,struct TestSize_,5,perf\perf_convolution.cpp,opencv_test.ConvParam_t.TestSize_,,false,21,TestSize_,7
323821,TYPE_DECL,dilation,,,struct TestSize_,5,perf\perf_convolution.cpp,opencv_test.ConvParam_t.TestSize_,,false,22,TestSize_,9
323823,TYPE_DECL,pad,,,struct TestSize_,5,perf\perf_convolution.cpp,opencv_test.ConvParam_t.TestSize_,,false,23,TestSize_,11
323825,TYPE_DECL,padAdjust,,,struct TestSize_,5,perf\perf_convolution.cpp,opencv_test.ConvParam_t.TestSize_,,false,24,TestSize_,13
343367,TYPE_DECL,,,,"struct ConvParamGenerator
{
    ConvParamGenerator(const ConvParam_t* testConfigs, const int size): testConfigs(testConfigs), size(size)
    {}

    const ConvParam_t* testConfigs;
    const int size;

    ::testing::internal::ParamGenerator<ConvParam_t> all() const
    {
        int NUM = size;
        static size_t DNN_LIMIT_CONV = utils::getConfigurationParameterSizeT(""OPENCV_TEST_DNN_LIMIT_CONV"", 0);
        if (DNN_LIMIT_CONV > 0)
            NUM = std::min(NUM, (int)DNN_LIMIT_CONV);

        std::vector<ConvParam_t> v_(NUM);
        for (int i = 0; i < NUM; ++i) { v_[i] = testConfigs[i]; } // reduce generated code size
        return ::testing::ValuesIn(v_);
    }
}",1,perf\perf_convolution.cpp,opencv_test.ConvParamGenerator,,false,767,ConvParamGenerator,11
344120,TYPE_DECL,ANY,,,"typedef tuple<ConvParam_t, tuple<Backend, Target> > ConvTestParam_t;",53,perf\perf_convolution.cpp,ConvTestParam_t,,false,905,ConvTestParam_t,14
344121,TYPE_DECL,ANY,,,"typedef tuple<ConvParam_t, tuple<Backend, Target>, bool> Conv3x3S1D1TestParam_t;",58,perf\perf_convolution.cpp,Conv3x3S1D1TestParam_t,,false,906,Conv3x3S1D1TestParam_t,15
344122,TYPE_DECL,ANY,,,typedef TestBaseWithParam<ConvTestParam_t> Conv;,44,perf\perf_convolution.cpp,Conv,,false,907,Conv,16
344123,TYPE_DECL,ANY,,,typedef TestBaseWithParam<ConvTestParam_t> Conv_1x1;,44,perf\perf_convolution.cpp,Conv_1x1,,false,908,Conv_1x1,17
344124,TYPE_DECL,ANY,,,typedef TestBaseWithParam<Conv3x3S1D1TestParam_t> Conv_3x3S1D1;,51,perf\perf_convolution.cpp,Conv_3x3S1D1,,false,909,Conv_3x3S1D1,18
344125,TYPE_DECL,ANY,,,typedef TestBaseWithParam<ConvTestParam_t> Conv_Depthwise;,44,perf\perf_convolution.cpp,Conv_Depthwise,,false,910,Conv_Depthwise,19
344180,TYPE_DECL,,perf\perf_convolution1d.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_convolution1d.cpp,perf\perf_convolution1d.cpp:<global>,,false,1,<global>,3
344184,TYPE_DECL,,,,"struct Conv1DParam_t {
    int kernel;
    struct BlobShape { int dims[3]; } shapeIn;
    int outCN;
    int groups;
    int stride;
    int dilation;
    int pad[2];
    const char* padMode;
    bool hasBias;
    double declared_flops;
}",1,perf\perf_convolution1d.cpp,opencv_test.Conv1DParam_t,,false,10,Conv1DParam_t,1
344186,TYPE_DECL,shapeIn,,,struct BlobShape { int dims[3]; },5,perf\perf_convolution1d.cpp,opencv_test.Conv1DParam_t.BlobShape,,false,12,BlobShape,2
344264,TYPE_DECL,,,,"struct Conv1DParamID
{
    enum {
        CONV_0 = 0,
        CONV_LAST = sizeof(testConvolution1DConfigs) / sizeof(testConvolution1DConfigs[0])
    };
    int val_;
    Conv1DParamID(int val = 0) : val_(val) {}
    operator int() const { return val_; }
    static ::testing::internal::ParamGenerator<Conv1DParamID> all()
    {
        enum { NUM = (int)CONV_LAST };
        Conv1DParamID v_[NUM]; for (int i = 0; i < NUM; ++i) { v_[i] = Conv1DParamID(i); } // reduce generated code size
        return ::testing::ValuesIn(v_, v_ + NUM);
    }
}",1,perf\perf_convolution1d.cpp,opencv_test.Conv1DParamID,,false,29,Conv1DParamID,4
344265,TYPE_DECL,,,,"enum {
        CONV_0 = 0,
        CONV_LAST = sizeof(testConvolution1DConfigs) / sizeof(testConvolution1DConfigs[0])
    }",5,perf\perf_convolution1d.cpp,opencv_test.Conv1DParamID.anonymous_enum_0,,false,31,anonymous_enum_0,1
344529,TYPE_DECL,ANY,,,"typedef tuple<Conv1DParamID, tuple<Backend, Target> > Conv1DTestParam_t;",55,perf\perf_convolution1d.cpp,Conv1DTestParam_t,,false,69,Conv1DTestParam_t,6
344530,TYPE_DECL,ANY,,,typedef TestBaseWithParam<Conv1DTestParam_t> Conv1D;,46,perf\perf_convolution1d.cpp,Conv1D,,false,70,Conv1D,7
344539,TYPE_DECL,,perf\perf_convolution3d.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_convolution3d.cpp,perf\perf_convolution3d.cpp:<global>,,false,1,<global>,3
344543,TYPE_DECL,,,,"struct Conv3DParam_t {
    int kernel[3];
    struct BlobShape { int dims[5]; } shapeIn;
    int outCN;
    int groups;
    int stride[3];
    int dilation[3];
    int pad[6];
    const char* padMode;
    bool hasBias;
    double declared_flops;
}",1,perf\perf_convolution3d.cpp,opencv_test.Conv3DParam_t,,false,10,Conv3DParam_t,1
344545,TYPE_DECL,shapeIn,,,struct BlobShape { int dims[5]; },5,perf\perf_convolution3d.cpp,opencv_test.Conv3DParam_t.BlobShape,,false,12,BlobShape,2
345090,TYPE_DECL,,,,"struct Conv3DParamID
{
    enum {
        CONV_0 = 0,
        CONV_100 = 16,
        CONV_LAST = sizeof(testConvolution3DConfigs) / sizeof(testConvolution3DConfigs[0])
    };
    int val_;
    Conv3DParamID(int val = 0) : val_(val) {}
    operator int() const { return val_; }
    static ::testing::internal::ParamGenerator<Conv3DParamID> all()
    {
#if 0
        enum { NUM = (int)CONV_LAST };
#else
        enum { NUM = (int)CONV_100 };
#endif
        Conv3DParamID v_[NUM]; for (int i = 0; i < NUM; ++i) { v_[i] = Conv3DParamID(i); } // reduce generated code size
        return ::testing::ValuesIn(v_, v_ + NUM);
    }
}",1,perf\perf_convolution3d.cpp,opencv_test.Conv3DParamID,,false,42,Conv3DParamID,4
345091,TYPE_DECL,,,,"enum {
        CONV_0 = 0,
        CONV_100 = 16,
        CONV_LAST = sizeof(testConvolution3DConfigs) / sizeof(testConvolution3DConfigs[0])
    }",5,perf\perf_convolution3d.cpp,opencv_test.Conv3DParamID.anonymous_enum_0,,false,44,anonymous_enum_0,1
345529,TYPE_DECL,ANY,,,"typedef tuple<Conv3DParamID, tuple<Backend, Target> > Conv3DTestParam_t;",55,perf\perf_convolution3d.cpp,Conv3DTestParam_t,,false,90,Conv3DTestParam_t,6
345530,TYPE_DECL,ANY,,,typedef TestBaseWithParam<Conv3DTestParam_t> Conv3D;,46,perf\perf_convolution3d.cpp,Conv3D,,false,91,Conv3D,7
345537,TYPE_DECL,,perf\perf_einsum.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_einsum.cpp,perf\perf_einsum.cpp:<global>,,false,1,<global>,2
345541,TYPE_DECL,,,,"struct EinsumParams {
    int inputSize;
    int outputSize;
    std::string equation;
    std::vector<MatShape> einsumInpShapes;
    EinsumParams(std::string equation_, std::vector<MatShape> einsumInpShapes_ = std::vector<MatShape>())
    {
        inputSize = einsumInpShapes_.size();
        equation = equation_;
        einsumInpShapes = einsumInpShapes_;
    }
}",1,perf\perf_einsum.cpp,opencv_test.EinsumParams,,false,9,EinsumParams,1
345782,TYPE_DECL,,,,class Layer_Einsum: public TestBaseWithParam<EinsumParams> {},1,perf\perf_einsum.cpp,opencv_test.Layer_Einsum,TestBaseWithParam<EinsumParams>,false,59,Layer_Einsum,5
345849,TYPE_DECL,,perf\perf_gemm.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_gemm.cpp,perf\perf_gemm.cpp:<global>,,false,1,<global>,4
345923,TYPE_DECL,,,,"struct GemmParam_t {
    std::vector<int> a_shape;
    std::vector<int> b_shape;
    std::vector<int> c_shape;
    bool trans_a;
    bool trans_b;

    GemmParam_t(std::vector<int> a_shape_, std::vector<int> b_shape_, std::vector<int> c_shape_ = {}, bool trans_a_ = false, bool trans_b_ = false)
        : a_shape(a_shape_), b_shape(b_shape_), c_shape(c_shape_), trans_a(trans_a_), trans_b(trans_b_) {}
}",1,perf\perf_gemm.cpp,opencv_test.GemmParam_t,,false,12,GemmParam_t,1
346064,TYPE_DECL,,,,"struct GemmParamId
{
    enum {
        GEMM_0 = 0,
        GEMM_LAST = sizeof(test_gemm_configs) / sizeof(test_gemm_configs[0])
    };
    int val_;
    GemmParamId(int val = 0) : val_(val) {}
    operator int() const { return val_; }
    static ::testing::internal::ParamGenerator<GemmParamId> all()
    {
        enum { NUM = (int)GEMM_LAST };
        GemmParamId v_[NUM]; for (int i = 0; i < NUM; ++i) { v_[i] = GemmParamId(i); } // reduce generated code size
        return ::testing::ValuesIn(v_, v_ + NUM);
    }
}",1,perf\perf_gemm.cpp,opencv_test.GemmParamId,,false,88,GemmParamId,6
346065,TYPE_DECL,,,,"enum {
        GEMM_0 = 0,
        GEMM_LAST = sizeof(test_gemm_configs) / sizeof(test_gemm_configs[0])
    }",5,perf\perf_gemm.cpp,opencv_test.GemmParamId.anonymous_enum_0,,false,90,anonymous_enum_0,1
346128,TYPE_DECL,,,,"struct MatMulParamId {
    enum {
        MATMUL_0 = 0,
        MATMUL_LAST = sizeof(test_matmul_configs) / sizeof(test_matmul_configs[0])
    };
    int val_;
    MatMulParamId(int val = 0) : val_(val) {}
    operator int() const { return val_; }
    static ::testing::internal::ParamGenerator<MatMulParamId> all() {
        enum { NUM = (int)MATMUL_LAST };
        MatMulParamId v_[NUM]; for (int i = 0; i < NUM; i++) { v_[i] = MatMulParamId(i); }
        return ::testing::ValuesIn(v_, v_ + NUM);
    }
}",1,perf\perf_gemm.cpp,opencv_test.MatMulParamId,,false,105,MatMulParamId,7
346129,TYPE_DECL,,,,"enum {
        MATMUL_0 = 0,
        MATMUL_LAST = sizeof(test_matmul_configs) / sizeof(test_matmul_configs[0])
    }",5,perf\perf_gemm.cpp,opencv_test.MatMulParamId.anonymous_enum_1,,false,106,anonymous_enum_1,1
346252,TYPE_DECL,ANY,,,"typedef tuple<GemmParamId, tuple<Backend, Target> > GemmTestParam_t;",53,perf\perf_gemm.cpp,GemmTestParam_t,,false,146,GemmTestParam_t,9
346253,TYPE_DECL,ANY,,,typedef TestBaseWithParam<GemmTestParam_t> Gemm;,44,perf\perf_gemm.cpp,Gemm,,false,147,Gemm,10
346316,TYPE_DECL,"tuple<MatMulParamId, tuple<Backend, Target>>",,,"using MatMulTestParam_t = tuple<MatMulParamId, tuple<Backend, Target>>;",1,perf\perf_gemm.cpp,MatMulTestParam_t,,false,299,MatMulTestParam_t,14
346317,TYPE_DECL,TestBaseWithParam<MatMulTestParam_t>,,,using MatMul = TestBaseWithParam<MatMulTestParam_t>;,1,perf\perf_gemm.cpp,MatMul,,false,300,MatMul,15
346328,TYPE_DECL,,perf\perf_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_layer.cpp,perf\perf_layer.cpp:<global>,,false,1,<global>,3
346332,TYPE_DECL,,,,"struct Layer_Slice : public TestBaseWithParam<tuple<Backend, Target> >
{
    template<int DIMS>
    void test_slice(const int* inputShape, const int* begin, const int* end)
    {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        Mat input(DIMS, inputShape, CV_32FC1, Scalar::all(0));
        for (int i = 0; i < (int)input.total(); ++i)
            input.ptr<float>()[i] = (float)(i & 4095);

        std::vector<Range> range(DIMS);
        for (int i = 0; i < DIMS; ++i)
            range[i] = Range(begin[i], end[i]);

        Net net;
        LayerParams lp;
        lp.type = ""Slice"";
        lp.name = ""testLayer"";
        lp.set(""begin"", DictValue::arrayInt<int*>((int*)&begin[0], DIMS));
        lp.set(""end"", DictValue::arrayInt<int*>((int*)&end[0], DIMS));
        net.addLayerToPrev(lp.name, lp.type, lp);

        // warmup
        {
            net.setInput(input);
            net.setPreferableBackend(backendId);
            net.setPrefe...",1,perf\perf_layer.cpp,opencv_test.Layer_Slice,"TestBaseWithParam<tuple<Backend, Target>>",false,10,Layer_Slice,1
346525,TYPE_DECL,,,,"struct Layer_NaryEltwise : public TestBaseWithParam<tuple<Backend, Target> >
{
    void test_layer(const std::vector<int>& a_shape, const std::vector<int>& b_shape, const String op, bool isRef = false)
    {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        if (!isRef && backendId == DNN_BACKEND_CUDA)
        {
            if (a_shape.size() != b_shape.size())
                throw SkipTestException(""The test is skipped because inputs with different shape size are not supported."");

            for(int i = 0; i < a_shape.size(); i++)
                if (a_shape[i] != b_shape[i] && a_shape[i] != 1 && b_shape[i] != 1)
                    throw SkipTestException(""The test is skipped because inputs are not supported."");

            if (nary_eltwise_cuda_deny_ops.find(op) != nary_eltwise_cuda_deny_ops.end())
                throw SkipTestException(""The operator '"" + op + ""' is skipped because is not support with cuda currently."");
        }
...",1,perf\perf_layer.cpp,opencv_test.Layer_NaryEltwise,"TestBaseWithParam<tuple<Backend, Target>>",false,60,Layer_NaryEltwise,4
346815,TYPE_DECL,,,,"struct Layer_Scatter : public TestBaseWithParam<tuple<Backend, Target> >
{
    void test_layer(const std::vector<int>& shape, const String reduction = ""none"", int axis = 0)
    {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        Mat data(shape, CV_32FC1);
        Mat indices(shape, CV_32FC1);
        Mat updates(shape, CV_32FC1);

        Scalar mean = 0.f;
        Scalar std = 1.f;
        randn(data, mean, std);
        randu(indices, 0, shape[axis]);
        randn(updates, mean, std);

        indices.convertTo(indices, CV_32SC1, 1, -1);

        Net net;
        LayerParams lp;
        lp.type = ""Scatter"";
        lp.name = ""testLayer"";
        lp.set(""reduction"", reduction);
        lp.set(""axis"", axis);

        int id = net.addLayerToPrev(lp.name, lp.type, lp);
        net.connect(0, 0, id, 0);
        net.connect(0, 1, id, 1);
        net.connect(0, 2, id, 2);

        // warmup
        {
            std::vector<String> inpNames(...",1,perf\perf_layer.cpp,opencv_test.Layer_Scatter,"TestBaseWithParam<tuple<Backend, Target>>",false,261,Layer_Scatter,29
347047,TYPE_DECL,,,,"struct Layer_ScatterND : public TestBaseWithParam<tuple<Backend, Target> >
{
    void test_layer(const std::vector<int>& shape, const String reduction = ""none"")
    {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        std::vector<int> indices_shape(shape);
        indices_shape.push_back(int(shape.size()));
        Mat data(shape, CV_32FC1);
        Mat indices(indices_shape, CV_32FC1);
        Mat updates(shape, CV_32FC1);

        Scalar mean = 0.f;
        Scalar std = 1.f;
        randn(data, mean, std);
        randn(updates, mean, std);

        // initialize the indices with index tuples like [0...N, 0...C, 0...H, 0...W]
        std::vector<int> current_index_tuple(shape.size());
        int total = data.total();
        std::vector<int> indices_step;
        for (int i = 0; i < indices.dims; i++)
        {
            int step = indices.step.p[i] / sizeof(float);
            indices_step.push_back(step);
        }
        int t, j...",1,perf\perf_layer.cpp,opencv_test.Layer_ScatterND,"TestBaseWithParam<tuple<Backend, Target>>",false,332,Layer_ScatterND,32
347427,TYPE_DECL,,,,"struct Layer_LayerNorm : public TestBaseWithParam<tuple<Backend, Target> >
{
    void test_layer(const std::vector<int>& x_shape)
    {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        Mat x(x_shape, CV_32FC1);
        Mat scale(x_shape.back(), 1, CV_32FC1);
        Mat b(x_shape.back(), 1, CV_32FC1);

        randu(x, 0.f, 1.f);
        randu(scale, 0.f, 1.f);
        randu(b, 0.f, 1.f);


        Net net;
        LayerParams lp;
        lp.type = ""LayerNormalization"";
        lp.name = ""testLayer"";
        lp.set(""axis"", 2);
        lp.set(""hasBias"", true);
        int id = net.addLayerToPrev(lp.name, lp.type, lp);
        net.connect(0, 0, id, 0);
        net.connect(0, 1, id, 1);
        net.connect(0, 2, id, 2);

        // warmup
        {
            std::vector<String> inpNames(3);
            inpNames[0] = ""x"";
            inpNames[1] = ""scale"";
            inpNames[2] = ""b"";
            net.setInputsNames(inpNames);
          ...",1,perf\perf_layer.cpp,opencv_test.Layer_LayerNorm,"TestBaseWithParam<tuple<Backend, Target>>",false,430,Layer_LayerNorm,35
347641,TYPE_DECL,,,,"struct Layer_LayerNormExpanded : public TestBaseWithParam<tuple<Backend, Target> >
{
    void test_layer(const std::vector<int>& x_shape)
    {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        Mat x(x_shape, CV_32FC1);
        Mat scale(1, x_shape.back(), CV_32FC1); // transpose to pass shape check
        Mat b(1, x_shape.back(), CV_32FC1);     // transpose to pass shape check

        randu(x, 0.f, 1.f);
        randu(scale, 0.f, 1.f);
        randu(b, 0.f, 1.f);

        // sub graph structure:
        //   -> ReduceMean ->     -> Pow(2) -> ReduceMean -> Add(epsilon) -> Sqrt ->
        // x                  Sub                                                    Div -> Mul(scale) -> Add(bias)
        //   --------------->     ------------------------------------------------->

        Net net;

        LayerParams lp_rm;
        lp_rm.type = ""Reduce"";
        lp_rm.name = ""reducemean1"";
        lp_rm.set(""reduce"", ""AVE"");
        std:...",1,perf\perf_layer.cpp,opencv_test.Layer_LayerNormExpanded,"TestBaseWithParam<tuple<Backend, Target>>",false,491,Layer_LayerNormExpanded,37
348370,TYPE_DECL,,,,"struct Layer_GatherElements : public TestBaseWithParam<tuple<Backend, Target> >
{
    void test_layer(const std::vector<int>& data_shape, const std::vector<int>& indices_shape, int axis = 0)
    {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        Mat data(data_shape, CV_32FC1);
        Mat indices(indices_shape, CV_32FC1);

        randu(data, 0.f, 1.f);
        randu(indices, 0, data_shape[axis]);

        Net net;
        LayerParams lp;
        lp.type = ""GatherElements"";
        lp.name = ""testLayer"";
        lp.set(""axis"", axis);
        int id = net.addLayerToPrev(lp.name, lp.type, lp);
        net.connect(0, 0, id, 0);
        net.connect(0, 1, id, 1);

        // warmup
        {
            std::vector<String> inpNames(3);
            inpNames[0] = ""data"";
            inpNames[1] = ""indices"";
            net.setInputsNames(inpNames);
            net.setInput(data, inpNames[0]);
            net.setInput(indices, inpNames[1]);

  ...",1,perf\perf_layer.cpp,opencv_test.Layer_GatherElements,"TestBaseWithParam<tuple<Backend, Target>>",false,636,Layer_GatherElements,39
348529,TYPE_DECL,,,,"struct Layer_InstanceNorm : public TestBaseWithParam<tuple<Backend, Target> >
{
    void test_layer(const std::vector<int>& x_shape)
    {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        Mat x(x_shape, CV_32FC1);
        Mat scale(x_shape[1], 1, CV_32FC1);
        Mat b(x_shape[1], 1, CV_32FC1);

        randu(x, 0.f, 1.f);
        randu(scale, 0.f, 1.f);
        randu(b, 0.f, 1.f);

        Net net;
        LayerParams lp;
        lp.type = ""InstanceNormalization"";
        lp.name = ""testLayer"";
        int id = net.addLayerToPrev(lp.name, lp.type, lp);
        net.connect(0, 0, id, 0);
        net.connect(0, 1, id, 1);
        net.connect(0, 2, id, 2);

        // warmup
        {
            std::vector<String> inpNames{""x"", ""scale"", ""b""};
            net.setInputsNames(inpNames);
            net.setInput(x, inpNames[0]);
            net.setInput(scale, inpNames[1]);
            net.setInput(b, inpNames[2]);

            net.setPref...",1,perf\perf_layer.cpp,opencv_test.Layer_InstanceNorm,"TestBaseWithParam<tuple<Backend, Target>>",false,686,Layer_InstanceNorm,41
348721,TYPE_DECL,,,,"struct Layer_Attention : public TestBaseWithParam<tuple<Backend, Target>> {
    void test_layer(const std::vector<int> x_shape, const std::vector<int> qkv_hidden_sizes, const int num_heads) {
        int backendId = get<0>(GetParam());
        int targetId = get<1>(GetParam());

        auto qk_hidden_size = qkv_hidden_sizes[0];
        auto v_hidden_size = qkv_hidden_sizes[2];

        auto input_hidden_size = x_shape[2];
        auto hidden_size = qk_hidden_size + qk_hidden_size + v_hidden_size;

        Mat x(x_shape, CV_32F);
        Mat weight(std::vector<int>{input_hidden_size, hidden_size}, CV_32F);
        Mat bias(std::vector<int>{hidden_size}, CV_32F);

        randu(x, 0.f, 1.f);
        randu(weight, 0.f, 1.f);
        randu(bias, 0.f, 1.f);

        LayerParams lp;
        lp.type = ""Attention"";
        lp.name = ""testLayer"";
        lp.set(""num_heads"", num_heads);
        lp.set(""qkv_hidden_sizes"", DictValue::arrayInt(qkv_hidden_sizes.data(), qkv_hidden_sizes.size()));...",1,perf\perf_layer.cpp,opencv_test.Layer_Attention,"TestBaseWithParam<tuple<Backend, Target>>",false,742,Layer_Attention,43
348954,TYPE_DECL,ANY,,,"typedef TestBaseWithParam<tuple<Vec4i, int, bool, tuple<Backend, Target> > > Layer_FullyConnected;",78,perf\perf_layer.cpp,Layer_FullyConnected,,false,812,Layer_FullyConnected,54
348957,TYPE_DECL,ANY,,,"typedef TestBaseWithParam<tuple<std::vector<int>, int, tuple<Backend, Target> > > Layer_Softmax;",83,perf\perf_layer.cpp,Layer_Softmax,,false,878,Layer_Softmax,57
348969,TYPE_DECL,,perf\perf_main.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_main.cpp,perf\perf_main.cpp:<global>,,false,1,<global>,3
348988,TYPE_DECL,,perf\perf_net.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_net.cpp,perf\perf_net.cpp:<global>,,false,1,<global>,5
348992,TYPE_DECL,,,,"class DNNTestNetwork : public ::perf::TestBaseWithParam< tuple<Backend, Target> >
{
public:
    dnn::Backend backend;
    dnn::Target target;

    dnn::Net net;

    DNNTestNetwork()
    {
        backend = (dnn::Backend)(int)get<0>(GetParam());
        target = (dnn::Target)(int)get<1>(GetParam());
    }

    void processNet(std::string weights, std::string proto, std::string halide_scheduler,
                    const std::vector<std::tuple<Mat, std::string>>& inputs, const std::string& outputLayer = """"){
        weights = findDataFile(weights, false);
        if (!proto.empty())
            proto = findDataFile(proto);
        if (backend == DNN_BACKEND_HALIDE)
        {
            if (halide_scheduler == ""disabled"")
                throw cvtest::SkipTestException(""Halide test is disabled"");
            if (!halide_scheduler.empty())
                halide_scheduler = findDataFile(std::string(""dnn/halide_scheduler_"") + (target == DNN_TARGET_OPENCL ? ""opencl_"" : """") + halide_sche...",1,perf\perf_net.cpp,opencv_test.DNNTestNetwork,"perf.TestBaseWithParam<tuple<Backend, Target>>",false,17,DNNTestNetwork,1
349356,TYPE_DECL,,perf\perf_precomp.hpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_precomp.hpp,perf\perf_precomp.hpp:<global>,,false,1,<global>,4
349364,TYPE_DECL,,perf\perf_recurrent.cpp:<global>,NAMESPACE_BLOCK,<global>,1,perf\perf_recurrent.cpp,perf\perf_recurrent.cpp:<global>,,false,1,<global>,2
349368,TYPE_DECL,,,,"struct LstmParams {
    // Batch size
    int nrSamples;

    // Size of the input vector
    int inputSize;

    // Size of the internal state vector
    int hiddenSize;

    // Number of timesteps for the LSTM
    int nrSteps;
}",1,perf\perf_recurrent.cpp,opencv_test.LstmParams,,false,9,LstmParams,1
349469,TYPE_DECL,,,,class Layer_LSTM : public TestBaseWithParam<LstmParams> {},1,perf\perf_recurrent.cpp,opencv_test.Layer_LSTM,TestBaseWithParam<LstmParams>,false,45,Layer_LSTM,5
349492,TYPE_DECL,,src\backend.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\backend.cpp,src\backend.cpp:<global>,,false,1,<global>,10
349507,TYPE_DECL,,src\backend.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\backend.hpp,src\backend.hpp:<global>,,false,1,<global>,3
349537,TYPE_DECL,,src\caffe\caffe_importer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\caffe\caffe_importer.cpp,src\caffe\caffe_importer.cpp:<global>,,false,1,<global>,12
349611,TYPE_DECL,,src\caffe\caffe_io.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\caffe\caffe_io.cpp,src\caffe\caffe_io.cpp:<global>,,false,1,<global>,13
349618,TYPE_DECL,,src\caffe\caffe_io.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\caffe\caffe_io.hpp,src\caffe\caffe_io.hpp:<global>,,false,1,<global>,2
349629,TYPE_DECL,,src\caffe\caffe_shrinker.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\caffe\caffe_shrinker.cpp,src\caffe\caffe_shrinker.cpp:<global>,,false,1,<global>,4
349660,TYPE_DECL,,src\caffe\glog_emulator.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\caffe\glog_emulator.hpp,src\caffe\glog_emulator.hpp:<global>,,false,1,<global>,5
349665,TYPE_DECL,,,,"class GLogWrapper
{
    const char *file, *func, *type, *cond_str;
    int line;
    bool cond_status, exit_loop;
    std::stringstream sstream;

public:

    GLogWrapper(const char *_file, const char *_func, int _line,
          const char *_type,
          const char *_cond_str = NULL, bool _cond_status = true
    ) :
        file(_file), func(_func), type(_type), cond_str(_cond_str),
        line(_line), cond_status(_cond_status), exit_loop(true) {}

    std::iostream &stream()
    {
        return sstream;
    }

    bool exit()
    {
        return exit_loop;
    }

    void check()
    {
        exit_loop = false;

        if (cond_str && !cond_status)
        {
            cv::error(cv::Error::StsError, ""FAILED: "" + String(cond_str) + "". "" + sstream.str(), func, file, line);
        }
        else if (!cond_str && strcmp(type, ""CHECK""))
        {
            #ifndef NDEBUG
            if (!std::strcmp(type, ""INFO""))
                std::cout << sstream.str() << std::endl;
   ...",1,src\caffe\glog_emulator.hpp,cv.dnn.GLogWrapper,,false,58,GLogWrapper,1
349829,TYPE_DECL,,src\cuda4dnn\csl\cublas.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cublas.hpp,src\cuda4dnn\csl\cublas.hpp:<global>,,false,1,<global>,10
349856,TYPE_DECL,,,,"class cuBLASException : public CUDAException {
    public:
        using CUDAException::CUDAException;
    }",5,src\cuda4dnn\csl\cublas.hpp,cv.dnn.cuda4dnn.csl.cublas.cuBLASException,CUDAException,false,27,cuBLASException,1
349885,TYPE_DECL,,,,"class UniqueHandle {
    public:
        UniqueHandle() noexcept : handle{ nullptr } { }
        UniqueHandle(UniqueHandle&) = delete;
        UniqueHandle(UniqueHandle&& other) noexcept {
            stream = std::move(other.stream);
            handle = other.handle;
            other.handle = nullptr;
        }

        /** creates a cuBLAS handle and associates it with the stream specified
         *
         * Exception Guarantee: Basic
         */
        UniqueHandle(Stream strm) : stream(std::move(strm)) {
            CV_Assert(stream);
            CUDA4DNN_CHECK_CUBLAS(cublasCreate(&handle));
            try {
                CUDA4DNN_CHECK_CUBLAS(cublasSetStream(handle, stream.get()));
            } catch (...) {
                /* cublasDestroy won't throw if a valid handle is passed */
                CUDA4DNN_CHECK_CUBLAS(cublasDestroy(handle));
                throw;
            }
        }

        ~UniqueHandle() noexcept {
            if (handle) {
                /...",5,src\cuda4dnn\csl\cublas.hpp,cv.dnn.cuda4dnn.csl.cublas.UniqueHandle,,false,63,UniqueHandle,3
350098,TYPE_DECL,,,,"class Handle {
    public:
        Handle() = default;
        Handle(const Handle&) = default;
        Handle(Handle&&) = default;

        /** creates a cuBLAS handle and associates it with the stream specified
         *
         * Exception Guarantee: Basic
         */
        Handle(Stream strm) : handle(std::make_shared<UniqueHandle>(std::move(strm))) { }

        Handle& operator=(const Handle&) = default;
        Handle& operator=(Handle&&) = default;

        /** returns true if the handle is valid */
        explicit operator bool() const noexcept { return static_cast<bool>(handle); }

        /** returns the raw cuBLAS handle */
        cublasHandle_t get() const noexcept {
            CV_Assert(handle);
            return handle->get();
        }

    private:
        std::shared_ptr<UniqueHandle> handle;
    }",5,src\cuda4dnn\csl\cublas.hpp,cv.dnn.cuda4dnn.csl.cublas.Handle,,false,130,Handle,4
351303,TYPE_DECL,,src\cuda4dnn\csl\cudnn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn.hpp,src\cuda4dnn\csl\cudnn.hpp:<global>,,false,1,<global>,2
351356,TYPE_DECL,,,,"class ActivationDescriptor {
    public:
        enum class ActivationType {
            IDENTITY,
            RELU,
            CLIPPED_RELU,
            TANH,
            SIGMOID,
            ELU
        };

        ActivationDescriptor() noexcept : descriptor{ nullptr } { }
        ActivationDescriptor(const ActivationDescriptor&) = delete;
        ActivationDescriptor(ActivationDescriptor&& other) noexcept
            : descriptor{ other.descriptor } {
            other.descriptor = nullptr;
        }

        /* `relu_ceiling_or_elu_alpha`:
         * - `alpha` coefficient in ELU activation
         * - `ceiling` for CLIPPED_RELU activation
         */
        ActivationDescriptor(ActivationType type, double relu_ceiling_or_elu_alpha = 0.0) {
            CUDA4DNN_CHECK_CUDNN(cudnnCreateActivationDescriptor(&descriptor));
            try {
                const auto mode = [type] {
                    switch(type) {
                        case ActivationType::IDENTITY: return C...",5,src\cuda4dnn\csl\cudnn\activation.hpp,cv.dnn.cuda4dnn.csl.cudnn.ActivationDescriptor,,false,12,ActivationDescriptor,1
351360,TYPE_DECL,,src\cuda4dnn\csl\cudnn\activation.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\activation.hpp,src\cuda4dnn\csl\cudnn\activation.hpp:<global>,,false,1,<global>,2
351368,TYPE_DECL,,,,"enum class ActivationType {
            IDENTITY,
            RELU,
            CLIPPED_RELU,
            TANH,
            SIGMOID,
            ELU
        }",9,src\cuda4dnn\csl\cudnn\activation.hpp,cv.dnn.cuda4dnn.csl.cudnn.ActivationDescriptor.ActivationType,,false,14,ActivationType,1
351487,TYPE_DECL,,src\cuda4dnn\csl\cudnn\convolution.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\convolution.hpp,src\cuda4dnn\csl\cudnn\convolution.hpp:<global>,,false,1,<global>,12
351495,TYPE_DECL,cv.dnn.cuda4dnn.csl.cudnn.FilterDescriptor<T>,,,"class FilterDescriptor {
    public:
        FilterDescriptor() noexcept : descriptor{ nullptr } { }
        FilterDescriptor(const FilterDescriptor&) = delete;
        FilterDescriptor(FilterDescriptor&& other) noexcept
            : descriptor{ other.descriptor } {
            other.descriptor = nullptr;
        }

        /** constructs a filter descriptor from the filter dimensions provided in \p shape
         *
         * Shape dimensions:
         * 0: number of filters
         * 1: number of input feature maps
         * 2..n: kernel dimensions
         *
         * Exception Guarantee: Strong
         */
        template <class SequenceContainer, typename = decltype(std::begin(std::declval<SequenceContainer>()))>
        FilterDescriptor(const SequenceContainer& shape) {
            constructor(shape.begin(), shape.end());
        }

        /** constructs a filter descriptor from the filter dimensions provided in [begin, end)
         *
         * Shape dimensions:
      ...",5,src\cuda4dnn\csl\cudnn\convolution.hpp,cv.dnn.cuda4dnn.csl.cudnn.FilterDescriptor,,false,30,FilterDescriptor,1
351819,TYPE_DECL,cv.dnn.cuda4dnn.csl.cudnn.ConvolutionDescriptor<T>,,,"class ConvolutionDescriptor {
    public:
        ConvolutionDescriptor() noexcept : descriptor{ nullptr } { }
        ConvolutionDescriptor(const ConvolutionDescriptor&) = delete;
        ConvolutionDescriptor(ConvolutionDescriptor&& other) noexcept
            : descriptor{ other.descriptor } {
            other.descriptor = nullptr;
        }

        /** constructs a convolution descriptor
         *
         * Pre-conditions:
         * - \p zero_padding, \p stride and \p dilation must have the same size
         *
         * The length of the containers is interpreted as the order of the convolution.
         *
         * Exception Guarantee: Strong
         */
        template <class SequenceContainer, typename = decltype(std::begin(std::declval<SequenceContainer>()))>
        ConvolutionDescriptor(
            const SequenceContainer& zero_padding,
            const SequenceContainer& stride,
            const SequenceContainer& dilation,
            std::size_t group_count)...",5,src\cuda4dnn\csl\cudnn\convolution.hpp,cv.dnn.cuda4dnn.csl.cudnn.ConvolutionDescriptor,,false,145,ConvolutionDescriptor,2
352178,TYPE_DECL,cv.dnn.cuda4dnn.csl.cudnn.ConvolutionAlgorithm<T>,,,"class ConvolutionAlgorithm {
    public:
        ConvolutionAlgorithm() noexcept : workspace_size{ 0 } { }
        ConvolutionAlgorithm(ConvolutionAlgorithm&) = default;
        ConvolutionAlgorithm(ConvolutionAlgorithm&&) = default;

        /** selects a good algorithm for convolution for given configuration
         *
         * Exception Guarantee: Strong
         */
        ConvolutionAlgorithm(
            const Handle& handle,
            const ConvolutionDescriptor<T>& convDesc,
            const FilterDescriptor<T>& filterDesc,
            const TensorDescriptor<T>& inputDesc,
            const TensorDescriptor<T>& outputDesc)
        {
#if CUDNN_MAJOR >= 8
            int requestedAlgoCount = 0, returnedAlgoCount = 0;
            CUDA4DNN_CHECK_CUDNN(cudnnGetConvolutionForwardAlgorithmMaxCount(handle.get(), &requestedAlgoCount));
            std::vector<cudnnConvolutionFwdAlgoPerf_t> results(requestedAlgoCount);
            CUDA4DNN_CHECK_CUDNN(
                cudnnGetCon...",5,src\cuda4dnn\csl\cudnn\convolution.hpp,cv.dnn.cuda4dnn.csl.cudnn.ConvolutionAlgorithm,,false,254,ConvolutionAlgorithm,3
353095,TYPE_DECL,,src\cuda4dnn\csl\cudnn\cudnn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\cudnn.hpp,src\cuda4dnn\csl\cudnn\cudnn.hpp:<global>,,false,1,<global>,11
353103,TYPE_DECL,,,,"class cuDNNException : public CUDAException {
    public:
        cuDNNException(cudnnStatus_t code, const std::string& msg, const std::string& func, const std::string& file, int line)
            : CUDAException(Error::GpuApiCallError, msg, func, file, line), cudnnError{code}
        {
        }

        cudnnStatus_t getCUDNNStatus() const noexcept { return cudnnError; }

    private:
        cudnnStatus_t cudnnError;
    }",5,src\cuda4dnn\csl\cudnn\cudnn.hpp,cv.dnn.cuda4dnn.csl.cudnn.cuDNNException,CUDAException,false,27,cuDNNException,1
353142,TYPE_DECL,decltype,,,using cudnn_data_enum_type = decltype(CUDNN_DATA_FLOAT);,9,src\cuda4dnn\csl\cudnn\cudnn.hpp,cudnn_data_enum_type,,false,47,cudnn_data_enum_type,2
353159,TYPE_DECL,,,,"class UniqueHandle {
    public:
        UniqueHandle() noexcept : handle{ nullptr } { }
        UniqueHandle(UniqueHandle&) = delete;
        UniqueHandle(UniqueHandle&& other) noexcept {
            stream = std::move(other.stream);
            handle = other.handle;
            other.handle = nullptr;
        }

        /** creates a cuDNN handle and associates it with the stream specified
         *
         * Exception Guarantee: Basic
         */
        UniqueHandle(Stream strm) : stream(std::move(strm)) {
            CV_Assert(stream);
            CUDA4DNN_CHECK_CUDNN(cudnnCreate(&handle));
            try {
                CUDA4DNN_CHECK_CUDNN(cudnnSetStream(handle, stream.get()));
            } catch (...) {
                /* cudnnDestroy won't throw if a valid handle is passed */
                CUDA4DNN_CHECK_CUDNN(cudnnDestroy(handle));
                throw;
            }
        }

        ~UniqueHandle() noexcept {
            if (handle != nullptr) {
              ...",5,src\cuda4dnn\csl\cudnn\cudnn.hpp,cv.dnn.cuda4dnn.csl.cudnn.UniqueHandle,,false,58,UniqueHandle,3
353374,TYPE_DECL,,,,"class Handle {
    public:
        Handle() = default;
        Handle(const Handle&) = default;
        Handle(Handle&&) = default;

        /** creates a cuDNN handle and associates it with the stream specified
         *
         * Exception Guarantee: Basic
         */
        Handle(Stream strm) : handle(std::make_shared<UniqueHandle>(std::move(strm))) { }

        Handle& operator=(const Handle&) = default;
        Handle& operator=(Handle&&) = default;

        /** returns true if the handle is valid */
        explicit operator bool() const noexcept { return static_cast<bool>(handle); }

        /** returns the raw cuDNN handle */
        cudnnHandle_t get() const noexcept {
            CV_Assert(handle);
            return handle->get();
        }

    private:
        std::shared_ptr<UniqueHandle> handle;
    }",5,src\cuda4dnn\csl\cudnn\cudnn.hpp,cv.dnn.cuda4dnn.csl.cudnn.Handle,,false,125,Handle,4
353424,TYPE_DECL,cv.dnn.cuda4dnn.csl.cudnn.TensorDescriptor<T>,,,"class TensorDescriptor {
    public:
        TensorDescriptor() noexcept : descriptor{ nullptr } { }
        TensorDescriptor(const TensorDescriptor&) = delete;
        TensorDescriptor(TensorDescriptor&& other) noexcept
            : descriptor{ other.descriptor } {
            other.descriptor = nullptr;
        }

        /** constructs a tensor descriptor from the axis lengths provided in \p shape
         *
         * Exception Guarantee: Basic
         */
        template <class SequenceContainer, typename = decltype(std::begin(std::declval<SequenceContainer>()))>
        TensorDescriptor(const SequenceContainer& shape) {
            constructor(shape.begin(), shape.end());
        }

        /** constructs a tensor descriptor from the axis lengths provided in [begin, end)
         *
         * Exception Guarantee: Basic
         */
        template <class ForwardItr, typename = typename std::enable_if<!std::is_integral<ForwardItr>::value, void>::type> // TODO is_iterator
    ...",5,src\cuda4dnn\csl\cudnn\cudnn.hpp,cv.dnn.cuda4dnn.csl.cudnn.TensorDescriptor,,false,158,TensorDescriptor,5
353789,TYPE_DECL,cv.dnn.cuda4dnn.csl.cudnn.TensorDescriptorsArray<T>,,,"class TensorDescriptorsArray
    {
    public:
        TensorDescriptorsArray() noexcept = default;
        TensorDescriptorsArray(const TensorDescriptorsArray&) = delete;
        TensorDescriptorsArray(TensorDescriptorsArray&& other) noexcept
            : descriptors{std::move(other.descriptors)} {}

        TensorDescriptorsArray(int seqLength, std::array<int, 3> dims)
        {
            for (int i = 0; i < seqLength; ++i)
            {
                descriptors.emplace_back(dims);
            }
        }

        ~TensorDescriptorsArray() noexcept = default;

        TensorDescriptorsArray& operator=(const TensorDescriptorsArray&) = delete;
        TensorDescriptorsArray& operator=(TensorDescriptorsArray&& other) noexcept
        {
            descriptors = std::move(other.descriptors);
            return *this;
        };

        std::vector<cudnnTensorDescriptor_t> get() const noexcept
        {
            std::vector<cudnnTensorDescriptor_t> descPtrs;
            descP...",5,src\cuda4dnn\csl\cudnn\cudnn.hpp,cv.dnn.cuda4dnn.csl.cudnn.TensorDescriptorsArray,,false,295,TensorDescriptorsArray,6
353901,TYPE_DECL,,src\cuda4dnn\csl\cudnn\lrn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\lrn.hpp,src\cuda4dnn\csl\cudnn\lrn.hpp:<global>,,false,1,<global>,7
353909,TYPE_DECL,,,,"class LRNDescriptor {
    public:
        enum class LRNType {
            ACROSS_CHANNELS,
            WITHIN_CHANNEL
        };

        LRNDescriptor() noexcept : descriptor{ nullptr } { }
        LRNDescriptor(const LRNDescriptor&) = delete;
        LRNDescriptor(LRNDescriptor&& other) noexcept
            : descriptor{ other.descriptor }, type{ other.type } {
            other.descriptor = nullptr;
        }

        /** sets up a LRN descriptor
         *
         * @param local_size    size of the normalization window
         * @param alpha         variance scaling parameter
         * @param beta          power parameter
         * @param k             bias parameter
         *
         * @note \p alpha is divided by the window width in across channels mode
         * @note \p alpha is divided by the (window width)^spatialDimensions in within channel mode
         *
         * @note the \p alpha, \p beta and \p k will be type casted to the tensor datatype during operation
 ...",5,src\cuda4dnn\csl\cudnn\lrn.hpp,cv.dnn.cuda4dnn.csl.cudnn.LRNDescriptor,,false,21,LRNDescriptor,1
353910,TYPE_DECL,,,,"enum class LRNType {
            ACROSS_CHANNELS,
            WITHIN_CHANNEL
        }",9,src\cuda4dnn\csl\cudnn\lrn.hpp,cv.dnn.cuda4dnn.csl.cudnn.LRNDescriptor.LRNType,,false,23,LRNType,1
354556,TYPE_DECL,,,,"class PoolingDescriptor {
    public:
        enum class PoolingType {
            MAX,
            MAX_DETERMINISTIC,
            AVERAGE_EXCLUDE_PADDING,
            AVERAGE_INCLUDE_PADDING
        };

        PoolingDescriptor() noexcept : descriptor{ nullptr } { }
        PoolingDescriptor(const PoolingDescriptor&) = delete;
        PoolingDescriptor(PoolingDescriptor&& other) noexcept
            : descriptor{ other.descriptor } {
            other.descriptor = nullptr;
        }

        /** constructs a pooling descriptor
         *
         * Pre-conditions:
         * - \p window_size, \p padding and \p stride must have the same size
         *
         * The length of the containers is interpreted as the order of the pooling operation.
         *
         * Exception Guarantee: Basic
         */
        template <class SequenceContainer, typename = decltype(std::begin(std::declval<SequenceContainer>()))>
        PoolingDescriptor(
            const SequenceContainer& windo...",5,src\cuda4dnn\csl\cudnn\pooling.hpp,cv.dnn.cuda4dnn.csl.cudnn.PoolingDescriptor,,false,25,PoolingDescriptor,1
354578,TYPE_DECL,,src\cuda4dnn\csl\cudnn\pooling.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\pooling.hpp,src\cuda4dnn\csl\cudnn\pooling.hpp:<global>,,false,1,<global>,11
354586,TYPE_DECL,,,,"enum class PoolingType {
            MAX,
            MAX_DETERMINISTIC,
            AVERAGE_EXCLUDE_PADDING,
            AVERAGE_INCLUDE_PADDING
        }",9,src\cuda4dnn\csl\cudnn\pooling.hpp,cv.dnn.cuda4dnn.csl.cudnn.PoolingDescriptor.PoolingType,,false,27,PoolingType,1
355171,TYPE_DECL,cv.dnn.cuda4dnn.csl.cudnn.RNNDescriptor<T>,,,"class RNNDescriptor
{
public:
    enum class RNNMode
    {
        RNN_RELU,
        RNN_TANH,
        LSTM,
        GRU
    };

    RNNDescriptor() noexcept = default;
    RNNDescriptor(const RNNDescriptor &) = delete;
    RNNDescriptor(RNNDescriptor &&other) noexcept : descriptor{other.descriptor}
    {
        other.descriptor = nullptr;
    }

    /**
    */
    RNNDescriptor(const Handle &handle, RNNMode mode, int hidden_size, int num_layers,
                  bool bidirectional, const DropoutDescriptor &dropoutDesc)
    {
        CUDA4DNN_CHECK_CUDNN(cudnnCreateRNNDescriptor(&descriptor));
        const auto rnn_mode = [mode] {
            switch (mode)
            {
            case RNNMode::RNN_RELU:
                return CUDNN_RNN_RELU;
            case RNNMode::RNN_TANH:
                return CUDNN_RNN_TANH;
            case RNNMode::LSTM:
                return CUDNN_LSTM;
            case RNNMode::GRU:
                return CUDNN_GRU;
            default:
            ...",1,src\cuda4dnn\csl\cudnn\recurrent.hpp,cv.dnn.cuda4dnn.csl.cudnn.RNNDescriptor,,false,80,RNNDescriptor,2
355177,TYPE_DECL,,src\cuda4dnn\csl\cudnn\recurrent.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\recurrent.hpp,src\cuda4dnn\csl\cudnn\recurrent.hpp:<global>,,false,1,<global>,3
355185,TYPE_DECL,,,,"class DropoutDescriptor
{
public:
    DropoutDescriptor() noexcept = default;
    DropoutDescriptor(const DropoutDescriptor &) = delete;
    DropoutDescriptor(DropoutDescriptor &&other) noexcept : descriptor{other.descriptor}
    {
        states = std::move(other.states);
        other.descriptor = nullptr;
    }

    /**
     */
    DropoutDescriptor(const Handle &handle, float dropout)
    {
        CUDA4DNN_CHECK_CUDNN(cudnnCreateDropoutDescriptor(&descriptor));

        // we need additional memory for dropout descriptor
        size_t stateSize;
        CUDA4DNN_CHECK_CUDNN(cudnnDropoutGetStatesSize(handle.get(), &stateSize));
        states.reset(stateSize);

        try
        {
            auto seed = 1234ull; // Pick a seed.
            CUDA4DNN_CHECK_CUDNN(cudnnSetDropoutDescriptor(descriptor, handle.get(), dropout,
                                                           states.get().get(), stateSize, seed));
        }
        catch (...)
        {
            CUDA4DN...",1,src\cuda4dnn\csl\cudnn\recurrent.hpp,cv.dnn.cuda4dnn.csl.cudnn.DropoutDescriptor,,false,16,DropoutDescriptor,1
355412,TYPE_DECL,ANY,,,using value_type = typename ManagedPtr<char>::element_type;,5,src\cuda4dnn\csl\cudnn\recurrent.hpp,value_type,,false,73,value_type,10
355422,TYPE_DECL,,,,"enum class RNNMode
    {
        RNN_RELU,
        RNN_TANH,
        LSTM,
        GRU
    }",5,src\cuda4dnn\csl\cudnn\recurrent.hpp,cv.dnn.cuda4dnn.csl.cudnn.RNNDescriptor.RNNMode,,false,83,RNNMode,1
355805,TYPE_DECL,,src\cuda4dnn\csl\cudnn\softmax.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\softmax.hpp,src\cuda4dnn\csl\cudnn\softmax.hpp:<global>,,false,1,<global>,4
355969,TYPE_DECL,,src\cuda4dnn\csl\cudnn\transform.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\transform.hpp,src\cuda4dnn\csl\cudnn\transform.hpp:<global>,,false,1,<global>,7
355977,TYPE_DECL,,,,"class TensorTransformDescriptor {
    public:
        TensorTransformDescriptor() noexcept : descriptor{ nullptr } { }
        TensorTransformDescriptor(const TensorTransformDescriptor&) = delete;
        TensorTransformDescriptor(TensorTransformDescriptor&& other) noexcept
            : descriptor{ other.descriptor } {
            other.descriptor = nullptr;
        }

        /** constructs a convolution descriptor
         *
         * Pre-conditions:
         * - \p padding_left and \p padding_right must have the same size
         *
         * The length of the containers is interpreted as the rank of the tensors which will be given.
         *
         * @note \p padding_left and \p padding_right may have negative values to remove padding
         *
         * Exception Guarantee: Basic
         */
        template <class SequenceContainer, typename = decltype(std::begin(std::declval<SequenceContainer>()))>
        TensorTransformDescriptor(
            const SequenceContainer...",5,src\cuda4dnn\csl\cudnn\transform.hpp,cv.dnn.cuda4dnn.csl.cudnn.TensorTransformDescriptor,,false,24,TensorTransformDescriptor,1
356360,TYPE_DECL,,src\cuda4dnn\csl\cudnn\transpose_convolution.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\cudnn\transpose_convolution.hpp,src\cuda4dnn\csl\cudnn\transpose_convolution.hpp:<global>,,false,1,<global>,7
356368,TYPE_DECL,cv.dnn.cuda4dnn.csl.cudnn.TransposeConvolutionAlgorithm<T>,,,"class TransposeConvolutionAlgorithm {
    public:
        TransposeConvolutionAlgorithm() noexcept : workspace_size{ 0 } { }
        TransposeConvolutionAlgorithm(TransposeConvolutionAlgorithm&) = default;
        TransposeConvolutionAlgorithm(TransposeConvolutionAlgorithm&&) = default;

        TransposeConvolutionAlgorithm(
            const Handle& handle,
            const ConvolutionDescriptor<T>& convDesc,
            const FilterDescriptor<T>& filterDesc,
            const TensorDescriptor<T>& inputDesc,
            const TensorDescriptor<T>& outputDesc)
        {
#if CUDNN_MAJOR >= 8
            int requestedAlgoCount = 0, returnedAlgoCount = 0;
            CUDA4DNN_CHECK_CUDNN(cudnnGetConvolutionBackwardDataAlgorithmMaxCount(handle.get(), &requestedAlgoCount));
            std::vector<cudnnConvolutionBwdDataAlgoPerf_t> results(requestedAlgoCount);
            CUDA4DNN_CHECK_CUDNN(
                cudnnGetConvolutionBackwardDataAlgorithm_v7(
                    handle.get(),...",5,src\cuda4dnn\csl\cudnn\transpose_convolution.hpp,cv.dnn.cuda4dnn.csl.cudnn.TransposeConvolutionAlgorithm,,false,25,TransposeConvolutionAlgorithm,1
356689,TYPE_DECL,,src\cuda4dnn\csl\error.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\error.hpp,src\cuda4dnn\csl\error.hpp:<global>,,false,1,<global>,3
356696,TYPE_DECL,,,,"class CUDAException : public cv::Exception {
    public:
        using cv::Exception::Exception;
    }",5,src\cuda4dnn\csl\error.hpp,cv.dnn.cuda4dnn.csl.CUDAException,cv.Exception,false,17,CUDAException,1
356731,TYPE_DECL,,src\cuda4dnn\csl\event.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\event.hpp,src\cuda4dnn\csl\event.hpp:<global>,,false,1,<global>,5
356738,TYPE_DECL,,,,"class Event {
    public:
        Event() noexcept : event{ nullptr } { }
        Event(const Event&) = delete;
        Event(Event&& other) noexcept
            : event{ other.event } {
            other.event = nullptr;
        }

        /** if \p create is `true`, a new event will be created; otherwise, an empty event object is created */
        Event(bool create, bool timing_event = false) : event{nullptr} {
            if (create) {
                unsigned int flags = (timing_event ? 0 : cudaEventDisableTiming);
                CUDA4DNN_CHECK_CUDA(cudaEventCreateWithFlags(&event, flags));
            }
        }

        ~Event() {
            try {
                if (event != nullptr)
                    CUDA4DNN_CHECK_CUDA(cudaEventDestroy(event));
            } catch (const CUDAException& ex) {
                std::ostringstream os;
                os << ""Asynchronous exception caught during CUDA event destruction.\n"";
                os << ex.what();
                os ...",5,src\cuda4dnn\csl\event.hpp,cv.dnn.cuda4dnn.csl.Event,,false,24,Event,1
357109,TYPE_DECL,cv.dnn.cuda4dnn.csl.ManagedPtr<T>,,,"class ManagedPtr {
        static_assert(!std::is_const<T>::value && !std::is_volatile<T>::value, ""T cannot be cv-qualified"");
        static_assert(std::is_standard_layout<T>::value, ""T must satisfy StandardLayoutType"");

    public:
        using element_type = T;

        using pointer = DevicePtr<element_type>;
        using const_pointer = DevicePtr<typename std::add_const<element_type>::type>;

        using size_type = std::size_t;

        ManagedPtr() noexcept : wrapped{ nullptr }, n{ 0 }, capacity{ 0 } { }
        ManagedPtr(const ManagedPtr&) noexcept = default;
        ManagedPtr(ManagedPtr&& other) noexcept
            : wrapped{ std::move(other.wrapped) }, n{ other.n }, capacity { other.capacity }
        {
            other.reset();
        }

        /** allocates device memory for \p count number of element */
        ManagedPtr(size_type count) {
            if (count <= 0) {
                CV_Error(Error::StsBadArg, ""number of elements is zero or negative"");
    ...",5,src\cuda4dnn\csl\memory.hpp,cv.dnn.cuda4dnn.csl.ManagedPtr,,false,27,ManagedPtr,1
357127,TYPE_DECL,,src\cuda4dnn\csl\memory.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\memory.hpp,src\cuda4dnn\csl\memory.hpp:<global>,,false,1,<global>,9
357134,TYPE_DECL,T,,,using element_type = T;,9,src\cuda4dnn\csl\memory.hpp,element_type,,false,32,element_type,1
357135,TYPE_DECL,DevicePtr<element_type>,,,using pointer = DevicePtr<element_type>;,9,src\cuda4dnn\csl\memory.hpp,pointer,,false,34,pointer,2
357136,TYPE_DECL,ANY,,,using const_pointer = DevicePtr<typename std::add_const<element_type>::type>;,9,src\cuda4dnn\csl\memory.hpp,const_pointer,,false,35,const_pointer,3
357137,TYPE_DECL,ANY,,,using size_type = std::size_t;,9,src\cuda4dnn\csl\memory.hpp,size_type,,false,37,size_type,4
357574,TYPE_DECL,,,,"class MemoryLockGuard {
    public:
        MemoryLockGuard() noexcept : ptr { nullptr } { }
        MemoryLockGuard(const MemoryLockGuard&) = delete;
        MemoryLockGuard(MemoryLockGuard&& other) noexcept : ptr{ other.ptr } {
            other.ptr = nullptr;
        }

        /** page-locks \p size_in_bytes bytes of memory starting from \p ptr_
         *
         * Pre-conditions:
         * - host memory should be unregistered
         */
        MemoryLockGuard(void* ptr_, std::size_t size_in_bytes) {
            CUDA4DNN_CHECK_CUDA(cudaHostRegister(ptr_, size_in_bytes, cudaHostRegisterPortable));
            ptr = ptr_;
        }

        MemoryLockGuard& operator=(const MemoryLockGuard&) = delete;
        MemoryLockGuard& operator=(MemoryLockGuard&& other) noexcept {
            if (&other != this) {
                if(ptr != nullptr) {
                    /* cudaHostUnregister does not throw for a valid ptr */
                    CUDA4DNN_CHECK_CUDA(cudaHostUnregister(ptr...",5,src\cuda4dnn\csl\memory.hpp,cv.dnn.cuda4dnn.csl.MemoryLockGuard,,false,259,MemoryLockGuard,10
357714,TYPE_DECL,,src\cuda4dnn\csl\nvcc_defs.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\nvcc_defs.hpp,src\cuda4dnn\csl\nvcc_defs.hpp:<global>,,false,1,<global>,2
357735,TYPE_DECL,,src\cuda4dnn\csl\pointer.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\pointer.hpp,src\cuda4dnn\csl\pointer.hpp:<global>,,false,1,<global>,9
357742,TYPE_DECL,cv.dnn.cuda4dnn.csl.DevicePtr<T>,,,"class DevicePtr {
        static_assert(std::is_standard_layout<T>::value, ""T must satisfy StandardLayoutType"");

    public:
        using element_type = T;
        using difference_type = std::ptrdiff_t;
        using pointer = typename std::add_pointer<element_type>::type;
        using reference = typename std::add_lvalue_reference<element_type>::type;

        DevicePtr() = default;
        CUDA4DNN_HOST_DEVICE explicit DevicePtr(pointer ptr_) noexcept : ptr{ ptr_ } { }

        CUDA4DNN_HOST_DEVICE DevicePtr operator=(pointer ptr_) noexcept { ptr = ptr_; return *this; }

        CUDA4DNN_HOST_DEVICE pointer get() const noexcept { return ptr; };

        CUDA4DNN_DEVICE reference operator[](difference_type idx) const noexcept { return get()[idx]; }
        CUDA4DNN_DEVICE reference operator*() const noexcept { return *get(); }
        CUDA4DNN_DEVICE pointer operator->() const noexcept { return get(); }

        template<class U = T, typename std::enable_if<!std::is_const<U>::v...",5,src\cuda4dnn\csl\pointer.hpp,cv.dnn.cuda4dnn.csl.DevicePtr,,false,44,DevicePtr,1
357743,TYPE_DECL,T,,,using element_type = T;,9,src\cuda4dnn\csl\pointer.hpp,element_type,,false,48,element_type,1
357744,TYPE_DECL,ANY,,,using difference_type = std::ptrdiff_t;,9,src\cuda4dnn\csl\pointer.hpp,difference_type,,false,49,difference_type,2
357745,TYPE_DECL,ANY,,,using pointer = typename std::add_pointer<element_type>::type;,9,src\cuda4dnn\csl\pointer.hpp,pointer,,false,50,pointer,3
357746,TYPE_DECL,ANY,,,using reference = typename std::add_lvalue_reference<element_type>::type;,9,src\cuda4dnn\csl\pointer.hpp,reference,,false,51,reference,4
358035,TYPE_DECL,cv.dnn.cuda4dnn.csl.DevicePtr<void><>,,,"class DevicePtr<const void> {
    public:
        using element_type = const void;
        using pointer = typename std::add_pointer<element_type>::type;

        DevicePtr() = default;

        /* host const void pointer to const void device pointer */
        CUDA4DNN_HOST_DEVICE explicit DevicePtr(pointer ptr_) noexcept : ptr{ ptr_ } { }

        /* allow any device pointer to be implicitly converted to void device pointer */
        template <class T>
        CUDA4DNN_HOST_DEVICE DevicePtr(DevicePtr<T> ptr_) noexcept : ptr{ ptr_.get() } { }

        CUDA4DNN_HOST_DEVICE DevicePtr operator=(pointer ptr_) noexcept { ptr = ptr_; return *this; }

        CUDA4DNN_HOST_DEVICE pointer get() const noexcept { return ptr; };

        CUDA4DNN_HOST_DEVICE explicit operator bool() const noexcept { return ptr; }

        CUDA4DNN_HOST_DEVICE friend bool operator==(DevicePtr lhs, DevicePtr rhs) noexcept { return lhs.ptr == rhs.ptr; }
        CUDA4DNN_HOST_DEVICE friend bool operator!=(Device...",5,src\cuda4dnn\csl\pointer.hpp,cv.dnn.cuda4dnn.csl.DevicePtr<void>,,false,140,DevicePtr<const void>,2
358036,TYPE_DECL,void,,,using element_type = const void;,9,src\cuda4dnn\csl\pointer.hpp,element_type,,false,142,element_type,1
358037,TYPE_DECL,ANY,,,using pointer = typename std::add_pointer<element_type>::type;,9,src\cuda4dnn\csl\pointer.hpp,pointer,,false,143,pointer,2
358190,TYPE_DECL,cv.dnn.cuda4dnn.csl.DevicePtr<void><>,,,"class DevicePtr<void> {
    public:
        using element_type = void;
        using pointer = typename std::add_pointer<element_type>::type;

        DevicePtr() = default;

        /* host pointer to device pointer */
        CUDA4DNN_HOST_DEVICE explicit DevicePtr(pointer ptr_) noexcept : ptr{ ptr_ } { }

        /* allow any device pointer to mutable memory to be implicitly converted to void device pointer */
        template <class T, typename std::enable_if<!std::is_const<T>::value, bool>::type = false>
        CUDA4DNN_HOST_DEVICE DevicePtr(DevicePtr<T> ptr_) noexcept : ptr { ptr_.get() } { }

        CUDA4DNN_HOST_DEVICE DevicePtr operator=(pointer ptr_) noexcept { ptr = ptr_; return *this; }

        CUDA4DNN_HOST_DEVICE pointer get() const noexcept { return ptr; };

        CUDA4DNN_HOST_DEVICE operator DevicePtr<const void>() const noexcept { return DevicePtr<const void>{ptr}; }

        CUDA4DNN_HOST_DEVICE explicit operator bool() const noexcept { return ptr; }

       ...",5,src\cuda4dnn\csl\pointer.hpp,cv.dnn.cuda4dnn.csl.DevicePtr<void>,,false,192,DevicePtr<void>,3
358191,TYPE_DECL,void,,,using element_type = void;,9,src\cuda4dnn\csl\pointer.hpp,element_type,,false,194,element_type,1
358192,TYPE_DECL,ANY,,,using pointer = typename std::add_pointer<element_type>::type;,9,src\cuda4dnn\csl\pointer.hpp,pointer,,false,195,pointer,2
358771,TYPE_DECL,,src\cuda4dnn\csl\span.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\span.hpp,src\cuda4dnn\csl\span.hpp:<global>,,false,1,<global>,6
358778,TYPE_DECL,cv.dnn.cuda4dnn.csl.Span<T>,,,"class Span {
        static_assert(std::is_standard_layout<T>::value, ""T must satisfy StandardLayoutType"");

    public:
        using value_type = T;
        using size_type = device::size_type;
        using index_type = device::index_type;

        using pointer = DevicePtr<value_type>;
        using const_pointer = DevicePtr<typename std::add_const<value_type>::type>;
        using reference = typename std::add_lvalue_reference<value_type>::type;
        using const_reference = typename std::add_lvalue_reference<typename std::add_const<value_type>::type>;

        Span() noexcept : ptr{ nullptr }, sz{ 0 } { }
        CUDA4DNN_HOST_DEVICE Span(pointer first, pointer last) noexcept : ptr{ first }, sz{ last - first } { }
        CUDA4DNN_HOST_DEVICE Span(pointer first, size_type count) noexcept : ptr{ first }, sz{ count } { }

        CUDA4DNN_HOST_DEVICE size_type size() const noexcept { return sz; }
        CUDA4DNN_HOST_DEVICE bool empty() const noexcept { return size() == 0; }
...",5,src\cuda4dnn\csl\span.hpp,cv.dnn.cuda4dnn.csl.Span,,false,24,Span,1
358779,TYPE_DECL,T,,,using value_type = T;,9,src\cuda4dnn\csl\span.hpp,value_type,,false,28,value_type,1
358780,TYPE_DECL,ANY,,,using size_type = device::size_type;,9,src\cuda4dnn\csl\span.hpp,size_type,,false,29,size_type,2
358781,TYPE_DECL,ANY,,,using index_type = device::index_type;,9,src\cuda4dnn\csl\span.hpp,index_type,,false,30,index_type,3
358782,TYPE_DECL,DevicePtr<value_type>,,,using pointer = DevicePtr<value_type>;,9,src\cuda4dnn\csl\span.hpp,pointer,,false,32,pointer,4
358783,TYPE_DECL,ANY,,,using const_pointer = DevicePtr<typename std::add_const<value_type>::type>;,9,src\cuda4dnn\csl\span.hpp,const_pointer,,false,33,const_pointer,5
358784,TYPE_DECL,ANY,,,using reference = typename std::add_lvalue_reference<value_type>::type;,9,src\cuda4dnn\csl\span.hpp,reference,,false,34,reference,6
358785,TYPE_DECL,ANY,,,using const_reference = typename std::add_lvalue_reference<typename std::add_const<value_type>::type>;,9,src\cuda4dnn\csl\span.hpp,const_reference,,false,35,const_reference,7
358857,TYPE_DECL,Span<T>,,,using View = Span<const T>;,5,src\cuda4dnn\csl\span.hpp,View,,false,58,View,2
358919,TYPE_DECL,,src\cuda4dnn\csl\stream.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\stream.hpp,src\cuda4dnn\csl\stream.hpp:<global>,,false,1,<global>,8
358926,TYPE_DECL,,,,"class UniqueStream {
    public:
        UniqueStream() noexcept : stream{ 0 } { }
        UniqueStream(UniqueStream&) = delete;
        UniqueStream(UniqueStream&& other) noexcept {
            stream = other.stream;
            other.stream = 0;
        }

        /** creates a non-default stream if `create` is true; otherwise, no stream is created */
        UniqueStream(bool create) : stream{ 0 } {
            if (create) {
                /* we create non-blocking streams to avoid inrerruptions from users using the default stream */
                CUDA4DNN_CHECK_CUDA(cudaStreamCreateWithFlags(&stream, cudaStreamNonBlocking));
            }
        }

        ~UniqueStream() {
            try {
                /* cudaStreamDestroy does not throw if a valid stream is passed unless a previous
                 * asynchronous operation errored.
                 */
                if (stream != 0)
                    CUDA4DNN_CHECK_CUDA(cudaStreamDestroy(stream));
            } catc...",5,src\cuda4dnn\csl\stream.hpp,cv.dnn.cuda4dnn.csl.UniqueStream,,false,36,UniqueStream,1
359156,TYPE_DECL,,,,"class Stream {
    public:
        Stream() { }
        Stream(const Stream&) = default;
        Stream(Stream&&) = default;

        /** if \p create is `true`, a new stream will be created; otherwise, no stream is created */
        Stream(bool create) {
            if (create)
                stream = std::make_shared<UniqueStream>(create);
        }

        Stream& operator=(const Stream&) = default;
        Stream& operator=(Stream&&) = default;

        /** blocks the caller thread until all operations in the stream are complete */
        void synchronize() const {
            CV_Assert(stream);
            stream->synchronize();
        }

        /** returns true if there are operations pending in the stream */
        bool busy() const {
            CV_Assert(stream);
            return stream->busy();
        }

        /** returns true if the object points has a valid stream */
        explicit operator bool() const noexcept {
            if (!stream)
                re...",5,src\cuda4dnn\csl\stream.hpp,cv.dnn.cuda4dnn.csl.Stream,,false,116,Stream,2
359263,TYPE_DECL,cv.dnn.cuda4dnn.csl.Tensor<T>,,,"class Tensor {
        static_assert(std::is_standard_layout<T>::value, ""T must satisfy StandardLayoutType"");

    public:
        using value_type    = typename ManagedPtr<T>::element_type;
        using pointer       = typename ManagedPtr<value_type>::pointer;
        using const_pointer = typename ManagedPtr<value_type>::const_pointer;
        using size_type     = typename ManagedPtr<value_type>::size_type;

        Tensor() noexcept { }
        Tensor(const Tensor&) = delete;
        Tensor(Tensor&& other) noexcept {
            data = std::move(other.data);
            shape = other.shape;
            other.shape.clear();
        }

        /** @brief constructs a tensor of a specific shape
         *
         * Whatever arguments are accepted by the resize methods are accepted here.
         */
        template <class ...Args>
        Tensor(Args&&... sizes) { resize(std::forward<Args>(sizes)...); }

        Tensor& operator=(const Tensor&) = delete;
        Tensor& operator=...",5,src\cuda4dnn\csl\tensor.hpp,cv.dnn.cuda4dnn.csl.Tensor,,false,69,Tensor,2
359284,TYPE_DECL,cv.dnn.cuda4dnn.csl.TensorSpan<T>,,,"class TensorSpan {
    public:
        using value_type    = typename Tensor<T>::value_type;
        using pointer       = typename Tensor<T>::pointer;
        using const_pointer = typename Tensor<T>::const_pointer;
        using size_type     = typename Tensor<T>::size_type;

        TensorSpan() noexcept : ptr{ nullptr } { }
        TensorSpan(const TensorSpan&) noexcept = default;
        TensorSpan(Tensor<T>& tensor) noexcept : ptr{ tensor.get() } {
            const auto rank = tensor.rank();
            shape.resize(rank);
            for (int i = 0; i < rank; i++)
                shape[i] = tensor.get_axis_size(i);
        }

        template <class ForwardItr>
        TensorSpan(pointer ptr_, ForwardItr start, ForwardItr end) : ptr{ ptr_ } {
            CV_Assert(start != end);
            CV_Assert(std::distance(start, end) <= CSL_MAX_TENSOR_RANK);

            using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;
            if (std::any_of(start, en...",5,src\cuda4dnn\csl\tensor.hpp,cv.dnn.cuda4dnn.csl.TensorSpan,,false,435,TensorSpan,3
359332,TYPE_DECL,cv.dnn.cuda4dnn.csl.TensorView<T>,,,"class TensorView {
    public:
        using value_type    = typename Tensor<T>::value_type;
        using pointer       = typename Tensor<T>::pointer;
        using const_pointer = typename Tensor<T>::const_pointer;
        using size_type     = typename Tensor<T>::size_type;

        TensorView() noexcept : ptr{ nullptr } { }
        TensorView(const TensorView&) noexcept = default;
        TensorView(TensorSpan<T> other) noexcept : ptr{ other.get() } {
            const auto rank = other.rank();
            shape.resize(rank);
            for (int i = 0; i < rank; i++)
                shape[i] = other.get_axis_size(i);
        }
        TensorView(const Tensor<T>& tensor) noexcept : ptr{ tensor.get() } {
            const auto rank = tensor.rank();
            shape.resize(rank);
            for (int i = 0; i < rank; i++)
                shape[i] = tensor.get_axis_size(i);
        }

        template <class ForwardItr>
        TensorView(const_pointer ptr_, ForwardItr start, Forw...",5,src\cuda4dnn\csl\tensor.hpp,cv.dnn.cuda4dnn.csl.TensorView,,false,800,TensorView,4
359407,TYPE_DECL,,src\cuda4dnn\csl\tensor.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\tensor.hpp,src\cuda4dnn\csl\tensor.hpp:<global>,,false,1,<global>,19
359429,TYPE_DECL,ANY,,,using value_type    = typename ManagedPtr<T>::element_type;,9,src\cuda4dnn\csl\tensor.hpp,value_type,,false,73,value_type,1
359430,TYPE_DECL,ANY,,,using pointer       = typename ManagedPtr<value_type>::pointer;,9,src\cuda4dnn\csl\tensor.hpp,pointer,,false,74,pointer,2
359431,TYPE_DECL,ANY,,,using const_pointer = typename ManagedPtr<value_type>::const_pointer;,9,src\cuda4dnn\csl\tensor.hpp,const_pointer,,false,75,const_pointer,3
359432,TYPE_DECL,ANY,,,using size_type     = typename ManagedPtr<value_type>::size_type;,9,src\cuda4dnn\csl\tensor.hpp,size_type,,false,76,size_type,4
359712,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\tensor.hpp,ItrValueType,,false,213,ItrValueType,3
359845,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\tensor.hpp,ItrValueType,,false,270,ItrValueType,3
360309,TYPE_DECL,ANY,,,using value_type    = typename Tensor<T>::value_type;,9,src\cuda4dnn\csl\tensor.hpp,value_type,,false,437,value_type,1
360310,TYPE_DECL,ANY,,,using pointer       = typename Tensor<T>::pointer;,9,src\cuda4dnn\csl\tensor.hpp,pointer,,false,438,pointer,2
360311,TYPE_DECL,ANY,,,using const_pointer = typename Tensor<T>::const_pointer;,9,src\cuda4dnn\csl\tensor.hpp,const_pointer,,false,439,const_pointer,3
360312,TYPE_DECL,ANY,,,using size_type     = typename Tensor<T>::size_type;,9,src\cuda4dnn\csl\tensor.hpp,size_type,,false,440,size_type,4
360379,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\tensor.hpp,ItrValueType,,false,456,ItrValueType,3
360593,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\tensor.hpp,ItrValueType,,false,586,ItrValueType,3
361024,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\tensor.hpp,ItrValueType,,false,745,ItrValueType,6
361177,TYPE_DECL,ANY,,,using value_type    = typename Tensor<T>::value_type;,9,src\cuda4dnn\csl\tensor.hpp,value_type,,false,802,value_type,1
361178,TYPE_DECL,ANY,,,using pointer       = typename Tensor<T>::pointer;,9,src\cuda4dnn\csl\tensor.hpp,pointer,,false,803,pointer,2
361179,TYPE_DECL,ANY,,,using const_pointer = typename Tensor<T>::const_pointer;,9,src\cuda4dnn\csl\tensor.hpp,const_pointer,,false,804,const_pointer,3
361180,TYPE_DECL,ANY,,,using size_type     = typename Tensor<T>::size_type;,9,src\cuda4dnn\csl\tensor.hpp,size_type,,false,805,size_type,4
361284,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\tensor.hpp,ItrValueType,,false,827,ItrValueType,3
361504,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\tensor.hpp,ItrValueType,,false,951,ItrValueType,3
361935,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\tensor.hpp,ItrValueType,,false,1113,ItrValueType,6
362286,TYPE_DECL,,src\cuda4dnn\csl\tensor_ops.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\tensor_ops.hpp,src\cuda4dnn\csl\tensor_ops.hpp:<global>,,false,1,<global>,19
363010,TYPE_DECL,cv.dnn.cuda4dnn.csl.Convolution<T>,,,"class Convolution {
        using TensorDescriptor = cudnn::TensorDescriptor<T>;
        using FilterDescriptor = cudnn::FilterDescriptor<T>;
        using ConvolutionDescriptor = cudnn::ConvolutionDescriptor<T>;
        using ConvolutionAlgorithm = cudnn::ConvolutionAlgorithm<T>;
        using ActivationDescriptor = cudnn::ActivationDescriptor;

    public:
        using ActivationType = ActivationDescriptor::ActivationType;

        struct params_type {
            /* convolution */
            std::vector<std::size_t> input_shape;
            std::vector<std::size_t> filter_shape;
            std::vector<std::size_t> padding;
            std::vector<std::size_t> stride;
            std::vector<std::size_t> dilation;
            std::size_t groups;

            /* bias and activation (only RELU supported) */
            std::vector<std::size_t> bias_shape;
            ActivationType activation_type; /* MUST BE identity if there is no bias and ReLU if there is bias */
            b...",5,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.Convolution,,false,207,Convolution,2
363011,TYPE_DECL,ANY,,,using TensorDescriptor = cudnn::TensorDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,TensorDescriptor,,false,208,TensorDescriptor,1
363012,TYPE_DECL,ANY,,,using FilterDescriptor = cudnn::FilterDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,FilterDescriptor,,false,209,FilterDescriptor,2
363013,TYPE_DECL,ANY,,,using ConvolutionDescriptor = cudnn::ConvolutionDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,ConvolutionDescriptor,,false,210,ConvolutionDescriptor,3
363014,TYPE_DECL,ANY,,,using ConvolutionAlgorithm = cudnn::ConvolutionAlgorithm<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,ConvolutionAlgorithm,,false,211,ConvolutionAlgorithm,4
363015,TYPE_DECL,ANY,,,using ActivationDescriptor = cudnn::ActivationDescriptor;,9,src\cuda4dnn\csl\tensor_ops.hpp,ActivationDescriptor,,false,212,ActivationDescriptor,5
363016,TYPE_DECL,ANY,,,using ActivationType = ActivationDescriptor::ActivationType;,9,src\cuda4dnn\csl\tensor_ops.hpp,ActivationType,,false,215,ActivationType,6
363017,TYPE_DECL,,,,"struct params_type {
            /* convolution */
            std::vector<std::size_t> input_shape;
            std::vector<std::size_t> filter_shape;
            std::vector<std::size_t> padding;
            std::vector<std::size_t> stride;
            std::vector<std::size_t> dilation;
            std::size_t groups;

            /* bias and activation (only RELU supported) */
            std::vector<std::size_t> bias_shape;
            ActivationType activation_type; /* MUST BE identity if there is no bias and ReLU if there is bias */
            bool eltwise;
        }",9,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.Convolution.params_type,,false,217,params_type,7
363294,TYPE_DECL,cv.dnn.cuda4dnn.csl.TransposeConvolution<T>,,,"class TransposeConvolution {
        using TensorDescriptor = cudnn::TensorDescriptor<T>;
        using FilterDescriptor = cudnn::FilterDescriptor<T>;
        using ConvolutionDescriptor = cudnn::ConvolutionDescriptor<T>;
        using TransposeConvolutionAlgorithm = cudnn::TransposeConvolutionAlgorithm<T>;

    public:
        struct params_type {
            std::vector<std::size_t> input_shape;
            std::vector<std::size_t> output_shape;

            std::vector<std::size_t> filter_shape;

            std::vector<std::size_t> padding;
            std::vector<std::size_t> stride;
            std::vector<std::size_t> dilation;

            std::size_t groups;
        };

        TransposeConvolution() = default;
        TransposeConvolution(const TransposeConvolution&) = delete;
        TransposeConvolution(TransposeConvolution&&) = default;
        TransposeConvolution(cudnn::Handle handle, const params_type& params) {
            cudnnHandle = std::move(handle);

         ...",5,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.TransposeConvolution,,false,313,TransposeConvolution,3
363295,TYPE_DECL,ANY,,,using TensorDescriptor = cudnn::TensorDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,TensorDescriptor,,false,314,TensorDescriptor,1
363296,TYPE_DECL,ANY,,,using FilterDescriptor = cudnn::FilterDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,FilterDescriptor,,false,315,FilterDescriptor,2
363297,TYPE_DECL,ANY,,,using ConvolutionDescriptor = cudnn::ConvolutionDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,ConvolutionDescriptor,,false,316,ConvolutionDescriptor,3
363298,TYPE_DECL,ANY,,,using TransposeConvolutionAlgorithm = cudnn::TransposeConvolutionAlgorithm<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,TransposeConvolutionAlgorithm,,false,317,TransposeConvolutionAlgorithm,4
363299,TYPE_DECL,,,,"struct params_type {
            std::vector<std::size_t> input_shape;
            std::vector<std::size_t> output_shape;

            std::vector<std::size_t> filter_shape;

            std::vector<std::size_t> padding;
            std::vector<std::size_t> stride;
            std::vector<std::size_t> dilation;

            std::size_t groups;
        }",9,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.TransposeConvolution.params_type,,false,320,params_type,5
363461,TYPE_DECL,cv.dnn.cuda4dnn.csl.Pooling<T>,,,"class Pooling {
        using TensorDescriptor = cudnn::TensorDescriptor<T>;
        using PoolingDescriptor = cudnn::PoolingDescriptor;

    public:
        using PoolingType = PoolingDescriptor::PoolingType;

        struct params_type {
            std::vector<std::size_t> input_shape;
            std::vector<std::size_t> output_shape;

            std::vector<std::size_t> window_size;
            std::vector<std::size_t> padding;
            std::vector<std::size_t> stride;

            PoolingType type;
        };

        Pooling() = default;
        Pooling(const Pooling&) = delete;
        Pooling(Pooling&&) = default;
        Pooling(cudnn::Handle handle, const params_type& params) {
            cudnnHandle = std::move(handle);

            inputTensorDesc = TensorDescriptor(params.input_shape);
            poolingDesc = PoolingDescriptor(params.window_size, params.padding, params.stride, params.type);

            //std::vector<int> output_dim;
            //getPoolingForw...",5,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.Pooling,,false,384,Pooling,4
363462,TYPE_DECL,ANY,,,using TensorDescriptor = cudnn::TensorDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,TensorDescriptor,,false,385,TensorDescriptor,1
363463,TYPE_DECL,ANY,,,using PoolingDescriptor = cudnn::PoolingDescriptor;,9,src\cuda4dnn\csl\tensor_ops.hpp,PoolingDescriptor,,false,386,PoolingDescriptor,2
363464,TYPE_DECL,ANY,,,using PoolingType = PoolingDescriptor::PoolingType;,9,src\cuda4dnn\csl\tensor_ops.hpp,PoolingType,,false,389,PoolingType,3
363465,TYPE_DECL,,,,"struct params_type {
            std::vector<std::size_t> input_shape;
            std::vector<std::size_t> output_shape;

            std::vector<std::size_t> window_size;
            std::vector<std::size_t> padding;
            std::vector<std::size_t> stride;

            PoolingType type;
        }",9,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.Pooling.params_type,,false,391,params_type,4
363564,TYPE_DECL,cv.dnn.cuda4dnn.csl.LRN<T>,,,"class LRN {
        using LRNDescriptor = cudnn::LRNDescriptor;
        using TensorDescriptor = cudnn::TensorDescriptor<T>;

    public:
        using LRNType = LRNDescriptor::LRNType;

        LRN() = default;
        LRN(const LRN&) = delete;
        LRN(LRN&&) = default;
        LRN(cudnn::Handle handle, std::size_t local_size, T alpha, T beta, T k, LRNType type) {
            cudnnHandle = std::move(handle);
            lrnDesc = LRNDescriptor(local_size, alpha, beta, k, type);
        }

        LRN& operator=(const LRN&) = delete;
        LRN& operator=(LRN&&) = default;

        void normalize(TensorView<T> input, TensorSpan<T> output, WorkspaceInstance workspace) {
            cudnn::LRNForward<T>(
                cudnnHandle,
                lrnDesc,
                TensorDescriptor(input.shape_as_vector()), input.get(),
                1.0, 0.0, TensorDescriptor(output.shape_as_vector()), output.get(),
                workspace
            );
        }

    private:
     ...",5,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.LRN,,false,435,LRN,5
363565,TYPE_DECL,ANY,,,using LRNDescriptor = cudnn::LRNDescriptor;,9,src\cuda4dnn\csl\tensor_ops.hpp,LRNDescriptor,,false,436,LRNDescriptor,1
363566,TYPE_DECL,ANY,,,using TensorDescriptor = cudnn::TensorDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,TensorDescriptor,,false,437,TensorDescriptor,2
363567,TYPE_DECL,ANY,,,using LRNType = LRNDescriptor::LRNType;,9,src\cuda4dnn\csl\tensor_ops.hpp,LRNType,,false,440,LRNType,3
363653,TYPE_DECL,cv.dnn.cuda4dnn.csl.TensorTransform<T>,,,"class TensorTransform {
        using TensorTransformDescriptor = cudnn::TensorTransformDescriptor;
        using TensorDescriptor = cudnn::TensorDescriptor<T>;

    public:
        TensorTransform() = default;
        TensorTransform(const TensorTransform&) = delete;
        TensorTransform(TensorTransform&&) = default;

        template <class SequenceContainer>
        TensorTransform(cudnn::Handle handle, const SequenceContainer& paddingLeft, const SequenceContainer& paddingRight) {
            cudnnHandle = std::move(handle);
            transDesc = TensorTransformDescriptor(paddingLeft, paddingRight);
        }

        TensorTransform& operator=(const TensorTransform&) = delete;
        TensorTransform& operator=(TensorTransform&&) = default;

        void transform(TensorView<T> input, TensorSpan<T> output) {
            cudnn::transform<T>(
                cudnnHandle,
                transDesc,
                TensorDescriptor(input.shape_as_vector()), input.get(),
       ...",5,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.TensorTransform,,false,469,TensorTransform,6
363654,TYPE_DECL,ANY,,,using TensorTransformDescriptor = cudnn::TensorTransformDescriptor;,9,src\cuda4dnn\csl\tensor_ops.hpp,TensorTransformDescriptor,,false,470,TensorTransformDescriptor,1
363655,TYPE_DECL,ANY,,,using TensorDescriptor = cudnn::TensorDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,TensorDescriptor,,false,471,TensorDescriptor,2
363731,TYPE_DECL,cv.dnn.cuda4dnn.csl.LSTM<T>,,,"class LSTM
    {
        using TensorDescriptor = cudnn::TensorDescriptor<T>;
        using DropoutDescriptor = cudnn::DropoutDescriptor;
        using RNNDescriptor = cudnn::RNNDescriptor<T>;
        using FilterDescriptor = cudnn::FilterDescriptor<T>;
        using TensorDescriptorsArray = cudnn::TensorDescriptorsArray<T>;

    public:
        using RNNMode = typename RNNDescriptor::RNNMode;

        struct params_type
        {
            std::vector<std::size_t> weights_shape;

            int seqLength;
            int numLayers;
            int hiddenSize;
            int inputSize;
            int miniBatch;
            bool bidirectional;

            float dropout;
            RNNMode type;
        };

        LSTM() = default;
        LSTM(const LSTM&) = delete;
        LSTM(LSTM&&) = default;
        LSTM(cudnn::Handle handle, const params_type& params)
            : cudnnHandle(std::move(handle)), seqLength{params.seqLength},
              inputDesc(seqLength, {params.m...",5,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.LSTM,,false,502,LSTM,7
363732,TYPE_DECL,ANY,,,using TensorDescriptor = cudnn::TensorDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,TensorDescriptor,,false,504,TensorDescriptor,1
363733,TYPE_DECL,ANY,,,using DropoutDescriptor = cudnn::DropoutDescriptor;,9,src\cuda4dnn\csl\tensor_ops.hpp,DropoutDescriptor,,false,505,DropoutDescriptor,2
363734,TYPE_DECL,ANY,,,using RNNDescriptor = cudnn::RNNDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,RNNDescriptor,,false,506,RNNDescriptor,3
363735,TYPE_DECL,ANY,,,using FilterDescriptor = cudnn::FilterDescriptor<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,FilterDescriptor,,false,507,FilterDescriptor,4
363736,TYPE_DECL,ANY,,,using TensorDescriptorsArray = cudnn::TensorDescriptorsArray<T>;,9,src\cuda4dnn\csl\tensor_ops.hpp,TensorDescriptorsArray,,false,508,TensorDescriptorsArray,5
363737,TYPE_DECL,ANY,,,using RNNMode = typename RNNDescriptor::RNNMode;,9,src\cuda4dnn\csl\tensor_ops.hpp,RNNMode,,false,511,RNNMode,6
363738,TYPE_DECL,,,,"struct params_type
        {
            std::vector<std::size_t> weights_shape;

            int seqLength;
            int numLayers;
            int hiddenSize;
            int inputSize;
            int miniBatch;
            bool bidirectional;

            float dropout;
            RNNMode type;
        }",9,src\cuda4dnn\csl\tensor_ops.hpp,cv.dnn.cuda4dnn.csl.LSTM.params_type,,false,513,params_type,7
363944,TYPE_DECL,,src\cuda4dnn\csl\workspace.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\csl\workspace.hpp,src\cuda4dnn\csl\workspace.hpp:<global>,,false,1,<global>,7
363951,TYPE_DECL,,,,"class Workspace {
    public:

        /** @brief reserve \p bytes of memory */
        void require(std::size_t bytes) {
            if (bytes > ptr.size())
                ptr.reset(bytes);
        }

        /** @brief number of bytes reserved by the largest consumer */
        std::size_t size() const noexcept {
            return ptr.size();
        }

        /** @brief returns the pointer to the workspace memory */
        DevicePtr<unsigned char> get() {
            return ptr.get();
        }

    private:
        ManagedPtr<unsigned char> ptr;
    }",5,src\cuda4dnn\csl\workspace.hpp,cv.dnn.cuda4dnn.csl.Workspace,,false,24,Workspace,1
363989,TYPE_DECL,,,,"class WorkspaceBuilder {
    public:
        WorkspaceBuilder() noexcept : max_size_in_bytes{ 0 } { }

        /** request memory for \p count number of elements of the type \tparam T */
        template <class T = std::int8_t>
        void require(std::size_t count) noexcept {
            auto blocks256 = (count * sizeof(T) + 255) / 256;
            max_size_in_bytes += blocks256 * 256;
        }

        /** returns the total workspace memory that is required */
        std::size_t required_workspace_size() const noexcept { return max_size_in_bytes; }

    private:
        std::size_t max_size_in_bytes;
    }",5,src\cuda4dnn\csl\workspace.hpp,cv.dnn.cuda4dnn.csl.WorkspaceBuilder,,false,48,WorkspaceBuilder,2
364022,TYPE_DECL,,,,"class WorkspaceInstance {
    public:

        /** returns a device pointer to the workspace memory */
        template <class T = void>
        DevicePtr<T> get() const noexcept {
            return static_cast<DevicePtr<T>>(ptr);
        }

        /** returnss the size of the workspace memory in bytes */
        std::size_t size_in_bytes() const noexcept {
            return size_in_bytes_;
        }

        /** creates a Span<T> of \p count elements from the workspace memory */
        template <class T>
        Span<T> get_span(std::size_t count = 0) const {
            if (count == 0)
                count = size_in_bytes_ / sizeof(T);

            if (count * sizeof(T) > size_in_bytes_)
                CV_Error(Error::StsNoMem, ""memory not sufficient"");

            return Span<T>(static_cast<DevicePtr<T>>(ptr), count);
        }

        /** creates a TensorSpan<T> of the given shape from the workspace memory */
        template <class T, class ForwardItr>
        TensorSpa...",5,src\cuda4dnn\csl\workspace.hpp,cv.dnn.cuda4dnn.csl.WorkspaceInstance,,false,67,WorkspaceInstance,3
364076,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\workspace.hpp,ItrValueType,,false,96,ItrValueType,1
364115,TYPE_DECL,,,,friend class WorkspaceAllocator,9,src\cuda4dnn\csl\workspace.hpp,cv.dnn.cuda4dnn.csl.WorkspaceInstance.WorkspaceAllocator,,false,107,WorkspaceAllocator,7
364122,TYPE_DECL,,,,"class WorkspaceAllocator {
    public:
        WorkspaceAllocator() = default;
        WorkspaceAllocator(Workspace& workspace) noexcept
            : current{ workspace.get() }, bytes_remaining { workspace.size() }
        {
            CV_Assert(is_aligned<void>(current, 256));
            CV_Assert(bytes_remaining % 256 == 0);
        }

        /** allocates a Span<T> of \p count elements from the workspace memory */
        template <class T>
        Span<T> get_span(std::size_t count = 0) {
            return accquire<T>(count);
        }

        /** allocates a TensorSpan<T> of the given shape from the workspace memory */
        template <class T, class ForwardItr>
        TensorSpan<T> get_tensor_span(ForwardItr start, ForwardItr end) {
            using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;
            auto required_size = std::accumulate(start, end, 1, std::multiplies<ItrValueType>());
            return TensorSpan<T>(accquire<T>(required_...",5,src\cuda4dnn\csl\workspace.hpp,cv.dnn.cuda4dnn.csl.WorkspaceAllocator,,false,113,WorkspaceAllocator,4
364154,TYPE_DECL,ANY,,,using ItrValueType = typename std::iterator_traits<ForwardItr>::value_type;,13,src\cuda4dnn\csl\workspace.hpp,ItrValueType,,false,132,ItrValueType,1
364272,TYPE_DECL,,src\cuda4dnn\cxx_utils\is_iterator.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\cxx_utils\is_iterator.hpp,src\cuda4dnn\cxx_utils\is_iterator.hpp:<global>,,false,1,<global>,3
364280,TYPE_DECL,"cv.dnn.cuda4dnn.cxx_utils.detail.is_iterator_helper<T,Tag,>",,,struct is_iterator_helper : std::false_type {},9,src\cuda4dnn\cxx_utils\is_iterator.hpp,cv.dnn.cuda4dnn.cxx_utils.detail.is_iterator_helper,std.false_type,false,15,is_iterator_helper,1
364281,TYPE_DECL,"cv.dnn.cuda4dnn.cxx_utils.detail.is_iterator_helper<T,Tag,std.enable_if<std.is_base_of<Tag,std.iterator_traits<T>.iterator_category>.value,void>.type><T,Tag>",,,"struct is_iterator_helper<T, Tag,
                typename std::enable_if<std::is_base_of<Tag, typename std::iterator_traits<T>::iterator_category>::value, void>::type
            > : std::true_type {}",9,src\cuda4dnn\cxx_utils\is_iterator.hpp,"cv.dnn.cuda4dnn.cxx_utils.detail.is_iterator_helper<T,Tag,std.enable_if<std.is_base_of<Tag,std.iterator_traits<T>.iterator_category>.value,void>.type>",std.true_type,false,18,"is_iterator_helper<T,Tag,std::enable_if<std::is_base_of<Tag,std::iterator_traits<T>::iterator_category>::value,void>::type>",2
364282,TYPE_DECL,ANY,,,"using is_iterator = typename detail::is_iterator_helper<T, std::input_iterator_tag>;",5,src\cuda4dnn\cxx_utils\is_iterator.hpp,is_iterator,,false,24,is_iterator,2
364283,TYPE_DECL,ANY,,,"using is_forward_iterator = typename detail::is_iterator_helper<T, std::forward_iterator_tag>;",5,src\cuda4dnn\cxx_utils\is_iterator.hpp,is_forward_iterator,,false,27,is_forward_iterator,3
364294,TYPE_DECL,,src\cuda4dnn\cxx_utils\resizable_static_array.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,src\cuda4dnn\cxx_utils\resizable_static_array.hpp:<global>,,false,1,<global>,5
364301,TYPE_DECL,"cv.dnn.cuda4dnn.cxx_utils.resizable_static_array<T,std.size_t>",,,"class resizable_static_array {
        using container_type = std::array<T, maxN>;

    public:
        using value_type                = typename container_type::value_type;
        using size_type                 = typename container_type::size_type;
        using difference_type           = typename container_type::difference_type;
        using reference                 = typename container_type::reference;
        using const_reference           = typename container_type::const_reference;
        using pointer                   = typename container_type::pointer;
        using const_pointer             = typename container_type::const_pointer;
        using iterator                  = typename container_type::iterator;
        using const_iterator            = typename container_type::const_iterator;
        using reverse_iterator          = typename container_type::reverse_iterator;
        using const_reverse_iterator    = typename container_type::const_reverse_iterator;

   ...",5,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,cv.dnn.cuda4dnn.cxx_utils.resizable_static_array,,false,16,resizable_static_array,1
364302,TYPE_DECL,ANY,,,"using container_type = std::array<T, maxN>;",9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,container_type,,false,17,container_type,1
364303,TYPE_DECL,ANY,,,using value_type                = typename container_type::value_type;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,value_type,,false,20,value_type,2
364304,TYPE_DECL,ANY,,,using size_type                 = typename container_type::size_type;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,size_type,,false,21,size_type,3
364305,TYPE_DECL,ANY,,,using difference_type           = typename container_type::difference_type;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,difference_type,,false,22,difference_type,4
364306,TYPE_DECL,ANY,,,using reference                 = typename container_type::reference;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,reference,,false,23,reference,5
364307,TYPE_DECL,ANY,,,using const_reference           = typename container_type::const_reference;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,const_reference,,false,24,const_reference,6
364308,TYPE_DECL,ANY,,,using pointer                   = typename container_type::pointer;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,pointer,,false,25,pointer,7
364309,TYPE_DECL,ANY,,,using const_pointer             = typename container_type::const_pointer;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,const_pointer,,false,26,const_pointer,8
364310,TYPE_DECL,ANY,,,using iterator                  = typename container_type::iterator;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,iterator,,false,27,iterator,9
364311,TYPE_DECL,ANY,,,using const_iterator            = typename container_type::const_iterator;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,const_iterator,,false,28,const_iterator,10
364312,TYPE_DECL,ANY,,,using reverse_iterator          = typename container_type::reverse_iterator;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,reverse_iterator,,false,29,reverse_iterator,11
364313,TYPE_DECL,ANY,,,using const_reverse_iterator    = typename container_type::const_reverse_iterator;,9,src\cuda4dnn\cxx_utils\resizable_static_array.hpp,const_reverse_iterator,,false,30,const_reverse_iterator,12
364638,TYPE_DECL,,src\cuda4dnn\init.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\init.hpp,src\cuda4dnn\init.hpp:<global>,,false,1,<global>,6
364947,TYPE_DECL,,src\cuda4dnn\kernels\activation_eltwise.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\activation_eltwise.hpp,src\cuda4dnn\kernels\activation_eltwise.hpp:<global>,,false,1,<global>,4
365017,TYPE_DECL,,src\cuda4dnn\kernels\activations.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\activations.hpp,src\cuda4dnn\kernels\activations.hpp:<global>,,false,1,<global>,4
365338,TYPE_DECL,,src\cuda4dnn\kernels\bias_activation.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\bias_activation.hpp,src\cuda4dnn\kernels\bias_activation.hpp:<global>,,false,1,<global>,4
365415,TYPE_DECL,,src\cuda4dnn\kernels\bias_activation_eltwise.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\bias_activation_eltwise.hpp,src\cuda4dnn\kernels\bias_activation_eltwise.hpp:<global>,,false,1,<global>,4
365499,TYPE_DECL,,src\cuda4dnn\kernels\bias_eltwise_activation.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\bias_eltwise_activation.hpp,src\cuda4dnn\kernels\bias_eltwise_activation.hpp:<global>,,false,1,<global>,4
365594,TYPE_DECL,,src\cuda4dnn\kernels\concat.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\concat.hpp,src\cuda4dnn\kernels\concat.hpp:<global>,,false,1,<global>,5
365626,TYPE_DECL,,src\cuda4dnn\kernels\crop_and_resize.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\crop_and_resize.hpp,src\cuda4dnn\kernels\crop_and_resize.hpp:<global>,,false,1,<global>,4
365649,TYPE_DECL,,src\cuda4dnn\kernels\detection_output.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\detection_output.hpp,src\cuda4dnn\kernels\detection_output.hpp:<global>,,false,1,<global>,4
365738,TYPE_DECL,,src\cuda4dnn\kernels\eltwise_activation.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\eltwise_activation.hpp,src\cuda4dnn\kernels\eltwise_activation.hpp:<global>,,false,1,<global>,4
365815,TYPE_DECL,,src\cuda4dnn\kernels\eltwise_ops.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\eltwise_ops.hpp,src\cuda4dnn\kernels\eltwise_ops.hpp:<global>,,false,1,<global>,4
365886,TYPE_DECL,,src\cuda4dnn\kernels\fill_copy.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\fill_copy.hpp,src\cuda4dnn\kernels\fill_copy.hpp:<global>,,false,1,<global>,3
365913,TYPE_DECL,,src\cuda4dnn\kernels\fp_conversion.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\fp_conversion.hpp,src\cuda4dnn\kernels\fp_conversion.hpp:<global>,,false,1,<global>,3
365942,TYPE_DECL,,src\cuda4dnn\kernels\grid_nms.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\grid_nms.hpp,src\cuda4dnn\kernels\grid_nms.hpp:<global>,,false,1,<global>,4
365977,TYPE_DECL,,src\cuda4dnn\kernels\max_unpooling.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\max_unpooling.hpp,src\cuda4dnn\kernels\max_unpooling.hpp:<global>,,false,1,<global>,5
366014,TYPE_DECL,,src\cuda4dnn\kernels\mvn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\mvn.hpp,src\cuda4dnn\kernels\mvn.hpp:<global>,,false,1,<global>,4
366111,TYPE_DECL,,src\cuda4dnn\kernels\normalize.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\normalize.hpp,src\cuda4dnn\kernels\normalize.hpp:<global>,,false,1,<global>,4
366143,TYPE_DECL,,src\cuda4dnn\kernels\padding.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\padding.hpp,src\cuda4dnn\kernels\padding.hpp:<global>,,false,1,<global>,6
366168,TYPE_DECL,,src\cuda4dnn\kernels\permute.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\permute.hpp,src\cuda4dnn\kernels\permute.hpp:<global>,,false,1,<global>,5
366200,TYPE_DECL,,src\cuda4dnn\kernels\prior_box.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\prior_box.hpp,src\cuda4dnn\kernels\prior_box.hpp:<global>,,false,1,<global>,4
366235,TYPE_DECL,,src\cuda4dnn\kernels\region.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\region.hpp,src\cuda4dnn\kernels\region.hpp:<global>,,false,1,<global>,4
366267,TYPE_DECL,,src\cuda4dnn\kernels\resize.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\resize.hpp,src\cuda4dnn\kernels\resize.hpp:<global>,,false,1,<global>,3
366303,TYPE_DECL,,src\cuda4dnn\kernels\roi_pooling.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\roi_pooling.hpp,src\cuda4dnn\kernels\roi_pooling.hpp:<global>,,false,1,<global>,4
366327,TYPE_DECL,,src\cuda4dnn\kernels\scale_shift.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\scale_shift.hpp,src\cuda4dnn\kernels\scale_shift.hpp:<global>,,false,1,<global>,4
366377,TYPE_DECL,,src\cuda4dnn\kernels\shortcut.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\shortcut.hpp,src\cuda4dnn\kernels\shortcut.hpp:<global>,,false,1,<global>,3
366400,TYPE_DECL,,src\cuda4dnn\kernels\slice.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\kernels\slice.hpp,src\cuda4dnn\kernels\slice.hpp:<global>,,false,1,<global>,4
366429,TYPE_DECL,,src\cuda4dnn\primitives\activation.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\activation.hpp,src\cuda4dnn\primitives\activation.hpp:<global>,,false,1,<global>,7
366435,TYPE_DECL,"cv.dnn.cuda4dnn.BaseOp<template<>,T>",,,"struct BaseOp : public CUDABackendNode
    {
    protected:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            for (int i = 0; i < inputs.size(); i++)
            {
                auto input_wrapper = inputs[i].dynamicCast<wrapper_type>();
                auto input = input_wrapper->getView();

                auto output_wrapper = outputs[i].dynamicCast<wrapper_type>();
                auto output = output_wrapper->getSpan();

                static_cast<const Op<T>*>(this)->calculate(output, input);
            }
        }
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.BaseOp,CUDABackendNode,false,22,BaseOp,1
366436,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\activation.hpp,wrapper_type,,false,25,wrapper_type,1
366499,TYPE_DECL,cv.dnn.cuda4dnn.ReLUOp<T>,,,"class ReLUOp final : public BaseOp<ReLUOp, T> {
    public:
        ReLUOp(csl::Stream stream_, T slope_)
                : stream(std::move(stream_)), slope{ slope_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::relu<T>(stream, output, input, slope);
        }

    private:
        csl::Stream stream;
        const T slope;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ReLUOp,"BaseOp<ReLUOp, T>",false,46,ReLUOp,2
366522,TYPE_DECL,cv.dnn.cuda4dnn.ClippedReLUOp<T>,,,"class ClippedReLUOp final : public BaseOp<ClippedReLUOp, T> {
    public:
        ClippedReLUOp(csl::Stream stream_, T min_, T max_)
            : stream(std::move(stream_)), min{ min_ }, max{ max_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::clipped_relu<T>(stream, output, input, min, max);
        }

    private:
        csl::Stream stream;
        const T min, max;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ClippedReLUOp,"BaseOp<ClippedReLUOp, T>",false,62,ClippedReLUOp,3
366548,TYPE_DECL,cv.dnn.cuda4dnn.ChannelwiseReLUOp<T>,,,"class ChannelwiseReLUOp final : public BaseOp<ChannelwiseReLUOp, T> {
    public:
        ChannelwiseReLUOp(csl::Stream stream_, const Mat& slope)
                : stream(std::move(stream_))
        {
            CV_Assert(!slope.empty());
            slopeTensor = csl::makeTensorHeader<T>(slope);
            csl::copyMatToTensor<T>(slope, slopeTensor, stream);
        }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            CV_Assert(input.get_axis_size(1) == slopeTensor.size());
            std::size_t inner_size = input.size_range(2, input.rank());
            kernels::axiswise_relu<T>(stream, output, input, inner_size, slopeTensor);
        }

    private:
        csl::Stream stream;
        csl::Tensor<T> slopeTensor;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ChannelwiseReLUOp,"BaseOp<ChannelwiseReLUOp, T>",false,78,ChannelwiseReLUOp,4
366621,TYPE_DECL,cv.dnn.cuda4dnn.TanHOp<T>,,,"class TanHOp final : public BaseOp<TanHOp, T> {
    public:
        TanHOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::tanh<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.TanHOp,"BaseOp<TanHOp, T>",false,101,TanHOp,5
366641,TYPE_DECL,cv.dnn.cuda4dnn.SwishOp<T>,,,"class SwishOp final : public BaseOp<SwishOp, T> {
    public:
        SwishOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::swish<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SwishOp,"BaseOp<SwishOp, T>",false,115,SwishOp,6
366661,TYPE_DECL,cv.dnn.cuda4dnn.MishOp<T>,,,"class MishOp final : public BaseOp<MishOp, T> {
    public:
        MishOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::mish<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.MishOp,"BaseOp<MishOp, T>",false,129,MishOp,7
366681,TYPE_DECL,cv.dnn.cuda4dnn.SigmoidOp<T>,,,"class SigmoidOp final : public BaseOp<SigmoidOp, T> {
    public:
        SigmoidOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::sigmoid<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SigmoidOp,"BaseOp<SigmoidOp, T>",false,143,SigmoidOp,8
366701,TYPE_DECL,cv.dnn.cuda4dnn.ELUOp<T>,,,"class ELUOp final : public BaseOp<ELUOp, T> {
    public:
        ELUOp(csl::Stream stream_, T alpha_) : stream(std::move(stream_)), alpha(alpha_) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::elu<T>(stream, output, input, alpha);
        }

    private:
        csl::Stream stream;
        T alpha;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ELUOp,"BaseOp<ELUOp, T>",false,157,ELUOp,9
366724,TYPE_DECL,cv.dnn.cuda4dnn.AbsValOp<T>,,,"class AbsValOp final : public BaseOp<AbsValOp, T> {
    public:
        AbsValOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::abs<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.AbsValOp,"BaseOp<AbsValOp, T>",false,172,AbsValOp,10
366744,TYPE_DECL,cv.dnn.cuda4dnn.BNLLOp<T>,,,"class BNLLOp final : public BaseOp<BNLLOp, T> {
    public:
        BNLLOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::bnll<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.BNLLOp,"BaseOp<BNLLOp, T>",false,186,BNLLOp,11
366764,TYPE_DECL,cv.dnn.cuda4dnn.CeilOp<T>,,,"class CeilOp final : public BaseOp<CeilOp, T> {
    public:
        CeilOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::ceil<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.CeilOp,"BaseOp<CeilOp, T>",false,200,CeilOp,12
366784,TYPE_DECL,cv.dnn.cuda4dnn.FloorOp<T>,,,"class FloorOp final : public BaseOp<FloorOp, T> {
    public:
        FloorOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::floor<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.FloorOp,"BaseOp<FloorOp, T>",false,214,FloorOp,13
366804,TYPE_DECL,cv.dnn.cuda4dnn.LogOp<T>,,,"class LogOp final : public BaseOp<LogOp, T> {
    public:
        LogOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::log<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.LogOp,"BaseOp<LogOp, T>",false,228,LogOp,14
366824,TYPE_DECL,cv.dnn.cuda4dnn.RoundOp<T>,,,"class RoundOp final : public BaseOp<RoundOp, T> {
    public:
        RoundOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::rint<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.RoundOp,"BaseOp<RoundOp, T>",false,242,RoundOp,15
366844,TYPE_DECL,cv.dnn.cuda4dnn.SqrtOp<T>,,,"class SqrtOp final : public BaseOp<SqrtOp, T> {
    public:
        SqrtOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::sqrt<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SqrtOp,"BaseOp<SqrtOp, T>",false,256,SqrtOp,16
366864,TYPE_DECL,cv.dnn.cuda4dnn.NotOp<T>,,,"class NotOp final : public BaseOp<NotOp, T> {
    public:
        NotOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::not_k<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.NotOp,"BaseOp<NotOp, T>",false,270,NotOp,17
366884,TYPE_DECL,cv.dnn.cuda4dnn.AcosOp<T>,,,"class AcosOp final : public BaseOp<AcosOp, T> {
    public:
        AcosOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::acos<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.AcosOp,"BaseOp<AcosOp, T>",false,284,AcosOp,18
366904,TYPE_DECL,cv.dnn.cuda4dnn.AcoshOp<T>,,,"class AcoshOp final : public BaseOp<AcoshOp, T> {
    public:
        AcoshOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::acosh<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.AcoshOp,"BaseOp<AcoshOp, T>",false,298,AcoshOp,19
366924,TYPE_DECL,cv.dnn.cuda4dnn.AsinOp<T>,,,"class AsinOp final : public BaseOp<AsinOp, T> {
    public:
        AsinOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::asin<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.AsinOp,"BaseOp<AsinOp, T>",false,312,AsinOp,20
366944,TYPE_DECL,cv.dnn.cuda4dnn.AsinhOp<T>,,,"class AsinhOp final : public BaseOp<AsinhOp, T> {
    public:
        AsinhOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::asinh<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.AsinhOp,"BaseOp<AsinhOp, T>",false,326,AsinhOp,21
366964,TYPE_DECL,cv.dnn.cuda4dnn.AtanOp<T>,,,"class AtanOp final : public BaseOp<AtanOp, T> {
    public:
        AtanOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::atan<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.AtanOp,"BaseOp<AtanOp, T>",false,340,AtanOp,22
366984,TYPE_DECL,cv.dnn.cuda4dnn.AtanhOp<T>,,,"class AtanhOp final : public BaseOp<AtanhOp, T> {
    public:
        AtanhOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::atanh<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.AtanhOp,"BaseOp<AtanhOp, T>",false,354,AtanhOp,23
367004,TYPE_DECL,cv.dnn.cuda4dnn.CosOp<T>,,,"class CosOp final : public BaseOp<CosOp, T> {
    public:
        CosOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::cos<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.CosOp,"BaseOp<CosOp, T>",false,368,CosOp,24
367024,TYPE_DECL,cv.dnn.cuda4dnn.CoshOp<T>,,,"class CoshOp final : public BaseOp<CoshOp, T> {
    public:
        CoshOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::cosh<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.CoshOp,"BaseOp<CoshOp, T>",false,382,CoshOp,25
367044,TYPE_DECL,cv.dnn.cuda4dnn.ErfOp<T>,,,"class ErfOp final : public BaseOp<ErfOp, T> {
    public:
        ErfOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::erf<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ErfOp,"BaseOp<ErfOp, T>",false,396,ErfOp,26
367064,TYPE_DECL,cv.dnn.cuda4dnn.HardSwishOp<T>,,,"class HardSwishOp final : public BaseOp<HardSwishOp, T> {
    public:
        HardSwishOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::hardswish<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.HardSwishOp,"BaseOp<HardSwishOp, T>",false,410,HardSwishOp,27
367084,TYPE_DECL,cv.dnn.cuda4dnn.SinOp<T>,,,"class SinOp final : public BaseOp<SinOp, T> {
    public:
        SinOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::sin<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SinOp,"BaseOp<SinOp, T>",false,424,SinOp,28
367104,TYPE_DECL,cv.dnn.cuda4dnn.SinhOp<T>,,,"class SinhOp final : public BaseOp<SinhOp, T> {
    public:
        SinhOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::sinh<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SinhOp,"BaseOp<SinhOp, T>",false,438,SinhOp,29
367124,TYPE_DECL,cv.dnn.cuda4dnn.SoftplusOp<T>,,,"class SoftplusOp final : public BaseOp<SoftplusOp, T> {
    public:
        SoftplusOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::softplus<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SoftplusOp,"BaseOp<SoftplusOp, T>",false,452,SoftplusOp,30
367144,TYPE_DECL,cv.dnn.cuda4dnn.SoftsignOp<T>,,,"class SoftsignOp final : public BaseOp<SoftsignOp, T> {
    public:
        SoftsignOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::softsign<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SoftsignOp,"BaseOp<SoftsignOp, T>",false,466,SoftsignOp,31
367164,TYPE_DECL,cv.dnn.cuda4dnn.TanOp<T>,,,"class TanOp final : public BaseOp<TanOp, T> {
    public:
        TanOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::tan<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.TanOp,"BaseOp<TanOp, T>",false,480,TanOp,32
367184,TYPE_DECL,cv.dnn.cuda4dnn.CeluOp<T>,,,"class CeluOp final : public BaseOp<CeluOp, T> {
    public:
        CeluOp(csl::Stream stream_, T alpha_) : stream(std::move(stream_)), alpha{ alpha_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::celu<T>(stream, output, input, alpha);
        }

    private:
        csl::Stream stream;
        const T alpha;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.CeluOp,"BaseOp<CeluOp, T>",false,494,CeluOp,33
367207,TYPE_DECL,cv.dnn.cuda4dnn.HardSigmoidOp<T>,,,"class HardSigmoidOp final : public BaseOp<HardSigmoidOp, T> {
    public:
        HardSigmoidOp(csl::Stream stream_, T alpha_, T beta_)
            : stream(std::move(stream_)), alpha{ alpha_ }, beta{ beta_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::hardsigmoid<T>(stream, output, input, alpha, beta);
        }

    private:
        csl::Stream stream;
        const T alpha, beta;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.HardSigmoidOp,"BaseOp<HardSigmoidOp, T>",false,509,HardSigmoidOp,34
367233,TYPE_DECL,cv.dnn.cuda4dnn.SeluOp<T>,,,"class SeluOp final : public BaseOp<SeluOp, T> {
    public:
        SeluOp(csl::Stream stream_, T alpha_, T gamma_)
            : stream(std::move(stream_)), alpha{ alpha_ }, gamma{ gamma_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::selu<T>(stream, output, input, alpha, gamma);
        }

    private:
        csl::Stream stream;
        const T alpha, gamma;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SeluOp,"BaseOp<SeluOp, T>",false,525,SeluOp,35
367259,TYPE_DECL,cv.dnn.cuda4dnn.GeluOp<T>,,,"class GeluOp final : public BaseOp<GeluOp, T> {
    public:
        GeluOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::gelu<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.GeluOp,"BaseOp<GeluOp, T>",false,541,GeluOp,36
367279,TYPE_DECL,cv.dnn.cuda4dnn.ThresholdedReluOp<T>,,,"class ThresholdedReluOp final : public BaseOp<ThresholdedReluOp, T> {
    public:
        ThresholdedReluOp(csl::Stream stream_, T alpha_) : stream(std::move(stream_)), alpha{ alpha_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::thresholdedrelu<T>(stream, output, input, alpha);
        }

    private:
        csl::Stream stream;
        const T alpha;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ThresholdedReluOp,"BaseOp<ThresholdedReluOp, T>",false,555,ThresholdedReluOp,37
367302,TYPE_DECL,cv.dnn.cuda4dnn.PowerOp<T>,,,"class PowerOp final : public BaseOp<PowerOp, T> {
    public:
        PowerOp(csl::Stream stream_, T exp_, T scale_, T shift_)
            : stream(std::move(stream_)), exp{ exp_ }, scale{ scale_ }, shift{ shift_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::power<T>(stream, output, input, exp, scale, shift);
        }

    private:
        csl::Stream stream;
        const T exp, scale, shift;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.PowerOp,"BaseOp<PowerOp, T>",false,570,PowerOp,38
367331,TYPE_DECL,cv.dnn.cuda4dnn.ExpOp<T>,,,"class ExpOp final : public BaseOp<ExpOp, T> {
    public:
        ExpOp(csl::Stream stream_, T nScale_, T nShift_)
            : stream(std::move(stream_)), normScale{ nScale_ }, normShift{ nShift_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::exp<T>(stream, output, input, normScale, normShift);
        }

    private:
        csl::Stream stream;
        const T normScale, normShift;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ExpOp,"BaseOp<ExpOp, T>",false,586,ExpOp,39
367357,TYPE_DECL,cv.dnn.cuda4dnn.ShrinkOp<T>,,,"class ShrinkOp final : public BaseOp<ShrinkOp, T> {
    public:
        ShrinkOp(csl::Stream stream_, T bias_, T lambd_)
                : stream(std::move(stream_)), bias{ bias_ }, lambd{ lambd_ } { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::shrink<T>(stream, output, input, bias, lambd);
        }

    private:
        csl::Stream stream;
        const T bias, lambd;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ShrinkOp,"BaseOp<ShrinkOp, T>",false,602,ShrinkOp,40
367383,TYPE_DECL,cv.dnn.cuda4dnn.SignOp<T>,,,"class SignOp final : public BaseOp<SignOp, T> {
    public:
        SignOp(csl::Stream stream_)
                : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::sign<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.SignOp,"BaseOp<SignOp, T>",false,618,SignOp,41
367403,TYPE_DECL,cv.dnn.cuda4dnn.ReciprocalOp<T>,,,"class ReciprocalOp final : public BaseOp<ReciprocalOp, T> {
    public:
        ReciprocalOp(csl::Stream stream_)
                : stream(std::move(stream_)) { }

        void calculate(csl::TensorSpan<T> output, csl::TensorView<T> input) const
        {
            kernels::reciprocal<T>(stream, output, input);
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\activation.hpp,cv.dnn.cuda4dnn.ReciprocalOp,"BaseOp<ReciprocalOp, T>",false,633,ReciprocalOp,42
367435,TYPE_DECL,,src\cuda4dnn\primitives\batch_norm.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\batch_norm.hpp,src\cuda4dnn\primitives\batch_norm.hpp:<global>,,false,1,<global>,6
367441,TYPE_DECL,cv.dnn.cuda4dnn.BatchNormOp<T>,,,"class BatchNormOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        BatchNormOp(csl::Stream stream_, const cv::Mat& weights, const cv::Mat& bias)
            : stream(std::move(stream_))
        {
            biasTensor = csl::makeTensorHeader<T>(bias);
            csl::copyMatToTensor<T>(bias, biasTensor, stream);

            weightsTensor = csl::makeTensorHeader<T>(weights);
            csl::copyMatToTensor<T>(weights, weightsTensor, stream);
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(inputs.size() == 1 && outputs.size() == 1);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();...",5,src\cuda4dnn\primitives\batch_norm.hpp,cv.dnn.cuda4dnn.BatchNormOp,CUDABackendNode,false,20,BatchNormOp,1
367442,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\batch_norm.hpp,wrapper_type,,false,22,wrapper_type,1
367588,TYPE_DECL,,src\cuda4dnn\primitives\concat.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\concat.hpp,src\cuda4dnn\primitives\concat.hpp:<global>,,false,1,<global>,10
367594,TYPE_DECL,cv.dnn.cuda4dnn.ConcatOp<T>,,,"class ConcatOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ConcatOp(csl::Stream stream_, std::size_t concat_axis, bool zero_padding)
            : stream(std::move(stream_)), concat_axis{ concat_axis }, zero_padding{ zero_padding }
        {
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(outputs.size() == 1);

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();

            if(zero_padding)
            {
                auto output_shape = output_wrapper->getShape();

                kernels::fill<T>(stream, output, 0.0);

                std::size_t output_concat_axis_offset = 0;
                for (int i = 0; i < inputs.size(); i++)
              ...",5,src\cuda4dnn\primitives\concat.hpp,cv.dnn.cuda4dnn.ConcatOp,CUDABackendNode,false,25,ConcatOp,1
367595,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\concat.hpp,wrapper_type,,false,27,wrapper_type,1
367822,TYPE_DECL,,src\cuda4dnn\primitives\const.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\const.hpp,src\cuda4dnn\primitives\const.hpp:<global>,,false,1,<global>,7
367828,TYPE_DECL,cv.dnn.cuda4dnn.ConstOp<T>,,,"class ConstOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ConstOp(csl::Stream stream_, const cv::Mat& data)
            : stream(std::move(stream_))
        {
            constTensor = csl::makeTensorHeader<T>(data);
            csl::copyMatToTensor<T>(data, constTensor, stream);
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(outputs.size() == 1 && inputs.size() == 0);

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();
            csl::tensor_ops::copy<T>(stream, output, constTensor);
        }

    private:
        csl::Stream stream;
        csl::Tensor<T> constTensor;
    }",5,src\cuda4dnn\primitives\const.hpp,cv.dnn.cuda4dnn.ConstOp,CUDABackendNode,false,21,ConstOp,1
367829,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\const.hpp,wrapper_type,,false,23,wrapper_type,1
367915,TYPE_DECL,cv.dnn.cuda4dnn.ConvolutionOp<T>,,,"class ConvolutionOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ConvolutionOp(csl::Stream stream_, csl::cudnn::Handle handle_, const ConvolutionConfiguration& config, const Mat& filters, const Mat& bias)
            : stream(std::move(stream_)), cudnnHandle(std::move(handle_))
        {
            const auto& kernel_size = config.kernel_size;
            const auto& dilations = config.dilations;
            const auto& strides = config.strides;

            const auto convolution_order = kernel_size.size();
            CV_Assert(convolution_order == dilations.size());
            CV_Assert(convolution_order == strides.size());

            const auto& input_shape = config.input_shape;
            const auto& output_shape = config.output_shape;
            CV_Assert(input_shape.size() == output_shape.size());
            CV_Assert(input_shape.size() == convolution_order + 2);

            const auto groups = config...",5,src\cuda4dnn\primitives\convolution.hpp,cv.dnn.cuda4dnn.ConvolutionOp,CUDABackendNode,false,84,ConvolutionOp,2
367957,TYPE_DECL,,src\cuda4dnn\primitives\convolution.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\convolution.hpp,src\cuda4dnn\primitives\convolution.hpp:<global>,,false,1,<global>,21
367963,TYPE_DECL,,,,"struct ConvolutionConfiguration {
        /* the size of the following vectors must be equal to the kernel size */
        std::vector<std::size_t> kernel_size;
        std::vector<std::size_t> dilations, strides;

        enum class PaddingMode {
            MANUAL, /* uses explicit padding values provided in `pads_begin` and `pads_end` */
            VALID, /* no padding is added */
            SAME /* TensorFlow logic is used for same padding */
        };

        /* explicit paddings are used if and only if padMode is set to manual */
        PaddingMode padMode;
        std::vector<std::size_t> pads_begin, pads_end;

        /* full shape inclusive of channel and batch axis */
        std::vector<std::size_t> input_shape;
        std::vector<std::size_t> output_shape;

        /* group count for grouped convolution */
        std::size_t groups;

        enum class FusionMode {
            NONE,
            ACTIVATION, /* act(conv) */
            ELTWISE_SUM, /* eltwise + conv...",5,src\cuda4dnn\primitives\convolution.hpp,cv.dnn.cuda4dnn.ConvolutionConfiguration,,false,35,ConvolutionConfiguration,1
367967,TYPE_DECL,,,,"enum class PaddingMode {
            MANUAL, /* uses explicit padding values provided in `pads_begin` and `pads_end` */
            VALID, /* no padding is added */
            SAME /* TensorFlow logic is used for same padding */
        }",9,src\cuda4dnn\primitives\convolution.hpp,cv.dnn.cuda4dnn.ConvolutionConfiguration.PaddingMode,,false,40,PaddingMode,4
367977,TYPE_DECL,,,,"enum class FusionMode {
            NONE,
            ACTIVATION, /* act(conv) */
            ELTWISE_SUM, /* eltwise + conv */ /* eltwise tensor is passed as second input to forward */
            ELTWISE_SUM_THEN_ACTIVATION, /* act(conv + eltwise) */
            ACTIVATION_THEN_ELTWISE_SUM, /* act(conv) + eltwise */
        }",9,src\cuda4dnn\primitives\convolution.hpp,cv.dnn.cuda4dnn.ConvolutionConfiguration.FusionMode,,false,57,FusionMode,11
367984,TYPE_DECL,,,,"enum class ActivationType {
            IDENTITY,
            RELU, /* uses value provided in `relu_negative_slope` */
            CLIPPED_RELU, /* uses values provided in `crelu_floor` and `crelu_ceil` */
            POWER,
            TANH,
            SIGMOID,
            SWISH,
            MISH
        }",9,src\cuda4dnn\primitives\convolution.hpp,cv.dnn.cuda4dnn.ConvolutionConfiguration.ActivationType,,false,67,ActivationType,13
368000,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\convolution.hpp,wrapper_type,,false,86,wrapper_type,1
370291,TYPE_DECL,fusion_location,,,"enum class InternalFusionLocation {
            CUDNN,
            NATIVE
        }",9,src\cuda4dnn\primitives\convolution.hpp,cv.dnn.cuda4dnn.ConvolutionOp.InternalFusionLocation,,false,600,InternalFusionLocation,21
370307,TYPE_DECL,,src\cuda4dnn\primitives\crop_and_resize.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\crop_and_resize.hpp,src\cuda4dnn\primitives\crop_and_resize.hpp:<global>,,false,1,<global>,6
370313,TYPE_DECL,cv.dnn.cuda4dnn.CropAndResizeOp<T>,,,"class CropAndResizeOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        CropAndResizeOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(inputs.size() == 2 && outputs.size() == 1);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            auto box_wrapper = inputs[1].dynamicCast<wrapper_type>();
            auto boxes = box_wrapper->getView();

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();

            kernels::crop_and_resize(stream, output, input, static_cast<csl::View<T>>(boxes));
        }

    private:
        csl::Stream stre...",5,src\cuda4dnn\primitives\crop_and_resize.hpp,cv.dnn.cuda4dnn.CropAndResizeOp,CUDABackendNode,false,20,CropAndResizeOp,1
370314,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\crop_and_resize.hpp,wrapper_type,,false,22,wrapper_type,1
370420,TYPE_DECL,,src\cuda4dnn\primitives\detection_output.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\detection_output.hpp,src\cuda4dnn\primitives\detection_output.hpp:<global>,,false,1,<global>,10
370426,TYPE_DECL,,,,"struct DetectionOutputConfiguration {
        std::size_t batch_size;

        enum class CodeType {
            CORNER,
            CENTER_SIZE
        };
        CodeType code_type;

        bool share_location;
        std::size_t num_priors;
        std::size_t num_classes;
        std::size_t background_class_id;

        bool transpose_location;
        bool variance_encoded_in_target;
        bool normalized_bbox;
        bool clip_box;

        std::size_t classwise_topK;
        float confidence_threshold;
        float nms_threshold;

        int keepTopK;
    }",5,src\cuda4dnn\primitives\detection_output.hpp,cv.dnn.cuda4dnn.DetectionOutputConfiguration,,false,23,DetectionOutputConfiguration,1
370428,TYPE_DECL,,,,"enum class CodeType {
            CORNER,
            CENTER_SIZE
        }",9,src\cuda4dnn\primitives\detection_output.hpp,cv.dnn.cuda4dnn.DetectionOutputConfiguration.CodeType,,false,26,CodeType,2
370444,TYPE_DECL,cv.dnn.cuda4dnn.DetectionOutputOp<T>,,,"class DetectionOutputOp final : public CUDABackendNode {
    private:
        /* We have block level NMS kernel where each block handles one class of one batch item.
         * If the number of classes and batch size together is very low, the blockwise NMS kernel
         * won't able to fully saturate the GPU with work.
         *
         * We also have a grid level NMS kernel where multiple blocks handle each class of every batch item.
         * This performs better in the worst case and utilizes resources better when block level kernel isn't
         * able to saturate the GPU with enough work. However, this is not efficient in the average case where
         * the block level kernel is able to saturate the GPU. It does better when the blockwise NMS barely
         * saturates the GPU.
         *
         * `GRID_NMS_CUTOFF` is the cutoff for `num_classes * batch_size` above which we will switch from grid
         * level NMS to block level NMS.
         */
        static const...",5,src\cuda4dnn\primitives\detection_output.hpp,cv.dnn.cuda4dnn.DetectionOutputOp,CUDABackendNode,false,50,DetectionOutputOp,2
370446,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\detection_output.hpp,wrapper_type,,false,68,wrapper_type,2
371260,TYPE_DECL,,src\cuda4dnn\primitives\eltwise.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\eltwise.hpp,src\cuda4dnn\primitives\eltwise.hpp:<global>,,false,1,<global>,10
371266,TYPE_DECL,,,,"enum class EltwiseOpType {
        MAX,
        SUM,
        PRODUCT,
        DIV,
        MIN,
        SUB,
    }",5,src\cuda4dnn\primitives\eltwise.hpp,cv.dnn.cuda4dnn.EltwiseOpType,,false,24,EltwiseOpType,1
371273,TYPE_DECL,,,,"class EltwiseOpBase : public CUDABackendNode {
    public:
        EltwiseOpBase(csl::Stream stream_, EltwiseOpType op_, std::vector<float> coeffs_)
            : stream(std::move(stream_)), op(op_), coeffs(std::move(coeffs_))
        {
        }

    protected:
        csl::Stream stream;

    public:
        EltwiseOpType op;
        std::vector<float> coeffs;
    }",5,src\cuda4dnn\primitives\eltwise.hpp,cv.dnn.cuda4dnn.EltwiseOpBase,CUDABackendNode,false,33,EltwiseOpBase,2
371284,TYPE_DECL,cv.dnn.cuda4dnn.EltwiseOp<T>,,,"class EltwiseOp final : public EltwiseOpBase {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        EltwiseOp(csl::Stream stream_, EltwiseOpType op_, std::vector<float> coeffs_)
            : EltwiseOpBase(std::move(stream_), op_, std::move(coeffs_))
        {
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(inputs.size() >= 2);
            CV_Assert(outputs.size() == 1);

            CV_Assert(coeffs.size() == 0 || op == EltwiseOpType::SUM);
            CV_Assert(coeffs.size() == 0 || inputs.size() == coeffs.size());

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();

            if (inputs.size() == 2)
            {
                auto input_wrapper_x = inputs[0].dynamicCast<wrapper_type>...",5,src\cuda4dnn\primitives\eltwise.hpp,cv.dnn.cuda4dnn.EltwiseOp,EltwiseOpBase,false,49,EltwiseOp,3
371285,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\eltwise.hpp,wrapper_type,,false,51,wrapper_type,1
371713,TYPE_DECL,,src\cuda4dnn\primitives\inner_product.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\inner_product.hpp,src\cuda4dnn\primitives\inner_product.hpp:<global>,,false,1,<global>,11
371719,TYPE_DECL,cv.dnn.cuda4dnn.InnerProductOp<T>,,,"class InnerProductOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        InnerProductOp(csl::Stream stream_, csl::cublas::Handle handle, std::size_t axis, const Mat& weights, const Mat& bias)
            : stream(std::move(stream_)), cublasHandle(std::move(handle)), axis{ axis }
        {
            weightsTensor = csl::makeTensorHeader<T>(weights);
            CV_Assert(get_effective_rank(weightsTensor) <= 2);
            csl::copyMatToTensor<T>(weights, weightsTensor, stream);

            if (!bias.empty())
            {
                biasTensor = csl::makeTensorHeader<T>(bias);
                csl::copyMatToTensor<T>(bias, biasTensor, stream);
                CV_Assert(weightsTensor.get_axis_size(-2) == biasTensor.size());
            }
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Wor...",5,src\cuda4dnn\primitives\inner_product.hpp,cv.dnn.cuda4dnn.InnerProductOp,CUDABackendNode,false,26,InnerProductOp,1
371720,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\inner_product.hpp,wrapper_type,,false,28,wrapper_type,1
371964,TYPE_DECL,,src\cuda4dnn\primitives\instance_norm.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\instance_norm.hpp,src\cuda4dnn\primitives\instance_norm.hpp:<global>,,false,1,<global>,12
371970,TYPE_DECL,cv.dnn.cuda4dnn.InstanceNormOp<T>,,,"class InstanceNormOp final : public CUDABackendNode {
     public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        InstanceNormOp(csl::Stream stream_, float epsilon_, size_t loops)
            : stream(std::move(stream_)), epsilon(epsilon_) {
            csl::WorkspaceBuilder builder;
            builder.require<float>(loops);
            builder.require<float>(loops);
            scratch_mem_in_bytes = builder.required_workspace_size();
        }

        void forward(const std::vector<cv::Ptr<BackendWrapper>>& inputs,
                     const std::vector<cv::Ptr<BackendWrapper>>& outputs,
                     csl::Workspace& workspace) override {
            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto scale_wrapper = inputs[1].dynamicCast<wrapper_type>();
            auto bias_wrapper = inputs[2].dynamicCast<wrapper_type>();

            auto input = input_wrapper->getView();
            auto scale = scale_wrapper->getView();
...",5,src\cuda4dnn\primitives\instance_norm.hpp,cv.dnn.cuda4dnn.InstanceNormOp,CUDABackendNode,false,27,InstanceNormOp,1
371971,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\instance_norm.hpp,wrapper_type,,false,29,wrapper_type,1
372214,TYPE_DECL,,src\cuda4dnn\primitives\layer_norm.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\layer_norm.hpp,src\cuda4dnn\primitives\layer_norm.hpp:<global>,,false,1,<global>,12
372220,TYPE_DECL,cv.dnn.cuda4dnn.LayerNormOp<T>,,,"class LayerNormOp final : public CUDABackendNode {
     public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        LayerNormOp(csl::Stream stream_, int normalized_axis, float epsilon_, size_t loops)
            : stream(std::move(stream_)), epsilon(epsilon_) {
            CV_CheckGE(normalized_axis, 0, ""LayerNorm/CUDA: axis needs to be normalized"");
            axis = static_cast<size_t>(normalized_axis);

            csl::WorkspaceBuilder builder;
            builder.require<float>(loops);
            builder.require<float>(loops);
            scratch_mem_in_bytes = builder.required_workspace_size();
        }

        void forward(const std::vector<cv::Ptr<BackendWrapper>>& inputs,
                     const std::vector<cv::Ptr<BackendWrapper>>& outputs,
                     csl::Workspace& workspace) override {
            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto scale_wrapper = inputs[1].dynamicCast<wrapper_type>();

         ...",5,src\cuda4dnn\primitives\layer_norm.hpp,cv.dnn.cuda4dnn.LayerNormOp,CUDABackendNode,false,27,LayerNormOp,1
372221,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\layer_norm.hpp,wrapper_type,,false,29,wrapper_type,1
372475,TYPE_DECL,,src\cuda4dnn\primitives\lrn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\lrn.hpp,src\cuda4dnn\primitives\lrn.hpp:<global>,,false,1,<global>,6
372481,TYPE_DECL,,,,"enum class LRNType {
        ACROSS_CHANNELS,
        WITHIN_CHANNEL
    }",5,src\cuda4dnn\primitives\lrn.hpp,cv.dnn.cuda4dnn.LRNType,,false,18,LRNType,1
372484,TYPE_DECL,cv.dnn.cuda4dnn.LRNOp<T>,,,"class LRNOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        LRNOp(csl::cudnn::Handle handle, LRNType type_, std::size_t local_size, T alpha, T beta, T bias, std::size_t largestInputSize)
            : scratch_mem_in_bytes { 0 }
        {
            typename csl::LRN<T>::LRNType type{};
            switch (type_) {
            case LRNType::ACROSS_CHANNELS: type = csl::LRN<T>::LRNType::ACROSS_CHANNELS; break;
            case LRNType::WITHIN_CHANNEL: type = csl::LRN<T>::LRNType::WITHIN_CHANNEL; break;
            }
            lrn = csl::LRN<T>(std::move(handle), local_size, alpha, beta, bias, type);

            csl::WorkspaceBuilder builder;
            if (type_ == LRNType::WITHIN_CHANNEL) {
                /* this is not a bug; we require two of these */
                builder.require<T>(largestInputSize);
                builder.require<T>(largestInputSize);
            }

            scratch_mem_in_bytes = build...",5,src\cuda4dnn\primitives\lrn.hpp,cv.dnn.cuda4dnn.LRNOp,CUDABackendNode,false,24,LRNOp,2
372485,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\lrn.hpp,wrapper_type,,false,26,wrapper_type,1
372665,TYPE_DECL,,src\cuda4dnn\primitives\matmul.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\matmul.hpp,src\cuda4dnn\primitives\matmul.hpp:<global>,,false,1,<global>,9
372671,TYPE_DECL,cv.dnn.cuda4dnn.MatMulOp<T>,,,"class MatMulOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        MatMulOp(csl::Stream stream_, csl::cublas::Handle handle, const Mat& constInp, const Mat& bias, bool _transA, bool _transB)
            : stream(std::move(stream_)), cublasHandle(std::move(handle))
        {
            if (!constInp.empty())
            {
                constTensor = csl::makeTensorHeader<T>(constInp);
                csl::copyMatToTensor<T>(constInp, constTensor, stream);
            }

            if (!bias.empty())
            {
                biasTensor = csl::makeTensorHeader<T>(bias);
                csl::copyMatToTensor<T>(bias, biasTensor, stream);
            }

            transA = _transA;
            transB = _transB;
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
 ...",5,src\cuda4dnn\primitives\matmul.hpp,cv.dnn.cuda4dnn.MatMulOp,CUDABackendNode,false,24,MatMulOp,1
372672,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\matmul.hpp,wrapper_type,,false,26,wrapper_type,1
373186,TYPE_DECL,,src\cuda4dnn\primitives\matmul_broadcast.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\matmul_broadcast.hpp,src\cuda4dnn\primitives\matmul_broadcast.hpp:<global>,,false,1,<global>,8
373192,TYPE_DECL,cv.dnn.cuda4dnn.MatMulBroadcastOp<T>,,,"class MatMulBroadcastOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        MatMulBroadcastOp(csl::Stream stream_, csl::cublas::Handle handle, const Mat &B, bool _transA, bool _transB,
                 const std::vector<size_t> &A_offsets_, const std::vector<size_t> &B_offsets_, std::vector<size_t> &C_offsets_,
                 size_t batch_)
            : stream(std::move(stream_)), cublasHandle(std::move(handle)), A_offsets(A_offsets_), B_offsets(B_offsets_), C_offsets(C_offsets_), batch(batch_)
        {
            if (!B.empty()) {
                input_B_tensor = csl::makeTensorHeader<T>(B);
                csl::copyMatToTensor<T>(B, input_B_tensor, stream);
            }

            transA = _transA;
            transB = _transB;
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace...",5,src\cuda4dnn\primitives\matmul_broadcast.hpp,cv.dnn.cuda4dnn.MatMulBroadcastOp,CUDABackendNode,false,22,MatMulBroadcastOp,1
373193,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\matmul_broadcast.hpp,wrapper_type,,false,24,wrapper_type,1
373385,TYPE_DECL,,src\cuda4dnn\primitives\max_unpooling.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\max_unpooling.hpp,src\cuda4dnn\primitives\max_unpooling.hpp:<global>,,false,1,<global>,8
373391,TYPE_DECL,,,,"struct MaxPoolingConfiguration {
        /* the size of the following vectors must be equal to the pooling order */
        std::vector<std::size_t> window_size;
        std::vector<std::size_t> strides;

        enum class PaddingMode {
            MANUAL, /* uses explicit padding values provided in `pads_begin` and `pads_end` */
            VALID, /* no padding is added */
            SAME /* TensorFlow logic is used for same padding */
        };

        PaddingMode padMode;

        /* explicit paddings are used if and only if padMode is set to manual */
        std::vector<std::size_t> pads_begin;

        /* full shape inclusive of channel and batch axis */
        std::vector<std::size_t> input_shape;
    }",5,src\cuda4dnn\primitives\max_unpooling.hpp,cv.dnn.cuda4dnn.MaxPoolingConfiguration,,false,22,MaxPoolingConfiguration,1
373394,TYPE_DECL,,,,"enum class PaddingMode {
            MANUAL, /* uses explicit padding values provided in `pads_begin` and `pads_end` */
            VALID, /* no padding is added */
            SAME /* TensorFlow logic is used for same padding */
        }",9,src\cuda4dnn\primitives\max_unpooling.hpp,cv.dnn.cuda4dnn.MaxPoolingConfiguration.PaddingMode,,false,27,PaddingMode,3
373401,TYPE_DECL,cv.dnn.cuda4dnn.MaxPoolingOp<T>,,,"class MaxPoolingOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        MaxPoolingOp(csl::Stream stream_, const MaxPoolingConfiguration& config)
            : stream(std::move(stream_))
        {
            window_size = config.window_size;

            const auto pooling_order = window_size.size();

            strides = config.strides;
            CV_Assert(pooling_order == strides.size());

            if (pooling_order < 1 || pooling_order > 3)
                CV_Error(Error::StsNotImplemented, ""Only 1D/2D/3D max-pooling are supported."");

            padding_left.resize(pooling_order);
            if (config.padMode == MaxPoolingConfiguration::PaddingMode::MANUAL)
            {
                const auto& pads_begin = config.pads_begin;
                CV_Assert(pooling_order == pads_begin.size());

                padding_left.assign(std::begin(pads_begin), std::end(pads_begin));
            }
            else if (co...",5,src\cuda4dnn\primitives\max_unpooling.hpp,cv.dnn.cuda4dnn.MaxPoolingOp,CUDABackendNode,false,43,MaxPoolingOp,2
373402,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\max_unpooling.hpp,wrapper_type,,false,45,wrapper_type,1
373683,TYPE_DECL,,,,"struct MaxUnpoolingConfiguration {
        /* the size of the following vectors must be equal to the unpooling order */
        std::vector<std::size_t> window_size;
        std::vector<std::size_t> strides;
        std::vector<std::size_t> pads_begin;
    }",5,src\cuda4dnn\primitives\max_unpooling.hpp,cv.dnn.cuda4dnn.MaxUnpoolingConfiguration,,false,120,MaxUnpoolingConfiguration,3
373687,TYPE_DECL,cv.dnn.cuda4dnn.MaxUnpoolingOp<T>,,,"class MaxUnpoolingOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        MaxUnpoolingOp(csl::Stream stream_, const MaxUnpoolingConfiguration& config)
            : stream(std::move(stream_))
        {
            window_size = config.window_size;

            const auto pooling_order = window_size.size();
            CV_Assert(pooling_order >= 1);

            strides = config.strides;
            padding_left = config.pads_begin;
            CV_Assert(strides.size() == pooling_order);
            CV_Assert(padding_left.size() == pooling_order);

            if (pooling_order != 2 && pooling_order != 3)
                CV_Error(Error::StsNotImplemented, ""Only 2D/3D max-unpooling are supported."");
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
          ...",5,src\cuda4dnn\primitives\max_unpooling.hpp,cv.dnn.cuda4dnn.MaxUnpoolingOp,CUDABackendNode,false,128,MaxUnpoolingOp,4
373688,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\max_unpooling.hpp,wrapper_type,,false,130,wrapper_type,1
373879,TYPE_DECL,,src\cuda4dnn\primitives\mvn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\mvn.hpp,src\cuda4dnn\primitives\mvn.hpp:<global>,,false,1,<global>,12
373885,TYPE_DECL,,,,"struct MVNConfiguration {
        std::vector<std::vector<std::size_t>> input_shapes;

        /*
         * [0, split_axis) = outer range
         * [split_axis, -1] = inner range
         *
         * for each location in the outer range, all the values in the inner range are normalized as a group
         */
        std::size_t split_axis;

        /* The group (described above) is centered always. The following parameter controls whether the variance
         * is also normalized.
         */
        bool normalize_variance;
        float epsilon;
    }",5,src\cuda4dnn\primitives\mvn.hpp,cv.dnn.cuda4dnn.MVNConfiguration,,false,26,MVNConfiguration,1
373890,TYPE_DECL,cv.dnn.cuda4dnn.MVNOp<T>,,,"class MVNOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        MVNOp(csl::Stream stream_, const MVNConfiguration& config)
            : stream(std::move(stream_))
        {
            split_axis = config.split_axis;
            normalize_variance = config.normalize_variance;
            epsilon = config.epsilon;

            std::size_t max_outer_size = 0;
            const auto& input_shapes = config.input_shapes;
            for (int i = 0; i < input_shapes.size(); i++)
            {
                std::size_t outer_size = 1;
                for (int j = 0; j < split_axis; j++)
                    outer_size *= input_shapes[i][j];
                max_outer_size = std::max(max_outer_size, outer_size);
            }

            csl::WorkspaceBuilder builder;
            builder.require<float>(max_outer_size);
            if (normalize_variance)
                builder.require<float>(max_outer_size);
            scratch...",5,src\cuda4dnn\primitives\mvn.hpp,cv.dnn.cuda4dnn.MVNOp,CUDABackendNode,false,45,MVNOp,2
373891,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\mvn.hpp,wrapper_type,,false,47,wrapper_type,1
374212,TYPE_DECL,,src\cuda4dnn\primitives\normalize_bbox.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\normalize_bbox.hpp,src\cuda4dnn\primitives\normalize_bbox.hpp:<global>,,false,1,<global>,12
374218,TYPE_DECL,cv.dnn.cuda4dnn.NormalizeConfiguration<T>,,,"struct NormalizeConfiguration {
        std::vector<std::size_t> input_shape;

        /* axis range across which values are normalized
         *
         * [0, axis_start) = outer range
         * [axis_start, axis_end) = mid range
         * [axis_end + 1, -1) = inner range
         *
         * for each location in the outer and inner range, all the values in the mid range are
         * normalized together
         */
        std::size_t axis_start, axis_end;

        /* 1 for L1 norm, 2 for L2 norm */
        std::size_t norm;

        /* epsilon to use to avoid division by zero */
        T eps;
    }",5,src\cuda4dnn\primitives\normalize_bbox.hpp,cv.dnn.cuda4dnn.NormalizeConfiguration,,false,27,NormalizeConfiguration,1
374224,TYPE_DECL,cv.dnn.cuda4dnn.NormalizeOp<T>,,,"class NormalizeOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        template <class V>
        NormalizeOp(csl::Stream stream_, const Mat& weights, const NormalizeConfiguration<V>& config)
            : stream(std::move(stream_)), weight{ 1.0 }
        {
            norm_order = config.norm;
            epsilon = config.eps;
            axis_start = config.axis_start;
            axis_end = config.axis_end;

            if (!weights.empty())
            {
                if (weights.total() == 1)
                {
                    CV_Assert(weights.type() == CV_32F);
                    weight = weights.at<float>(0, 0);
                }
                else
                {
                    weightsTensor = csl::makeTensorHeader<T>(weights);
                    csl::copyMatToTensor<T>(weights, weightsTensor, stream);
                }
            }

            std::size_t outer_size = 1;
            for (int i = ...",5,src\cuda4dnn\primitives\normalize_bbox.hpp,cv.dnn.cuda4dnn.NormalizeOp,CUDABackendNode,false,49,NormalizeOp,2
374225,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\normalize_bbox.hpp,wrapper_type,,false,51,wrapper_type,1
374565,TYPE_DECL,,src\cuda4dnn\primitives\padding.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\padding.hpp,src\cuda4dnn\primitives\padding.hpp:<global>,,false,1,<global>,12
374571,TYPE_DECL,,,,"enum class PaddingType {
        CONSTANT,
        REFLECTION101
    }",5,src\cuda4dnn\primitives\padding.hpp,cv.dnn.cuda4dnn.PaddingType,,false,26,PaddingType,1
374574,TYPE_DECL,cv.dnn.cuda4dnn.PaddingOp<T>,,,"class PaddingOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        /* `ranges` is indexed by axis and contains the range in the output where the input is copied to */
        PaddingOp(csl::Stream stream_, PaddingType type_, T value_, std::vector<cv::Range> ranges)
            : stream(std::move(stream_)),  type{ type_ }, value{ value_ }, dstRanges(std::move(ranges))
        {
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(inputs.size() == 1 && outputs.size() == 1);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();

            /* s...",5,src\cuda4dnn\primitives\padding.hpp,cv.dnn.cuda4dnn.PaddingOp,CUDABackendNode,false,32,PaddingOp,2
374575,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\padding.hpp,wrapper_type,,false,34,wrapper_type,1
374892,TYPE_DECL,cv.dnn.cuda4dnn.PermuteOp<T>,,,"class PermuteOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        PermuteOp(csl::Stream stream_, std::vector<std::size_t> order_)
            : stream(std::move(stream_)), order(std::move(order_)) { }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            for (int i = 0; i < inputs.size(); i++)
            {
                auto input_wrapper = inputs[i].dynamicCast<wrapper_type>();
                auto input = input_wrapper->getView();

                auto output_wrapper = outputs[i].dynamicCast<wrapper_type>();
                auto output = output_wrapper->getSpan();

                auto needsPermute = [&] {
                    for (int i = 0; i < order.size(); i++)
                        if (order[i] != i)
                            return true;
    ...",5,src\cuda4dnn\primitives\permute.hpp,cv.dnn.cuda4dnn.PermuteOp,CUDABackendNode,false,24,PermuteOp,1
374910,TYPE_DECL,,src\cuda4dnn\primitives\permute.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\permute.hpp,src\cuda4dnn\primitives\permute.hpp:<global>,,false,1,<global>,9
374916,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\permute.hpp,wrapper_type,,false,26,wrapper_type,1
375028,TYPE_DECL,cv.dnn.cuda4dnn.PoolingOp<T>,,,"class PoolingOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        PoolingOp(csl::cudnn::Handle handle, const PoolingConfiguration& config)
            : cudnnHandle(std::move(handle))
        {
            const auto& window_size = config.window_size;

            const auto pooling_order = window_size.size();
            CV_Assert(pooling_order >= 1);

            const auto& strides = config.strides;
            CV_Assert(pooling_order == strides.size());

            const auto& input_shape = config.input_shape;
            CV_Assert(input_shape.size() == pooling_order + 2);

            if (pooling_order > 3)
                CV_Error(Error::StsNotImplemented, ""Only 1D/2D/3D pooling are supported."");

            const auto rank = input_shape.size();

            /* left and right are misleading as the padding is applicable for any number of dimensions
             * but we use those identifiers to avoid confusion wit...",5,src\cuda4dnn\primitives\pooling.hpp,cv.dnn.cuda4dnn.PoolingOp,CUDABackendNode,false,65,PoolingOp,2
375050,TYPE_DECL,,src\cuda4dnn\primitives\pooling.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\pooling.hpp,src\cuda4dnn\primitives\pooling.hpp:<global>,,false,1,<global>,11
375056,TYPE_DECL,,,,"struct PoolingConfiguration {
        enum class PoolingMode {
            MAX,
            AVERAGE_INCLUDE_PADDING, /* include padding while calculating average */
            AVERAGE_EXCLUDE_PADDING /* exclude padding while calculating average */
        };

        PoolingMode poolMode;

        /* the size of the following vectors must be equal to the window size */
        std::vector<std::size_t> window_size;
        std::vector<std::size_t> strides;

        enum class PaddingMode {
            MANUAL, /* uses explicit padding values provided in `pads_begin` and `pads_end` */
            VALID, /* no padding is added */
            SAME /* TensorFlow logic is used for same padding */
        };

        PaddingMode padMode;

        /* explicit paddings are used if and only if padMode is set to manual */
        std::vector<std::size_t> pads_begin, pads_end;

        /* the output shape is calculated using the following formula:
         * output_dim = func[(input_dim + paddi...",5,src\cuda4dnn\primitives\pooling.hpp,cv.dnn.cuda4dnn.PoolingConfiguration,,false,24,PoolingConfiguration,1
375057,TYPE_DECL,,,,"enum class PoolingMode {
            MAX,
            AVERAGE_INCLUDE_PADDING, /* include padding while calculating average */
            AVERAGE_EXCLUDE_PADDING /* exclude padding while calculating average */
        }",9,src\cuda4dnn\primitives\pooling.hpp,cv.dnn.cuda4dnn.PoolingConfiguration.PoolingMode,,false,25,PoolingMode,1
375064,TYPE_DECL,,,,"enum class PaddingMode {
            MANUAL, /* uses explicit padding values provided in `pads_begin` and `pads_end` */
            VALID, /* no padding is added */
            SAME /* TensorFlow logic is used for same padding */
        }",9,src\cuda4dnn\primitives\pooling.hpp,cv.dnn.cuda4dnn.PoolingConfiguration.PaddingMode,,false,37,PaddingMode,5
375071,TYPE_DECL,,,,"enum class RoundingMode {
            CEIL, /* uses ceil */
            FLOOR
        }",9,src\cuda4dnn\primitives\pooling.hpp,cv.dnn.cuda4dnn.PoolingConfiguration.RoundingMode,,false,53,RoundingMode,9
375076,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\pooling.hpp,wrapper_type,,false,67,wrapper_type,1
375944,TYPE_DECL,,src\cuda4dnn\primitives\prior_box.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\prior_box.hpp,src\cuda4dnn\primitives\prior_box.hpp:<global>,,false,1,<global>,9
375950,TYPE_DECL,,,,"struct PriorBoxConfiguration {
        std::size_t feature_map_width, feature_map_height;
        std::size_t image_width, image_height;

        /* parameters for prior boxes for each feature point */
        std::vector<float> box_widths, box_heights;
        std::vector<float> offsets_x, offsets_y;
        float stepX, stepY;

        std::vector<float> variance;

        /* number of priors per feature point */
        std::size_t num_priors;

        /* clamps the box coordinates to [0, 1] range */
        bool clip;

        /* normalizes the box coordinates using the image dimensions */
        bool normalize;
    }",5,src\cuda4dnn\primitives\prior_box.hpp,cv.dnn.cuda4dnn.PriorBoxConfiguration,,false,22,PriorBoxConfiguration,1
375965,TYPE_DECL,cv.dnn.cuda4dnn.PriorBoxOp<T>,,,"class PriorBoxOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        PriorBoxOp(csl::Stream stream_, const PriorBoxConfiguration& config)
            : stream(std::move(stream_))
        {
            feature_map_width = config.feature_map_width;
            feature_map_height = config.feature_map_height;

            image_width = config.image_width;
            image_height = config.image_height;

            const auto& box_widths = config.box_widths;
            const auto& box_heights = config.box_heights;
            CV_Assert(box_widths.size() == box_heights.size());

            box_size = box_widths.size();

            const auto& offsets_x = config.offsets_x;
            const auto& offsets_y = config.offsets_y;
            CV_Assert(offsets_x.size() == offsets_y.size());

            offset_size = offsets_x.size();

            /* for better memory utilization and preassumably better cache performance, we merge...",5,src\cuda4dnn\primitives\prior_box.hpp,cv.dnn.cuda4dnn.PriorBoxOp,CUDABackendNode,false,44,PriorBoxOp,2
375966,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\prior_box.hpp,wrapper_type,,false,46,wrapper_type,1
376354,TYPE_DECL,,src\cuda4dnn\primitives\recurrent_cells.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\recurrent_cells.hpp,src\cuda4dnn\primitives\recurrent_cells.hpp:<global>,,false,1,<global>,5
376360,TYPE_DECL,,,,"struct RNNConfiguration
{
    int seqLength;
    int numLayers;
    int hiddenSize;
    int inputSize;
    int miniBatch;
    bool bidirectional;
}",1,src\cuda4dnn\primitives\recurrent_cells.hpp,cv.dnn.cuda4dnn.RNNConfiguration,,false,16,RNNConfiguration,1
376367,TYPE_DECL,cv.dnn.cuda4dnn.LSTMOp<T>,,,"class LSTMOp final : public CUDABackendNode
{
public:
    using wrapper_type = GetCUDABackendWrapperType<T>;

    LSTMOp(csl::Stream stream_, csl::cudnn::Handle handle, const Mat& filters, const Mat& h0,
           const Mat& c0, const RNNConfiguration& config)
            : stream(std::move(stream_))
    {
        typename csl::LSTM<T>::params_type params{
                {filters.total(), 1, 1}, // reshape
                config.seqLength,
                config.numLayers,
                config.hiddenSize,
                config.inputSize,
                config.miniBatch,
                config.bidirectional,
                0.0, /* dropout */
                csl::cudnn::RNNDescriptor<T>::RNNMode::LSTM
        };

        lstm = csl::LSTM<T>(handle, params);
        auto correct_shape_filters = filters.reshape(1, {static_cast<int>(filters.total()), 1, 1});
        filtersTensor = csl::makeTensorHeader<T>(correct_shape_filters);
        csl::copyMatToTensor<T>(correct_shape_filte...",1,src\cuda4dnn\primitives\recurrent_cells.hpp,cv.dnn.cuda4dnn.LSTMOp,CUDABackendNode,false,27,LSTMOp,2
376368,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,5,src\cuda4dnn\primitives\recurrent_cells.hpp,wrapper_type,,false,30,wrapper_type,1
376650,TYPE_DECL,,src\cuda4dnn\primitives\region.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\region.hpp,src\cuda4dnn\primitives\region.hpp:<global>,,false,1,<global>,11
376656,TYPE_DECL,,,,"enum class SquashMethod {
        SOFTMAX,
        SIGMOID
    }",5,src\cuda4dnn\primitives\region.hpp,cv.dnn.cuda4dnn.SquashMethod,,false,26,SquashMethod,1
376659,TYPE_DECL,cv.dnn.cuda4dnn.RegionConfiguration<T>,,,"struct RegionConfiguration {
        /* The image is divided into (H, W) cells.
         *
         * Each cell is interested in exactly one object and predicts `boxes_per_cell` bounding boxes
         * for that object.
         *
         * Each bounding box contains:
         * - 4 box coordinates
         * - objectness confidence score
         * - `classes` number of class scores
         *
         * The object score is reduced to a probability using sigmoid and the class scores are reduced to
         * probabilities by either applying sigmoid or softmax (which is a configuration option).
         *
         * object_prob = sigmoid(object_score)
         * conditional_class_prob = sigmoid, softmax across all classes
         *
         * actual class probability = conditional_class_prob * object_prob
         */
        std::size_t classes, boxes_per_cell;
        std::size_t width_norm, height_norm;
        T scale_x_y;

        /* method for reducing class scores to probab...",5,src\cuda4dnn\primitives\region.hpp,cv.dnn.cuda4dnn.RegionConfiguration,,false,32,RegionConfiguration,2
376670,TYPE_DECL,cv.dnn.cuda4dnn.RegionOp<T>,,,"class RegionOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        template <class V>
        RegionOp(csl::Stream stream_, const cv::Mat& bias, const RegionConfiguration<V>& config)
            : stream(std::move(stream_))
        {
            biasTensor = csl::makeTensorHeader<T>(bias);
            csl::copyMatToTensor<T>(bias, biasTensor, stream);

            classes = config.classes;
            boxes_per_cell = config.boxes_per_cell;

            width_norm = config.width_norm;
            height_norm = config.height_norm;

            scale_x_y = config.scale_x_y;

            squash_type = config.squash_method;
            object_prob_cutoff = config.object_prob_cutoff;
            class_prob_cutoff = config.class_prob_cutoff;

            nms_iou_threshold = config.nms_iou_threshold;
            new_coords = config.new_coords;
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>...",5,src\cuda4dnn\primitives\region.hpp,cv.dnn.cuda4dnn.RegionOp,CUDABackendNode,false,67,RegionOp,3
376671,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\region.hpp,wrapper_type,,false,69,wrapper_type,1
377142,TYPE_DECL,,src\cuda4dnn\primitives\reorg.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\reorg.hpp,src\cuda4dnn\primitives\reorg.hpp:<global>,,false,1,<global>,7
377148,TYPE_DECL,cv.dnn.cuda4dnn.ReorgOp<T>,,,"class ReorgOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ReorgOp(csl::Stream stream_, std::size_t stride_)
            : stream(std::move(stream_)), stride{ stride_ } { }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(inputs.size() == 1 && outputs.size() == 1);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();

            const std::size_t permute_input_shape[] = {
               input.get_axis_size(0),
               input.get_axis_size(1) * input.get_axis_size(2) / (stride * stride),
               stride,
               input.get_...",5,src\cuda4dnn\primitives\reorg.hpp,cv.dnn.cuda4dnn.ReorgOp,CUDABackendNode,false,21,ReorgOp,1
377149,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\reorg.hpp,wrapper_type,,false,23,wrapper_type,1
377346,TYPE_DECL,,src\cuda4dnn\primitives\reshape.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\reshape.hpp,src\cuda4dnn\primitives\reshape.hpp:<global>,,false,1,<global>,6
377352,TYPE_DECL,cv.dnn.cuda4dnn.ReshapeOp<T>,,,"class ReshapeOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ReshapeOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            /* sometimes the output shape is passed as extra inputs; hence, >= instead of == */
            CV_Assert(inputs.size() >= outputs.size());

            for (int i = 0; i < outputs.size(); i++)
            {
                auto input_wrapper = inputs[i].dynamicCast<wrapper_type>();
                auto input = input_wrapper->getView();

                auto output_wrapper = outputs[i].dynamicCast<wrapper_type>();
                auto output = output_wrapper->getSpan();

                if (input.get() != output.get())
                {
                    while (input.rank()...",5,src\cuda4dnn\primitives\reshape.hpp,cv.dnn.cuda4dnn.ReshapeOp,CUDABackendNode,false,19,ReshapeOp,1
377353,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\reshape.hpp,wrapper_type,,false,21,wrapper_type,1
377506,TYPE_DECL,cv.dnn.cuda4dnn.ResizeOp<T>,,,"class ResizeOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ResizeOp(csl::Stream stream_, const ResizeConfiguration& config)
            : stream(std::move(stream_))
        {
            type = config.type;
            align_corners = config.align_corners;
            half_pixel_centers = config.half_pixel_centers;
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            // sometimes the target shape is taken from the second input; we don't use it however
            CV_Assert((inputs.size() == 1 || inputs.size() == 2) && outputs.size() == 1);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
    ...",5,src\cuda4dnn\primitives\resize.hpp,cv.dnn.cuda4dnn.ResizeOp,CUDABackendNode,false,30,ResizeOp,3
377516,TYPE_DECL,,src\cuda4dnn\primitives\resize.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\resize.hpp,src\cuda4dnn\primitives\resize.hpp:<global>,,false,1,<global>,5
377522,TYPE_DECL,,,,"enum class InterpolationType {
        NEAREST_NEIGHBOUR,
        BILINEAR
    }",5,src\cuda4dnn\primitives\resize.hpp,cv.dnn.cuda4dnn.InterpolationType,,false,18,InterpolationType,1
377525,TYPE_DECL,,,,"struct ResizeConfiguration {
        InterpolationType type;
        bool align_corners;
        bool half_pixel_centers;
    }",5,src\cuda4dnn\primitives\resize.hpp,cv.dnn.cuda4dnn.ResizeConfiguration,,false,23,ResizeConfiguration,2
377529,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\resize.hpp,wrapper_type,,false,32,wrapper_type,1
377714,TYPE_DECL,,src\cuda4dnn\primitives\roi_pooling.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\roi_pooling.hpp,src\cuda4dnn\primitives\roi_pooling.hpp:<global>,,false,1,<global>,5
377720,TYPE_DECL,cv.dnn.cuda4dnn.ROIPoolingOp<T>,,,"class ROIPoolingOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ROIPoolingOp(csl::Stream stream_, float spatial_scale)
            : stream(std::move(stream_)), spatial_scale{spatial_scale} { }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(inputs.size() == 2 && outputs.size() == 1);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            auto rois_wrapper = inputs[1].dynamicCast<wrapper_type>();
            auto rois = rois_wrapper->getView();

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();

            kernels::roi_pooling<T>(stream, output, input, rois, spatial_scale);
    ...",5,src\cuda4dnn\primitives\roi_pooling.hpp,cv.dnn.cuda4dnn.ROIPoolingOp,CUDABackendNode,false,19,ROIPoolingOp,1
377721,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\roi_pooling.hpp,wrapper_type,,false,21,wrapper_type,1
377859,TYPE_DECL,cv.dnn.cuda4dnn.ScaleShiftOp<T>,,,"class ScaleShiftOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ScaleShiftOp(csl::Stream stream_, const ScaleShiftConfiguration& config, const cv::Mat& weights, const cv::Mat& bias)
            : stream(std::move(stream_)), axis{ config.axis }
        {
            scaleMode = config.scaleMode;
            if (scaleMode == ScaleShiftConfiguration::OpMode::TRAINABLE)
            {
                CV_Assert(!weights.empty());
                weightsTensor = csl::makeTensorHeader<T>(weights);
                csl::copyMatToTensor<T>(weights, weightsTensor, stream);
            }

            shiftMode = config.shiftMode;
            if (shiftMode == ScaleShiftConfiguration::OpMode::TRAINABLE)
            {
                CV_Assert(!bias.empty());
                biasTensor = csl::makeTensorHeader<T>(bias);
                csl::copyMatToTensor<T>(bias, biasTensor, stream);
            }

            CV_Assert(scaleMode ...",5,src\cuda4dnn\primitives\scale_shift.hpp,cv.dnn.cuda4dnn.ScaleShiftOp,CUDABackendNode,false,36,ScaleShiftOp,2
377875,TYPE_DECL,,src\cuda4dnn\primitives\scale_shift.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\scale_shift.hpp,src\cuda4dnn\primitives\scale_shift.hpp:<global>,,false,1,<global>,8
377881,TYPE_DECL,,,,"struct ScaleShiftConfiguration {
        enum class OpMode {
            NONE,
            TRAINABLE, /* use a pretrained blob */
            UNTRAINABLE /* use another input */
        };

        OpMode scaleMode;
        OpMode shiftMode;

        std::size_t axis;
    }",5,src\cuda4dnn\primitives\scale_shift.hpp,cv.dnn.cuda4dnn.ScaleShiftConfiguration,,false,22,ScaleShiftConfiguration,1
377882,TYPE_DECL,,,,"enum class OpMode {
            NONE,
            TRAINABLE, /* use a pretrained blob */
            UNTRAINABLE /* use another input */
        }",9,src\cuda4dnn\primitives\scale_shift.hpp,cv.dnn.cuda4dnn.ScaleShiftConfiguration.OpMode,,false,23,OpMode,1
377889,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\scale_shift.hpp,wrapper_type,,false,38,wrapper_type,1
378356,TYPE_DECL,,src\cuda4dnn\primitives\shortcut.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\shortcut.hpp,src\cuda4dnn\primitives\shortcut.hpp:<global>,,false,1,<global>,8
378362,TYPE_DECL,cv.dnn.cuda4dnn.ShortcutOp<T>,,,"class ShortcutOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ShortcutOp(csl::Stream stream_) : stream(std::move(stream_)) { }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(outputs.size() == 1);

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            /* output shape is determined by the input shape */
            CV_Assert(is_shape_same(output, input));

            for (int i = 1; i < inputs.size(); i++)
            {
                auto from_wrapper = inputs[i].dynamicCast<wrapper_type>();
                auto from = from_wra...",5,src\cuda4dnn\primitives\shortcut.hpp,cv.dnn.cuda4dnn.ShortcutOp,CUDABackendNode,false,23,ShortcutOp,1
378363,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\shortcut.hpp,wrapper_type,,false,25,wrapper_type,1
378532,TYPE_DECL,,src\cuda4dnn\primitives\shuffle_channel.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\shuffle_channel.hpp,src\cuda4dnn\primitives\shuffle_channel.hpp:<global>,,false,1,<global>,8
378538,TYPE_DECL,cv.dnn.cuda4dnn.ShuffleChannelOp<T>,,,"class ShuffleChannelOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        ShuffleChannelOp(csl::Stream stream_, std::size_t group_)
            : stream(std::move(stream_)), group{ group_ } { }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(inputs.size() == 1 && outputs.size() == 1);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            auto output_wrapper = outputs[0].dynamicCast<wrapper_type>();
            auto output = output_wrapper->getSpan();

            if (group == 1) {
                /* permute is redundant; check else branch to know why */
                if (input.get() != output.get()) {
                    input.reshape_as(output);
           ...",5,src\cuda4dnn\primitives\shuffle_channel.hpp,cv.dnn.cuda4dnn.ShuffleChannelOp,CUDABackendNode,false,23,ShuffleChannelOp,1
378539,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\shuffle_channel.hpp,wrapper_type,,false,25,wrapper_type,1
378759,TYPE_DECL,,src\cuda4dnn\primitives\slice.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\slice.hpp,src\cuda4dnn\primitives\slice.hpp:<global>,,false,1,<global>,10
378765,TYPE_DECL,cv.dnn.cuda4dnn.SliceOp<T>,,,"class SliceOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        /* offsets is indexed by output number and each subvector is indexed by axis number */
        SliceOp(csl::Stream stream_, std::vector<std::vector<std::size_t>> offsets)
            : stream(std::move(stream_)), offsets(std::move(offsets))
        {
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            /* sometimes the output shape is passed in the form of a second input tensor
             * it's only required for initialization and not here
             */
            CV_Assert(inputs.size() == 1 || inputs.size() == 2);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            CV_Assert(offsets.size() =...",5,src\cuda4dnn\primitives\slice.hpp,cv.dnn.cuda4dnn.SliceOp,CUDABackendNode,false,25,SliceOp,1
378766,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\slice.hpp,wrapper_type,,false,27,wrapper_type,1
378875,TYPE_DECL,,src\cuda4dnn\primitives\softmax.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\softmax.hpp,src\cuda4dnn\primitives\softmax.hpp:<global>,,false,1,<global>,6
378881,TYPE_DECL,cv.dnn.cuda4dnn.SoftmaxOp<T>,,,"class SoftmaxOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        SoftmaxOp(csl::cudnn::Handle handle, std::size_t axis_, bool log_)
            : cudnnHandle(std::move(handle)), channel_axis{ axis_ }, log{ log_ }
        {
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            for (int i = 0; i < inputs.size(); i++)
            {
                auto input_wrapper = inputs[i].dynamicCast<wrapper_type>();
                auto input = input_wrapper->getView();

                auto output_wrapper = outputs[i].dynamicCast<wrapper_type>();
                auto output = output_wrapper->getSpan();

                csl::tensor_ops::softmax<T>(cudnnHandle, output, input, channel_axis, log);
            }
        }

    private:
        csl::cudnn::Handle...",5,src\cuda4dnn\primitives\softmax.hpp,cv.dnn.cuda4dnn.SoftmaxOp,CUDABackendNode,false,19,SoftmaxOp,1
378882,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\softmax.hpp,wrapper_type,,false,21,wrapper_type,1
378970,TYPE_DECL,,src\cuda4dnn\primitives\split.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\split.hpp,src\cuda4dnn\primitives\split.hpp:<global>,,false,1,<global>,6
378976,TYPE_DECL,cv.dnn.cuda4dnn.SplitOp<T>,,,"class SplitOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        SplitOp(csl::Stream stream_)
            : stream(std::move(stream_))
        {
        }

        void forward(
            const std::vector<cv::Ptr<BackendWrapper>>& inputs,
            const std::vector<cv::Ptr<BackendWrapper>>& outputs,
            csl::Workspace& workspace) override
        {
            CV_Assert(inputs.size() == 1);

            auto input_wrapper = inputs[0].dynamicCast<wrapper_type>();
            auto input = input_wrapper->getView();

            for (int i = 0; i < outputs.size(); i++)
            {
                auto output_wrapper = outputs[i].dynamicCast<wrapper_type>();
                auto output = output_wrapper->getSpan();

                csl::tensor_ops::copy<T>(stream, output, input);
            }
        }

    private:
        csl::Stream stream;
    }",5,src\cuda4dnn\primitives\split.hpp,cv.dnn.cuda4dnn.SplitOp,CUDABackendNode,false,20,SplitOp,1
378977,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\split.hpp,wrapper_type,,false,22,wrapper_type,1
379065,TYPE_DECL,cv.dnn.cuda4dnn.TransposeConvolutionOp<T>,,,"class TransposeConvolutionOp final : public CUDABackendNode {
    public:
        using wrapper_type = GetCUDABackendWrapperType<T>;

        TransposeConvolutionOp(csl::Stream stream_, csl::cudnn::Handle handle, const TransposeConvolutionConfiguration& config, const Mat& filters, const Mat& bias)
            : stream(std::move(stream_)), cudnnHandle(std::move(handle))
        {
            /* we make use of backward pass of convolution to perform forward pass of transpose convolution
             * hence, we must setup configuration for the convolution operation and perform backward pass
             */
            const auto& kernel_size = config.kernel_size;
            const auto& dilations = config.dilations;
            const auto& strides = config.strides;

            const auto convolution_order = kernel_size.size();
            CV_Assert(convolution_order >= 1);

            CV_Assert(convolution_order == dilations.size());
            CV_Assert(convolution_order == stride...",5,src\cuda4dnn\primitives\transpose_convolution.hpp,cv.dnn.cuda4dnn.TransposeConvolutionOp,CUDABackendNode,false,55,TransposeConvolutionOp,2
379091,TYPE_DECL,,src\cuda4dnn\primitives\transpose_convolution.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda4dnn\primitives\transpose_convolution.hpp,src\cuda4dnn\primitives\transpose_convolution.hpp:<global>,,false,1,<global>,13
379097,TYPE_DECL,,,,"struct TransposeConvolutionConfiguration {
        /* other than `input_shape` and `output_shape`, all the configuration values must be provided
         * for the corresponding convolution operation (not transpose convolution)
         */

        /* the size of the following vectors must be equal to the kernel size */
        std::vector<std::size_t> kernel_size;
        std::vector<std::size_t> dilations, strides;

        enum class PaddingMode {
            MANUAL, /* uses explicit padding values provided in `pads_begin` and `pads_end` */
            VALID, /* no padding is added */
            SAME /* TensorFlow logic is used for same padding */
        };

        /* explicit paddings are used if and only if padMode is set to manual */
        PaddingMode padMode;
        std::vector<std::size_t> pads_begin, pads_end;

        /* full shape inclusive of channel and batch axis */
        std::vector<std::size_t> input_shape;
        std::vector<std::size_t> output_shape;

    ...",5,src\cuda4dnn\primitives\transpose_convolution.hpp,cv.dnn.cuda4dnn.TransposeConvolutionConfiguration,,false,27,TransposeConvolutionConfiguration,1
379101,TYPE_DECL,,,,"enum class PaddingMode {
            MANUAL, /* uses explicit padding values provided in `pads_begin` and `pads_end` */
            VALID, /* no padding is added */
            SAME /* TensorFlow logic is used for same padding */
        }",9,src\cuda4dnn\primitives\transpose_convolution.hpp,cv.dnn.cuda4dnn.TransposeConvolutionConfiguration.PaddingMode,,false,36,PaddingMode,4
379111,TYPE_DECL,GetCUDABackendWrapperType<T>,,,using wrapper_type = GetCUDABackendWrapperType<T>;,9,src\cuda4dnn\primitives\transpose_convolution.hpp,wrapper_type,,false,57,wrapper_type,1
379913,TYPE_DECL,,src\cuda\array.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\array.hpp,src\cuda\array.hpp:<global>,,false,1,<global>,6
379921,TYPE_DECL,"cv.dnn.cuda4dnn.csl.device.array<T,std.size_t>",,,"struct array {
        using value_type        = T;
        using size_type         = device::size_type;
        using difference_type   = std::ptrdiff_t;
        using reference         = typename std::add_lvalue_reference<value_type>::type;
        using const_reference   = typename std::add_lvalue_reference<typename std::add_const<value_type>::type>::type;
        using pointer           = typename std::add_pointer<value_type>::type;
        using const_pointer     = typename std::add_pointer<typename std::add_const<value_type>::type>::type;
        using iterator          = pointer;
        using const_iterator    = const_pointer;
        using reverse_iterator  = std::reverse_iterator<iterator>;
        using const_reverse_iterator = std::reverse_iterator<const_iterator>;

        __host__ __device__ bool empty() const noexcept { return N == 0; }
        __host__ __device__ size_type size() const noexcept { return N; }

        __host__ __device__ iterator begin() noexcept { re...",5,src\cuda\array.hpp,cv.dnn.cuda4dnn.csl.device.array,,false,19,array,1
379922,TYPE_DECL,T,,,using value_type        = T;,9,src\cuda\array.hpp,value_type,,false,20,value_type,1
379923,TYPE_DECL,ANY,,,using size_type         = device::size_type;,9,src\cuda\array.hpp,size_type,,false,21,size_type,2
379924,TYPE_DECL,ANY,,,using difference_type   = std::ptrdiff_t;,9,src\cuda\array.hpp,difference_type,,false,22,difference_type,3
379925,TYPE_DECL,ANY,,,using reference         = typename std::add_lvalue_reference<value_type>::type;,9,src\cuda\array.hpp,reference,,false,23,reference,4
379926,TYPE_DECL,ANY,,,using const_reference   = typename std::add_lvalue_reference<typename std::add_const<value_type>::type>::type;,9,src\cuda\array.hpp,const_reference,,false,24,const_reference,5
379927,TYPE_DECL,ANY,,,using pointer           = typename std::add_pointer<value_type>::type;,9,src\cuda\array.hpp,pointer,,false,25,pointer,6
379928,TYPE_DECL,ANY,,,using const_pointer     = typename std::add_pointer<typename std::add_const<value_type>::type>::type;,9,src\cuda\array.hpp,const_pointer,,false,26,const_pointer,7
379929,TYPE_DECL,pointer,,,using iterator          = pointer;,9,src\cuda\array.hpp,iterator,,false,27,iterator,8
379930,TYPE_DECL,const_pointer,,,using const_iterator    = const_pointer;,9,src\cuda\array.hpp,const_iterator,,false,28,const_iterator,9
379931,TYPE_DECL,ANY,,,using reverse_iterator  = std::reverse_iterator<iterator>;,9,src\cuda\array.hpp,reverse_iterator,,false,29,reverse_iterator,10
379932,TYPE_DECL,ANY,,,using const_reverse_iterator = std::reverse_iterator<const_iterator>;,9,src\cuda\array.hpp,const_reverse_iterator,,false,30,const_reverse_iterator,11
380133,TYPE_DECL,,src\cuda\atomics.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\atomics.hpp,src\cuda\atomics.hpp:<global>,,false,1,<global>,3
380142,TYPE_DECL,,src\cuda\bbox_utils.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\bbox_utils.hpp,src\cuda\bbox_utils.hpp:<global>,,false,1,<global>,3
380149,TYPE_DECL,,,,"struct BoundingBox
    {
        float xmin, ymin, xmax, ymax;
    }",5,src\cuda\bbox_utils.hpp,cv.dnn.cuda4dnn.kernels.BoundingBox,,false,14,BoundingBox,1
380163,TYPE_DECL,,src\cuda\block_stride_range.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\block_stride_range.hpp,src\cuda\block_stride_range.hpp:<global>,,false,1,<global>,4
380171,TYPE_DECL,"cv.dnn.cuda4dnn.csl.device.block_stride_range_generic<int,int=0,index_type,size_type>",,,"class block_stride_range_generic {
public:
    __device__ block_stride_range_generic(index_type to_) : from(0), to(to_) { }
    __device__ block_stride_range_generic(index_type from_, index_type to_) : from(from_), to(to_) { }

    class iterator
    {
    public:
        __device__ iterator(index_type pos_) : pos(pos_) {}

        /* these iterators return the index when dereferenced; this allows us to loop
         * through the indices using a range based for loop
         */
        __device__ index_type operator*() const { return pos; }

        __device__ iterator& operator++() {
            const index_type block_size = BLOCK_SIZE == 0 ? getBlockDim<dim>() : BLOCK_SIZE;
            pos += block_size;
            return *this;
        }

        __device__ bool operator!=(const iterator& other) const {
            /* NOTE HACK
             * 'pos' can move in large steps (see operator++)
             * expansion of range for loop uses != as the loop conditioion
             * ...",1,src\cuda\block_stride_range.hpp,cv.dnn.cuda4dnn.csl.device.block_stride_range_generic,,false,16,block_stride_range_generic,1
380183,TYPE_DECL,,,,"class iterator
    {
    public:
        __device__ iterator(index_type pos_) : pos(pos_) {}

        /* these iterators return the index when dereferenced; this allows us to loop
         * through the indices using a range based for loop
         */
        __device__ index_type operator*() const { return pos; }

        __device__ iterator& operator++() {
            const index_type block_size = BLOCK_SIZE == 0 ? getBlockDim<dim>() : BLOCK_SIZE;
            pos += block_size;
            return *this;
        }

        __device__ bool operator!=(const iterator& other) const {
            /* NOTE HACK
             * 'pos' can move in large steps (see operator++)
             * expansion of range for loop uses != as the loop conditioion
             * => operator!= must return false if 'pos' crosses the end
             */
            return pos < other.pos;
        }

    private:
        index_type pos;
    }",5,src\cuda\block_stride_range.hpp,cv.dnn.cuda4dnn.csl.device.block_stride_range_generic.iterator,,false,21,iterator,3
380249,TYPE_DECL,block_stride_range_generic<0>,,,using block_stride_range_x = block_stride_range_generic<0>;,1,src\cuda\block_stride_range.hpp,block_stride_range_x,,false,62,block_stride_range_x,2
380250,TYPE_DECL,block_stride_range_generic<1>,,,using block_stride_range_y = block_stride_range_generic<1>;,1,src\cuda\block_stride_range.hpp,block_stride_range_y,,false,63,block_stride_range_y,3
380251,TYPE_DECL,block_stride_range_generic<2>,,,using block_stride_range_z = block_stride_range_generic<2>;,1,src\cuda\block_stride_range.hpp,block_stride_range_z,,false,64,block_stride_range_z,4
380252,TYPE_DECL,"block_stride_range_generic<0, BLOCK_SIZE>",,,"using block_stride_range = block_stride_range_generic<0, BLOCK_SIZE>;",1,src\cuda\block_stride_range.hpp,block_stride_range,,false,67,block_stride_range,5
380265,TYPE_DECL,,src\cuda\execution.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\execution.hpp,src\cuda\execution.hpp:<global>,,false,1,<global>,6
380272,TYPE_DECL,,,,"struct execution_policy {
        execution_policy(dim3 grid_size, dim3 block_size)
            : grid{ grid_size }, block{ block_size }, sharedMem{ 0 }, stream{ 0 } { }

        execution_policy(dim3 grid_size, dim3 block_size, std::size_t shared_mem)
            : grid{ grid_size }, block{ block_size }, sharedMem{ shared_mem }, stream{ nullptr } { }

        execution_policy(dim3 grid_size, dim3 block_size, const Stream& strm)
            : grid{ grid_size }, block{ block_size }, sharedMem{ 0 }, stream{ strm.get() } { }

        execution_policy(dim3 grid_size, dim3 block_size, std::size_t shared_mem, const Stream& strm)
            : grid{ grid_size }, block{ block_size }, sharedMem{ shared_mem }, stream{ strm.get() } { }

        dim3 grid;
        dim3 block;
        std::size_t sharedMem;
        cudaStream_t stream;
    }",5,src\cuda\execution.hpp,cv.dnn.cuda4dnn.csl.execution_policy,,false,19,execution_policy,1
380424,TYPE_DECL,,src\cuda\functors.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\functors.hpp,src\cuda\functors.hpp:<global>,,false,1,<global>,4
380431,TYPE_DECL,cv.dnn.cuda4dnn.kernels.IdentityFunctor<T>,,,"struct IdentityFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE IdentityFunctor() { }
    CUDA4DNN_DEVICE IdentityFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        return value;
    };
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.IdentityFunctor,,false,17,IdentityFunctor,1
380432,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.IdentityFunctor.Params,,false,18,Params,1
380453,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ReLUFunctor<T>,,,"struct ReLUFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : slope(0) { }
        CUDA4DNN_HOST_DEVICE Params(T slope_) : slope(slope_) { }
        T slope;
    };

    CUDA4DNN_DEVICE ReLUFunctor() : ReLUFunctor(Params{}) { }
    CUDA4DNN_DEVICE ReLUFunctor(const Params& params) : slope(params.slope) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::log1pexp;
        return value >= T(0) ? value : slope * value;
    }

    T slope;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ReLUFunctor,,false,31,ReLUFunctor,2
380454,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : slope(0) { }
        CUDA4DNN_HOST_DEVICE Params(T slope_) : slope(slope_) { }
        T slope;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ReLUFunctor.Params,,false,32,Params,1
380490,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ClippedReLUFunctor<T>,,,"struct ClippedReLUFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : floor(0), ceiling(6) { }
        CUDA4DNN_HOST_DEVICE Params(T floor_, T ceiling_) : floor(floor_), ceiling(ceiling_) { }
        T floor, ceiling;
    };

    CUDA4DNN_DEVICE ClippedReLUFunctor() : ClippedReLUFunctor(Params{}) { }
    CUDA4DNN_DEVICE ClippedReLUFunctor(const Params& params) : floor{params.floor}, ceiling{params.ceiling} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::clamp;
        return clamp(value, floor, ceiling);
    }

    T floor, ceiling;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ClippedReLUFunctor,,false,50,ClippedReLUFunctor,3
380491,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : floor(0), ceiling(6) { }
        CUDA4DNN_HOST_DEVICE Params(T floor_, T ceiling_) : floor(floor_), ceiling(ceiling_) { }
        T floor, ceiling;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ClippedReLUFunctor.Params,,false,51,Params,1
380525,TYPE_DECL,cv.dnn.cuda4dnn.kernels.TanHFunctor<T>,,,"struct TanHFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE TanHFunctor() { }
    CUDA4DNN_DEVICE TanHFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::tanh;
        return tanh(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.TanHFunctor,,false,69,TanHFunctor,4
380526,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.TanHFunctor.Params,,false,70,Params,1
380548,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SwishFunctor<T>,,,"struct SwishFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SwishFunctor() { }
    CUDA4DNN_DEVICE SwishFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        // f(x) = x * sigmoid(x)
        using csl::device::fast_divide;
        using csl::device::fast_exp;
        return fast_divide(value, static_cast<T>(1) + fast_exp(-value));
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SwishFunctor,,false,84,SwishFunctor,5
380549,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SwishFunctor.Params,,false,85,Params,1
380578,TYPE_DECL,cv.dnn.cuda4dnn.kernels.MishFunctor<T>,,,"struct MishFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE MishFunctor() { }
    CUDA4DNN_DEVICE MishFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::tanh;
        using csl::device::log1pexp;
        return value * tanh(log1pexp(value));
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MishFunctor,,false,101,MishFunctor,6
380579,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MishFunctor.Params,,false,102,Params,1
380604,TYPE_DECL,cv.dnn.cuda4dnn.kernels.MishFunctor<float><>,,,"struct MishFunctor<float> {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE MishFunctor() { }
    CUDA4DNN_DEVICE MishFunctor(const Params& params) { }

    CUDA4DNN_DEVICE float operator()(float value) {
        // f(x) = x * tanh(log1pexp(x));
        using csl::device::fast_divide;
        using csl::device::fast_exp;

        auto e = fast_exp(value);
        auto n = e * e + 2 * e;
        if (value <= -0.6f)
            return value * fast_divide(n, n + 2);
        return value - 2 * fast_divide(value, n + 2);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MishFunctor<float>,,false,117,MishFunctor<float>,7
380605,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MishFunctor<float>.Params,,false,118,Params,1
380663,TYPE_DECL,cv.dnn.cuda4dnn.kernels.MishFunctor<__half><>,,,"struct MishFunctor<__half> {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE MishFunctor() { }
    CUDA4DNN_DEVICE MishFunctor(const Params& params) { }

    CUDA4DNN_DEVICE __half operator()(__half value) {
        return MishFunctor<float>()(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MishFunctor<__half>,,false,140,MishFunctor<__half>,8
380664,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MishFunctor<__half>.Params,,false,141,Params,1
380687,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SigmoidFunctor<T>,,,"struct SigmoidFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SigmoidFunctor() { }
    CUDA4DNN_DEVICE SigmoidFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::fast_sigmoid;
        return fast_sigmoid(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SigmoidFunctor,,false,155,SigmoidFunctor,9
380688,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SigmoidFunctor.Params,,false,156,Params,1
380710,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ELUFunctor<T>,,,"struct ELUFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(1) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_) : alpha(alpha_) { }
        T alpha;
    };

    CUDA4DNN_DEVICE ELUFunctor() : ELUFunctor(Params{}) { }
    CUDA4DNN_DEVICE ELUFunctor(const Params& params) : alpha{params.alpha} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::expm1;
        return value >= T(0) ? value : alpha * expm1(value);
    }

    T alpha;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ELUFunctor,,false,170,ELUFunctor,10
380711,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(1) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_) : alpha(alpha_) { }
        T alpha;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ELUFunctor.Params,,false,171,Params,1
380748,TYPE_DECL,cv.dnn.cuda4dnn.kernels.AbsFunctor<T>,,,"struct AbsFunctor {
    struct Params { };

    CUDA4DNN_DEVICE AbsFunctor() { }
    CUDA4DNN_DEVICE AbsFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::abs;
        return abs(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AbsFunctor,,false,189,AbsFunctor,11
380749,TYPE_DECL,,,,struct Params { },5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AbsFunctor.Params,,false,190,Params,1
380767,TYPE_DECL,cv.dnn.cuda4dnn.kernels.BNLLFunctor<T>,,,"struct BNLLFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE BNLLFunctor() { }
    CUDA4DNN_DEVICE BNLLFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::log1pexp;
        return value > T(0) ? value + log1pexp(-value) : log1pexp(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.BNLLFunctor,,false,202,BNLLFunctor,12
380768,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.BNLLFunctor.Params,,false,203,Params,1
380800,TYPE_DECL,cv.dnn.cuda4dnn.kernels.CeilFunctor<T>,,,"struct CeilFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE CeilFunctor() { }
    CUDA4DNN_DEVICE CeilFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::ceil;
        return ceil(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.CeilFunctor,,false,217,CeilFunctor,13
380801,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.CeilFunctor.Params,,false,218,Params,1
380823,TYPE_DECL,cv.dnn.cuda4dnn.kernels.FloorFunctor<T>,,,"struct FloorFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE FloorFunctor() { }
    CUDA4DNN_DEVICE FloorFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::floor;
        return floor(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.FloorFunctor,,false,232,FloorFunctor,14
380824,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.FloorFunctor.Params,,false,233,Params,1
380846,TYPE_DECL,cv.dnn.cuda4dnn.kernels.LogFunctor<T>,,,"struct LogFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE LogFunctor() { }
    CUDA4DNN_DEVICE LogFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::log;
        return log(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.LogFunctor,,false,247,LogFunctor,15
380847,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.LogFunctor.Params,,false,248,Params,1
380869,TYPE_DECL,cv.dnn.cuda4dnn.kernels.RintFunctor<T>,,,"struct RintFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE RintFunctor() { }
    CUDA4DNN_DEVICE RintFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::rint;
        return rint(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.RintFunctor,,false,262,RintFunctor,16
380870,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.RintFunctor.Params,,false,263,Params,1
380892,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SqrtFunctor<T>,,,"struct SqrtFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SqrtFunctor() { }
    CUDA4DNN_DEVICE SqrtFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::sqrt;
        return sqrt(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SqrtFunctor,,false,277,SqrtFunctor,17
380893,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SqrtFunctor.Params,,false,278,Params,1
380915,TYPE_DECL,cv.dnn.cuda4dnn.kernels.NotFunctor<T>,,,"struct NotFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE NotFunctor() { }
    CUDA4DNN_DEVICE NotFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::floor;
        return floor(static_cast<T>(1.) - value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.NotFunctor,,false,292,NotFunctor,18
380916,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.NotFunctor.Params,,false,293,Params,1
380942,TYPE_DECL,cv.dnn.cuda4dnn.kernels.AcosFunctor<T>,,,"struct AcosFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE AcosFunctor() { }
    CUDA4DNN_DEVICE AcosFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::acos;
        return acos(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AcosFunctor,,false,307,AcosFunctor,19
380943,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AcosFunctor.Params,,false,308,Params,1
380965,TYPE_DECL,cv.dnn.cuda4dnn.kernels.AcoshFunctor<T>,,,"struct AcoshFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE AcoshFunctor() { }
    CUDA4DNN_DEVICE AcoshFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::acosh;
        return acosh(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AcoshFunctor,,false,322,AcoshFunctor,20
380966,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AcoshFunctor.Params,,false,323,Params,1
380988,TYPE_DECL,cv.dnn.cuda4dnn.kernels.AsinFunctor<T>,,,"struct AsinFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE AsinFunctor() { }
    CUDA4DNN_DEVICE AsinFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::asin;
        return asin(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AsinFunctor,,false,337,AsinFunctor,21
380989,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AsinFunctor.Params,,false,338,Params,1
381011,TYPE_DECL,cv.dnn.cuda4dnn.kernels.AsinhFunctor<T>,,,"struct AsinhFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE AsinhFunctor() { }
    CUDA4DNN_DEVICE AsinhFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::asinh;
        return asinh(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AsinhFunctor,,false,352,AsinhFunctor,22
381012,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AsinhFunctor.Params,,false,353,Params,1
381034,TYPE_DECL,cv.dnn.cuda4dnn.kernels.AtanFunctor<T>,,,"struct AtanFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE AtanFunctor() { }
    CUDA4DNN_DEVICE AtanFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::atan;
        return atan(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AtanFunctor,,false,367,AtanFunctor,23
381035,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AtanFunctor.Params,,false,368,Params,1
381057,TYPE_DECL,cv.dnn.cuda4dnn.kernels.AtanhFunctor<T>,,,"struct AtanhFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE AtanhFunctor() { }
    CUDA4DNN_DEVICE AtanhFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::atanh;
        return atanh(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AtanhFunctor,,false,382,AtanhFunctor,24
381058,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.AtanhFunctor.Params,,false,383,Params,1
381080,TYPE_DECL,cv.dnn.cuda4dnn.kernels.CosFunctor<T>,,,"struct CosFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE CosFunctor() { }
    CUDA4DNN_DEVICE CosFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::cos;
        return cos(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.CosFunctor,,false,397,CosFunctor,25
381081,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.CosFunctor.Params,,false,398,Params,1
381103,TYPE_DECL,cv.dnn.cuda4dnn.kernels.CoshFunctor<T>,,,"struct CoshFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE CoshFunctor() { }
    CUDA4DNN_DEVICE CoshFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::cosh;
        return cosh(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.CoshFunctor,,false,412,CoshFunctor,26
381104,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.CoshFunctor.Params,,false,413,Params,1
381126,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ErfFunctor<T>,,,"struct ErfFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE ErfFunctor() { }
    CUDA4DNN_DEVICE ErfFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::erf;
        return erf(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ErfFunctor,,false,427,ErfFunctor,27
381127,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ErfFunctor.Params,,false,428,Params,1
381149,TYPE_DECL,cv.dnn.cuda4dnn.kernels.HardSwishFunctor<T>,,,"struct HardSwishFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE HardSwishFunctor() { }
    CUDA4DNN_DEVICE HardSwishFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::clamp; // saturate?
        return value * clamp(value / static_cast<T>(6.f) + static_cast<T>(0.5f), static_cast<T>(0.f), static_cast<T>(1.f));
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.HardSwishFunctor,,false,442,HardSwishFunctor,28
381150,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.HardSwishFunctor.Params,,false,443,Params,1
381188,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SinFunctor<T>,,,"struct SinFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SinFunctor() { }
    CUDA4DNN_DEVICE SinFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::sin;
        return sin(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SinFunctor,,false,457,SinFunctor,29
381189,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SinFunctor.Params,,false,458,Params,1
381211,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SinhFunctor<T>,,,"struct SinhFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SinhFunctor() { }
    CUDA4DNN_DEVICE SinhFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::sinh;
        return sinh(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SinhFunctor,,false,472,SinhFunctor,30
381212,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SinhFunctor.Params,,false,473,Params,1
381234,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SoftplusFunctor<T>,,,"struct SoftplusFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SoftplusFunctor() { }
    CUDA4DNN_DEVICE SoftplusFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::log1pexp;
        return log1pexp(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SoftplusFunctor,,false,487,SoftplusFunctor,31
381235,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SoftplusFunctor.Params,,false,488,Params,1
381257,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SoftsignFunctor<T>,,,"struct SoftsignFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SoftsignFunctor() { }
    CUDA4DNN_DEVICE SoftsignFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::abs;
        return value / (static_cast<T>(1.f) + abs(value));
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SoftsignFunctor,,false,502,SoftsignFunctor,32
381258,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SoftsignFunctor.Params,,false,503,Params,1
381286,TYPE_DECL,cv.dnn.cuda4dnn.kernels.TanFunctor<T>,,,"struct TanFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE TanFunctor() { }
    CUDA4DNN_DEVICE TanFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::tan;
        return tan(value);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.TanFunctor,,false,517,TanFunctor,33
381287,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.TanFunctor.Params,,false,518,Params,1
381309,TYPE_DECL,cv.dnn.cuda4dnn.kernels.CeluFunctor<T>,,,"struct CeluFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(1) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_) : alpha(alpha_) { }
        T alpha;
    };

    CUDA4DNN_DEVICE CeluFunctor() : CeluFunctor(Params{}) { }
    CUDA4DNN_DEVICE CeluFunctor(const Params& params) : alpha{params.alpha} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::min;
        using csl::device::max;
        using csl::device::expm1;
        return max(T(0), value) + min(T(0), alpha * expm1(value / alpha));
    }

    T alpha;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.CeluFunctor,,false,532,CeluFunctor,34
381310,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(1) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_) : alpha(alpha_) { }
        T alpha;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.CeluFunctor.Params,,false,533,Params,1
381351,TYPE_DECL,cv.dnn.cuda4dnn.kernels.HardSigmoidFunctor<T>,,,"struct HardSigmoidFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(0.2), beta(0.5) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_, T beta_) : alpha(alpha_), beta(beta_) { }
        T alpha, beta;
    };

    CUDA4DNN_DEVICE HardSigmoidFunctor() : HardSigmoidFunctor(Params{}) { }
    CUDA4DNN_DEVICE HardSigmoidFunctor(const Params& params): alpha{params.alpha}, beta{params.beta} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::clamp;
        return clamp(alpha * value + beta, T(0), T(1));
    }

    T alpha, beta;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.HardSigmoidFunctor,,false,553,HardSigmoidFunctor,35
381352,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(0.2), beta(0.5) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_, T beta_) : alpha(alpha_), beta(beta_) { }
        T alpha, beta;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.HardSigmoidFunctor.Params,,false,554,Params,1
381392,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SeluFunctor<T>,,,"struct SeluFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(1.6732632423543772848170429916717),
                                        gamma(1.0507009873554804934193349852946) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_, T gamma_) : alpha(alpha_), gamma(gamma_) { }
        T alpha, gamma;
    };

    CUDA4DNN_DEVICE SeluFunctor() : SeluFunctor(Params{}) { }
    CUDA4DNN_DEVICE SeluFunctor(const Params& params): alpha{params.alpha}, gamma{params.gamma} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::expm1;
        return gamma * (value > T(0) ? value : alpha * expm1(value));
    }

    T alpha, gamma;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SeluFunctor,,false,572,SeluFunctor,36
381393,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(1.6732632423543772848170429916717),
                                        gamma(1.0507009873554804934193349852946) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_, T gamma_) : alpha(alpha_), gamma(gamma_) { }
        T alpha, gamma;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SeluFunctor.Params,,false,573,Params,1
381435,TYPE_DECL,cv.dnn.cuda4dnn.kernels.GeluFunctor<T>,,,"struct GeluFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE GeluFunctor() { }
    CUDA4DNN_DEVICE GeluFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::erf;
        return static_cast<T>(0.5f) * value * (static_cast<T>(1.f) + erf(value * static_cast<T>(M_SQRT1_2)));
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.GeluFunctor,,false,592,GeluFunctor,37
381436,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.GeluFunctor.Params,,false,593,Params,1
381472,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ThresholdedReluFunctor<T>,,,"struct ThresholdedReluFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(1) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_) : alpha(alpha_) { }
        T alpha;
    };

    CUDA4DNN_DEVICE ThresholdedReluFunctor() : ThresholdedReluFunctor(Params{}) { }
    CUDA4DNN_DEVICE ThresholdedReluFunctor(const Params& params) : alpha{params.alpha} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        return (value > alpha) ? value : T(0);
    }

    T alpha;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ThresholdedReluFunctor,,false,607,ThresholdedReluFunctor,38
381473,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : alpha(1) { }
        CUDA4DNN_HOST_DEVICE Params(T alpha_) : alpha(alpha_) { }
        T alpha;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ThresholdedReluFunctor.Params,,false,608,Params,1
381507,TYPE_DECL,cv.dnn.cuda4dnn.kernels.PowerFunctor<T>,,,"struct PowerFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : exp(1), scale(1), shift(0) { }
        CUDA4DNN_HOST_DEVICE Params(T exp_, T scale_, T shift_) : exp(exp_), scale(scale_), shift(shift_) { }
        T exp, scale, shift;
    };

    CUDA4DNN_DEVICE PowerFunctor() : PowerFunctor(Params{}) { }
    CUDA4DNN_DEVICE PowerFunctor(const Params& params) : exp{params.exp}, scale{params.scale}, shift{params.shift} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::pow;
        return pow(shift + scale * value, exp);
    }

    T exp, scale, shift;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.PowerFunctor,,false,625,PowerFunctor,39
381508,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : exp(1), scale(1), shift(0) { }
        CUDA4DNN_HOST_DEVICE Params(T exp_, T scale_, T shift_) : exp(exp_), scale(scale_), shift(shift_) { }
        T exp, scale, shift;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.PowerFunctor.Params,,false,626,Params,1
381548,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ExpFunctor<T>,,,"struct ExpFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : normScale(1), normShift(0) { }
        CUDA4DNN_HOST_DEVICE Params(T nScale_, T nShift_) : normScale(nScale_), normShift(nShift_) { }
        T normScale, normShift;
    };

    CUDA4DNN_DEVICE ExpFunctor() : ExpFunctor(Params{}) { }
    CUDA4DNN_DEVICE ExpFunctor(const Params& params) : normScale{params.normScale}, normShift{params.normShift} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        using csl::device::fast_exp;
        return fast_exp(normShift + normScale * value);
    }

    T normScale, normShift;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ExpFunctor,,false,644,ExpFunctor,40
381549,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : normScale(1), normShift(0) { }
        CUDA4DNN_HOST_DEVICE Params(T nScale_, T nShift_) : normScale(nScale_), normShift(nShift_) { }
        T normScale, normShift;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ExpFunctor.Params,,false,645,Params,1
381585,TYPE_DECL,cv.dnn.cuda4dnn.kernels.MaxFunctor<T>,,,"struct MaxFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE MaxFunctor() { }
    CUDA4DNN_DEVICE MaxFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T x, T y) {
        using csl::device::max;
        return max(x, y);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MaxFunctor,,false,663,MaxFunctor,41
381586,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MaxFunctor.Params,,false,664,Params,1
381610,TYPE_DECL,cv.dnn.cuda4dnn.kernels.MinFunctor<T>,,,"struct MinFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE MinFunctor() { }
    CUDA4DNN_DEVICE MinFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T x, T y) {
        using csl::device::min;
        return min(x, y);
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MinFunctor,,false,678,MinFunctor,42
381611,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.MinFunctor.Params,,false,679,Params,1
381635,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SumFunctor<T>,,,"struct SumFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SumFunctor() { }
    CUDA4DNN_DEVICE SumFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T x, T y) { return x + y; }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SumFunctor,,false,693,SumFunctor,43
381636,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SumFunctor.Params,,false,694,Params,1
381660,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ScaledSumFunctor<T>,,,"struct ScaledSumFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : scale_x(1), scale_y(1) { }
        CUDA4DNN_HOST_DEVICE Params(T scale_x_, T scale_y_) : scale_x(scale_x_), scale_y(scale_y_) { }
        T scale_x, scale_y;
    };

    CUDA4DNN_DEVICE ScaledSumFunctor() : scale_x(1), scale_y(1) { }
    CUDA4DNN_DEVICE ScaledSumFunctor(const Params& params) : scale_x{params.scale_x}, scale_y{params.scale_y} { }

    CUDA4DNN_DEVICE T operator()(T x, T y) { return scale_x * x + scale_y * y; }

    T scale_x, scale_y;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ScaledSumFunctor,,false,705,ScaledSumFunctor,44
381661,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : scale_x(1), scale_y(1) { }
        CUDA4DNN_HOST_DEVICE Params(T scale_x_, T scale_y_) : scale_x(scale_x_), scale_y(scale_y_) { }
        T scale_x, scale_y;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ScaledSumFunctor.Params,,false,706,Params,1
381699,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ProductFunctor<T>,,,"struct ProductFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE ProductFunctor() { }
    CUDA4DNN_DEVICE ProductFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T x, T y) { return x * y; }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ProductFunctor,,false,721,ProductFunctor,45
381700,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ProductFunctor.Params,,false,722,Params,1
381724,TYPE_DECL,cv.dnn.cuda4dnn.kernels.DivFunctor<T>,,,"struct DivFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE DivFunctor() { }
    CUDA4DNN_DEVICE DivFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T x, T y) { return x / y; }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.DivFunctor,,false,733,DivFunctor,46
381725,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.DivFunctor.Params,,false,734,Params,1
381749,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SubFunctor<T>,,,"struct SubFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    };

    CUDA4DNN_DEVICE SubFunctor() { }
    CUDA4DNN_DEVICE SubFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T x, T y) { return x - y; }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SubFunctor,,false,745,SubFunctor,47
381750,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() { }
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SubFunctor.Params,,false,746,Params,1
381774,TYPE_DECL,cv.dnn.cuda4dnn.kernels.SignFunctor<T>,,,"struct SignFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() {}
    };

    CUDA4DNN_DEVICE SignFunctor() { }
    CUDA4DNN_DEVICE SignFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        return value > T(0) ? T(1) : (value < T(0) ? T(-1) : T(0));
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SignFunctor,,false,757,SignFunctor,48
381775,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() {}
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.SignFunctor.Params,,false,758,Params,1
381812,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ShrinkFunctor<T>,,,"struct ShrinkFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() : bias(0), lambd(0.5) { }
        CUDA4DNN_HOST_DEVICE Params(T bias_, T lambd_) : bias(bias_), lambd(lambd_) { }
        T bias, lambd;
    };

    CUDA4DNN_DEVICE ShrinkFunctor() : ShrinkFunctor(Params{}) { }
    CUDA4DNN_DEVICE ShrinkFunctor(const Params& params) : bias{params.bias}, lambd{params.lambd} { }

    CUDA4DNN_DEVICE T operator()(T value) {
        return value > lambd ? value - bias : (value < -lambd ? value + bias : T(0));
    }

    T bias, lambd;
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ShrinkFunctor,,false,771,ShrinkFunctor,49
381813,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() : bias(0), lambd(0.5) { }
        CUDA4DNN_HOST_DEVICE Params(T bias_, T lambd_) : bias(bias_), lambd(lambd_) { }
        T bias, lambd;
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ShrinkFunctor.Params,,false,772,Params,1
381860,TYPE_DECL,cv.dnn.cuda4dnn.kernels.ReciprocalFunctor<T>,,,"struct ReciprocalFunctor {
    struct Params {
        CUDA4DNN_HOST_DEVICE Params() {}
    };

    CUDA4DNN_DEVICE ReciprocalFunctor() { }
    CUDA4DNN_DEVICE ReciprocalFunctor(const Params& params) { }

    CUDA4DNN_DEVICE T operator()(T value) {
        return T(1.f)/value;
    }
}",1,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ReciprocalFunctor,,false,789,ReciprocalFunctor,50
381861,TYPE_DECL,,,,"struct Params {
        CUDA4DNN_HOST_DEVICE Params() {}
    }",5,src\cuda\functors.hpp,cv.dnn.cuda4dnn.kernels.ReciprocalFunctor.Params,,false,790,Params,1
381893,TYPE_DECL,,src\cuda\grid_stride_range.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\grid_stride_range.hpp,src\cuda\grid_stride_range.hpp:<global>,,false,1,<global>,4
381901,TYPE_DECL,"cv.dnn.cuda4dnn.csl.device.grid_stride_range_generic<int,index_type,size_type>",,,"class grid_stride_range_generic {
public:
    __device__ grid_stride_range_generic(index_type to_) : from(0), to(to_) { }
    __device__ grid_stride_range_generic(index_type from_, index_type to_) : from(from_), to(to_) { }

    class iterator
    {
    public:
        __device__ iterator(index_type pos_) : pos(pos_) {}

        /* these iterators return the index when dereferenced; this allows us to loop
            * through the indices using a range based for loop
            */
        __device__ index_type operator*() const { return pos; }

        __device__ iterator& operator++() {
            pos += getGridDim<dim>() * static_cast<index_type>(getBlockDim<dim>());
            return *this;
        }

        __device__ bool operator!=(const iterator& other) const {
            /* NOTE HACK
                * 'pos' can move in large steps (see operator++)
                * expansion of range for loop uses != as the loop condition
                * => operator!= must return fals...",1,src\cuda\grid_stride_range.hpp,cv.dnn.cuda4dnn.csl.device.grid_stride_range_generic,,false,16,grid_stride_range_generic,1
381913,TYPE_DECL,,,,"class iterator
    {
    public:
        __device__ iterator(index_type pos_) : pos(pos_) {}

        /* these iterators return the index when dereferenced; this allows us to loop
            * through the indices using a range based for loop
            */
        __device__ index_type operator*() const { return pos; }

        __device__ iterator& operator++() {
            pos += getGridDim<dim>() * static_cast<index_type>(getBlockDim<dim>());
            return *this;
        }

        __device__ bool operator!=(const iterator& other) const {
            /* NOTE HACK
                * 'pos' can move in large steps (see operator++)
                * expansion of range for loop uses != as the loop condition
                * => operator!= must return false if 'pos' crosses the end
                */
            return pos < other.pos;
        }

    private:
        index_type pos;
    }",5,src\cuda\grid_stride_range.hpp,cv.dnn.cuda4dnn.csl.device.grid_stride_range_generic.iterator,,false,21,iterator,3
381978,TYPE_DECL,grid_stride_range_generic<0>,,,using grid_stride_range_x = grid_stride_range_generic<0>;,1,src\cuda\grid_stride_range.hpp,grid_stride_range_x,,false,61,grid_stride_range_x,2
381979,TYPE_DECL,grid_stride_range_generic<1>,,,using grid_stride_range_y = grid_stride_range_generic<1>;,1,src\cuda\grid_stride_range.hpp,grid_stride_range_y,,false,62,grid_stride_range_y,3
381980,TYPE_DECL,grid_stride_range_generic<2>,,,using grid_stride_range_z = grid_stride_range_generic<2>;,1,src\cuda\grid_stride_range.hpp,grid_stride_range_z,,false,63,grid_stride_range_z,4
381981,TYPE_DECL,grid_stride_range_x,,,using grid_stride_range = grid_stride_range_x;,1,src\cuda\grid_stride_range.hpp,grid_stride_range,,false,64,grid_stride_range,5
381988,TYPE_DECL,,src\cuda\index_helpers.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\index_helpers.hpp,src\cuda\index_helpers.hpp:<global>,,false,1,<global>,3
381997,TYPE_DECL,decltype,,,using dim3_member_type = decltype(dim3::x);,5,src\cuda\index_helpers.hpp,dim3_member_type,,false,15,dim3_member_type,1
381998,TYPE_DECL,decltype,,,using uint3_member_type = decltype(uint3::x);,5,src\cuda\index_helpers.hpp,uint3_member_type,,false,16,uint3_member_type,2
382021,TYPE_DECL,,src\cuda\kernel_dispatcher.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\kernel_dispatcher.hpp,src\cuda\kernel_dispatcher.hpp:<global>,,false,1,<global>,3
382032,TYPE_DECL,,src\cuda\limits.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\limits.hpp,src\cuda\limits.hpp:<global>,,false,1,<global>,4
382040,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.numeric_limits<T>,,,struct numeric_limits,5,src\cuda\limits.hpp,cv.dnn.cuda4dnn.csl.device.numeric_limits,,false,16,numeric_limits,1
382041,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.numeric_limits<__half><>,,,"struct numeric_limits<__half> {
        __device__ static __half min() { return 0.0000610; }
        __device__ static __half max() { return 65504.0; }
        __device__ static __half lowest() { return -65504.0; }
    }",5,src\cuda\limits.hpp,cv.dnn.cuda4dnn.csl.device.numeric_limits<__half>,,false,20,numeric_limits<__half>,2
382064,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.numeric_limits<float><>,,,"struct numeric_limits<float> {
        __device__ static float min() { return FLT_MIN; }
        __device__ static float max() { return FLT_MAX; }
        __device__ static float lowest() { return -FLT_MAX; }
    }",5,src\cuda\limits.hpp,cv.dnn.cuda4dnn.csl.device.numeric_limits<float>,,false,28,numeric_limits<float>,3
382093,TYPE_DECL,,src\cuda\math.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\math.hpp,src\cuda\math.hpp:<global>,,false,1,<global>,3
382228,TYPE_DECL,,src\cuda\memory.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\memory.hpp,src\cuda\memory.hpp:<global>,,false,1,<global>,2
382242,TYPE_DECL,,src\cuda\types.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\types.hpp,src\cuda\types.hpp:<global>,,false,1,<global>,2
382250,TYPE_DECL,ANY,,,using size_type = std::int32_t;,5,src\cuda\types.hpp,size_type,,false,21,size_type,1
382251,TYPE_DECL,ANY,,,using index_type = std::int32_t;,5,src\cuda\types.hpp,index_type,,false,22,index_type,2
382264,TYPE_DECL,,src\cuda\vector_traits.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\cuda\vector_traits.hpp,src\cuda\vector_traits.hpp:<global>,,false,1,<global>,6
382273,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<size_type>,,,struct raw_type_ { },32,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.detail.raw_type_,,false,38,raw_type_,1
382274,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<256><>,,,struct raw_type_<256> { typedef ulonglong4 type; },21,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<256>,,false,39,raw_type_<256>,2
382275,TYPE_DECL,ANY,,,typedef ulonglong4 type;,64,src\cuda\vector_traits.hpp,type,,false,39,type,1
382276,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<128><>,,,struct raw_type_<128> { typedef uint4 type; },21,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<128>,,false,40,raw_type_<128>,3
382277,TYPE_DECL,ANY,,,typedef uint4 type;,59,src\cuda\vector_traits.hpp,type,,false,40,type,1
382278,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<64><>,,,struct raw_type_<64> { typedef uint2 type; },21,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<64>,,false,41,raw_type_<64>,4
382279,TYPE_DECL,ANY,,,typedef uint2 type;,58,src\cuda\vector_traits.hpp,type,,false,41,type,1
382280,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<32><>,,,struct raw_type_<32> { typedef uint1 type; },21,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<32>,,false,42,raw_type_<32>,5
382281,TYPE_DECL,ANY,,,typedef uint1 type;,58,src\cuda\vector_traits.hpp,type,,false,42,type,1
382282,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<16><>,,,struct raw_type_<16> { typedef uchar2 type; },21,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<16>,,false,43,raw_type_<16>,6
382283,TYPE_DECL,ANY,,,typedef uchar2 type;,59,src\cuda\vector_traits.hpp,type,,false,43,type,1
382284,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<8><>,,,struct raw_type_<8> { typedef uchar1 type; },21,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<8>,,false,44,raw_type_<8>,7
382285,TYPE_DECL,ANY,,,typedef uchar1 type;,58,src\cuda\vector_traits.hpp,type,,false,44,type,1
382286,TYPE_DECL,cv.dnn.cuda4dnn.csl.device.detail.raw_type<size_type>,,,"struct raw_type {
            using type = typename raw_type_<N>::type;
            static_assert(sizeof(type) * 8 == N, """");
        }",32,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.detail.raw_type,,false,46,raw_type,8
382287,TYPE_DECL,ANY,,,using type = typename raw_type_<N>::type;,13,src\cuda\vector_traits.hpp,type,,false,47,type,1
382300,TYPE_DECL,"cv.dnn.cuda4dnn.csl.device.vector_type<T,size_type>",,,"union vector_type {
        using value_type = T;
        using raw_type = typename detail::raw_type<N * sizeof(T) * 8>::type;

        __device__ vector_type() { }

        __device__ static constexpr size_type size() { return N; }

        raw_type raw;
        T data[N];

        template <class U> static __device__
        typename std::enable_if<std::is_const<U>::value, const vector_type*>
        ::type get_pointer(csl::DevicePtr<U> ptr) {
            return reinterpret_cast<const vector_type*>(ptr.get());
        }

        template <class U> static __device__
        typename std::enable_if<!std::is_const<U>::value, vector_type*>
        ::type get_pointer(csl::DevicePtr<U> ptr) {
            return reinterpret_cast<vector_type*>(ptr.get());
        }
    }",5,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.vector_type,,false,56,vector_type,2
382301,TYPE_DECL,T,,,using value_type = T;,9,src\cuda\vector_traits.hpp,value_type,,false,57,value_type,1
382302,TYPE_DECL,ANY,,,using raw_type = typename detail::raw_type<N * sizeof(T) * 8>::type;,9,src\cuda\vector_traits.hpp,raw_type,,false,58,raw_type,2
382330,TYPE_DECL,"cv.dnn.cuda4dnn.csl.device.get_vector_type<T,size_type>",,,"struct get_vector_type {
        typedef vector_type<T, N> type;
    }",5,src\cuda\vector_traits.hpp,cv.dnn.cuda4dnn.csl.device.get_vector_type,,false,111,get_vector_type,9
382331,TYPE_DECL,ANY,,,"typedef vector_type<T, N> type;",35,src\cuda\vector_traits.hpp,type,,false,112,type,1
382332,TYPE_DECL,ANY,,,"using get_vector_type_t = typename get_vector_type<T, N>::type;",5,src\cuda\vector_traits.hpp,get_vector_type_t,,false,116,get_vector_type_t,10
382351,TYPE_DECL,,src\darknet\darknet_importer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\darknet\darknet_importer.cpp,src\darknet\darknet_importer.cpp:<global>,,false,1,<global>,9
382358,TYPE_DECL,,,,"class DarknetImporter
{
    FPDenormalsIgnoreHintScope fp_denormals_ignore_scope;

    darknet::NetParameter net;

public:

    DarknetImporter() {}

    DarknetImporter(std::istream &cfgStream, std::istream &darknetModelStream)
    {
        CV_TRACE_FUNCTION();

        ReadNetParamsFromCfgStreamOrDie(cfgStream, &net);
        ReadNetParamsFromBinaryStreamOrDie(darknetModelStream, &net);
    }

    DarknetImporter(std::istream &cfgStream)
    {
        CV_TRACE_FUNCTION();

        ReadNetParamsFromCfgStreamOrDie(cfgStream, &net);
    }

    struct BlobNote
    {
        BlobNote(const std::string &_name, int _layerId, int _outNum) :
            name(_name), layerId(_layerId), outNum(_outNum) {}

        std::string name;
        int layerId, outNum;
    };

    std::vector<BlobNote> addedBlobs;
    std::map<String, int> layerCounter;

    void populateNet(Net dstNet)
    {
        CV_TRACE_FUNCTION();

        int layersSize = net.layer_size();
        layerCounter.clear();
     ...",1,src\darknet\darknet_importer.cpp,cv.dnn.anonymous_namespace_1.DarknetImporter,,false,63,DarknetImporter,1
382390,TYPE_DECL,,,,"struct BlobNote
    {
        BlobNote(const std::string &_name, int _layerId, int _outNum) :
            name(_name), layerId(_layerId), outNum(_outNum) {}

        std::string name;
        int layerId, outNum;
    }",5,src\darknet\darknet_importer.cpp,cv.dnn.anonymous_namespace_5.DarknetImporter.BlobNote,,false,88,BlobNote,6
382870,TYPE_DECL,,,,"struct BufferStream : public std::streambuf
{
    BufferStream(const char* s, std::size_t n)
    {
        char* ptr = const_cast<char*>(s);
        setg(ptr, ptr, ptr + n);
    }
}",1,src\darknet\darknet_importer.cpp,cv.dnn.BufferStream,std.streambuf,false,225,BufferStream,4
382982,TYPE_DECL,,src\darknet\darknet_io.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\darknet\darknet_io.cpp,src\darknet\darknet_io.cpp:<global>,,false,1,<global>,7
383025,TYPE_DECL,,,,"class setLayersParams {

                NetParameter *net;
                int layer_id;
                std::string last_layer;
                std::vector<std::string> fused_layer_names;

            public:
                setLayersParams(NetParameter *_net) :
                    net(_net), layer_id(0), last_layer(kFirstLayerName)
                {}

                void setLayerBlobs(int i, std::vector<cv::Mat> blobs)
                {
                    cv::dnn::LayerParams &params = net->layers[i].layerParams;
                    params.blobs = blobs;
                }

                void setBatchNorm()
                {
                    cv::dnn::LayerParams bn_param;

                    bn_param.name = ""BatchNorm-name"";
                    bn_param.type = ""BatchNorm"";
                    bn_param.set<bool>(""has_weight"", true);
                    bn_param.set<bool>(""has_bias"", true);
                    bn_param.set<float>(""eps"", 1E-6);	// .000001f in Darknet Yolo

  ...",13,src\darknet\darknet_io.cpp,cv.dnn.darknet.setLayersParams,,false,95,setLayersParams,4
385598,TYPE_DECL,ANY,,,"typedef std::map<int, std::map<std::string, std::string> >::iterator it_type;",86,src\darknet\darknet_io.cpp,it_type,,false,738,it_type,24
386965,TYPE_DECL,ANY,,,"typedef std::map<int, std::map<std::string, std::string> >::iterator it_type;",86,src\darknet\darknet_io.cpp,it_type,,false,1002,it_type,23
387421,TYPE_DECL,,src\darknet\darknet_io.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\darknet\darknet_io.hpp,src\darknet\darknet_io.hpp:<global>,,false,1,<global>,2
387427,TYPE_DECL,,,,"class LayerParameter {
                std::string layer_name, layer_type;
                std::vector<std::string> bottom_indexes;
                cv::dnn::LayerParams layerParams;
            public:
                friend class setLayersParams;
                cv::dnn::LayerParams getLayerParams() const { return layerParams; }
                std::string name() const { return layer_name; }
                std::string type() const { return layer_type; }
                int bottom_size() const { return bottom_indexes.size(); }
                std::string bottom(const int index) const { return bottom_indexes.at(index); }
                int top_size() const { return 1; }
                std::string top(const int index) const { return layer_name; }
            }",13,src\darknet\darknet_io.hpp,cv.dnn.darknet.LayerParameter,,false,78,LayerParameter,1
387432,TYPE_DECL,,,,friend class setLayersParams,17,src\darknet\darknet_io.hpp,cv.dnn.darknet.LayerParameter.setLayersParams,,false,83,setLayersParams,5
387484,TYPE_DECL,,,,"class NetParameter {
            public:
                int width, height, channels;
                std::vector<LayerParameter> layers;
                std::vector<int> out_channels_vec;

                std::map<int, std::map<std::string, std::string> > layers_cfg;
                std::map<std::string, std::string> net_cfg;

                NetParameter() : width(0), height(0), channels(0) {}

                int layer_size() const { return layers.size(); }

                int input_size() const { return 1; }
                std::string input(const int index) const { return ""data""; }
                LayerParameter layer(const int index) const { return layers.at(index); }
            }",13,src\darknet\darknet_io.hpp,cv.dnn.darknet.NetParameter,,false,93,NetParameter,2
387553,TYPE_DECL,,src\debug_utils.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\debug_utils.cpp,src\debug_utils.cpp:<global>,,false,1,<global>,6
387733,TYPE_DECL,,src\dnn.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\dnn.cpp,src\dnn.cpp:<global>,,false,1,<global>,2
387744,TYPE_DECL,,src\dnn_common.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\dnn_common.hpp,src\dnn_common.hpp:<global>,,false,1,<global>,4
387785,TYPE_DECL,ANY,,,typedef std::vector<MatShape> ShapesVec;,31,src\dnn_common.hpp,ShapesVec,,false,48,ShapesVec,1
387786,TYPE_DECL,,,,"struct LayerShapes
{
    ShapesVec in, out, internal;
    // No guarantees that layer which support in-place computations
    // will be computed in-place (input.data_ptr == output.data_ptr).
    // If layer said that it could work in-place and layers after it
    // no longer use input blob, we'll set output = input.
    bool supportInPlace;
    LayerShapes() {supportInPlace = false;}
}",1,src\dnn_common.hpp,cv.dnn.detail.LayerShapes,,false,50,LayerShapes,2
387798,TYPE_DECL,,,,"class NotImplemented : public Layer
{
public:
    static Ptr<Layer> create(const LayerParams &params);

    static void Register();
    static void unRegister();
}",1,src\dnn_common.hpp,cv.dnn.detail.NotImplemented,Layer,false,64,NotImplemented,3
387871,TYPE_DECL,,,,"class LayerHandler
{
public:
    void addMissing(const std::string& name, const std::string& type);
    bool contains(const std::string& type) const;
    void printMissing() const;

protected:
    LayerParams getNotImplementedParams(const std::string& name, const std::string& op);

private:
    std::unordered_map<std::string, std::unordered_set<std::string>> layers;
}",1,src\dnn_common.hpp,cv.dnn.detail.LayerHandler,,false,96,LayerHandler,6
387894,TYPE_DECL,,,,"struct NetImplBase
{
    const int networkId;  // network global identifier
    mutable int networkDumpCounter;  // dump counter
    int dumpLevel;  // level of information dumps (initialized through OPENCV_DNN_NETWORK_DUMP parameter)

    NetImplBase();

    std::string getDumpFileNameBase() const;
}",1,src\dnn_common.hpp,cv.dnn.detail.NetImplBase,,false,110,NetImplBase,7
388078,TYPE_DECL,,,,"class DnnNetAccessor
{
public:
    static inline Ptr<Net::Impl>& getImplPtrRef(Net& net)
    {
        return net.impl;
    }
}",1,src\dnn_common.hpp,cv.dnn.accessor.DnnNetAccessor,,false,177,DnnNetAccessor,1
388096,TYPE_DECL,,src\dnn_params.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\dnn_params.cpp,src\dnn_params.cpp:<global>,,false,1,<global>,4
388201,TYPE_DECL,,src\dnn_read.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\dnn_read.cpp,src\dnn_read.cpp:<global>,,false,1,<global>,2
388643,TYPE_DECL,,src\dnn_utils.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\dnn_utils.cpp,src\dnn_utils.cpp:<global>,,false,1,<global>,4
390835,TYPE_DECL,,src\factory.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\factory.hpp,src\factory.hpp:<global>,,false,1,<global>,2
390840,TYPE_DECL,,,,"class IDNNBackendFactory
{
public:
    virtual ~IDNNBackendFactory() {}
    virtual std::shared_ptr<cv::dnn_backend::NetworkBackend> createNetworkBackend() const = 0;
}",1,src\factory.hpp,cv.dnn_backend.IDNNBackendFactory,,false,12,IDNNBackendFactory,1
390871,TYPE_DECL,,src\graph_simplifier.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\graph_simplifier.cpp,src\graph_simplifier.cpp:<global>,,false,1,<global>,4
392040,TYPE_DECL,,src\graph_simplifier.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\graph_simplifier.hpp,src\graph_simplifier.hpp:<global>,,false,1,<global>,3
392045,TYPE_DECL,,,,"class ImportNodeWrapper
{
public:
    virtual ~ImportNodeWrapper() {}

    virtual int getNumInputs() const = 0;

    virtual std::string getInputName(int idx) const = 0;

    virtual std::string getType() const = 0;

    virtual void setType(const std::string& type) = 0;

    virtual void setInputNames(const std::vector<std::string>& inputs) = 0;
}",1,src\graph_simplifier.hpp,cv.dnn.ImportNodeWrapper,,false,17,ImportNodeWrapper,1
392073,TYPE_DECL,,,,"class ImportGraphWrapper
{
public:
    virtual ~ImportGraphWrapper() {}

    virtual Ptr<ImportNodeWrapper> getNode(int idx) const = 0;

    virtual int getNumNodes() const = 0;

    virtual int getNumOutputs(int nodeId) const = 0;

    virtual std::string getOutputName(int nodeId, int outId) const = 0;

    virtual void removeNode(int idx) = 0;

    virtual bool isCommutativeOp(const std::string& type) const = 0;
}",1,src\graph_simplifier.hpp,cv.dnn.ImportGraphWrapper,,false,33,ImportGraphWrapper,2
392108,TYPE_DECL,,,,"class Subgraph  // Interface to match and replace subgraphs.
{
public:
    virtual ~Subgraph();

    // Add a node to be matched in the origin graph. Specify ids of nodes that
    // are expected to be inputs. Returns id of a newly added node.
    // TODO: Replace inputs to std::vector<int> in C++11
    int addNodeToMatch(const std::string& op, int input_0 = -1, int input_1 = -1,
                       int input_2 = -1, int input_3 = -1);

    int addNodeToMatch(const std::string& op, const std::vector<int>& inputs_);

    // Specify resulting node. All the matched nodes in subgraph excluding
    // input nodes will be fused into this single node.
    // TODO: Replace inputs to std::vector<int> in C++11
    void setFusedNode(const std::string& op, int input_0 = -1, int input_1 = -1,
                      int input_2 = -1, int input_3 = -1, int input_4 = -1,
                      int input_5 = -1);

    void setFusedNode(const std::string& op, const std::vector<int>& inputs_);

    s...",1,src\graph_simplifier.hpp,cv.dnn.Subgraph,,false,51,Subgraph,3
392190,TYPE_DECL,,src\halide_scheduler.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\halide_scheduler.cpp,src\halide_scheduler.cpp:<global>,,false,1,<global>,4
392239,TYPE_DECL,,src\halide_scheduler.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\halide_scheduler.hpp,src\halide_scheduler.hpp:<global>,,false,1,<global>,2
392244,TYPE_DECL,,,,"class HalideScheduler
{
public:
    HalideScheduler(const std::string& configFile);

    ~HalideScheduler();

    // Returns true if pipeline found in scheduling file.
    // If more than one function, returns true if the top function scheduled.
    // Other functions are optional to scheduling.
    bool process(Ptr<BackendNode>& node);

private:
    FileStorage fs;
}",1,src\halide_scheduler.hpp,cv.dnn.HalideScheduler,,false,18,HalideScheduler,1
392280,TYPE_DECL,,src\ie_ngraph.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ie_ngraph.cpp,src\ie_ngraph.cpp:<global>,,false,1,<global>,10
392291,TYPE_DECL,,src\ie_ngraph.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ie_ngraph.hpp,src\ie_ngraph.hpp:<global>,,false,1,<global>,3
392304,TYPE_DECL,,src\init.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\init.cpp,src\init.cpp:<global>,,false,1,<global>,4
392779,TYPE_DECL,,src\int8layers\batch_norm_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\batch_norm_layer.cpp,src\int8layers\batch_norm_layer.cpp:<global>,,false,1,<global>,6
392818,TYPE_DECL,,src\int8layers\convolution_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\convolution_layer.cpp,src\int8layers\convolution_layer.cpp:<global>,,false,1,<global>,10
392823,TYPE_DECL,,,,"class BaseConvolutionLayerInt8Impl : public ConvolutionLayerInt8
{
public:
    BaseConvolutionLayerInt8Impl(const LayerParams &params)
    {
        setParamsFrom(params);
        getConvolutionKernelParams(params, kernel_size, pads_begin, pads_end, strides, dilations, padMode, adjust_pads, useWinograd);

        numOutput = params.get<int>(""num_output"");
        int ngroups = params.get<int>(""group"", 1);
        CV_Assert(numOutput % ngroups == 0);

        input_sc = params.get<float>(""input_scale"");
        input_zp = params.get<int>(""input_zeropoint"");
        output_zp = params.get<int>(""zeropoints"");
        output_sc = params.get<float>(""scales"");
        per_channel = params.get<bool>(""per_channel"", true);

        if (kernel_size.size() == 2) {
            kernel = Size(kernel_size[1], kernel_size[0]);
            stride = Size(strides[1], strides[0]);
            for (int i = 0; i < pads_begin.size(); i++) {
                if (pads_begin[i] != pads_end[i])
               ...",1,src\int8layers\convolution_layer.cpp,cv.dnn.BaseConvolutionLayerInt8Impl,ConvolutionLayerInt8,false,39,BaseConvolutionLayerInt8Impl,1
393105,TYPE_DECL,,src\int8layers\elementwise_layers.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\elementwise_layers.cpp,src\int8layers\elementwise_layers.cpp:<global>,,false,1,<global>,7
393136,TYPE_DECL,,src\int8layers\eltwise_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\eltwise_layer.cpp,src\int8layers\eltwise_layer.cpp:<global>,,false,1,<global>,6
393167,TYPE_DECL,,src\int8layers\fully_connected_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\fully_connected_layer.cpp,src\int8layers\fully_connected_layer.cpp:<global>,,false,1,<global>,6
393198,TYPE_DECL,,src\int8layers\layers_common.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\layers_common.hpp,src\int8layers\layers_common.hpp:<global>,,false,1,<global>,6
393251,TYPE_DECL,,src\int8layers\layers_common.simd.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\layers_common.simd.hpp,src\int8layers\layers_common.simd.hpp:<global>,,false,1,<global>,2
393330,TYPE_DECL,,src\int8layers\pooling_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\pooling_layer.cpp,src\int8layers\pooling_layer.cpp:<global>,,false,1,<global>,9
393359,TYPE_DECL,,src\int8layers\quantization_utils.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\quantization_utils.cpp,src\int8layers\quantization_utils.cpp:<global>,,false,1,<global>,5
393638,TYPE_DECL,,src\int8layers\scale_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\scale_layer.cpp,src\int8layers\scale_layer.cpp:<global>,,false,1,<global>,6
393705,TYPE_DECL,,src\int8layers\softmax_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\int8layers\softmax_layer.cpp,src\int8layers\softmax_layer.cpp:<global>,,false,1,<global>,7
393728,TYPE_DECL,,src\layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layer.cpp,src\layer.cpp:<global>,,false,1,<global>,2
394485,TYPE_DECL,,src\layer_factory.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layer_factory.cpp,src\layer_factory.cpp:<global>,,false,1,<global>,3
394770,TYPE_DECL,,src\layer_internals.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layer_internals.hpp,src\layer_internals.hpp:<global>,,false,1,<global>,1
394777,TYPE_DECL,,,,"struct LayerPin
{
    int lid;
    int oid;

    LayerPin(int layerId = -1, int outputId = -1)
        : lid(layerId)
        , oid(outputId)
    {}

    bool valid() const
    {
        return (lid >= 0 && oid >= 0);
    }

    bool equal(const LayerPin& r) const
    {
        return (lid == r.lid && oid == r.oid);
    }

    bool operator<(const LayerPin& r) const
    {
        return lid < r.lid || (lid == r.lid && oid < r.oid);
    }

    bool operator==(const LayerPin& r) const
    {
        return lid == r.lid && oid == r.oid;
    }
}",1,src\layer_internals.hpp,cv.dnn.detail.LayerPin,,false,12,LayerPin,1
394855,TYPE_DECL,,,,"struct LayerData
{
    LayerData()
        : id(-1)
        , dtype(CV_32F)
        , skip(false)
        , flag(0)
    {}
    LayerData(int _id, const String& _name, const String& _type, const int& _dtype, LayerParams& _params)
        : id(_id)
        , name(_name)
        , type(_type)
        , dtype(_dtype)
        , params(_params)
        , skip(false)
        , flag(0)
    {
        CV_TRACE_FUNCTION();

        // add logging info
        params.name = name;
        params.type = type;
    }

    int id;
    String name;
    String type;
    int dtype;  // Datatype of output blobs.
    LayerParams params;

    std::vector<LayerPin> inputBlobsId;
    std::set<int> inputLayersId;
    std::set<int> requiredOutputs;
    std::vector<LayerPin> consumers;
    std::vector<Ptr<BackendWrapper>> outputBlobsWrappers;
    std::vector<Ptr<BackendWrapper>> inputBlobsWrappers;
    std::vector<Ptr<BackendWrapper>> internalBlobsWrappers;

#ifdef HAVE_CUDA
    /* output ids which must be tra...",1,src\layer_internals.hpp,cv.dnn.detail.LayerData,,false,43,LayerData,2
394948,TYPE_DECL,,,,"struct DataLayer : public Layer
{
    DataLayer()
        : Layer()
    {
        skip = false;
    }

    virtual bool supportBackend(int backendId) CV_OVERRIDE
    {
        return backendId == DNN_BACKEND_OPENCV;
    }

    void forward(InputArrayOfArrays inputs_arr, OutputArrayOfArrays outputs_arr, OutputArrayOfArrays internals_arr) CV_OVERRIDE
    {
        CV_TRACE_FUNCTION();
        CV_TRACE_ARG_VALUE(name, ""name"", name.c_str());

        // FIXIT: add wrapper without exception suppression
        CV_OCL_RUN(IS_DNN_OPENCL_TARGET(preferableTarget),
                forward_ocl(inputs_arr, outputs_arr, internals_arr))

        bool isFP16 = outputs_arr.depth() == CV_16S;

        std::vector<Mat> outputs, internals;
        outputs_arr.getMatVector(outputs);
        internals_arr.getMatVector(internals);

        for (int i = 0; i < inputsData.size(); ++i)
        {
            double scale = scaleFactors[i];
            Scalar& mean = means[i];

            CV_Assert(mean == S...",1,src\layer_internals.hpp,cv.dnn.detail.DataLayer,Layer,false,127,DataLayer,3
395104,TYPE_DECL,,src\layers\accum_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\accum_layer.cpp,src\layers\accum_layer.cpp:<global>,,false,1,<global>,3
395129,TYPE_DECL,,src\layers\arg_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\arg_layer.cpp,src\layers\arg_layer.cpp:<global>,,false,1,<global>,3
395158,TYPE_DECL,,src\layers\attention_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\attention_layer.cpp,src\layers\attention_layer.cpp:<global>,,false,1,<global>,5
395262,TYPE_DECL,,src\layers\batch_norm_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\batch_norm_layer.cpp,src\layers\batch_norm_layer.cpp:<global>,,false,1,<global>,12
395295,TYPE_DECL,,src\layers\blank_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\blank_layer.cpp,src\layers\blank_layer.cpp:<global>,,false,1,<global>,7
395391,TYPE_DECL,,src\layers\concat_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\concat_layer.cpp,src\layers\concat_layer.cpp:<global>,,false,1,<global>,13
395432,TYPE_DECL,,src\layers\const_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\const_layer.cpp,src\layers\const_layer.cpp:<global>,,false,1,<global>,11
395491,TYPE_DECL,,src\layers\convolution_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\convolution_layer.cpp,src\layers\convolution_layer.cpp:<global>,,false,1,<global>,20
395496,TYPE_DECL,,,,"class BaseConvolutionLayerImpl : public ConvolutionLayer
{
public:
    bool fusedWeights, fusedBias;
    std::vector<double> weightsMultipliers;
#ifdef HAVE_WEBNN
    int groups;
#endif
    BaseConvolutionLayerImpl(const LayerParams &params)
    {
        setParamsFrom(params);
        getConvolutionKernelParams(params, kernel_size, pads_begin, pads_end, strides, dilations,
                                   padMode, adjust_pads, useWinograd);

        numOutput = params.get<int>(""num_output"");
        int ngroups = params.get<int>(""group"", 1);
#ifdef HAVE_WEBNN
        groups = ngroups;
#endif
        CV_Assert(numOutput % ngroups == 0);

        if (kernel_size.size() == 2) {
            kernel = Size(kernel_size[1], kernel_size[0]);
            stride = Size(strides[1], strides[0]);
            pad = Size(pads_begin[1], pads_begin[0]);
            dilation = Size(dilations[1], dilations[0]);

            adjustPad.height = adjust_pads[0];
            adjustPad.width = adjust_pads...",1,src\layers\convolution_layer.cpp,cv.dnn.BaseConvolutionLayerImpl,ConvolutionLayer,false,79,BaseConvolutionLayerImpl,1
395751,TYPE_DECL,,src\layers\correlation_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\correlation_layer.cpp,src\layers\correlation_layer.cpp:<global>,,false,1,<global>,3
395774,TYPE_DECL,,src\layers\cpu_kernels\conv_block.simd.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\conv_block.simd.hpp,src\layers\cpu_kernels\conv_block.simd.hpp:<global>,,false,1,<global>,2
395957,TYPE_DECL,,src\layers\cpu_kernels\conv_depthwise.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\conv_depthwise.cpp,src\layers\cpu_kernels\conv_depthwise.cpp:<global>,,false,1,<global>,5
397349,TYPE_DECL,,src\layers\cpu_kernels\conv_depthwise.simd.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\conv_depthwise.simd.hpp,src\layers\cpu_kernels\conv_depthwise.simd.hpp:<global>,,false,1,<global>,2
397388,TYPE_DECL,,src\layers\cpu_kernels\conv_winograd_f63.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\conv_winograd_f63.cpp,src\layers\cpu_kernels\conv_winograd_f63.cpp:<global>,,false,1,<global>,5
397416,TYPE_DECL,,src\layers\cpu_kernels\conv_winograd_f63.neon.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\conv_winograd_f63.neon.cpp,src\layers\cpu_kernels\conv_winograd_f63.neon.cpp:<global>,,false,1,<global>,4
397426,TYPE_DECL,,src\layers\cpu_kernels\conv_winograd_f63.simd.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\conv_winograd_f63.simd.hpp,src\layers\cpu_kernels\conv_winograd_f63.simd.hpp:<global>,,false,1,<global>,2
397551,TYPE_DECL,,src\layers\cpu_kernels\convolution.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\convolution.cpp,src\layers\cpu_kernels\convolution.cpp:<global>,,false,1,<global>,6
399429,TYPE_DECL,,,,enum { VEC_ALIGN = 32},1,src\layers\cpu_kernels\convolution.cpp,cv.dnn.anonymous_enum_0,,false,20,anonymous_enum_0,1
404390,TYPE_DECL,,src\layers\cpu_kernels\convolution.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\convolution.hpp,src\layers\cpu_kernels\convolution.hpp:<global>,,false,1,<global>,2
404393,TYPE_DECL,,,,"enum {
    CONV_WINO_STEP=6,
    CONV_WINO_KSIZE=3,
    CONV_WINO_SIZE=CONV_WINO_STEP+CONV_WINO_KSIZE - 1, // 8
    CONV_WINO_AREA=CONV_WINO_SIZE*CONV_WINO_SIZE,
}",1,src\layers\cpu_kernels\convolution.hpp,anonymous_enum_0,,false,35,anonymous_enum_0,1
404420,TYPE_DECL,,,,"enum { CONV_TYPE_GENERIC=0, CONV_TYPE_DEPTHWISE=1, CONV_TYPE_WINOGRAD3X3=2, CONV_TYPE_DEPTHWISE_REMAIN=3 }",1,src\layers\cpu_kernels\convolution.hpp,anonymous_enum_1,,false,43,anonymous_enum_1,2
404441,TYPE_DECL,,,,"enum { CONV_1D = 0, CONV_2D = 1, CONV_3D = 2 }",1,src\layers\cpu_kernels\convolution.hpp,anonymous_enum_2,,false,44,anonymous_enum_2,3
404460,TYPE_DECL,,,,"struct FastConv
{
    int ngroups;
    int K, C, Hk, Wk, Dk;
    int stride_h, stride_w, stride_d;
    int dilation_h, dilation_w, dilation_d;
    int pad_top, pad_bottom, pad_left, pad_right, pad_front, pad_behind;

    std::vector<float> weightsBuf;     // For generic Conv 2D
    std::vector<float> weightsWinoBuf; // For Winograd F(6x6, 3x3).
    std::vector<float> biasBuf;
    float* getWeights();
    float* getWeightsWino();

    std::vector<float16_t> weightsBuf_FP16;
    std::vector<float16_t> weightsWinoBuf_FP16;
    float16_t* getWeightsFP16();
    float16_t* getWeightsWinoFP16();

    int conv_type;
    int conv_dim;  // Flag for conv1d, conv2d, or conv3d.
    bool useFP16 = false; // Only ARMv8 is supported.
#if CV_SIMD128
    bool useSIMD128 = true;
#else
    bool useSIMD128 = false;
#endif

#if CV_NEON
    bool useNEON = checkHardwareSupport(CPU_NEON);
#else
    bool useNEON = false;
#endif

    bool useAVX   = checkHardwareSupport(CPU_AVX);
    bool useAVX2  = checkHard...",1,src\layers\cpu_kernels\convolution.hpp,cv.dnn.FastConv,,false,51,FastConv,1
404738,TYPE_DECL,,src\layers\cpu_kernels\fast_gemm.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\fast_gemm.cpp,src\layers\cpu_kernels\fast_gemm.cpp:<global>,,false,1,<global>,6
405696,TYPE_DECL,,src\layers\cpu_kernels\fast_gemm.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\fast_gemm.hpp,src\layers\cpu_kernels\fast_gemm.hpp:<global>,,false,1,<global>,3
405701,TYPE_DECL,,,,"struct FastGemmOpt {
    bool use_avx;
    bool use_avx2;
    bool use_neon;
    bool use_lasx;
    bool multi_thread;

    FastGemmOpt() {
        use_avx = false;
        use_avx2 = false;
        use_neon = false;
        use_lasx = false;
        multi_thread = false;
    }

    void init() {
        use_avx = checkHardwareSupport(CPU_AVX);
        use_avx2 = checkHardwareSupport(CPU_AVX2);
        use_neon = checkHardwareSupport(CPU_NEON);
        use_lasx = checkHardwareSupport(CPU_LASX);
        multi_thread = true;
    }

    bool all() {
        return use_avx || use_avx2 || use_neon || use_lasx;
    }
}",1,src\layers\cpu_kernels\fast_gemm.hpp,cv.dnn.FastGemmOpt,,false,20,FastGemmOpt,1
405761,TYPE_DECL,,,,"struct MatMulHelper {
    std::vector<size_t> A_offsets;
    std::vector<size_t> B_offsets;
    std::vector<size_t> packed_B_offsets;
    std::vector<size_t> C_offsets;
    std::vector<size_t> A_rows;
    std::vector<size_t> B_rows;
    std::vector<size_t> C_rows;
    size_t batch;

    int lda0, lda1;
    int ldb0, ldb1;
    int ldc;

    int M, N, K;

    MatMulHelper() {
        A_offsets = {0};
        B_offsets = {0};
        packed_B_offsets = {0};
        C_offsets = {0};
        A_rows = {0};
        B_rows = {0};
        C_rows = {0};

        batch = 0;
    }

    bool empty() const {
        return batch == 0;
    }

    void compute(bool trans_a, bool trans_b, MatShape A_shape, MatShape B_shape, MatShape C_shape) {
        auto A_ndims = A_shape.size(), B_ndims = B_shape.size(), C_ndims =  C_shape.size();
        int ma = A_shape[A_ndims - 2], na = A_shape.back();
        int mb = B_shape[B_ndims - 2], nb = B_shape.back();
        lda0 = na, lda1 = 1;
        ldb0 = nb, ...",1,src\layers\cpu_kernels\fast_gemm.hpp,cv.dnn.MatMulHelper,,false,48,MatMulHelper,2
406669,TYPE_DECL,,src\layers\cpu_kernels\fast_gemm_kernels.default.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\fast_gemm_kernels.default.hpp,src\layers\cpu_kernels\fast_gemm_kernels.default.hpp:<global>,,false,1,<global>,3
409711,TYPE_DECL,,src\layers\cpu_kernels\fast_gemm_kernels.simd.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\fast_gemm_kernels.simd.hpp,src\layers\cpu_kernels\fast_gemm_kernels.simd.hpp:<global>,,false,1,<global>,3
411889,TYPE_DECL,,src\layers\cpu_kernels\fast_norm.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\fast_norm.cpp,src\layers\cpu_kernels\fast_norm.cpp:<global>,,false,1,<global>,3
412684,TYPE_DECL,,src\layers\cpu_kernels\fast_norm.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\fast_norm.hpp,src\layers\cpu_kernels\fast_norm.hpp:<global>,,false,1,<global>,2
412901,TYPE_DECL,,src\layers\cpu_kernels\softmax.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\softmax.cpp,src\layers\cpu_kernels\softmax.cpp:<global>,,false,1,<global>,3
413063,TYPE_DECL,,src\layers\cpu_kernels\softmax.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cpu_kernels\softmax.hpp,src\layers\cpu_kernels\softmax.hpp:<global>,,false,1,<global>,3
413101,TYPE_DECL,,src\layers\crop_and_resize_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\crop_and_resize_layer.cpp,src\layers\crop_and_resize_layer.cpp:<global>,,false,1,<global>,5
413128,TYPE_DECL,,src\layers\cumsum_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\cumsum_layer.cpp,src\layers\cumsum_layer.cpp:<global>,,false,1,<global>,4
413173,TYPE_DECL,,src\layers\detection_output_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\detection_output_layer.cpp,src\layers\detection_output_layer.cpp:<global>,,false,1,<global>,13
413179,TYPE_DECL,,,,"class NormalizedBBox
{
public:
    float xmin, ymin, xmax, ymax;

    NormalizedBBox()
        : xmin(0), ymin(0), xmax(0), ymax(0), has_size_(false), size_(0) {}

    float size() const { return size_; }

    bool has_size() const { return has_size_; }

    void set_size(float value) { size_ = value; has_size_ = true; }

    void clear_size() { size_ = 0; has_size_ = false; }

private:
    bool has_size_;
    float size_;
}",1,src\layers\detection_output_layer.cpp,cv.dnn.util.NormalizedBBox,,false,78,NormalizedBBox,1
413323,TYPE_DECL,,src\layers\einsum_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\einsum_layer.cpp,src\layers\einsum_layer.cpp:<global>,,false,1,<global>,6
417149,TYPE_DECL,,src\layers\elementwise_layers.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\elementwise_layers.cpp,src\layers\elementwise_layers.cpp:<global>,,false,1,<global>,17
417187,TYPE_DECL,cv.dnn.ElementWiseLayer<Func>,,,"class ElementWiseLayer : public Func::Layer
{
public:
    class PBody : public cv::ParallelLoopBody
    {
    public:
        const Func* func_;
        const Mat* src_;
        Mat* dst_;
        int nstripes_;

        PBody(const Func &func, const Mat &src, Mat& dst, int nstripes)
        {
            func_ = &func;
            src_ = &src;
            dst_ = &dst;
            nstripes_ = nstripes;
        }

        void operator()(const Range &r) const CV_OVERRIDE
        {
            int nstripes = nstripes_, nsamples = 1, outCn = 1;
            size_t planeSize = 1;

            if (src_->dims > 1)
            {
                nsamples = src_->size[0];
                outCn = src_->size[1];
            }
            else
                outCn = src_->size[0];

            for (int i = 2; i < src_->dims; ++i)
                planeSize *= src_->size[i];

            size_t stripeSize = (planeSize + nstripes - 1)/nstripes;
            size_t stripeStart = r.start*stripeSize;
...",1,src\layers\elementwise_layers.cpp,cv.dnn.ElementWiseLayer,Func.Layer,false,98,ElementWiseLayer,1
417188,TYPE_DECL,,,,"class PBody : public cv::ParallelLoopBody
    {
    public:
        const Func* func_;
        const Mat* src_;
        Mat* dst_;
        int nstripes_;

        PBody(const Func &func, const Mat &src, Mat& dst, int nstripes)
        {
            func_ = &func;
            src_ = &src;
            dst_ = &dst;
            nstripes_ = nstripes;
        }

        void operator()(const Range &r) const CV_OVERRIDE
        {
            int nstripes = nstripes_, nsamples = 1, outCn = 1;
            size_t planeSize = 1;

            if (src_->dims > 1)
            {
                nsamples = src_->size[0];
                outCn = src_->size[1];
            }
            else
                outCn = src_->size[0];

            for (int i = 2; i < src_->dims; ++i)
                planeSize *= src_->size[i];

            size_t stripeSize = (planeSize + nstripes - 1)/nstripes;
            size_t stripeStart = r.start*stripeSize;
            size_t stripeEnd = std::min(r.end*stripeSize, ...",5,src\layers\elementwise_layers.cpp,cv.dnn.ElementWiseLayer.PBody,cv.ParallelLoopBody,false,101,PBody,1
417324,TYPE_DECL,,,,"struct BaseFunctor
{
    void finalize() {}

    bool tryFuse(Ptr<dnn::Layer>&) { return false; }

    void getScaleShift(Mat&, Mat&) const {}

    bool tryQuantize(const std::vector<std::vector<float>>&, const std::vector<std::vector<int>>&, LayerParams&) { return false; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.BaseFunctor,,false,318,BaseFunctor,2
417351,TYPE_DECL,,,,"struct ReLUFunctor : public BaseFunctor
{
    typedef ReLULayer Layer;
    float slope;

    explicit ReLUFunctor(float slope_=1.f) : slope(slope_) {}

    bool supportBackend(int backendId, int)
    {
#ifdef HAVE_DNN_NGRAPH
        if (backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH)
            return true;
#endif
#ifdef HAVE_WEBNN
        if (backendId == DNN_BACKEND_WEBNN) {
            // TODO: support PRELU
            if (slope != 0)
            {
                CV_LOG_WARNING(NULL, ""PRELU is not supported now."");
            }
            return slope == 0;
        }
#endif
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_CANN;
    }

    void apply(const float* srcptr, float* dstptr, int stripeStart, int len, size_t planeSize, int cn0, int cn1) const
    {
        CV_UNUSED(stripeStart);
        float s = slope;
        for( int cn = c...",1,src\layers\elementwise_layers.cpp,cv.dnn.ReLUFunctor,BaseFunctor,false,329,ReLUFunctor,3
417352,TYPE_DECL,ANY,,,typedef ReLULayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,331,Layer,1
417650,TYPE_DECL,,,,"struct ReLU6Functor : public BaseFunctor
{
    typedef ReLU6Layer Layer;
    float minValue, maxValue;

    ReLU6Functor(float minValue_ = 0.0f, float maxValue_ = 6.0f)
        : minValue(minValue_), maxValue(maxValue_)
    {
        CV_Assert(minValue <= maxValue);
    }

    bool supportBackend(int backendId, int)
    {
#ifdef HAVE_INF_ENGINE
        if (backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH)
            return true;
#endif
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_WEBNN ||
               backendId == DNN_BACKEND_CANN;
    }

    void apply(const float* srcptr, float* dstptr, int stripeStart, int len, size_t planeSize, int cn0, int cn1) const
    {
        CV_UNUSED(stripeStart);
        for( int cn = cn0; cn < cn1; cn++, srcptr += planeSize, dstptr += planeSize )
        {
            int i = 0;
#if CV_SIMD128
            v_f...",1,src\layers\elementwise_layers.cpp,cv.dnn.ReLU6Functor,BaseFunctor,false,539,ReLU6Functor,4
417651,TYPE_DECL,ANY,,,typedef ReLU6Layer Layer;,24,src\layers\elementwise_layers.cpp,Layer,,false,541,Layer,1
417834,TYPE_DECL,cv.dnn.BaseDefaultFunctor<T>,,,"struct BaseDefaultFunctor : public BaseFunctor
{
    void apply(const float* srcptr, float* dstptr, int stripeStart, int len, size_t planeSize, int cn0, int cn1) const
    {
        CV_UNUSED(stripeStart);
        for( int cn = cn0; cn < cn1; cn++, srcptr += planeSize, dstptr += planeSize )
        {
            for( int i = 0; i < len; i++ )
            {
                float x = srcptr[i];
                dstptr[i] = static_cast<const T*>(this)->calculate(x);
            }
        }
    }

#ifdef HAVE_OPENCL
    bool applyOCL(InputArrayOfArrays inps, OutputArrayOfArrays outs, OutputArrayOfArrays internals)
    {
        std::vector<UMat> inputs;
        std::vector<UMat> outputs;

        inps.getUMatVector(inputs);
        outs.getUMatVector(outputs);
        String buildopt = oclGetTMacro(inputs[0]);

        for (size_t i = 0; i < inputs.size(); i++)
        {
            UMat& src = inputs[i];
            UMat& dst = outputs[i];

            ocl::Kernel kernel(ocl_kernel_name...",1,src\layers\elementwise_layers.cpp,cv.dnn.BaseDefaultFunctor,BaseFunctor,false,707,BaseDefaultFunctor,5
418083,TYPE_DECL,,,,"struct GeluFunctor : public BaseDefaultFunctor<GeluFunctor>
{
    typedef GeluLayer Layer;

    explicit GeluFunctor() {}

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return 0.5f * x * (1.0f + erf(x * M_SQRT1_2));
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::GeluOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 100; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.GeluFunctor,BaseDefaultFunctor<GeluFunctor>,false,816,GeluFunctor,6
418084,TYPE_DECL,ANY,,,typedef GeluLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,818,Layer,1
418146,TYPE_DECL,,,,"struct GeluApproximationFunctor : public BaseDefaultFunctor<GeluApproximationFunctor>
{
    typedef GeluApproximationLayer Layer;

    explicit GeluApproximationFunctor() {}

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV;
    }

    inline float calculate(float x) const
    {
        return 0.5f * x * (1.f + tanh(x * (GeluApproximationConstants::sqrt_2_pi +
                                           GeluApproximationConstants::coef_sqrt_2_pi * x * x)));
    }

    int64 getFLOPSPerElement() const { return 100; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.GeluApproximationFunctor,BaseDefaultFunctor<GeluApproximationFunctor>,false,851,GeluApproximationFunctor,10
418147,TYPE_DECL,ANY,,,typedef GeluApproximationLayer Layer;,36,src\layers\elementwise_layers.cpp,Layer,,false,853,Layer,1
418198,TYPE_DECL,,,,"struct TanHFunctor : public BaseDefaultFunctor<TanHFunctor>
{
    typedef TanHLayer Layer;

    bool supportBackend(int backendId, int)
    {
#ifdef HAVE_INF_ENGINE
        if (backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH)
            return true;
#endif
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        return tanh(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::TanHOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var x(""x""), y(""y""), c(""c""), n(""n"");
        top(x, y, c, n) = tanh(input);
    }
#endif  // HAVE_HALIDE

#ifdef HAVE_CANN
    Ptr<BackendNode> initCannOp(const std::string& name,
      ...",1,src\layers\elementwise_layers.cpp,cv.dnn.TanHFunctor,BaseDefaultFunctor<TanHFunctor>,false,874,TanHFunctor,13
418199,TYPE_DECL,ANY,,,typedef TanHLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,876,Layer,1
418264,TYPE_DECL,,,,"struct SwishFunctor : public BaseDefaultFunctor<SwishFunctor>
{
    typedef SwishLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        return x / (1.f + exp(-x));
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::SwishOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var x(""x""), y(""y""), c(""c""), n(""n"");
        top(x, y, c, n) = input / (1.0f + exp(-input));
    }
#endif  // HAVE_HALIDE

#ifdef HAVE_CANN
    Ptr<BackendNode> initCannOp(const std::string& name,
                       ...",1,src\layers\elementwise_layers.cpp,cv.dnn.SwishFunctor,BaseDefaultFunctor<SwishFunctor>,false,944,SwishFunctor,16
418265,TYPE_DECL,ANY,,,typedef SwishLayer Layer;,24,src\layers\elementwise_layers.cpp,Layer,,false,946,Layer,1
418339,TYPE_DECL,,,,"struct MishFunctor : public BaseDefaultFunctor<MishFunctor>
{
    typedef MishLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        // Use fast approximation introduced in https://github.com/opencv/opencv/pull/17200
        if (x >= 8.f)
        {
            return x;
        }

        float eX = exp(x);
        float n = (eX + 2.f) * eX;
        return (x * n) / (n + 2.f);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::MishOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var ...",1,src\layers\elementwise_layers.cpp,cv.dnn.MishFunctor,BaseDefaultFunctor<MishFunctor>,false,1014,MishFunctor,19
418340,TYPE_DECL,ANY,,,typedef MishLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1016,Layer,1
418434,TYPE_DECL,,,,"struct SigmoidFunctor : public BaseDefaultFunctor<SigmoidFunctor>
{
    typedef SigmoidLayer Layer;

    bool supportBackend(int backendId, int)
    {
#ifdef HAVE_INF_ENGINE
        if (backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH)
            return true;
#endif
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        float y;
        if (x >= 0)
            y = 1.f / (1.f + exp(-x));
        else {
            y = exp(x);
            y = y / (1 + y);
        }
        return y;
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::SigmoidOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var x(""x""), y(""y""), c(""c""...",1,src\layers\elementwise_layers.cpp,cv.dnn.SigmoidFunctor,BaseDefaultFunctor<SigmoidFunctor>,false,1089,SigmoidFunctor,22
418435,TYPE_DECL,ANY,,,typedef SigmoidLayer Layer;,26,src\layers\elementwise_layers.cpp,Layer,,false,1091,Layer,1
418527,TYPE_DECL,,,,"struct ELUFunctor : public BaseDefaultFunctor<ELUFunctor>
{
    typedef ELULayer Layer;
    float alpha;

    explicit ELUFunctor(float alpha_ = 1.f) : alpha(alpha_) {}

    bool supportBackend(int backendId, int)
    {
#ifdef HAVE_INF_ENGINE
        if (backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH)
            return true;
#endif
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        return x >= 0.f ? x : alpha * (exp(x) - 1.f);
    }

    inline void setKernelParams(ocl::Kernel& kernel) const
    {
        kernel.set(3, alpha);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::ELUOp>(target, stream, alpha);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Fu...",1,src\layers\elementwise_layers.cpp,cv.dnn.ELUFunctor,BaseDefaultFunctor<ELUFunctor>,false,1166,ELUFunctor,25
418528,TYPE_DECL,ANY,,,typedef ELULayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,1168,Layer,1
418619,TYPE_DECL,,,,"struct AbsValFunctor : public BaseDefaultFunctor<AbsValFunctor>
{
    typedef AbsLayer Layer;

    bool supportBackend(int backendId, int)
    {
#ifdef HAVE_INF_ENGINE
        if (backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH)
            return true;
#endif
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        return abs(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::AbsValOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var x(""x""), y(""y""), c(""c""), n(""n"");
        top(x, y, c, n) = abs(input);
    }
#endif  // HAVE_HALIDE

#ifdef HAVE_CANN
    Ptr<BackendNode> initCannOp(const std::string& name,
   ...",1,src\layers\elementwise_layers.cpp,cv.dnn.AbsValFunctor,BaseDefaultFunctor<AbsValFunctor>,false,1246,AbsValFunctor,28
418620,TYPE_DECL,ANY,,,typedef AbsLayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,1248,Layer,1
418685,TYPE_DECL,,,,"struct BNLLFunctor : public BaseDefaultFunctor<BNLLFunctor>
{
    typedef BNLLLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        // https://github.com/BVLC/caffe/blame/1.0/src/caffe/layers/bnll_layer.cpp#L17
        return x > 0 ? x + log(1.f + exp(-x)) : log(1.f + exp(x));
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::BNLLOp>(target, stream);
    }
#endif

#ifdef HAVE_CANN
    Ptr<BackendNode> initCannOp(const std::string& name,
                                const std::vector<Ptr<BackendWrapper> > &inputs,
                                const std::vector<Ptr<BackendNode> >& nodes)
    {
        auto x = inputs[0].dynamicCast<Cann...",1,src\layers\elementwise_layers.cpp,cv.dnn.BNLLFunctor,BaseDefaultFunctor<BNLLFunctor>,false,1316,BNLLFunctor,31
418686,TYPE_DECL,ANY,,,typedef BNLLLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1318,Layer,1
418761,TYPE_DECL,,,,"struct CeilFunctor : public BaseDefaultFunctor<CeilFunctor>
{
    typedef CeilLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA || backendId == DNN_BACKEND_HALIDE;
    }

    inline float calculate(float x) const
    {
        return ceil(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::CeilOp>(target, stream);
    }
#endif

#ifdef HAVE_CANN
    Ptr<BackendNode> initCannOp(const std::string& name,
                                const std::vector<Ptr<BackendWrapper> > &inputs,
                                const std::vector<Ptr<BackendNode> >& nodes)
    {
        auto x = inputs[0].dynamicCast<CannBackendWrapper>();

        auto op = std::make_shared<ge::op::BNLL>(name);

        auto op_x = nodes[0].dynamicCast<CannBackendNode>()->getOp();
        op->set_input_x_by_name(*op_x, x->name.c_str());
    ...",1,src\layers\elementwise_layers.cpp,cv.dnn.CeilFunctor,BaseDefaultFunctor<CeilFunctor>,false,1377,CeilFunctor,34
418762,TYPE_DECL,ANY,,,typedef CeilLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1379,Layer,1
418818,TYPE_DECL,,,,"struct FloorFunctor : public BaseDefaultFunctor<FloorFunctor>
{
    typedef FloorLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA   ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        return floor(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::FloorOp>(target, stream);
    }
#endif

#ifdef HAVE_CANN
    Ptr<BackendNode> initCannOp(const std::string& name,
                                const std::vector<Ptr<BackendWrapper> > &inputs,
                                const std::vector<Ptr<BackendNode> >& nodes)
    {
        auto x = inputs[0].dynamicCast<CannBackendWrapper>();

        auto op = std::make_shared<ge::op::Floor>(name);

        auto op_x = nodes[0].dynamicCast<Cann...",1,src\layers\elementwise_layers.cpp,cv.dnn.FloorFunctor,BaseDefaultFunctor<FloorFunctor>,false,1433,FloorFunctor,37
418819,TYPE_DECL,ANY,,,typedef FloorLayer Layer;,24,src\layers\elementwise_layers.cpp,Layer,,false,1435,Layer,1
418879,TYPE_DECL,,,,"struct LogFunctor : public BaseDefaultFunctor<LogFunctor>
{
    typedef LogLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA || backendId == DNN_BACKEND_HALIDE;
    }

    inline float calculate(float x) const
    {
        return log(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::LogOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var x(""x""), y(""y""), c(""c""), n(""n"");
        top(x, y, c, n) = log(input);
    }
#endif  // HAVE_HALIDE

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.LogFunctor,BaseDefaultFunctor<LogFunctor>,false,1492,LogFunctor,40
418880,TYPE_DECL,ANY,,,typedef LogLayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,1494,Layer,1
418929,TYPE_DECL,,,,"struct RoundFunctor : public BaseDefaultFunctor<RoundFunctor>
{
    typedef RoundLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA || backendId == DNN_BACKEND_HALIDE;
    }

    inline float calculate(float x) const
    {
        // Rounds to even numbers in halfway cases, so 2.5 -> 2, -2.5 -> -2
        int old_rounding_direction = std::fegetround();
        std::fesetround(FE_TONEAREST);
        float y = std::nearbyint(x);
        std::fesetround(old_rounding_direction);
        return y;
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::RoundOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var x(""x""), y(""y""), c(""c""), n(""n"");
        top(x, y, c, n) = round(input);
    }
#endif  // HAVE_HALIDE

    int64 getFLOPSP...",1,src\layers\elementwise_layers.cpp,cv.dnn.RoundFunctor,BaseDefaultFunctor<RoundFunctor>,false,1527,RoundFunctor,43
418930,TYPE_DECL,ANY,,,typedef RoundLayer Layer;,24,src\layers\elementwise_layers.cpp,Layer,,false,1529,Layer,1
418999,TYPE_DECL,,,,"struct SqrtFunctor : public BaseDefaultFunctor<SqrtFunctor>
{
    typedef SqrtLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA || backendId == DNN_BACKEND_HALIDE;
    }

    inline float calculate(float x) const
    {
        return sqrt(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::SqrtOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var x(""x""), y(""y""), c(""c""), n(""n"");
        top(x, y, c, n) = sqrt(input);
    }
#endif  // HAVE_HALIDE

#ifdef HAVE_DNN_NGRAPH
    std::shared_ptr<ngraph::Node> initNgraphAPI(const ngraph::Output<ngraph::Node>& node)
    {
        return std::make_shared<ngraph::op::v0::Sqrt>(node);
    }
#endif  // HAVE_DNN_NGRAPH

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.SqrtFunctor,BaseDefaultFunctor<SqrtFunctor>,false,1567,SqrtFunctor,46
419000,TYPE_DECL,ANY,,,typedef SqrtLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1569,Layer,1
419054,TYPE_DECL,,,,"struct NotFunctor : public BaseDefaultFunctor<NotFunctor>
{
    typedef NotLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA || backendId == DNN_BACKEND_HALIDE;
    }

    inline float calculate(float x) const
    {
        return floor(1.f - x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::NotOp>(target, stream);
    }
#endif

#ifdef HAVE_HALIDE
    void attachHalide(const Halide::Expr& input, Halide::Func& top)
    {
        Halide::Var x(""x""), y(""y""), c(""c""), n(""n"");
        top(x, y, c, n) = floor(1.0f - input);
    }
#endif  // HAVE_HALIDE

    int64 getFLOPSPerElement() const { return 2; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.NotFunctor,BaseDefaultFunctor<NotFunctor>,false,1609,NotFunctor,49
419055,TYPE_DECL,ANY,,,typedef NotLayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,1611,Layer,1
419106,TYPE_DECL,,,,"struct AcosFunctor : public BaseDefaultFunctor<AcosFunctor>
{
    typedef AcosLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return acos(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::AcosOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.AcosFunctor,BaseDefaultFunctor<AcosFunctor>,false,1644,AcosFunctor,52
419107,TYPE_DECL,ANY,,,typedef AcosLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1646,Layer,1
419146,TYPE_DECL,,,,"struct AcoshFunctor : public BaseDefaultFunctor<AcoshFunctor>
{
    typedef AcoshLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return acosh(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::AcoshOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.AcoshFunctor,BaseDefaultFunctor<AcoshFunctor>,false,1671,AcoshFunctor,55
419147,TYPE_DECL,ANY,,,typedef AcoshLayer Layer;,24,src\layers\elementwise_layers.cpp,Layer,,false,1673,Layer,1
419186,TYPE_DECL,,,,"struct AsinFunctor : public BaseDefaultFunctor<AsinFunctor>
{
    typedef AsinLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return asin(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::AsinOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.AsinFunctor,BaseDefaultFunctor<AsinFunctor>,false,1698,AsinFunctor,58
419187,TYPE_DECL,ANY,,,typedef AsinLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1700,Layer,1
419226,TYPE_DECL,,,,"struct AsinhFunctor : public BaseDefaultFunctor<AsinhFunctor>
{
    typedef AsinhLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return asinh(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::AsinhOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.AsinhFunctor,BaseDefaultFunctor<AsinhFunctor>,false,1725,AsinhFunctor,61
419227,TYPE_DECL,ANY,,,typedef AsinhLayer Layer;,24,src\layers\elementwise_layers.cpp,Layer,,false,1727,Layer,1
419266,TYPE_DECL,,,,"struct AtanFunctor : public BaseDefaultFunctor<AtanFunctor>
{
    typedef AtanLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return atan(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::AtanOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.AtanFunctor,BaseDefaultFunctor<AtanFunctor>,false,1752,AtanFunctor,64
419267,TYPE_DECL,ANY,,,typedef AtanLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1754,Layer,1
419306,TYPE_DECL,,,,"struct AtanhFunctor : public BaseDefaultFunctor<AtanhFunctor>
{
    typedef AtanhLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return atanh(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::AtanhOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.AtanhFunctor,BaseDefaultFunctor<AtanhFunctor>,false,1779,AtanhFunctor,67
419307,TYPE_DECL,ANY,,,typedef AtanhLayer Layer;,24,src\layers\elementwise_layers.cpp,Layer,,false,1781,Layer,1
419346,TYPE_DECL,,,,"struct CosFunctor : public BaseDefaultFunctor<CosFunctor>
{
    typedef CosLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return cos(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::CosOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.CosFunctor,BaseDefaultFunctor<CosFunctor>,false,1806,CosFunctor,70
419347,TYPE_DECL,ANY,,,typedef CosLayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,1808,Layer,1
419386,TYPE_DECL,,,,"struct CoshFunctor : public BaseDefaultFunctor<CoshFunctor>
{
    typedef CoshLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return cosh(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::CoshOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.CoshFunctor,BaseDefaultFunctor<CoshFunctor>,false,1833,CoshFunctor,73
419387,TYPE_DECL,ANY,,,typedef CoshLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1835,Layer,1
419426,TYPE_DECL,,,,"struct ErfFunctor : public BaseDefaultFunctor<ErfFunctor>
{
    typedef ErfLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return erf(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::ErfOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.ErfFunctor,BaseDefaultFunctor<ErfFunctor>,false,1860,ErfFunctor,76
419427,TYPE_DECL,ANY,,,typedef ErfLayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,1862,Layer,1
419466,TYPE_DECL,,,,"struct HardSwishFunctor : public BaseDefaultFunctor<HardSwishFunctor>
{
    typedef HardSwishLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA   ||
               backendId == DNN_BACKEND_CANN;
    }

    inline float calculate(float x) const
    {
        return x * max(0.f, min(1.f, x / 6.f + 0.5f));
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::HardSwishOp>(target, stream);
    }
#endif

#ifdef HAVE_CANN
    Ptr<BackendNode> initCannOp(const std::string& name,
                                const std::vector<Ptr<BackendWrapper> > &inputs,
                                const std::vector<Ptr<BackendNode> >& nodes)
    {
        auto x = inputs[0].dynamicCast<CannBackendWrapper>();

        auto op = std::make_shared<ge::op::HardSwish>(name);

        auto op_x = nodes[0].dynamicCast<Cann...",1,src\layers\elementwise_layers.cpp,cv.dnn.HardSwishFunctor,BaseDefaultFunctor<HardSwishFunctor>,false,1887,HardSwishFunctor,79
419467,TYPE_DECL,ANY,,,typedef HardSwishLayer Layer;,28,src\layers\elementwise_layers.cpp,Layer,,false,1889,Layer,1
419526,TYPE_DECL,,,,"struct SinFunctor : public BaseDefaultFunctor<SinFunctor>
{
    typedef SinLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return sin(x);
    }

#ifdef HAVE_CUDA
        Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
        {
            return make_cuda_node<cuda4dnn::SinOp>(target, stream);
        }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.SinFunctor,BaseDefaultFunctor<SinFunctor>,false,1937,SinFunctor,82
419527,TYPE_DECL,ANY,,,typedef SinLayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,1939,Layer,1
419566,TYPE_DECL,,,,"struct SinhFunctor : public BaseDefaultFunctor<SinhFunctor>
{
    typedef SinhLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return sinh(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::SinhOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.SinhFunctor,BaseDefaultFunctor<SinhFunctor>,false,1964,SinhFunctor,85
419567,TYPE_DECL,ANY,,,typedef SinhLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,1966,Layer,1
419606,TYPE_DECL,,,,"struct SoftplusFunctor : public BaseDefaultFunctor<SoftplusFunctor>
{
    typedef SoftplusLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return log1p(exp(x));
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::SoftplusOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.SoftplusFunctor,BaseDefaultFunctor<SoftplusFunctor>,false,1991,SoftplusFunctor,88
419607,TYPE_DECL,ANY,,,typedef SoftplusLayer Layer;,27,src\layers\elementwise_layers.cpp,Layer,,false,1993,Layer,1
419647,TYPE_DECL,,,,"struct SoftsignFunctor : public BaseDefaultFunctor<SoftsignFunctor>
{
    typedef SoftsignLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return x / (1.f + abs(x));
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::SoftsignOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.SoftsignFunctor,BaseDefaultFunctor<SoftsignFunctor>,false,2018,SoftsignFunctor,91
419648,TYPE_DECL,ANY,,,typedef SoftsignLayer Layer;,27,src\layers\elementwise_layers.cpp,Layer,,false,2020,Layer,1
419691,TYPE_DECL,,,,"struct TanFunctor : public BaseDefaultFunctor<TanFunctor>
{
    typedef TanLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return tan(x);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::TanOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.TanFunctor,BaseDefaultFunctor<TanFunctor>,false,2045,TanFunctor,94
419692,TYPE_DECL,ANY,,,typedef TanLayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,2047,Layer,1
419731,TYPE_DECL,,,,"struct CeluFunctor : public BaseDefaultFunctor<CeluFunctor>
{
    typedef CeluLayer Layer;

    float alpha;

    explicit CeluFunctor(float alpha_ = 1.f) : alpha(alpha_) {}

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return max(0.f, x) + min(0.f, alpha * expm1(x / alpha));
    }

    inline void setKernelParams(ocl::Kernel& kernel) const
    {
        kernel.set(3, alpha);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::CeluOp>(target, stream, alpha);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.CeluFunctor,BaseDefaultFunctor<CeluFunctor>,false,2072,CeluFunctor,97
419732,TYPE_DECL,ANY,,,typedef CeluLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,2074,Layer,1
419798,TYPE_DECL,,,,"struct HardSigmoidFunctor : public BaseDefaultFunctor<HardSigmoidFunctor>
{
    typedef HardSigmoidLayer Layer;

    float alpha;
    float beta;

    explicit HardSigmoidFunctor(float alpha_ = 0.2f, float beta_ = 0.5f) : alpha(alpha_), beta(beta_) {}

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return max(0.f, min(1.f, alpha * x + beta));
    }

    inline void setKernelParams(ocl::Kernel& kernel) const
    {
        kernel.set(3, alpha);
        kernel.set(4, beta);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::HardSigmoidOp>(target, stream, alpha, beta);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.HardSigmoidFunctor,BaseDefaultFunctor<HardSigmoidFunctor>,false,2108,HardSigmoidFunctor,100
419799,TYPE_DECL,ANY,,,typedef HardSigmoidLayer Layer;,30,src\layers\elementwise_layers.cpp,Layer,,false,2110,Layer,1
419870,TYPE_DECL,,,,"struct SeluFunctor : public BaseDefaultFunctor<SeluFunctor>
{
    typedef SeluLayer Layer;

    float alpha;
    float gamma;

    explicit SeluFunctor(float alpha_ = 1.67326319217681884765625f,
                         float gamma_ = 1.05070102214813232421875f) : alpha(alpha_), gamma(gamma_) {}

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return gamma * (x > 0.f ? x : alpha * expm1(x));
    }

    inline void setKernelParams(ocl::Kernel& kernel) const
    {
        kernel.set(3, alpha);
        kernel.set(4, gamma);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::SeluOp>(target, stream, alpha, gamma);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.SeluFunctor,BaseDefaultFunctor<SeluFunctor>,false,2146,SeluFunctor,103
419871,TYPE_DECL,ANY,,,typedef SeluLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,2148,Layer,1
419944,TYPE_DECL,,,,"struct ThresholdedReluFunctor : public BaseDefaultFunctor<ThresholdedReluFunctor>
{
    typedef ThresholdedReluLayer Layer;

    float alpha;

    explicit ThresholdedReluFunctor(float alpha_ = 1.f) : alpha(alpha_) {}


    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return x > alpha ? x : 0.f;
    }

    inline void setKernelParams(ocl::Kernel& kernel) const
    {
        kernel.set(3, alpha);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::ThresholdedReluOp>(target, stream, alpha);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.ThresholdedReluFunctor,BaseDefaultFunctor<ThresholdedReluFunctor>,false,2185,ThresholdedReluFunctor,106
419945,TYPE_DECL,ANY,,,typedef ThresholdedReluLayer Layer;,34,src\layers\elementwise_layers.cpp,Layer,,false,2187,Layer,1
420005,TYPE_DECL,,,,"struct PowerFunctor : public BaseFunctor
{
    typedef PowerLayer Layer;

    float power, scale, shift;
    float originPower, originScale, originShift;

    explicit PowerFunctor(float power_ = 1.f, float scale_ = 1.f, float shift_ = 0.f)
        : power(power_), scale(scale_), shift(shift_),
          originPower(power_), originScale(scale_), originShift(shift_) {}

    bool supportBackend(int backendId, int targetId)
    {
#ifdef HAVE_INF_ENGINE
        if (backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH)
            return true;
#endif
        {
            return backendId == DNN_BACKEND_OPENCV ||
                   backendId == DNN_BACKEND_CUDA ||
                   backendId == DNN_BACKEND_HALIDE;
        }
    }

    void finalize()
    {
        power = originPower;
        scale = originScale;
        shift = originShift;
    }

    void apply(const float* srcptr, float* dstptr, int stripeStart, int len, size_t planeSize, int cn0, int cn1) const
    {
        CV_UNUSED(s...",1,src\layers\elementwise_layers.cpp,cv.dnn.PowerFunctor,BaseFunctor,false,2222,PowerFunctor,109
420006,TYPE_DECL,ANY,,,typedef PowerLayer Layer;,24,src\layers\elementwise_layers.cpp,Layer,,false,2224,Layer,1
420351,TYPE_DECL,,,,"struct ExpFunctor : public BaseDefaultFunctor<ExpFunctor>
{
    typedef ExpLayer Layer;
    float base, scale, shift;
    float normScale, normShift;

    ExpFunctor(float base_ = -1.f, float scale_ = 1.f, float shift_ = 0.f)
        : base(base_), scale(scale_), shift(shift_)
    {
        // For base > 0 :
        // y     = base^(scale * input + shift)
        // ln(y) = ln(base)*(scale * input + shift)
        // y     = exp((ln(base)*scale) * input + (ln(base)*shift))
        // y     = exp(normalized_scale * input + normalized_shift)
        CV_Check(base, base == -1.f || base > 0.f, ""Unsupported 'base' value"");
        const float ln_base = (base == -1.f) ? 1.f : log(base);
        normScale = scale * ln_base;
        normShift = shift * ln_base;
    }

    bool supportBackend(int backendId, int targetId)
    {
        return backendId == DNN_BACKEND_OPENCV || backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE || backendId == DNN_BACKEND_INFERENCE...",1,src\layers\elementwise_layers.cpp,cv.dnn.ExpFunctor,BaseDefaultFunctor<ExpFunctor>,false,2403,ExpFunctor,110
420352,TYPE_DECL,ANY,,,typedef ExpLayer Layer;,22,src\layers\elementwise_layers.cpp,Layer,,false,2405,Layer,1
420475,TYPE_DECL,,,,"struct ChannelsPReLUFunctor : public BaseFunctor
{
    typedef ChannelsPReLULayer Layer;
    Mat scale;
#ifdef HAVE_OPENCL
    UMat scale_umat;
    std::string oclKernelName = ""ChannelsPReLUForward"";
#endif

    explicit ChannelsPReLUFunctor(const Mat& scale_=Mat()) : scale(scale_)
    {
    }

    bool supportBackend(int backendId, int)
    {
#ifdef HAVE_INF_ENGINE
        if (backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH)
            return true;
#endif
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA ||
               backendId == DNN_BACKEND_HALIDE ||
               backendId == DNN_BACKEND_CANN;
    }

    void apply(const float* srcptr, float* dstptr, int stripeStart, int len, size_t planeSize, int cn0, int cn1) const
    {
        CV_UNUSED(stripeStart);
        CV_Assert(scale.isContinuous() && scale.type() == CV_32F);

        const float* scaleptr = scale.ptr<float>();
        CV_Assert( 0 <= cn0 && cn0 < cn1 && cn1 <= (int)...",1,src\layers\elementwise_layers.cpp,cv.dnn.ChannelsPReLUFunctor,BaseFunctor,false,2474,ChannelsPReLUFunctor,113
420476,TYPE_DECL,ANY,,,typedef ChannelsPReLULayer Layer;,32,src\layers\elementwise_layers.cpp,Layer,,false,2476,Layer,1
420661,TYPE_DECL,,,,"struct PReLUFunctor : public ChannelsPReLUFunctor
{
    explicit PReLUFunctor(const Mat& scale_=Mat()) : ChannelsPReLUFunctor(scale_)
    {
#ifdef HAVE_OPENCL
        oclKernelName = ""PReLUForward"";
#endif
    }

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CANN ||
               backendId == DNN_BACKEND_INFERENCE_ENGINE_NGRAPH;
    }

    void apply(const float* srcptr, float* dstptr, int stripeStart, int len, size_t planeSize, int cn0, int cn1) const
    {
        CV_UNUSED(stripeStart);
        CV_Assert(scale.isContinuous() && scale.type() == CV_32F);

        if (stripeStart < 0)
            CV_Error(Error::StsNotImplemented, ""PReLUFunctor requires stripe offset parameter"");

        const float* scaleptr = scale.ptr<float>() + cn0 * planeSize + stripeStart;
        for( int cn = cn0; cn < cn1; cn++, srcptr += planeSize, dstptr += planeSize, scaleptr += planeSize )
        {
         ...",1,src\layers\elementwise_layers.cpp,cv.dnn.PReLUFunctor,ChannelsPReLUFunctor,false,2635,PReLUFunctor,114
420796,TYPE_DECL,,,,"struct SignFunctor : public BaseDefaultFunctor<SignFunctor>
{
    typedef SignLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return x > 0.f ? 1.f : (x < 0.f ? -1.f : 0.f);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::SignOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.SignFunctor,BaseDefaultFunctor<SignFunctor>,false,2704,SignFunctor,115
420797,TYPE_DECL,ANY,,,typedef SignLayer Layer;,23,src\layers\elementwise_layers.cpp,Layer,,false,2706,Layer,1
420846,TYPE_DECL,,,,"struct ShrinkFunctor : public BaseDefaultFunctor<ShrinkFunctor>
{
    typedef ShrinkLayer Layer;
    float bias;
    float lambd;

    explicit ShrinkFunctor(float bias_ = 0.0f, float lambd_ = 0.5f) : bias(bias_), lambd(lambd_) {}

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return x > lambd ? x - bias : (x < -lambd ? x + bias : 0.f);
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::ShrinkOp>(target, stream, bias, lambd);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.ShrinkFunctor,BaseDefaultFunctor<ShrinkFunctor>,false,2733,ShrinkFunctor,118
420847,TYPE_DECL,ANY,,,typedef ShrinkLayer Layer;,25,src\layers\elementwise_layers.cpp,Layer,,false,2735,Layer,1
420908,TYPE_DECL,,,,"struct ReciprocalFunctor : public BaseDefaultFunctor<ReciprocalFunctor>
{
    typedef ReciprocalLayer Layer;

    bool supportBackend(int backendId, int)
    {
        return backendId == DNN_BACKEND_OPENCV ||
               backendId == DNN_BACKEND_CUDA;
    }

    inline float calculate(float x) const
    {
        return 1.f/x;
    }

#ifdef HAVE_CUDA
    Ptr<BackendNode> initCUDA(int target, csl::Stream stream)
    {
        return make_cuda_node<cuda4dnn::ReciprocalOp>(target, stream);
    }
#endif

    int64 getFLOPSPerElement() const { return 1; }
}",1,src\layers\elementwise_layers.cpp,cv.dnn.ReciprocalFunctor,BaseDefaultFunctor<ReciprocalFunctor>,false,2765,ReciprocalFunctor,121
420909,TYPE_DECL,ANY,,,typedef ReciprocalLayer Layer;,29,src\layers\elementwise_layers.cpp,Layer,,false,2767,Layer,1
422144,TYPE_DECL,,src\layers\eltwise_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\eltwise_layer.cpp,src\layers\eltwise_layer.cpp:<global>,,false,1,<global>,12
422169,TYPE_DECL,,src\layers\expand_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\expand_layer.cpp,src\layers\expand_layer.cpp:<global>,,false,1,<global>,3
422208,TYPE_DECL,,src\layers\flatten_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\flatten_layer.cpp,src\layers\flatten_layer.cpp:<global>,,false,1,<global>,11
422233,TYPE_DECL,,src\layers\flow_warp_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\flow_warp_layer.cpp,src\layers\flow_warp_layer.cpp:<global>,,false,1,<global>,3
422280,TYPE_DECL,,src\layers\fully_connected_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\fully_connected_layer.cpp,src\layers\fully_connected_layer.cpp:<global>,,false,1,<global>,14
422305,TYPE_DECL,,src\layers\gather_elements_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\gather_elements_layer.cpp,src\layers\gather_elements_layer.cpp:<global>,,false,1,<global>,3
422384,TYPE_DECL,,src\layers\gather_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\gather_layer.cpp,src\layers\gather_layer.cpp:<global>,,false,1,<global>,3
422421,TYPE_DECL,,src\layers\gemm_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\gemm_layer.cpp,src\layers\gemm_layer.cpp:<global>,,false,1,<global>,10
422460,TYPE_DECL,,src\layers\instance_norm_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\instance_norm_layer.cpp,src\layers\instance_norm_layer.cpp:<global>,,false,1,<global>,11
422501,TYPE_DECL,,src\layers\layer_norm.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\layer_norm.cpp,src\layers\layer_norm.cpp:<global>,,false,1,<global>,11
422524,TYPE_DECL,,src\layers\layers_common.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\layers_common.cpp,src\layers\layers_common.cpp:<global>,,false,1,<global>,3
423645,TYPE_DECL,,src\layers\layers_common.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\layers_common.hpp,src\layers\layers_common.hpp:<global>,,false,1,<global>,6
423703,TYPE_DECL,,src\layers\layers_common.simd.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\layers_common.simd.hpp,src\layers\layers_common.simd.hpp:<global>,,false,1,<global>,2
423764,TYPE_DECL,,src\layers\lrn_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\lrn_layer.cpp,src\layers\lrn_layer.cpp:<global>,,false,1,<global>,15
423801,TYPE_DECL,,src\layers\matmul_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\matmul_layer.cpp,src\layers\matmul_layer.cpp:<global>,,false,1,<global>,9
423836,TYPE_DECL,,src\layers\max_unpooling_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\max_unpooling_layer.cpp,src\layers\max_unpooling_layer.cpp:<global>,,false,1,<global>,9
423877,TYPE_DECL,,src\layers\mvn_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\mvn_layer.cpp,src\layers\mvn_layer.cpp:<global>,,false,1,<global>,11
423918,TYPE_DECL,,src\layers\nary_eltwise_layers.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\nary_eltwise_layers.cpp,src\layers\nary_eltwise_layers.cpp:<global>,,false,1,<global>,11
423951,TYPE_DECL,,src\layers\normalize_bbox_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\normalize_bbox_layer.cpp,src\layers\normalize_bbox_layer.cpp:<global>,,false,1,<global>,7
423976,TYPE_DECL,,src\layers\not_implemented_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\not_implemented_layer.cpp,src\layers\not_implemented_layer.cpp:<global>,,false,1,<global>,3
424050,TYPE_DECL,,src\layers\padding_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\padding_layer.cpp,src\layers\padding_layer.cpp:<global>,,false,1,<global>,10
424097,TYPE_DECL,,src\layers\permute_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\permute_layer.cpp,src\layers\permute_layer.cpp:<global>,,false,1,<global>,14
424162,TYPE_DECL,,src\layers\pooling_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\pooling_layer.cpp,src\layers\pooling_layer.cpp:<global>,,false,1,<global>,23
424230,TYPE_DECL,,src\layers\prior_box_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\prior_box_layer.cpp,src\layers\prior_box_layer.cpp:<global>,,false,1,<global>,16
424271,TYPE_DECL,,src\layers\proposal_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\proposal_layer.cpp,src\layers\proposal_layer.cpp:<global>,,false,1,<global>,7
424304,TYPE_DECL,,src\layers\recurrent_layers.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\recurrent_layers.cpp,src\layers\recurrent_layers.cpp:<global>,,false,1,<global>,7
424525,TYPE_DECL,,,,"class RNNLayerImpl : public RNNLayer
{
    int numX, numH, numO;
    int numSamples, numTimestamps, numSamplesTotal;
    int dtype;
    Mat Whh, Wxh, bh;
    Mat Who, bo;
    bool produceH;

public:

    RNNLayerImpl(const LayerParams& params)
        : numX(0), numH(0), numO(0), numSamples(0), numTimestamps(0), numSamplesTotal(0), dtype(0)
    {
        setParamsFrom(params);
        type = ""RNN"";
        produceH = false;
    }

    void setProduceHiddenOutput(bool produce = false) CV_OVERRIDE
    {
        produceH = produce;
    }

    void setWeights(const Mat &W_xh, const Mat &b_h, const Mat &W_hh, const Mat &W_ho, const Mat &b_o) CV_OVERRIDE
    {
        CV_Assert(W_hh.dims == 2 && W_xh.dims == 2);
        CV_Assert(W_hh.size[0] == W_xh.size[0] && W_hh.size[0] == W_hh.size[1] && (int)b_h.total() == W_xh.size[0]);
        CV_Assert(W_ho.size[0] == (int)b_o.total());
        CV_Assert(W_ho.size[1] == W_hh.size[1]);

        blobs.resize(5);
        blobs[0] = Mat(W_xh.clone())...",1,src\layers\recurrent_layers.cpp,cv.dnn.RNNLayerImpl,RNNLayer,false,793,RNNLayerImpl,10
424679,TYPE_DECL,,src\layers\reduce_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\reduce_layer.cpp,src\layers\reduce_layer.cpp:<global>,,false,1,<global>,3
424718,TYPE_DECL,,src\layers\region_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\region_layer.cpp,src\layers\region_layer.cpp:<global>,,false,1,<global>,10
424759,TYPE_DECL,,src\layers\reorg_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\reorg_layer.cpp,src\layers\reorg_layer.cpp:<global>,,false,1,<global>,11
424800,TYPE_DECL,,src\layers\reshape_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\reshape_layer.cpp,src\layers\reshape_layer.cpp:<global>,,false,1,<global>,11
425268,TYPE_DECL,,src\layers\resize_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\resize_layer.cpp,src\layers\resize_layer.cpp:<global>,,false,1,<global>,11
425273,TYPE_DECL,,,,"class ResizeLayerImpl : public ResizeLayer
{
public:
    ResizeLayerImpl(const LayerParams& params) : zoomFactorWidth(params.get<float>(""zoom_factor_x"", params.get<float>(""zoom_factor"", 0))),
                                                 zoomFactorHeight(params.get<float>(""zoom_factor_y"", params.get<float>(""zoom_factor"", 0))),
                                                 scaleWidth(0), scaleHeight(0)
    {
        setParamsFrom(params);
        outWidth = params.get<float>(""width"", 0);
        outHeight = params.get<float>(""height"", 0);
        if (params.has(""zoom_factor""))
        {
            CV_Assert(!params.has(""zoom_factor_x"") && !params.has(""zoom_factor_y""));
        }
        else if (params.has(""zoom_factor_x"") || params.has(""zoom_factor_y""))
        {
            CV_Assert(params.has(""zoom_factor_x"") && params.has(""zoom_factor_y""));
        }
        interpolation = params.get<String>(""interpolation"");
        CV_Check(interpolation, interpolation == ""nearest"" || ...",1,src\layers\resize_layer.cpp,cv.dnn.ResizeLayerImpl,ResizeLayer,false,30,ResizeLayerImpl,1
425508,TYPE_DECL,,src\layers\scale_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\scale_layer.cpp,src\layers\scale_layer.cpp:<global>,,false,1,<global>,11
425651,TYPE_DECL,,src\layers\scatterND_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\scatterND_layer.cpp,src\layers\scatterND_layer.cpp:<global>,,false,1,<global>,4
425676,TYPE_DECL,,src\layers\scatter_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\scatter_layer.cpp,src\layers\scatter_layer.cpp:<global>,,false,1,<global>,4
425701,TYPE_DECL,,src\layers\shuffle_channel_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\shuffle_channel_layer.cpp,src\layers\shuffle_channel_layer.cpp:<global>,,false,1,<global>,4
425742,TYPE_DECL,,src\layers\slice_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\slice_layer.cpp,src\layers\slice_layer.cpp:<global>,,false,1,<global>,11
426071,TYPE_DECL,,,,"class SliceLayerImpl : public SliceLayer
{
public:
    SliceLayerImpl(const LayerParams& params)
    {
        setParamsFrom(params);
        hasSteps = false;
        axis = params.get<int>(""axis"", 1);
        num_split = params.get<int>(""num_split"", 0);
        hasDynamicShapes = params.get<bool>(""has_dynamic_shapes"", false);
        shapesInitialized = !hasDynamicShapes;

        if (params.has(""slice_point""))
        {
            CV_Assert(!params.has(""begin"") && !params.has(""size"") && !params.has(""end""));
            const DictValue &indicesValue = params.get(""slice_point"");
            int size = axis > 0 ? axis + 1 : 1;
            sliceRanges.resize(indicesValue.size() + 1,
                               std::vector<Range>(size, Range::all()));
            int prevSlice = 0;
            for (int i = 0; i < indicesValue.size(); ++i)
            {
                sliceRanges[i][size - 1].start = prevSlice;
                sliceRanges[i][size - 1].end = indicesValue.get<int>(i...",1,src\layers\slice_layer.cpp,cv.dnn.SliceLayerImpl,SliceLayer,false,145,SliceLayerImpl,4
426789,TYPE_DECL,,src\layers\softmax_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\softmax_layer.cpp,src\layers\softmax_layer.cpp:<global>,,false,1,<global>,15
426818,TYPE_DECL,,src\layers\split_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\split_layer.cpp,src\layers\split_layer.cpp:<global>,,false,1,<global>,5
426845,TYPE_DECL,,src\layers\tile_layer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\layers\tile_layer.cpp,src\layers\tile_layer.cpp:<global>,,false,1,<global>,4
426884,TYPE_DECL,,src\legacy_backend.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\legacy_backend.cpp,src\legacy_backend.cpp:<global>,,false,1,<global>,11
426894,TYPE_DECL,,src\legacy_backend.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\legacy_backend.hpp,src\legacy_backend.hpp:<global>,,false,1,<global>,2
426901,TYPE_DECL,,,,"struct BlobManager
{
public:
    // Increase references counter to layer output.
    void addReference(const LayerPin& lp)
    {
        std::map<LayerPin, int>::iterator it = refCounter.find(lp);
        if (it == refCounter.end())
            refCounter[lp] = 1;
        else
            it->second += 1;
    }

    void addReferences(const std::vector<LayerPin>& pins)
    {
        for (int i = 0; i < pins.size(); i++)
        {
            addReference(pins[i]);
        }
    }

    // Returns number of references to allocated memory that used in specific
    // layer blob.
    int numReferences(const LayerPin& lp)
    {
        std::map<LayerPin, LayerPin>::const_iterator mapIt = reuseMap.find(lp);
        CV_Assert(mapIt != reuseMap.end());
        LayerPin memHost = mapIt->second;

        std::map<LayerPin, int>::const_iterator refIt = refCounter.find(memHost);
        CV_Assert(refIt != refCounter.end());
        return refIt->second;
    }

    // Reuse data allocated in <ho...",1,src\legacy_backend.hpp,cv.dnn.detail.BlobManager,,false,109,BlobManager,1
427709,TYPE_DECL,,src\math_utils.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\math_utils.hpp,src\math_utils.hpp:<global>,,false,1,<global>,4
427812,TYPE_DECL,,src\model.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\model.cpp,src\model.cpp:<global>,,false,1,<global>,8
427817,TYPE_DECL,,,,"struct Model::Impl
{
//protected:
    Net    net;

    Size   size;
    Scalar mean;
    Scalar scale = Scalar::all(1.0);
    bool   swapRB = false;
    bool   crop = false;
    Mat    blob;
    std::vector<String> outNames;

public:
    virtual ~Impl() {}
    Impl() {}
    Impl(const Impl&) = delete;
    Impl(Impl&&) = delete;

    virtual Net& getNetwork() const { return const_cast<Net&>(net); }

    virtual void setPreferableBackend(Backend backendId) { net.setPreferableBackend(backendId); }
    virtual void setPreferableTarget(Target targetId) { net.setPreferableTarget(targetId); }
    virtual void enableWinograd(bool useWinograd) { net.enableWinograd(useWinograd); }

    virtual
    void initNet(const Net& network)
    {
        CV_TRACE_FUNCTION();
        net = network;

        outNames = net.getUnconnectedOutLayersNames();
        std::vector<MatShape> inLayerShapes;
        std::vector<MatShape> outLayerShapes;
        net.getLayerShapes(MatShape(), 0, inLayerShapes, outLa...",1,src\model.cpp,cv.dnn.Impl,,false,17,Impl,1
428321,TYPE_DECL,,,,"class ClassificationModel_Impl : public Model::Impl
{
public:
    virtual ~ClassificationModel_Impl() {}
    ClassificationModel_Impl() : Impl() {}
    ClassificationModel_Impl(const ClassificationModel_Impl&) = delete;
    ClassificationModel_Impl(ClassificationModel_Impl&&) = delete;

    void setEnableSoftmaxPostProcessing(bool enable)
    {
        applySoftmax = enable;
    }

    bool getEnableSoftmaxPostProcessing() const
    {
        return applySoftmax;
    }

    std::pair<int, float> classify(InputArray frame)
    {
        std::vector<Mat> outs;
        processFrame(frame, outs);
        CV_Assert(outs.size() == 1);

        Mat out = outs[0].reshape(1, 1);

        if(getEnableSoftmaxPostProcessing())
        {
            softmax(out, out);
        }

        double conf;
        Point maxLoc;
        cv::minMaxLoc(out, nullptr, &conf, nullptr, &maxLoc);
        return {maxLoc.x, static_cast<float>(conf)};
    }

protected:
    void softmax(InputArray inblob, OutputAr...",1,src\model.cpp,cv.dnn.ClassificationModel_Impl,Model.Impl,false,221,ClassificationModel_Impl,16
428985,TYPE_DECL,,,,"class DetectionModel_Impl : public Model::Impl
{
public:
    virtual ~DetectionModel_Impl() {}
    DetectionModel_Impl() : Impl() {}
    DetectionModel_Impl(const DetectionModel_Impl&) = delete;
    DetectionModel_Impl(DetectionModel_Impl&&) = delete;

    void disableRegionNMS(Net& net)
    {
        for (String& name : net.getUnconnectedOutLayersNames())
        {
            int layerId = net.getLayerId(name);
            Ptr<RegionLayer> layer = net.getLayer(layerId).dynamicCast<RegionLayer>();
            if (!layer.empty())
            {
                layer->nmsThreshold = 0;
            }
        }
    }

    void setNmsAcrossClasses(bool value) {
        nmsAcrossClasses = value;
    }

    bool getNmsAcrossClasses() {
        return nmsAcrossClasses;
    }

private:
    bool nmsAcrossClasses = false;
}",1,src\model.cpp,cv.dnn.DetectionModel_Impl,Model.Impl,false,415,DetectionModel_Impl,30
429154,TYPE_DECL,,,,"struct TextRecognitionModel_Impl : public Model::Impl
{
    std::string decodeType;
    std::vector<std::string> vocabulary;

    int beamSize = 10;
    int vocPruneSize = 0;

    TextRecognitionModel_Impl()
    {
        CV_TRACE_FUNCTION();
    }

    TextRecognitionModel_Impl(const Net& network)
    {
        CV_TRACE_FUNCTION();
        initNet(network);
    }

    inline
    void setVocabulary(const std::vector<std::string>& inputVoc)
    {
        vocabulary = inputVoc;
    }

    inline
    void setDecodeType(const std::string& type)
    {
        decodeType = type;
    }

    inline
    void setDecodeOptsCTCPrefixBeamSearch(int beam, int vocPrune)
    {
        beamSize = beam;
        vocPruneSize = vocPrune;
    }

    virtual
    std::string decode(const Mat& prediction)
    {
        CV_TRACE_FUNCTION();
        CV_Assert(!prediction.empty());
        if (decodeType.empty())
            CV_Error(Error::StsBadArg, ""TextRecognitionModel: decodeType is not specified"");
    ...",1,src\model.cpp,cv.dnn.TextRecognitionModel_Impl,Model.Impl,false,640,TextRecognitionModel_Impl,37
429432,TYPE_DECL,,,,"struct PrefixScore
    {
        // blank ending score
        float pB;
        // none blank ending score
        float pNB;

        PrefixScore() : pB(kNegativeInfinity), pNB(kNegativeInfinity)
        {

        }
        PrefixScore(float pB, float pNB) : pB(pB), pNB(pNB)
        {

        }
    }",5,src\model.cpp,cv.dnn.TextRecognitionModel_Impl.PrefixScore,,false,745,PrefixScore,12
429445,TYPE_DECL,,,,"struct PrefixHash
    {
        size_t operator()(const std::vector<int>& prefix) const
        {
              // BKDR hash
              unsigned int seed = 131;
              size_t hash = 0;
              for (size_t i = 0; i < prefix.size(); i++)
              {
                  hash = hash * seed + prefix[i];
              }
              return hash;
        }
    }",5,src\model.cpp,cv.dnn.TextRecognitionModel_Impl.PrefixHash,,false,762,PrefixHash,13
429661,TYPE_DECL,ANY,,,"using Beam = std::vector<std::pair<std::vector<int>, PrefixScore>>;",11,src\model.cpp,Beam,,false,827,Beam,1
429662,TYPE_DECL,ANY,,,"using BeamInDict = std::unordered_map<std::vector<int>, PrefixScore, PrefixHash>;",11,src\model.cpp,BeamInDict,,false,828,BeamInDict,2
430191,TYPE_DECL,,,,"struct TextDetectionModel_Impl : public Model::Impl
{
    TextDetectionModel_Impl() {}

    TextDetectionModel_Impl(const Net& network)
    {
        CV_TRACE_FUNCTION();
        initNet(network);
    }

    virtual
    std::vector< std::vector<Point2f> > detect(InputArray frame, CV_OUT std::vector<float>& confidences)
    {
        CV_TRACE_FUNCTION();
        std::vector<RotatedRect> rects = detectTextRectangles(frame, confidences);
        std::vector< std::vector<Point2f> > results;
        for (const RotatedRect& rect : rects)
        {
            Point2f vertices[4] = {};
            rect.points(vertices);
            std::vector<Point2f> result = { vertices[0], vertices[1], vertices[2], vertices[3] };
            results.emplace_back(result);
        }
        return results;
    }

    virtual
    std::vector< std::vector<Point2f> > detect(InputArray frame)
    {
        CV_TRACE_FUNCTION();
        std::vector<float> confidences;
        return detect(frame, confidences);
...",1,src\model.cpp,cv.dnn.TextDetectionModel_Impl,Model.Impl,false,991,TextDetectionModel_Impl,47
430252,TYPE_DECL,,,,"struct TextDetectionModel_EAST_Impl : public TextDetectionModel_Impl
{
    float confThreshold;
    float nmsThreshold;

    TextDetectionModel_EAST_Impl()
        : confThreshold(0.5f)
        , nmsThreshold(0.0f)
    {
        CV_TRACE_FUNCTION();
    }

    TextDetectionModel_EAST_Impl(const Net& network)
        : TextDetectionModel_EAST_Impl()
    {
        CV_TRACE_FUNCTION();
        initNet(network);
    }

    void setConfidenceThreshold(float confThreshold_) { confThreshold = confThreshold_; }
    float getConfidenceThreshold() const { return confThreshold; }

    void setNMSThreshold(float nmsThreshold_) { nmsThreshold = nmsThreshold_; }
    float getNMSThreshold() const { return nmsThreshold; }

    // TODO: According to article EAST supports quadrangles output: https://arxiv.org/pdf/1704.03155.pdf
#if 0
    virtual
    std::vector< std::vector<Point2f> > detect(InputArray frame, CV_OUT std::vector<float>& confidences) CV_OVERRIDE
#endif

    virtual
    std::vector<cv::...",1,src\model.cpp,cv.dnn.TextDetectionModel_EAST_Impl,TextDetectionModel_Impl,false,1115,TextDetectionModel_EAST_Impl,54
430408,TYPE_DECL,,,,"struct TextDetectionModel_DB_Impl : public TextDetectionModel_Impl
{
    float binaryThreshold;
    float polygonThreshold;
    double unclipRatio;
    int maxCandidates;

    TextDetectionModel_DB_Impl()
        : binaryThreshold(0.3f)
        , polygonThreshold(0.5f)
        , unclipRatio(2.0f)
        , maxCandidates(0)
    {
        CV_TRACE_FUNCTION();
    }

    TextDetectionModel_DB_Impl(const Net& network)
        : TextDetectionModel_DB_Impl()
    {
        CV_TRACE_FUNCTION();
        initNet(network);
    }

    void setBinaryThreshold(float binaryThreshold_) { binaryThreshold = binaryThreshold_; }
    float getBinaryThreshold() const { return binaryThreshold; }

    void setPolygonThreshold(float polygonThreshold_) { polygonThreshold = polygonThreshold_; }
    float getPolygonThreshold() const { return polygonThreshold; }

    void setUnclipRatio(double unclipRatio_) { unclipRatio = unclipRatio_; }
    double getUnclipRatio() const { return unclipRatio; }

    void setMa...",1,src\model.cpp,cv.dnn.TextDetectionModel_DB_Impl,TextDetectionModel_Impl,false,1310,TextDetectionModel_DB_Impl,61
431278,TYPE_DECL,,src\net.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\net.cpp,src\net.cpp:<global>,,false,1,<global>,3
431292,TYPE_DECL,,src\net_cann.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\net_cann.cpp,src\net_cann.cpp:<global>,,false,1,<global>,4
431304,TYPE_DECL,,src\net_impl.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\net_impl.cpp,src\net_impl.cpp:<global>,,false,1,<global>,3
431342,TYPE_DECL,,src\net_impl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\net_impl.hpp,src\net_impl.hpp:<global>,,false,1,<global>,16
431360,TYPE_DECL,,src\net_impl_backend.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\net_impl_backend.cpp,src\net_impl_backend.cpp:<global>,,false,1,<global>,6
431374,TYPE_DECL,,src\net_impl_fuse.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\net_impl_fuse.cpp,src\net_impl_fuse.cpp:<global>,,false,1,<global>,4
431398,TYPE_DECL,,src\net_openvino.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\net_openvino.cpp,src\net_openvino.cpp:<global>,,false,1,<global>,9
431410,TYPE_DECL,,src\net_quantization.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\net_quantization.cpp,src\net_quantization.cpp:<global>,,false,1,<global>,3
431447,TYPE_DECL,,src\nms.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\nms.cpp,src\nms.cpp:<global>,,false,1,<global>,4
432178,TYPE_DECL,,src\nms.inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\nms.inl.hpp,src\nms.inl.hpp:<global>,,false,1,<global>,2
432426,TYPE_DECL,,src\ocl4dnn\include\common.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\include\common.hpp,src\ocl4dnn\include\common.hpp:<global>,,false,1,<global>,3
432436,TYPE_DECL,,src\ocl4dnn\include\default_kernel_config.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\include\default_kernel_config.hpp,src\ocl4dnn\include\default_kernel_config.hpp:<global>,,false,1,<global>,1
433301,TYPE_DECL,,src\ocl4dnn\include\math_functions.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\include\math_functions.hpp,src\ocl4dnn\include\math_functions.hpp:<global>,,false,1,<global>,2
433307,TYPE_DECL,,,,"enum CBLAS_TRANSPOSE {CblasNoTrans=111, CblasTrans=112, CblasConjTrans=113}",1,src\ocl4dnn\include\math_functions.hpp,cv.dnn.ocl4dnn.CBLAS_TRANSPOSE,,false,54,CBLAS_TRANSPOSE,1
433390,TYPE_DECL,,src\ocl4dnn\include\ocl4dnn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\include\ocl4dnn.hpp,src\ocl4dnn\include\ocl4dnn.hpp:<global>,,false,1,<global>,7
433396,TYPE_DECL,,,,"struct OCL4DNNConvConfig
{
    OCL4DNNConvConfig() :
        kernel(1, 1),
        stride(1, 1),
        dilation(1, 1),
        group(1),
        bias_term(false),
        use_half(false)
    {
        pads = {0, 0, 0, 0};
    }
    MatShape in_shape;
    MatShape out_shape;
    Size kernel;
    std::vector<int> pads; // [pad_top, pad_bottom, pad_left, pad_right]
    Size stride;
    Size dilation;
    int group; // = 1;
    bool bias_term; // = false;
    bool use_half; // = false;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNConvConfig,,false,54,OCL4DNNConvConfig,1
433412,TYPE_DECL,,,,"typedef enum {
    OCL4DNN_CONV_FUSED_ACTIV_NONE                 = 0,
    OCL4DNN_CONV_FUSED_ACTIV_RELU                 = 1,
    OCL4DNN_CONV_FUSED_ACTIV_PRELU                = 2,
    OCL4DNN_CONV_FUSED_ACTIV_POWER                = 3,
    OCL4DNN_CONV_FUSED_ACTIV_TANH                 = 4,
    OCL4DNN_CONV_FUSED_ACTIV_RELU6                = 5
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.ocl4dnnFusedActiv_t,,false,77,ocl4dnnFusedActiv_t,2
433442,TYPE_DECL,cv.dnn.ocl4dnn.OCL4DNNConvSpatial<Dtype>,,,"class OCL4DNNConvSpatial
{
    public:
        explicit OCL4DNNConvSpatial(OCL4DNNConvConfig config);
        ~OCL4DNNConvSpatial();
        bool Forward(const UMat& bottom_data,
                     const UMat& bottom_data2,
                     const UMat& weight,
                     const UMat& bias,
                     UMat& top_data, int32_t batch_size);
        void setActivReLU(bool fuse_activ, float slope);
        void setActivPReLU(bool fuse_activ, std::vector<float> &slope);
        void setActivPower(bool fuse_activ, float power);
        void setActivTanh(bool fuse_activ);
        void setActivReLU6(bool fuse_activ, float min, float max);
        void setBias(bool bias_term);

    private:
        struct kernelConfig
        {
            std::string kernelName;
            float executionTime;
            size_t local_work_size[3];
            size_t global_work_size[3];
            int32_t workItem_output[3];
            bool verified;
            bool tested;
     ...",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNConvSpatial,,false,87,OCL4DNNConvSpatial,4
433497,TYPE_DECL,,,,"struct kernelConfig
        {
            std::string kernelName;
            float executionTime;
            size_t local_work_size[3];
            size_t global_work_size[3];
            int32_t workItem_output[3];
            bool verified;
            bool tested;
            bool swizzle_weights;
            bool use_null_local;
            int32_t kernelType;

            kernelConfig()
            {}

            kernelConfig(const std::string& name, const size_t* global_size, const size_t* local_size,
                         const int32_t* workItem,
                         bool swizzle,
                         int32_t type = 0)
                : executionTime(0)
            {
                kernelName = name;
                for (int32_t x = 0; x < 3; x++)
                {
                    local_work_size[x] = local_size ? local_size[x] : 1;
                    global_work_size[x] = global_size[x];
                    workItem_output[x] = workItem[x];
              ...",9,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNConvSpatial.kernelConfig,,false,105,kernelConfig,10
433588,TYPE_DECL,,,,"struct tunerParam
        {
           int kernelType;
           int blockWidth;
           int blockHeight;
           int blockDepth;

           tunerParam(int type, int w, int h, int d)
           {
               kernelType = type;
               blockWidth = w;
               blockHeight= h;
               blockDepth = d;
           }
        }",9,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNConvSpatial.tunerParam,,false,142,tunerParam,11
433713,TYPE_DECL,ANY,,,"typedef std::map<std::string, ocl::Program> phash_t;",53,src\ocl4dnn\include\ocl4dnn.hpp,phash_t,,false,197,phash_t,22
433960,TYPE_DECL,,,,"typedef enum {
    LIBDNN_POOLING_METHOD_MAX                 = 0,
    LIBDNN_POOLING_METHOD_AVE                 = 1,
    LIBDNN_POOLING_METHOD_STO                 = 2
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.ocl4dnnPoolingMethod_t,,false,335,ocl4dnnPoolingMethod_t,5
433978,TYPE_DECL,,,,"struct OCL4DNNPoolConfig
{
    OCL4DNNPoolConfig() :
        kernel(1, 1),
        pad_l(0), pad_t(0), pad_r(0), pad_b(0),
        stride(1, 1),
        dilation(1, 1),
        channels(0),
        pool_method(LIBDNN_POOLING_METHOD_MAX),
        global_pooling(false),
        avePoolPaddedArea(true),
        computeMaxIdx(true),
        use_half(false)
    {}
    MatShape in_shape;
    MatShape out_shape;
    Size kernel;
    int pad_l, pad_t, pad_r, pad_b;
    Size stride;
    Size dilation;

    int channels;
    ocl4dnnPoolingMethod_t pool_method; // = LIBDNN_POOLING_METHOD_MAX;
    bool global_pooling; // = false;
    bool avePoolPaddedArea;
    bool computeMaxIdx;
    bool use_half;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNPoolConfig,,false,341,OCL4DNNPoolConfig,7
433998,TYPE_DECL,cv.dnn.ocl4dnn.OCL4DNNPool<Dtype>,,,"class OCL4DNNPool
{
    public:
        explicit OCL4DNNPool(OCL4DNNPoolConfig config);
        ~OCL4DNNPool();
        bool Forward(const UMat& bottom_data,
                     UMat& top_data,
                     UMat& top_mask);
    private:
        // Pooling parameters
        std::vector<int32_t> stride_;
        std::vector<int32_t> kernel_shape_;
        std::vector<int32_t> im_in_shape_;
        std::vector<int32_t> im_out_shape_;

        ocl4dnnPoolingMethod_t pool_method_;
        int32_t count_;
        int32_t channels_;
        int32_t kernel_h_;
        int32_t kernel_w_;
        int32_t stride_h_;
        int32_t stride_w_;
        int32_t pad_t_;
        int32_t pad_l_;
        int32_t pad_b_;
        int32_t pad_r_;
        int32_t height_;
        int32_t width_;
        int32_t pooled_height_;
        int32_t pooled_width_;
        bool avePoolPaddedArea;
        bool computeMaxIdx;
        bool use_half;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNPool,,false,371,OCL4DNNPool,8
434037,TYPE_DECL,,,,"struct OCL4DNNInnerProductConfig
{
    OCL4DNNInnerProductConfig() :
        num_output(0), M(0), K(0),
        bias_term(false), transpose(false), phase_test(true), use_half(false)
    {}
    int num_output;
    int M;
    int K;
    bool bias_term;
    bool transpose; // = false;
    bool phase_test; // = true;
    bool use_half; // = false;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNInnerProductConfig,,false,406,OCL4DNNInnerProductConfig,9
434049,TYPE_DECL,cv.dnn.ocl4dnn.OCL4DNNInnerProduct<Dtype>,,,"class OCL4DNNInnerProduct
{
    public:
        explicit OCL4DNNInnerProduct(OCL4DNNInnerProductConfig config);
        ~OCL4DNNInnerProduct();
        bool Forward(const UMat& bottom_data,
                     const UMat& weight,
                     const UMat& bias,
                     UMat& top_data);
    private:
        OCL4DNNInnerProductConfig config_;
        //int32_t axis_;
        int32_t num_output_;
        int32_t M_;
        int32_t N_;
        int32_t K_;
        bool bias_term_;
        bool transpose_;
        bool image_copied_;
        bool phase_test_;
        bool use_half_;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNInnerProduct,,false,422,OCL4DNNInnerProduct,10
434077,TYPE_DECL,,,,"typedef enum {
    LRNParameter_NormRegion_ACROSS_CHANNELS = 0,
    LRNParameter_NormRegion_WITHIN_CHANNEL = 1
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.LRNParameter_NormRegion_WITHIN_CHANNEL_t,,false,445,LRNParameter_NormRegion_WITHIN_CHANNEL_t,11
434091,TYPE_DECL,,,,"struct OCL4DNNLRNConfig
{
    OCL4DNNLRNConfig() :
        lrn_type(LRNParameter_NormRegion_ACROSS_CHANNELS),
        phase_test(true),
        local_size(0), alpha(0.f), beta(0.f), k(0.f), norm_by_size(false),
        batch_size(0), channels(0), height(0), width(0), use_half(false)
    {}
    MatShape in_shape;
    LRNParameter_NormRegion_WITHIN_CHANNEL_t lrn_type;
    bool phase_test; // = true;
    int local_size;
    float alpha;
    float beta;
    float k;
    bool norm_by_size;
    int32_t batch_size;
    int32_t channels;
    int32_t height;
    int32_t width;
    bool use_half;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNLRNConfig,,false,450,OCL4DNNLRNConfig,13
434109,TYPE_DECL,cv.dnn.ocl4dnn.OCL4DNNLRN<Dtype>,,,"class OCL4DNNLRN
{
    public:
        explicit OCL4DNNLRN(OCL4DNNLRNConfig config);
        bool Forward(const UMat& bottom_data, UMat& top_data);

    private:
        bool crossChannelForward(const UMat& bottom_data, UMat& top_data);
        LRNParameter_NormRegion_WITHIN_CHANNEL_t lrn_type_;
        bool phase_test_;
        int32_t size_;
        Dtype alpha_;
        Dtype beta_;
        Dtype k_;
        int32_t num_;
        int32_t channels_;
        int32_t height_;
        int32_t width_;
        bool norm_by_size_;
        bool use_half_;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNLRN,,false,474,OCL4DNNLRN,14
434139,TYPE_DECL,,,,"struct OCL4DNNSoftmaxConfig
{
    OCL4DNNSoftmaxConfig() : axis(0), channels(0), logsoftmax(false), use_half(false)
    {}
    MatShape in_shape;
    int axis;
    int channels;
    bool logsoftmax;
    bool use_half;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNSoftmaxConfig,,false,496,OCL4DNNSoftmaxConfig,15
434149,TYPE_DECL,cv.dnn.ocl4dnn.OCL4DNNSoftmax<Dtype>,,,"class OCL4DNNSoftmax
{
    public:
        explicit OCL4DNNSoftmax(OCL4DNNSoftmaxConfig config);
        ~OCL4DNNSoftmax();
        bool Forward(const UMat& bottom_data, UMat& top_data);

    private:
        int32_t softmax_axis_;
        int32_t inner_num_;
        int32_t outer_num_;
        int32_t channels_;
        int32_t count_;
        bool use_slm_;
        bool log_softmax_;
        UMat scale_data_;
        bool use_half_;
}",1,src\ocl4dnn\include\ocl4dnn.hpp,cv.dnn.ocl4dnn.OCL4DNNSoftmax,,false,508,OCL4DNNSoftmax,16
434182,TYPE_DECL,,src\ocl4dnn\src\common.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\src\common.cpp,src\ocl4dnn\src\common.cpp:<global>,,false,1,<global>,4
434232,TYPE_DECL,,src\ocl4dnn\src\math_functions.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\src\math_functions.cpp,src\ocl4dnn\src\math_functions.cpp:<global>,,false,1,<global>,7
434238,TYPE_DECL,,,,"enum gemm_data_type_t
{
    TYPE_FLOAT = 1,
    TYPE_HALF = 2
}",1,src\ocl4dnn\src\math_functions.cpp,cv.dnn.ocl4dnn.gemm_data_type_t,,false,53,gemm_data_type_t,1
434426,TYPE_DECL,,,,"enum gemm_type_t
{
    GEMM_TYPE_NONE = 0,
    GEMM_TYPE_FAST_IMAGE_32_1,
    GEMM_TYPE_FAST_IMAGE_32_2,
    GEMM_TYPE_FAST_IMAGE_B_IMAGE,
    GEMM_TYPE_FAST_BUFFER
}",1,src\ocl4dnn\src\math_functions.cpp,cv.dnn.ocl4dnn.gemm_type_t,,false,137,gemm_type_t,3
436808,TYPE_DECL,,src\ocl4dnn\src\ocl4dnn_conv_spatial.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\src\ocl4dnn_conv_spatial.cpp,src\ocl4dnn\src\ocl4dnn_conv_spatial.cpp:<global>,,false,1,<global>,16
436815,TYPE_DECL,ANY,,,"typedef std::map<std::string, std::string> kernel_hash_t;",44,src\ocl4dnn\src\ocl4dnn_conv_spatial.cpp,kernel_hash_t,,false,68,kernel_hash_t,2
437594,TYPE_DECL,,,,"typedef enum {
    TYPE_FLOAT = 1,
    TYPE_HALF = 2
}",1,src\ocl4dnn\src\ocl4dnn_conv_spatial.cpp,cv.dnn.ocl4dnn.ocl4dnnConvSpatialType_t,,false,292,ocl4dnnConvSpatialType_t,16
437677,TYPE_DECL,,,,"typedef enum {
    KERNEL_TYPE_INTEL_IDLF = 2,
    KERNEL_TYPE_BASIC = 4,
    KERNEL_TYPE_GEMM_LIKE = 5,
    KERNEL_TYPE_DWCONV = 6
}",1,src\ocl4dnn\src\ocl4dnn_conv_spatial.cpp,cv.dnn.ocl4dnn.ocl4dnnConvSpatialKernelType_t,,false,328,ocl4dnnConvSpatialKernelType_t,19
444088,TYPE_DECL,,src\ocl4dnn\src\ocl4dnn_inner_product.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\src\ocl4dnn_inner_product.cpp,src\ocl4dnn\src\ocl4dnn_inner_product.cpp:<global>,,false,1,<global>,5
444308,TYPE_DECL,,src\ocl4dnn\src\ocl4dnn_lrn.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\src\ocl4dnn_lrn.cpp,src\ocl4dnn\src\ocl4dnn_lrn.cpp:<global>,,false,1,<global>,5
444686,TYPE_DECL,,src\ocl4dnn\src\ocl4dnn_pool.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\src\ocl4dnn_pool.cpp,src\ocl4dnn\src\ocl4dnn_pool.cpp:<global>,,false,1,<global>,7
445261,TYPE_DECL,,src\ocl4dnn\src\ocl4dnn_softmax.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\ocl4dnn\src\ocl4dnn_softmax.cpp,src\ocl4dnn\src\ocl4dnn_softmax.cpp:<global>,,false,1,<global>,6
445724,TYPE_DECL,,src\onnx\onnx_graph_simplifier.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\onnx\onnx_graph_simplifier.cpp,src\onnx\onnx_graph_simplifier.cpp:<global>,,false,1,<global>,7
445731,TYPE_DECL,,src\onnx\onnx_graph_simplifier.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\onnx\onnx_graph_simplifier.hpp,src\onnx\onnx_graph_simplifier.hpp:<global>,,false,1,<global>,2
445764,TYPE_DECL,,src\onnx\onnx_importer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\onnx\onnx_importer.cpp,src\onnx\onnx_importer.cpp:<global>,,false,1,<global>,15
445837,TYPE_DECL,,src\op_cann.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_cann.cpp,src\op_cann.cpp:<global>,,false,1,<global>,8
445874,TYPE_DECL,,src\op_cann.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_cann.hpp,src\op_cann.hpp:<global>,,false,1,<global>,16
445889,TYPE_DECL,,src\op_cuda.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_cuda.cpp,src\op_cuda.cpp:<global>,,false,1,<global>,5
445920,TYPE_DECL,,src\op_cuda.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_cuda.hpp,src\op_cuda.hpp:<global>,,false,1,<global>,14
445960,TYPE_DECL,,src\op_halide.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_halide.cpp,src\op_halide.cpp:<global>,,false,1,<global>,8
446069,TYPE_DECL,,src\op_halide.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_halide.hpp,src\op_halide.hpp:<global>,,false,1,<global>,2
446127,TYPE_DECL,,src\op_inf_engine.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_inf_engine.cpp,src\op_inf_engine.cpp:<global>,,false,1,<global>,9
446155,TYPE_DECL,,src\op_inf_engine.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_inf_engine.hpp,src\op_inf_engine.hpp:<global>,,false,1,<global>,11
446171,TYPE_DECL,,src\op_timvx.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_timvx.cpp,src\op_timvx.cpp:<global>,,false,1,<global>,5
446202,TYPE_DECL,,src\op_timvx.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_timvx.hpp,src\op_timvx.hpp:<global>,,false,1,<global>,7
446227,TYPE_DECL,,src\op_vkcom.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_vkcom.cpp,src\op_vkcom.cpp:<global>,,false,1,<global>,5
446250,TYPE_DECL,,src\op_vkcom.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_vkcom.hpp,src\op_vkcom.hpp:<global>,,false,1,<global>,3
446285,TYPE_DECL,,src\op_webnn.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_webnn.cpp,src\op_webnn.cpp:<global>,,false,1,<global>,10
446327,TYPE_DECL,,src\op_webnn.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\op_webnn.hpp,src\op_webnn.hpp:<global>,,false,1,<global>,13
446353,TYPE_DECL,,src\plugin_api.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\plugin_api.hpp,src\plugin_api.hpp:<global>,,false,1,<global>,4
446356,TYPE_DECL,ANY,,,typedef cv::dnn_backend::NetworkBackend* CvPluginDNNNetworkBackend;,40,src\plugin_api.hpp,CvPluginDNNNetworkBackend,,false,34,CvPluginDNNNetworkBackend,1
446357,TYPE_DECL,,,,"struct OpenCV_DNN_Plugin_API_v0_0_api_entries
{
    /** @brief Get backend API instance

    @param[out] handle pointer on inference backend API handle

    @note API-CALL 1, API-Version == 0
     */
    CvResult (CV_API_CALL *getInstance)(CV_OUT CvPluginDNNNetworkBackend* handle) CV_NOEXCEPT;
}",1,src\plugin_api.hpp,OpenCV_DNN_Plugin_API_v0_0_api_entries,,false,36,OpenCV_DNN_Plugin_API_v0_0_api_entries,2
446359,TYPE_DECL,OpenCV_DNN_Plugin_API_v0,,,"typedef struct OpenCV_DNN_Plugin_API_v0
{
    OpenCV_API_Header api_header;
    struct OpenCV_DNN_Plugin_API_v0_0_api_entries v0;
}",1,src\plugin_api.hpp,OpenCV_DNN_Plugin_API_v0,,false,47,OpenCV_DNN_Plugin_API_v0,3
446361,TYPE_DECL,v0,,,struct OpenCV_DNN_Plugin_API_v0_0_api_entries,5,src\plugin_api.hpp,OpenCV_DNN_Plugin_API_v0.OpenCV_DNN_Plugin_API_v0_0_api_entries,,false,50,OpenCV_DNN_Plugin_API_v0_0_api_entries,2
446363,TYPE_DECL,OpenCV_DNN_Plugin_API_v0,,,"typedef struct OpenCV_DNN_Plugin_API_v0
{
    OpenCV_API_Header api_header;
    struct OpenCV_DNN_Plugin_API_v0_0_api_entries v0;
} OpenCV_DNN_Plugin_API_v0;",3,src\plugin_api.hpp,OpenCV_DNN_Plugin_API_v0,,false,51,OpenCV_DNN_Plugin_API_v0,4
446364,TYPE_DECL,OpenCV_DNN_Plugin_API_v0,,,typedef OpenCV_DNN_Plugin_API_v0 OpenCV_DNN_Plugin_API;,34,src\plugin_api.hpp,OpenCV_DNN_Plugin_API,,false,54,OpenCV_DNN_Plugin_API,5
446370,TYPE_DECL,,src\plugin_wrapper.impl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\plugin_wrapper.impl.hpp,src\plugin_wrapper.impl.hpp:<global>,,false,1,<global>,2
446483,TYPE_DECL,,src\precomp.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\precomp.hpp,src\precomp.hpp:<global>,,false,1,<global>,19
446512,TYPE_DECL,,src\registry.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\registry.cpp,src\registry.cpp:<global>,,false,1,<global>,13
446528,TYPE_DECL,,src\tensorflow\tf_graph_simplifier.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\tensorflow\tf_graph_simplifier.cpp,src\tensorflow\tf_graph_simplifier.cpp:<global>,,false,1,<global>,5
446535,TYPE_DECL,,src\tensorflow\tf_graph_simplifier.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\tensorflow\tf_graph_simplifier.hpp,src\tensorflow\tf_graph_simplifier.hpp:<global>,,false,1,<global>,2
446564,TYPE_DECL,,src\tensorflow\tf_importer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\tensorflow\tf_importer.cpp,src\tensorflow\tf_importer.cpp:<global>,,false,1,<global>,13
446652,TYPE_DECL,,src\tensorflow\tf_io.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\tensorflow\tf_io.cpp,src\tensorflow\tf_io.cpp:<global>,,false,1,<global>,13
446665,TYPE_DECL,,src\tensorflow\tf_io.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\tensorflow\tf_io.hpp,src\tensorflow\tf_io.hpp:<global>,,false,1,<global>,5
446670,TYPE_DECL,,src\tflite\builtin_op_data.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\tflite\builtin_op_data.hpp,src\tflite\builtin_op_data.hpp:<global>,,false,1,<global>,1
446673,TYPE_DECL,,,,"typedef enum {
    kTfLitePaddingUnknown = 0,
    kTfLitePaddingSame,
    kTfLitePaddingValid,
}",1,src\tflite\builtin_op_data.hpp,TfLitePadding,,false,2,TfLitePadding,1
446685,TYPE_DECL,,,,"typedef enum {
    kTfLiteActNone = 0,
    kTfLiteActRelu,
    kTfLiteActReluN1To1,  // min(max(-1, x), 1)
    kTfLiteActRelu6,      // min(max(0, x), 6)
    kTfLiteActTanh,
    kTfLiteActSignBit,
    kTfLiteActSigmoid,
}",1,src\tflite\builtin_op_data.hpp,TfLiteFusedActivation,,false,8,TfLiteFusedActivation,3
446701,TYPE_DECL,TfLitePaddingValues,,,"typedef struct {
    int width;
    int height;
    int width_offset;
    int height_offset;
}",1,src\tflite\builtin_op_data.hpp,TfLitePaddingValues,,false,18,TfLitePaddingValues,5
446707,TYPE_DECL,TfLitePoolParams,,,"typedef struct {
    TfLitePadding padding;
    int stride_width;
    int stride_height;
    int filter_width;
    int filter_height;
    TfLiteFusedActivation activation;
    struct {
        TfLitePaddingValues padding;
    } computed;
}",1,src\tflite\builtin_op_data.hpp,TfLitePoolParams,,false,25,TfLitePoolParams,7
446714,TYPE_DECL,computed,,,"struct {
        TfLitePaddingValues padding;
    }",5,src\tflite\builtin_op_data.hpp,TfLitePoolParams.computed,,false,32,TfLitePoolParams.computed,7
446718,TYPE_DECL,TfLiteTransposeConvParams,,,"typedef struct {
    TfLitePadding padding;
    int stride_width;
    int stride_height;
}",1,src\tflite\builtin_op_data.hpp,TfLiteTransposeConvParams,,false,37,TfLiteTransposeConvParams,9
446735,TYPE_DECL,,src\tflite\tflite_importer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\tflite\tflite_importer.cpp,src\tflite\tflite_importer.cpp:<global>,,false,1,<global>,6
446789,TYPE_DECL,,src\torch\THDiskFile.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\torch\THDiskFile.cpp,src\torch\THDiskFile.cpp:<global>,,false,1,<global>,5
446793,TYPE_DECL,THDiskFile,,,"typedef struct THDiskFile__
{
    THFile file;

    FILE *handle;
    int isNativeEncoding;
    int longSize;

}",1,src\torch\THDiskFile.cpp,TH.THDiskFile__,,false,9,THDiskFile__,1
446798,TYPE_DECL,ANY,,,"typedef struct THDiskFile__
{
    THFile file;

    FILE *handle;
    int isNativeEncoding;
    int longSize;

} THDiskFile;",3,src\torch\THDiskFile.cpp,THDiskFile,,false,17,THDiskFile,2
449356,TYPE_DECL,,src\torch\THDiskFile.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\torch\THDiskFile.hpp,src\torch\THDiskFile.hpp:<global>,,false,1,<global>,3
449411,TYPE_DECL,,src\torch\THFile.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\torch\THFile.cpp,src\torch\THFile.cpp:<global>,,false,1,<global>,4
449855,TYPE_DECL,,src\torch\THFile.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\torch\THFile.hpp,src\torch\THFile.hpp:<global>,,false,1,<global>,3
449859,TYPE_DECL,THFile,,,typedef struct THFile__,1,src\torch\THFile.hpp,TH.THFile__,,false,10,THFile__,1
449860,TYPE_DECL,ANY,,,typedef struct THFile__ THFile;,25,src\torch\THFile.hpp,THFile,,false,10,THFile,2
450050,TYPE_DECL,,src\torch\THFilePrivate.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\torch\THFilePrivate.hpp,src\torch\THFilePrivate.hpp:<global>,,false,1,<global>,1
450054,TYPE_DECL,,,,"struct THFile__
{
    struct THFileVTable *vtable;

    int isQuiet;
    int isReadable;
    int isWritable;
    int isBinary;
    int isAutoSpacing;
    int hasError;
}",1,src\torch\THFilePrivate.hpp,TH.THFile__,,false,3,THFile__,1
450055,TYPE_DECL,vtable,,,struct THFileVTable,5,src\torch\THFilePrivate.hpp,TH.THFile__.THFileVTable,,false,5,THFileVTable,1
450063,TYPE_DECL,,,,"struct THFileVTable
{
    int (*isOpened)(THFile *self);

    long (*readByte)(THFile *self, unsigned char *data, long n);
    long (*readChar)(THFile *self, char *data, long n);
    long (*readShort)(THFile *self, short *data, long n);
    long (*readInt)(THFile *self, int *data, long n);
    long (*readLong)(THFile *self, int64 *data, long n);
    long (*readFloat)(THFile *self, float *data, long n);
    long (*readDouble)(THFile *self, double *data, long n);
    long (*readString)(THFile *self, const char *format, char **str_);

    void (*seek)(THFile *self, long position);
    void (*seekEnd)(THFile *self);
    long (*position)(THFile *self);
    void (*close)(THFile *self);
    void (*free)(THFile *self);
}",1,src\torch\THFilePrivate.hpp,TH.THFileVTable,,false,17,THFileVTable,2
450157,TYPE_DECL,,src\torch\THGeneral.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\torch\THGeneral.cpp,src\torch\THGeneral.cpp:<global>,,false,1,<global>,3
450178,TYPE_DECL,,src\torch\THGeneral.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\torch\THGeneral.hpp,src\torch\THGeneral.hpp:<global>,,false,1,<global>,9
450201,TYPE_DECL,,src\torch\torch_importer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\torch\torch_importer.cpp,src\torch\torch_importer.cpp:<global>,,false,1,<global>,10
450211,TYPE_DECL,,,,"enum LuaType
{
    TYPE_NIL      = 0,
    TYPE_NUMBER   = 1,
    TYPE_STRING   = 2,
    TYPE_TABLE    = 3,
    TYPE_TORCH    = 4,
    TYPE_BOOLEAN  = 5,
    TYPE_FUNCTION = 6,
    TYPE_RECUR_FUNCTION = 8,
    LEGACY_TYPE_RECUR_FUNCTION = 7
}",1,src\torch\torch_importer.cpp,cv.dnn.LuaType,,false,67,LuaType,4
450252,TYPE_DECL,,,,"enum TorchType
{
    TYPE_DOUBLE = CV_64F,
    TYPE_FLOAT  = CV_32F,
    TYPE_BYTE   = CV_8U,
    TYPE_CHAR   = CV_8S,
    TYPE_SHORT  = CV_16S,
    TYPE_INT    = CV_32S,
    TYPE_LONG   = CV_32SC2
}",1,src\torch\torch_importer.cpp,cv.dnn.TorchType,,false,81,TorchType,5
450333,TYPE_DECL,,,,"struct TorchImporter
{
    FPDenormalsIgnoreHintScope fp_denormals_ignore_scope;

    typedef std::map<String, std::pair<int, Mat> > TensorsMap;
    Net net;

    cv::Ptr<THFile> file;
    std::set<int> readedIndexes;
    std::map<int, Mat> storages;
    std::map<int, Mat> tensors;
    // Stack with numbers of unconnected layers per scope (Sequential, ConcatTable etc.)
    std::vector<int> numUnconnectedLayers;

    struct Module
    {
        String thName, apiType;
        dnn::LayerParams params;
        std::vector<cv::Ptr<Module> > modules;

        Module(const String &_thName, const String &_apiType = String())
            : thName(_thName), apiType(_apiType) {}
    };

    Module *rootModule;
    Module *curModule;
    int moduleCounter;
    bool testPhase;

    TorchImporter(String filename, bool isBinary, bool evaluate)
    {
        CV_TRACE_FUNCTION();

        rootModule = curModule = NULL;
        moduleCounter = 0;
        testPhase = evaluate;

        file = cv::Ptr...",1,src\torch\torch_importer.cpp,cv.dnn.TorchImporter,,false,110,TorchImporter,9
450335,TYPE_DECL,ANY,,,"typedef std::map<String, std::pair<int, Mat> > TensorsMap;",52,src\torch\torch_importer.cpp,TensorsMap,,false,114,TensorsMap,2
450342,TYPE_DECL,,,,"struct Module
    {
        String thName, apiType;
        dnn::LayerParams params;
        std::vector<cv::Ptr<Module> > modules;

        Module(const String &_thName, const String &_apiType = String())
            : thName(_thName), apiType(_apiType) {}
    }",5,src\torch\torch_importer.cpp,cv.dnn.TorchImporter.Module,,false,124,Module,9
455240,TYPE_DECL,,src\vkcom\include\buffer.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\buffer.hpp,src\vkcom\include\buffer.hpp:<global>,,false,1,<global>,2
455254,TYPE_DECL,,src\vkcom\include\command.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\command.hpp,src\vkcom\include\command.hpp:<global>,,false,1,<global>,4
455270,TYPE_DECL,,src\vkcom\include\context.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\context.hpp,src\vkcom\include\context.hpp:<global>,,false,1,<global>,5
455282,TYPE_DECL,,src\vkcom\include\fence.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\fence.hpp,src\vkcom\include\fence.hpp:<global>,,false,1,<global>,3
455296,TYPE_DECL,,src\vkcom\include\op_base.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\op_base.hpp,src\vkcom\include\op_base.hpp:<global>,,false,1,<global>,4
455308,TYPE_DECL,,src\vkcom\include\op_conv.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\op_conv.hpp,src\vkcom\include\op_conv.hpp:<global>,,false,1,<global>,3
455320,TYPE_DECL,,src\vkcom\include\op_matmul.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\op_matmul.hpp,src\vkcom\include\op_matmul.hpp:<global>,,false,1,<global>,3
455338,TYPE_DECL,,src\vkcom\include\pipeline.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\pipeline.hpp,src\vkcom\include\pipeline.hpp:<global>,,false,1,<global>,6
455352,TYPE_DECL,,src\vkcom\include\tensor.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\tensor.hpp,src\vkcom\include\tensor.hpp:<global>,,false,1,<global>,4
455374,TYPE_DECL,,src\vkcom\include\vkcom.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\include\vkcom.hpp,src\vkcom\include\vkcom.hpp:<global>,,false,1,<global>,8
455384,TYPE_DECL,,src\vkcom\shader\conv_1x1_fast_spv.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\shader\conv_1x1_fast_spv.cpp,src\vkcom\shader\conv_1x1_fast_spv.cpp:<global>,,false,1,<global>,2
456399,TYPE_DECL,,src\vkcom\shader\conv_depthwise_3x3_spv.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\shader\conv_depthwise_3x3_spv.cpp,src\vkcom\shader\conv_depthwise_3x3_spv.cpp:<global>,,false,1,<global>,2
457414,TYPE_DECL,,src\vkcom\shader\conv_depthwise_spv.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\shader\conv_depthwise_spv.cpp,src\vkcom\shader\conv_depthwise_spv.cpp:<global>,,false,1,<global>,2
458429,TYPE_DECL,,src\vkcom\shader\conv_implicit_gemm_spv.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\shader\conv_implicit_gemm_spv.cpp,src\vkcom\shader\conv_implicit_gemm_spv.cpp:<global>,,false,1,<global>,2
459444,TYPE_DECL,,src\vkcom\shader\gemm_spv.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\shader\gemm_spv.cpp,src\vkcom\shader\gemm_spv.cpp:<global>,,false,1,<global>,2
460461,TYPE_DECL,,src\vkcom\shader\spv_shader.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\shader\spv_shader.cpp,src\vkcom\shader\spv_shader.cpp:<global>,,false,1,<global>,3
460549,TYPE_DECL,,src\vkcom\shader\spv_shader.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\shader\spv_shader.hpp,src\vkcom\shader\spv_shader.hpp:<global>,,false,1,<global>,1
460583,TYPE_DECL,,src\vkcom\src\buffer.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\buffer.cpp,src\vkcom\src\buffer.cpp:<global>,,false,1,<global>,4
460597,TYPE_DECL,,src\vkcom\src\command.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\command.cpp,src\vkcom\src\command.cpp:<global>,,false,1,<global>,4
460613,TYPE_DECL,,src\vkcom\src\context.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\context.cpp,src\vkcom\src\context.cpp:<global>,,false,1,<global>,5
460627,TYPE_DECL,,src\vkcom\src\fence.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\fence.cpp,src\vkcom\src\fence.cpp:<global>,,false,1,<global>,4
460639,TYPE_DECL,,src\vkcom\src\internal.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\internal.cpp,src\vkcom\src\internal.cpp:<global>,,false,1,<global>,3
460677,TYPE_DECL,,src\vkcom\src\internal.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\internal.hpp,src\vkcom\src\internal.hpp:<global>,,false,1,<global>,16
460691,TYPE_DECL,,src\vkcom\src\op_base.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\op_base.cpp,src\vkcom\src\op_base.cpp:<global>,,false,1,<global>,4
460705,TYPE_DECL,,src\vkcom\src\op_conv.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\op_conv.cpp,src\vkcom\src\op_conv.cpp:<global>,,false,1,<global>,4
460719,TYPE_DECL,,src\vkcom\src\op_matmul.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\op_matmul.cpp,src\vkcom\src\op_matmul.cpp:<global>,,false,1,<global>,4
460733,TYPE_DECL,,src\vkcom\src\pipeline.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\pipeline.cpp,src\vkcom\src\pipeline.cpp:<global>,,false,1,<global>,4
460745,TYPE_DECL,,src\vkcom\src\tensor.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\src\tensor.cpp,src\vkcom\src\tensor.cpp:<global>,,false,1,<global>,3
460753,TYPE_DECL,,src\vkcom\vulkan\function_list.inl.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\vulkan\function_list.inl.hpp,src\vkcom\vulkan\function_list.inl.hpp:<global>,,false,1,<global>,1
460764,TYPE_DECL,,src\vkcom\vulkan\vk_functions.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\vulkan\vk_functions.cpp,src\vkcom\vulkan\vk_functions.cpp:<global>,,false,1,<global>,4
460775,TYPE_DECL,,src\vkcom\vulkan\vk_functions.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\vulkan\vk_functions.hpp,src\vkcom\vulkan\vk_functions.hpp:<global>,,false,1,<global>,4
460800,TYPE_DECL,,src\vkcom\vulkan\vk_loader.cpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\vulkan\vk_loader.cpp,src\vkcom\vulkan\vk_loader.cpp:<global>,,false,1,<global>,11
460810,TYPE_DECL,,src\vkcom\vulkan\vk_loader.hpp:<global>,NAMESPACE_BLOCK,<global>,1,src\vkcom\vulkan\vk_loader.hpp,src\vkcom\vulkan\vk_loader.hpp:<global>,,false,1,<global>,2
464861,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BINDING_NO_CLASS!,,<includes>,!ISemanticProblem.BINDING_NO_CLASS!,,true,,BINDING_NO_CLASS!,-1
464862,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[13],,<includes>,.PROTOBUF_NAMESPACE_ID.Metadata[13],,true,,Metadata[13],-1
464863,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[1],,<includes>,.PROTOBUF_NAMESPACE_ID.Metadata[1],,true,,Metadata[1],-1
464864,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[2],,<includes>,.PROTOBUF_NAMESPACE_ID.Metadata[2],,true,,Metadata[2],-1
464865,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[3],,<includes>,.PROTOBUF_NAMESPACE_ID.Metadata[3],,true,,Metadata[3],-1
464866,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[4],,<includes>,.PROTOBUF_NAMESPACE_ID.Metadata[4],,true,,Metadata[4],-1
464867,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[5],,<includes>,.PROTOBUF_NAMESPACE_ID.Metadata[5],,true,,Metadata[5],-1
464868,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[71],,<includes>,.PROTOBUF_NAMESPACE_ID.Metadata[71],,true,,Metadata[71],-1
464869,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ANY,,<includes>,ANY,,true,,ANY,-1
464870,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ANY*,,<includes>,ANY*,,true,,ANY*,-1
464871,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ANY**,,<includes>,ANY**,,true,,ANY**,-1
464872,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ATan2Options,,<includes>,ATan2Options,,true,,ATan2Options,-1
464873,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ATan2OptionsBuilder,,<includes>,ATan2OptionsBuilder,,true,,ATan2OptionsBuilder,-1
464874,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AbsOptions,,<includes>,AbsOptions,,true,,AbsOptions,-1
464875,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AbsOptionsBuilder,,<includes>,AbsOptionsBuilder,,true,,AbsOptionsBuilder,-1
464876,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AccessFlag,,<includes>,AccessFlag,,true,,AccessFlag,-1
464877,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AccumLayerImpl,,<includes>,AccumLayerImpl,,true,,AccumLayerImpl,-1
464878,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AccuracyParameter,,<includes>,AccuracyParameter,,true,,AccuracyParameter,-1
464879,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AccuracyParameter*,,<includes>,AccuracyParameter*,,true,,AccuracyParameter*,-1
464880,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AccuracyParameterDefaultTypeInternal,,<includes>,AccuracyParameterDefaultTypeInternal,,true,,AccuracyParameterDefaultTypeInternal,-1
464881,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ActivationFunction,,<includes>,ActivationFunction,,true,,ActivationFunction,-1
464882,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ActivationFunctionType,,<includes>,ActivationFunctionType,,true,,ActivationFunctionType,-1
464883,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ActivationLayer*,,<includes>,ActivationLayer*,,true,,ActivationLayer*,-1
464884,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ActivationLayerInt8Impl,,<includes>,ActivationLayerInt8Impl,,true,,ActivationLayerInt8Impl,-1
464885,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AddNOptions,,<includes>,AddNOptions,,true,,AddNOptions,-1
464886,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AddNOptionsBuilder,,<includes>,AddNOptionsBuilder,,true,,AddNOptionsBuilder,-1
464887,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AddOptions,,<includes>,AddOptions,,true,,AddOptions,-1
464888,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AddOptionsBuilder,,<includes>,AddOptionsBuilder,,true,,AddOptionsBuilder,-1
464889,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Arena,,<includes>,Arena,,true,,Arena,-1
464890,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Arena*,,<includes>,Arena*,,true,,Arena*,-1
464891,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArenaStringPtr,,<includes>,ArenaStringPtr,,true,,ArenaStringPtr,-1
464892,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgLayerImpl,,<includes>,ArgLayerImpl,,true,,ArgLayerImpl,-1
464893,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMaxOptions,,<includes>,ArgMaxOptions,,true,,ArgMaxOptions,-1
464894,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMaxOptionsBuilder,,<includes>,ArgMaxOptionsBuilder,,true,,ArgMaxOptionsBuilder,-1
464895,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMaxParameter,,<includes>,ArgMaxParameter,,true,,ArgMaxParameter,-1
464896,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMaxParameter*,,<includes>,ArgMaxParameter*,,true,,ArgMaxParameter*,-1
464897,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMaxParameterDefaultTypeInternal,,<includes>,ArgMaxParameterDefaultTypeInternal,,true,,ArgMaxParameterDefaultTypeInternal,-1
464898,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMinOptions,,<includes>,ArgMinOptions,,true,,ArgMinOptions,-1
464899,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMinOptionsBuilder,,<includes>,ArgMinOptionsBuilder,,true,,ArgMinOptionsBuilder,-1
464900,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgT,,<includes>,ArgT,,true,,ArgT,-1
464901,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgT0,,<includes>,ArgT0,,true,,ArgT0,-1
464902,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Args,,<includes>,Args,,true,,Args,-1
464903,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AssignVariableOptions,,<includes>,AssignVariableOptions,,true,,AssignVariableOptions,-1
464904,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AssignVariableOptionsBuilder,,<includes>,AssignVariableOptionsBuilder,,true,,AssignVariableOptionsBuilder,-1
464905,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttrValue,,<includes>,AttrValue,,true,,AttrValue,-1
464906,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttrValue*,,<includes>,AttrValue*,,true,,AttrValue*,-1
464907,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttrValueDefaultTypeInternal,,<includes>,AttrValueDefaultTypeInternal,,true,,AttrValueDefaultTypeInternal,-1
464908,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttrValue_ListValue,,<includes>,AttrValue_ListValue,,true,,AttrValue_ListValue,-1
464909,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttrValue_ListValue*,,<includes>,AttrValue_ListValue*,,true,,AttrValue_ListValue*,-1
464910,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttrValue_ListValueDefaultTypeInternal,,<includes>,AttrValue_ListValueDefaultTypeInternal,,true,,AttrValue_ListValueDefaultTypeInternal,-1
464911,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttributeProto,,<includes>,AttributeProto,,true,,AttributeProto,-1
464912,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttributeProto*,,<includes>,AttributeProto*,,true,,AttributeProto*,-1
464913,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttributeProtoDefaultTypeInternal,,<includes>,AttributeProtoDefaultTypeInternal,,true,,AttributeProtoDefaultTypeInternal,-1
464914,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttributeProto_AttributeType,,<includes>,AttributeProto_AttributeType,,true,,AttributeProto_AttributeType,-1
464915,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttributeProto_AttributeType*,,<includes>,AttributeProto_AttributeType*,,true,,AttributeProto_AttributeType*,-1
464916,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttributeType*,,<includes>,AttributeType*,,true,,AttributeType*,-1
464917,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"AutoBuffer<String,1>",,<includes>,"AutoBuffer<String,1>",,true,,"AutoBuffer<String,1>",-1
464918,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AutoBuffer<char>,,<includes>,AutoBuffer<char>,,true,,AutoBuffer<char>,-1
464919,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"AutoBuffer<double,1>",,<includes>,"AutoBuffer<double,1>",,true,,"AutoBuffer<double,1>",-1
464920,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"AutoBuffer<double,1>*",,<includes>,"AutoBuffer<double,1>*",,true,,"AutoBuffer<double,1>*",-1
464921,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AutoBuffer<float>,,<includes>,AutoBuffer<float>,,true,,AutoBuffer<float>,-1
464922,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"AutoBuffer<int,4>",,<includes>,"AutoBuffer<int,4>",,true,,"AutoBuffer<int,4>",-1
464923,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"AutoBuffer<int64,1>",,<includes>,"AutoBuffer<int64,1>",,true,,"AutoBuffer<int64,1>",-1
464924,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Backend,,<includes>,Backend,,true,,Backend,-1
464925,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseConvolutionLayerImpl,,<includes>,BaseConvolutionLayerImpl,,true,,BaseConvolutionLayerImpl,-1
464926,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<AbsValFunctor>,,<includes>,BaseDefaultFunctor<AbsValFunctor>,,true,,BaseDefaultFunctor<AbsValFunctor>,-1
464927,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<AcosFunctor>,,<includes>,BaseDefaultFunctor<AcosFunctor>,,true,,BaseDefaultFunctor<AcosFunctor>,-1
464928,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<AcoshFunctor>,,<includes>,BaseDefaultFunctor<AcoshFunctor>,,true,,BaseDefaultFunctor<AcoshFunctor>,-1
464929,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<AsinFunctor>,,<includes>,BaseDefaultFunctor<AsinFunctor>,,true,,BaseDefaultFunctor<AsinFunctor>,-1
464930,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<AsinhFunctor>,,<includes>,BaseDefaultFunctor<AsinhFunctor>,,true,,BaseDefaultFunctor<AsinhFunctor>,-1
464931,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<AtanFunctor>,,<includes>,BaseDefaultFunctor<AtanFunctor>,,true,,BaseDefaultFunctor<AtanFunctor>,-1
464932,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<AtanhFunctor>,,<includes>,BaseDefaultFunctor<AtanhFunctor>,,true,,BaseDefaultFunctor<AtanhFunctor>,-1
464933,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<BNLLFunctor>,,<includes>,BaseDefaultFunctor<BNLLFunctor>,,true,,BaseDefaultFunctor<BNLLFunctor>,-1
464934,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<CeilFunctor>,,<includes>,BaseDefaultFunctor<CeilFunctor>,,true,,BaseDefaultFunctor<CeilFunctor>,-1
464935,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<CeluFunctor>,,<includes>,BaseDefaultFunctor<CeluFunctor>,,true,,BaseDefaultFunctor<CeluFunctor>,-1
464936,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<CosFunctor>,,<includes>,BaseDefaultFunctor<CosFunctor>,,true,,BaseDefaultFunctor<CosFunctor>,-1
464937,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<CoshFunctor>,,<includes>,BaseDefaultFunctor<CoshFunctor>,,true,,BaseDefaultFunctor<CoshFunctor>,-1
464938,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<ELUFunctor>,,<includes>,BaseDefaultFunctor<ELUFunctor>,,true,,BaseDefaultFunctor<ELUFunctor>,-1
464939,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<ErfFunctor>,,<includes>,BaseDefaultFunctor<ErfFunctor>,,true,,BaseDefaultFunctor<ErfFunctor>,-1
464940,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<ExpFunctor>,,<includes>,BaseDefaultFunctor<ExpFunctor>,,true,,BaseDefaultFunctor<ExpFunctor>,-1
464941,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<FloorFunctor>,,<includes>,BaseDefaultFunctor<FloorFunctor>,,true,,BaseDefaultFunctor<FloorFunctor>,-1
464942,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<GeluApproximationFunctor>,,<includes>,BaseDefaultFunctor<GeluApproximationFunctor>,,true,,BaseDefaultFunctor<GeluApproximationFunctor>,-1
464943,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<GeluFunctor>,,<includes>,BaseDefaultFunctor<GeluFunctor>,,true,,BaseDefaultFunctor<GeluFunctor>,-1
464944,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<HardSigmoidFunctor>,,<includes>,BaseDefaultFunctor<HardSigmoidFunctor>,,true,,BaseDefaultFunctor<HardSigmoidFunctor>,-1
464945,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<HardSwishFunctor>,,<includes>,BaseDefaultFunctor<HardSwishFunctor>,,true,,BaseDefaultFunctor<HardSwishFunctor>,-1
464946,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<LogFunctor>,,<includes>,BaseDefaultFunctor<LogFunctor>,,true,,BaseDefaultFunctor<LogFunctor>,-1
464947,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<MishFunctor>,,<includes>,BaseDefaultFunctor<MishFunctor>,,true,,BaseDefaultFunctor<MishFunctor>,-1
464948,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<NotFunctor>,,<includes>,BaseDefaultFunctor<NotFunctor>,,true,,BaseDefaultFunctor<NotFunctor>,-1
464949,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<ReciprocalFunctor>,,<includes>,BaseDefaultFunctor<ReciprocalFunctor>,,true,,BaseDefaultFunctor<ReciprocalFunctor>,-1
464950,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<RoundFunctor>,,<includes>,BaseDefaultFunctor<RoundFunctor>,,true,,BaseDefaultFunctor<RoundFunctor>,-1
464951,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SeluFunctor>,,<includes>,BaseDefaultFunctor<SeluFunctor>,,true,,BaseDefaultFunctor<SeluFunctor>,-1
464952,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<ShrinkFunctor>,,<includes>,BaseDefaultFunctor<ShrinkFunctor>,,true,,BaseDefaultFunctor<ShrinkFunctor>,-1
464953,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SigmoidFunctor>,,<includes>,BaseDefaultFunctor<SigmoidFunctor>,,true,,BaseDefaultFunctor<SigmoidFunctor>,-1
464954,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SignFunctor>,,<includes>,BaseDefaultFunctor<SignFunctor>,,true,,BaseDefaultFunctor<SignFunctor>,-1
464955,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SinFunctor>,,<includes>,BaseDefaultFunctor<SinFunctor>,,true,,BaseDefaultFunctor<SinFunctor>,-1
464956,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SinhFunctor>,,<includes>,BaseDefaultFunctor<SinhFunctor>,,true,,BaseDefaultFunctor<SinhFunctor>,-1
464957,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SoftplusFunctor>,,<includes>,BaseDefaultFunctor<SoftplusFunctor>,,true,,BaseDefaultFunctor<SoftplusFunctor>,-1
464958,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SoftsignFunctor>,,<includes>,BaseDefaultFunctor<SoftsignFunctor>,,true,,BaseDefaultFunctor<SoftsignFunctor>,-1
464959,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SqrtFunctor>,,<includes>,BaseDefaultFunctor<SqrtFunctor>,,true,,BaseDefaultFunctor<SqrtFunctor>,-1
464960,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<SwishFunctor>,,<includes>,BaseDefaultFunctor<SwishFunctor>,,true,,BaseDefaultFunctor<SwishFunctor>,-1
464961,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<TanFunctor>,,<includes>,BaseDefaultFunctor<TanFunctor>,,true,,BaseDefaultFunctor<TanFunctor>,-1
464962,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<TanHFunctor>,,<includes>,BaseDefaultFunctor<TanHFunctor>,,true,,BaseDefaultFunctor<TanHFunctor>,-1
464963,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<ThresholdedReluFunctor>,,<includes>,BaseDefaultFunctor<ThresholdedReluFunctor>,,true,,BaseDefaultFunctor<ThresholdedReluFunctor>,-1
464964,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseFunctor,,<includes>,BaseFunctor,,true,,BaseFunctor,-1
464965,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<AbsValOp, T>",,<includes>,"BaseOp<AbsValOp, T>",,true,,"BaseOp<AbsValOp, T>",-1
464966,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<AcosOp, T>",,<includes>,"BaseOp<AcosOp, T>",,true,,"BaseOp<AcosOp, T>",-1
464967,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<AcoshOp, T>",,<includes>,"BaseOp<AcoshOp, T>",,true,,"BaseOp<AcoshOp, T>",-1
464968,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<AsinOp, T>",,<includes>,"BaseOp<AsinOp, T>",,true,,"BaseOp<AsinOp, T>",-1
464969,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<AsinhOp, T>",,<includes>,"BaseOp<AsinhOp, T>",,true,,"BaseOp<AsinhOp, T>",-1
464970,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<AtanOp, T>",,<includes>,"BaseOp<AtanOp, T>",,true,,"BaseOp<AtanOp, T>",-1
464971,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<AtanhOp, T>",,<includes>,"BaseOp<AtanhOp, T>",,true,,"BaseOp<AtanhOp, T>",-1
464972,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<BNLLOp, T>",,<includes>,"BaseOp<BNLLOp, T>",,true,,"BaseOp<BNLLOp, T>",-1
464973,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<CeilOp, T>",,<includes>,"BaseOp<CeilOp, T>",,true,,"BaseOp<CeilOp, T>",-1
464974,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<CeluOp, T>",,<includes>,"BaseOp<CeluOp, T>",,true,,"BaseOp<CeluOp, T>",-1
464975,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ChannelwiseReLUOp, T>",,<includes>,"BaseOp<ChannelwiseReLUOp, T>",,true,,"BaseOp<ChannelwiseReLUOp, T>",-1
464976,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ClippedReLUOp, T>",,<includes>,"BaseOp<ClippedReLUOp, T>",,true,,"BaseOp<ClippedReLUOp, T>",-1
464977,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<CosOp, T>",,<includes>,"BaseOp<CosOp, T>",,true,,"BaseOp<CosOp, T>",-1
464978,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<CoshOp, T>",,<includes>,"BaseOp<CoshOp, T>",,true,,"BaseOp<CoshOp, T>",-1
464979,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ELUOp, T>",,<includes>,"BaseOp<ELUOp, T>",,true,,"BaseOp<ELUOp, T>",-1
464980,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ErfOp, T>",,<includes>,"BaseOp<ErfOp, T>",,true,,"BaseOp<ErfOp, T>",-1
464981,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ExpOp, T>",,<includes>,"BaseOp<ExpOp, T>",,true,,"BaseOp<ExpOp, T>",-1
464982,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<FloorOp, T>",,<includes>,"BaseOp<FloorOp, T>",,true,,"BaseOp<FloorOp, T>",-1
464983,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<GeluOp, T>",,<includes>,"BaseOp<GeluOp, T>",,true,,"BaseOp<GeluOp, T>",-1
464984,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<HardSigmoidOp, T>",,<includes>,"BaseOp<HardSigmoidOp, T>",,true,,"BaseOp<HardSigmoidOp, T>",-1
464985,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<HardSwishOp, T>",,<includes>,"BaseOp<HardSwishOp, T>",,true,,"BaseOp<HardSwishOp, T>",-1
464986,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<LogOp, T>",,<includes>,"BaseOp<LogOp, T>",,true,,"BaseOp<LogOp, T>",-1
464987,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<MishOp, T>",,<includes>,"BaseOp<MishOp, T>",,true,,"BaseOp<MishOp, T>",-1
464988,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<NotOp, T>",,<includes>,"BaseOp<NotOp, T>",,true,,"BaseOp<NotOp, T>",-1
464989,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<PowerOp, T>",,<includes>,"BaseOp<PowerOp, T>",,true,,"BaseOp<PowerOp, T>",-1
464990,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ReLUOp, T>",,<includes>,"BaseOp<ReLUOp, T>",,true,,"BaseOp<ReLUOp, T>",-1
464991,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ReciprocalOp, T>",,<includes>,"BaseOp<ReciprocalOp, T>",,true,,"BaseOp<ReciprocalOp, T>",-1
464992,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<RoundOp, T>",,<includes>,"BaseOp<RoundOp, T>",,true,,"BaseOp<RoundOp, T>",-1
464993,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SeluOp, T>",,<includes>,"BaseOp<SeluOp, T>",,true,,"BaseOp<SeluOp, T>",-1
464994,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ShrinkOp, T>",,<includes>,"BaseOp<ShrinkOp, T>",,true,,"BaseOp<ShrinkOp, T>",-1
464995,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SigmoidOp, T>",,<includes>,"BaseOp<SigmoidOp, T>",,true,,"BaseOp<SigmoidOp, T>",-1
464996,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SignOp, T>",,<includes>,"BaseOp<SignOp, T>",,true,,"BaseOp<SignOp, T>",-1
464997,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SinOp, T>",,<includes>,"BaseOp<SinOp, T>",,true,,"BaseOp<SinOp, T>",-1
464998,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SinhOp, T>",,<includes>,"BaseOp<SinhOp, T>",,true,,"BaseOp<SinhOp, T>",-1
464999,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SoftplusOp, T>",,<includes>,"BaseOp<SoftplusOp, T>",,true,,"BaseOp<SoftplusOp, T>",-1
465000,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SoftsignOp, T>",,<includes>,"BaseOp<SoftsignOp, T>",,true,,"BaseOp<SoftsignOp, T>",-1
465001,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SqrtOp, T>",,<includes>,"BaseOp<SqrtOp, T>",,true,,"BaseOp<SqrtOp, T>",-1
465002,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<SwishOp, T>",,<includes>,"BaseOp<SwishOp, T>",,true,,"BaseOp<SwishOp, T>",-1
465003,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<TanHOp, T>",,<includes>,"BaseOp<TanHOp, T>",,true,,"BaseOp<TanHOp, T>",-1
465004,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<TanOp, T>",,<includes>,"BaseOp<TanOp, T>",,true,,"BaseOp<TanOp, T>",-1
465005,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<ThresholdedReluOp, T>",,<includes>,"BaseOp<ThresholdedReluOp, T>",,true,,"BaseOp<ThresholdedReluOp, T>",-1
465006,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchMatMulOptions,,<includes>,BatchMatMulOptions,,true,,BatchMatMulOptions,-1
465007,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchMatMulOptionsBuilder,,<includes>,BatchMatMulOptionsBuilder,,true,,BatchMatMulOptionsBuilder,-1
465008,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchNormLayerImpl,,<includes>,BatchNormLayerImpl,,true,,BatchNormLayerImpl,-1
465009,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchNormLayerInt8Impl,,<includes>,BatchNormLayerInt8Impl,,true,,BatchNormLayerInt8Impl,-1
465010,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchNormParameter,,<includes>,BatchNormParameter,,true,,BatchNormParameter,-1
465011,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchNormParameter*,,<includes>,BatchNormParameter*,,true,,BatchNormParameter*,-1
465012,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchNormParameterDefaultTypeInternal,,<includes>,BatchNormParameterDefaultTypeInternal,,true,,BatchNormParameterDefaultTypeInternal,-1
465013,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchToSpaceNDOptions,,<includes>,BatchToSpaceNDOptions,,true,,BatchToSpaceNDOptions,-1
465014,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchToSpaceNDOptionsBuilder,,<includes>,BatchToSpaceNDOptionsBuilder,,true,,BatchToSpaceNDOptionsBuilder,-1
465015,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BiasParameter,,<includes>,BiasParameter,,true,,BiasParameter,-1
465016,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BiasParameter*,,<includes>,BiasParameter*,,true,,BiasParameter*,-1
465017,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BiasParameterDefaultTypeInternal,,<includes>,BiasParameterDefaultTypeInternal,,true,,BiasParameterDefaultTypeInternal,-1
465018,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BidirectionalSequenceLSTMOptions,,<includes>,BidirectionalSequenceLSTMOptions,,true,,BidirectionalSequenceLSTMOptions,-1
465019,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BidirectionalSequenceLSTMOptionsBuilder,,<includes>,BidirectionalSequenceLSTMOptionsBuilder,,true,,BidirectionalSequenceLSTMOptionsBuilder,-1
465020,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BidirectionalSequenceRNNOptions,,<includes>,BidirectionalSequenceRNNOptions,,true,,BidirectionalSequenceRNNOptions,-1
465021,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BidirectionalSequenceRNNOptionsBuilder,,<includes>,BidirectionalSequenceRNNOptionsBuilder,,true,,BidirectionalSequenceRNNOptionsBuilder,-1
465022,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlankLayerImpl,,<includes>,BlankLayerImpl,,true,,BlankLayerImpl,-1
465023,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobManager,,<includes>,BlobManager,,true,,BlobManager,-1
465024,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobProto,,<includes>,BlobProto,,true,,BlobProto,-1
465025,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobProto*,,<includes>,BlobProto*,,true,,BlobProto*,-1
465026,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobProtoDefaultTypeInternal,,<includes>,BlobProtoDefaultTypeInternal,,true,,BlobProtoDefaultTypeInternal,-1
465027,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobProtoVector,,<includes>,BlobProtoVector,,true,,BlobProtoVector,-1
465028,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobProtoVector*,,<includes>,BlobProtoVector*,,true,,BlobProtoVector*,-1
465029,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobProtoVectorDefaultTypeInternal,,<includes>,BlobProtoVectorDefaultTypeInternal,,true,,BlobProtoVectorDefaultTypeInternal,-1
465030,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobShape,,<includes>,BlobShape,,true,,BlobShape,-1
465031,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobShape*,,<includes>,BlobShape*,,true,,BlobShape*,-1
465032,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobShapeDefaultTypeInternal,,<includes>,BlobShapeDefaultTypeInternal,,true,,BlobShapeDefaultTypeInternal,-1
465033,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BroadcastToOptions,,<includes>,BroadcastToOptions,,true,,BroadcastToOptions,-1
465034,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BroadcastToOptionsBuilder,,<includes>,BroadcastToOptionsBuilder,,true,,BroadcastToOptionsBuilder,-1
465035,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BucketizeOptions,,<includes>,BucketizeOptions,,true,,BucketizeOptions,-1
465036,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BucketizeOptionsBuilder,,<includes>,BucketizeOptionsBuilder,,true,,BucketizeOptionsBuilder,-1
465037,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BufferBuilder,,<includes>,BufferBuilder,,true,,BufferBuilder,-1
465038,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BufferStream,,<includes>,BufferStream,,true,,BufferStream,-1
465039,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BuiltinOperator,,<includes>,BuiltinOperator,,true,,BuiltinOperator,-1
465040,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BuiltinOptions,,<includes>,BuiltinOptions,,true,,BuiltinOptions,-1
465041,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CBLAS_TRANSPOSE,,<includes>,CBLAS_TRANSPOSE,,true,,CBLAS_TRANSPOSE,-1
465042,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CUDABackendNode,,<includes>,CUDABackendNode,,true,,CUDABackendNode,-1
465043,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CUDAException,,<includes>,CUDAException,,true,,CUDAException,-1
465044,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CV_Assert,,<includes>,CV_Assert,,true,,CV_Assert,-1
465045,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CV_DbgAssert,,<includes>,CV_DbgAssert,,true,,CV_DbgAssert,-1
465046,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CV__DNN_INLINE_NS_BEGIN,,<includes>,CV__DNN_INLINE_NS_BEGIN,,true,,CV__DNN_INLINE_NS_BEGIN,-1
465047,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallOnceOptions,,<includes>,CallOnceOptions,,true,,CallOnceOptions,-1
465048,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallOnceOptionsBuilder,,<includes>,CallOnceOptionsBuilder,,true,,CallOnceOptionsBuilder,-1
465049,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallOptions,,<includes>,CallOptions,,true,,CallOptions,-1
465050,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallOptionsBuilder,,<includes>,CallOptionsBuilder,,true,,CallOptionsBuilder,-1
465051,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CastOptions,,<includes>,CastOptions,,true,,CastOptions,-1
465052,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CastOptionsBuilder,,<includes>,CastOptionsBuilder,,true,,CastOptionsBuilder,-1
465053,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ChannelsPReLUFunctor,,<includes>,ChannelsPReLUFunctor,,true,,ChannelsPReLUFunctor,-1
465054,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClassData,,<includes>,ClassData,,true,,ClassData,-1
465055,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClassificationModel,,<includes>,ClassificationModel,,true,,ClassificationModel,-1
465056,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClassificationModel_Impl,,<includes>,ClassificationModel_Impl,,true,,ClassificationModel_Impl,-1
465057,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CodeType*,,<includes>,CodeType*,,true,,CodeType*,-1
465058,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CombinerType,,<includes>,CombinerType,,true,,CombinerType,-1
465059,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatEmbeddingsOptions,,<includes>,ConcatEmbeddingsOptions,,true,,ConcatEmbeddingsOptions,-1
465060,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatEmbeddingsOptionsBuilder,,<includes>,ConcatEmbeddingsOptionsBuilder,,true,,ConcatEmbeddingsOptionsBuilder,-1
465061,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatLayerImpl,,<includes>,ConcatLayerImpl,,true,,ConcatLayerImpl,-1
465062,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatParameter,,<includes>,ConcatParameter,,true,,ConcatParameter,-1
465063,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatParameter*,,<includes>,ConcatParameter*,,true,,ConcatParameter*,-1
465064,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatParameterDefaultTypeInternal,,<includes>,ConcatParameterDefaultTypeInternal,,true,,ConcatParameterDefaultTypeInternal,-1
465065,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatenationOptions,,<includes>,ConcatenationOptions,,true,,ConcatenationOptions,-1
465066,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatenationOptionsBuilder,,<includes>,ConcatenationOptionsBuilder,,true,,ConcatenationOptionsBuilder,-1
465067,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConstLayerImpl,,<includes>,ConstLayerImpl,,true,,ConstLayerImpl,-1
465068,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Constructor,,<includes>,Constructor,,true,,Constructor,-1
465069,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Context,,<includes>,Context,,true,,Context,-1
465070,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContrastiveLossParameter,,<includes>,ContrastiveLossParameter,,true,,ContrastiveLossParameter,-1
465071,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContrastiveLossParameter*,,<includes>,ContrastiveLossParameter*,,true,,ContrastiveLossParameter*,-1
465072,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ContrastiveLossParameterDefaultTypeInternal,,<includes>,ContrastiveLossParameterDefaultTypeInternal,,true,,ContrastiveLossParameterDefaultTypeInternal,-1
465073,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv1DParamID,,<includes>,Conv1DParamID,,true,,Conv1DParamID,-1
465074,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv1DParam_t,,<includes>,Conv1DParam_t,,true,,Conv1DParam_t,-1
465075,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv2DOptions,,<includes>,Conv2DOptions,,true,,Conv2DOptions,-1
465076,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv2DOptionsBuilder,,<includes>,Conv2DOptionsBuilder,,true,,Conv2DOptionsBuilder,-1
465077,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv3DOptions,,<includes>,Conv3DOptions,,true,,Conv3DOptions,-1
465078,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv3DOptionsBuilder,,<includes>,Conv3DOptionsBuilder,,true,,Conv3DOptionsBuilder,-1
465079,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv3DParamID,,<includes>,Conv3DParamID,,true,,Conv3DParamID,-1
465080,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv3DParam_t,,<includes>,Conv3DParam_t,,true,,Conv3DParam_t,-1
465081,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvParamGenerator,,<includes>,ConvParamGenerator,,true,,ConvParamGenerator,-1
465082,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvParam_t,,<includes>,ConvParam_t,,true,,ConvParam_t,-1
465083,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvParam_t*,,<includes>,ConvParam_t*,,true,,ConvParam_t*,-1
465084,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Convolution,,<includes>,Convolution,,true,,Convolution,-1
465085,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionAlgorithm<T>,,<includes>,ConvolutionAlgorithm<T>,,true,,ConvolutionAlgorithm<T>,-1
465086,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionAlgorithm<half>,,<includes>,ConvolutionAlgorithm<half>,,true,,ConvolutionAlgorithm<half>,-1
465087,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionConfiguration,,<includes>,ConvolutionConfiguration,,true,,ConvolutionConfiguration,-1
465088,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionDescriptor<T>,,<includes>,ConvolutionDescriptor<T>,,true,,ConvolutionDescriptor<T>,-1
465089,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionDescriptor<half>,,<includes>,ConvolutionDescriptor<half>,,true,,ConvolutionDescriptor<half>,-1
465090,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionLayer,,<includes>,ConvolutionLayer,,true,,ConvolutionLayer,-1
465091,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionLayerImpl,,<includes>,ConvolutionLayerImpl,,true,,ConvolutionLayerImpl,-1
465092,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionLayerInt8,,<includes>,ConvolutionLayerInt8,,true,,ConvolutionLayerInt8,-1
465093,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionLayerInt8Impl,,<includes>,ConvolutionLayerInt8Impl,,true,,ConvolutionLayerInt8Impl,-1
465094,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionParameter,,<includes>,ConvolutionParameter,,true,,ConvolutionParameter,-1
465095,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionParameter*,,<includes>,ConvolutionParameter*,,true,,ConvolutionParameter*,-1
465096,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionParameterDefaultTypeInternal,,<includes>,ConvolutionParameterDefaultTypeInternal,,true,,ConvolutionParameterDefaultTypeInternal,-1
465097,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionParameter_Engine,,<includes>,ConvolutionParameter_Engine,,true,,ConvolutionParameter_Engine,-1
465098,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionParameter_Engine*,,<includes>,ConvolutionParameter_Engine*,,true,,ConvolutionParameter_Engine*,-1
465099,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CorrelationLayerImpl,,<includes>,CorrelationLayerImpl,,true,,CorrelationLayerImpl,-1
465100,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CosOptions,,<includes>,CosOptions,,true,,CosOptions,-1
465101,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CosOptionsBuilder,,<includes>,CosOptionsBuilder,,true,,CosOptionsBuilder,-1
465102,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CropAndResizeLayerImpl,,<includes>,CropAndResizeLayerImpl,,true,,CropAndResizeLayerImpl,-1
465103,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CropLayerImpl,,<includes>,CropLayerImpl,,true,,CropLayerImpl,-1
465104,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CropParameter,,<includes>,CropParameter,,true,,CropParameter,-1
465105,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CropParameter*,,<includes>,CropParameter*,,true,,CropParameter*,-1
465106,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CropParameterDefaultTypeInternal,,<includes>,CropParameterDefaultTypeInternal,,true,,CropParameterDefaultTypeInternal,-1
465107,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CumSumLayerImpl,,<includes>,CumSumLayerImpl,,true,,CumSumLayerImpl,-1
465108,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CumsumOptions,,<includes>,CumsumOptions,,true,,CumsumOptions,-1
465109,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CumsumOptionsBuilder,,<includes>,CumsumOptionsBuilder,,true,,CumsumOptionsBuilder,-1
465110,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CustomOptionsFormat,,<includes>,CustomOptionsFormat,,true,,CustomOptionsFormat,-1
465111,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CustomQuantization,,<includes>,CustomQuantization,,true,,CustomQuantization,-1
465112,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CustomQuantizationBuilder,,<includes>,CustomQuantizationBuilder,,true,,CustomQuantizationBuilder,-1
465113,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DB*,,<includes>,DB*,,true,,DB*,-1
465114,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DNNTestNetwork,,<includes>,DNNTestNetwork,,true,,DNNTestNetwork,-1
465115,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DarknetImporter,,<includes>,DarknetImporter,,true,,DarknetImporter,-1
465116,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataAugmentationLayerImpl,,<includes>,DataAugmentationLayerImpl,,true,,DataAugmentationLayerImpl,-1
465117,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataLayer,,<includes>,DataLayer,,true,,DataLayer,-1
465118,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataLayout,,<includes>,DataLayout,,true,,DataLayout,-1
465119,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataParameter,,<includes>,DataParameter,,true,,DataParameter,-1
465120,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataParameter*,,<includes>,DataParameter*,,true,,DataParameter*,-1
465121,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataParameterDefaultTypeInternal,,<includes>,DataParameterDefaultTypeInternal,,true,,DataParameterDefaultTypeInternal,-1
465122,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataParameter_DB,,<includes>,DataParameter_DB,,true,,DataParameter_DB,-1
465123,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataParameter_DB*,,<includes>,DataParameter_DB*,,true,,DataParameter_DB*,-1
465124,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataType*,,<includes>,DataType*,,true,,DataType*,-1
465125,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Datum,,<includes>,Datum,,true,,Datum,-1
465126,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Datum*,,<includes>,Datum*,,true,,Datum*,-1
465127,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DatumDefaultTypeInternal,,<includes>,DatumDefaultTypeInternal,,true,,DatumDefaultTypeInternal,-1
465128,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DeConvolutionLayerImpl,,<includes>,DeConvolutionLayerImpl,,true,,DeConvolutionLayerImpl,-1
465129,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DensifyOptions,,<includes>,DensifyOptions,,true,,DensifyOptions,-1
465130,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DensifyOptionsBuilder,,<includes>,DensifyOptionsBuilder,,true,,DensifyOptionsBuilder,-1
465131,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DepthToSpaceOptions,,<includes>,DepthToSpaceOptions,,true,,DepthToSpaceOptions,-1
465132,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DepthToSpaceOptionsBuilder,,<includes>,DepthToSpaceOptionsBuilder,,true,,DepthToSpaceOptionsBuilder,-1
465133,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DepthwiseConv2DOptions,,<includes>,DepthwiseConv2DOptions,,true,,DepthwiseConv2DOptions,-1
465134,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DepthwiseConv2DOptionsBuilder,,<includes>,DepthwiseConv2DOptionsBuilder,,true,,DepthwiseConv2DOptionsBuilder,-1
465135,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DequantizeLayerImpl,,<includes>,DequantizeLayerImpl,,true,,DequantizeLayerImpl,-1
465136,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DequantizeOptions,,<includes>,DequantizeOptions,,true,,DequantizeOptions,-1
465137,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DequantizeOptionsBuilder,,<includes>,DequantizeOptionsBuilder,,true,,DequantizeOptionsBuilder,-1
465138,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Descriptor,,<includes>,Descriptor,,true,,Descriptor,-1
465139,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DescriptorTable,,<includes>,DescriptorTable,,true,,DescriptorTable,-1
465140,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DetectionModel,,<includes>,DetectionModel,,true,,DetectionModel,-1
465141,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DetectionModel_Impl,,<includes>,DetectionModel_Impl,,true,,DetectionModel_Impl,-1
465142,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DetectionOutputConfiguration,,<includes>,DetectionOutputConfiguration,,true,,DetectionOutputConfiguration,-1
465143,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DetectionOutputLayerImpl,,<includes>,DetectionOutputLayerImpl,,true,,DetectionOutputLayerImpl,-1
465144,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DetectionOutputParameter,,<includes>,DetectionOutputParameter,,true,,DetectionOutputParameter,-1
465145,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DetectionOutputParameter*,,<includes>,DetectionOutputParameter*,,true,,DetectionOutputParameter*,-1
465146,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DetectionOutputParameterDefaultTypeInternal,,<includes>,DetectionOutputParameterDefaultTypeInternal,,true,,DetectionOutputParameterDefaultTypeInternal,-1
465147,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Device,,<includes>,Device,,true,,Device,-1
465148,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr,,<includes>,DevicePtr,,true,,DevicePtr,-1
465149,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr <void>,,<includes>,DevicePtr <void>,,true,,DevicePtr <void>,-1
465150,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<T>,,<includes>,DevicePtr<T>,,true,,DevicePtr<T>,-1
465151,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<element_type>,,<includes>,DevicePtr<element_type>,,true,,DevicePtr<element_type>,-1
465152,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<float>,,<includes>,DevicePtr<float>,,true,,DevicePtr<float>,-1
465153,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<half>,,<includes>,DevicePtr<half>,,true,,DevicePtr<half>,-1
465154,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<unsigned char>,,<includes>,DevicePtr<unsigned char>,,true,,DevicePtr<unsigned char>,-1
465155,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<value_type>,,<includes>,DevicePtr<value_type>,,true,,DevicePtr<value_type>,-1
465156,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<void>,,<includes>,DevicePtr<void>,,true,,DevicePtr<void>,-1
465157,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Dict,,<includes>,Dict,,true,,Dict,-1
465158,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DictValue,,<includes>,DictValue,,true,,DictValue,-1
465159,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DimCheckMode*,,<includes>,DimCheckMode*,,true,,DimCheckMode*,-1
465160,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DimensionMetadataBuilder,,<includes>,DimensionMetadataBuilder,,true,,DimensionMetadataBuilder,-1
465161,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DimensionType,,<includes>,DimensionType,,true,,DimensionType,-1
465162,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DivOptions,,<includes>,DivOptions,,true,,DivOptions,-1
465163,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DivOptionsBuilder,,<includes>,DivOptionsBuilder,,true,,DivOptionsBuilder,-1
465164,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DropoutParameter,,<includes>,DropoutParameter,,true,,DropoutParameter,-1
465165,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DropoutParameter*,,<includes>,DropoutParameter*,,true,,DropoutParameter*,-1
465166,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DropoutParameterDefaultTypeInternal,,<includes>,DropoutParameterDefaultTypeInternal,,true,,DropoutParameterDefaultTypeInternal,-1
465167,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Dtype,,<includes>,Dtype,,true,,Dtype,-1
465168,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Dtype*,,<includes>,Dtype*,,true,,Dtype*,-1
465169,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DummyDataParameter,,<includes>,DummyDataParameter,,true,,DummyDataParameter,-1
465170,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DummyDataParameter*,,<includes>,DummyDataParameter*,,true,,DummyDataParameter*,-1
465171,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DummyDataParameterDefaultTypeInternal,,<includes>,DummyDataParameterDefaultTypeInternal,,true,,DummyDataParameterDefaultTypeInternal,-1
465172,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DynamicUpdateSliceOptions,,<includes>,DynamicUpdateSliceOptions,,true,,DynamicUpdateSliceOptions,-1
465173,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DynamicUpdateSliceOptionsBuilder,,<includes>,DynamicUpdateSliceOptionsBuilder,,true,,DynamicUpdateSliceOptionsBuilder,-1
465174,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ELUParameter,,<includes>,ELUParameter,,true,,ELUParameter,-1
465175,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ELUParameter*,,<includes>,ELUParameter*,,true,,ELUParameter*,-1
465176,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ELUParameterDefaultTypeInternal,,<includes>,ELUParameterDefaultTypeInternal,,true,,ELUParameterDefaultTypeInternal,-1
465177,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EinsumParams,,<includes>,EinsumParams,,true,,EinsumParams,-1
465178,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<AbsValFunctor>,,<includes>,ElementWiseLayer<AbsValFunctor>,,true,,ElementWiseLayer<AbsValFunctor>,-1
465179,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<AcosFunctor>,,<includes>,ElementWiseLayer<AcosFunctor>,,true,,ElementWiseLayer<AcosFunctor>,-1
465180,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<AcoshFunctor>,,<includes>,ElementWiseLayer<AcoshFunctor>,,true,,ElementWiseLayer<AcoshFunctor>,-1
465181,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<AsinFunctor>,,<includes>,ElementWiseLayer<AsinFunctor>,,true,,ElementWiseLayer<AsinFunctor>,-1
465182,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<AsinhFunctor>,,<includes>,ElementWiseLayer<AsinhFunctor>,,true,,ElementWiseLayer<AsinhFunctor>,-1
465183,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<AtanFunctor>,,<includes>,ElementWiseLayer<AtanFunctor>,,true,,ElementWiseLayer<AtanFunctor>,-1
465184,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<AtanhFunctor>,,<includes>,ElementWiseLayer<AtanhFunctor>,,true,,ElementWiseLayer<AtanhFunctor>,-1
465185,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<BNLLFunctor>,,<includes>,ElementWiseLayer<BNLLFunctor>,,true,,ElementWiseLayer<BNLLFunctor>,-1
465186,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<CeilFunctor>,,<includes>,ElementWiseLayer<CeilFunctor>,,true,,ElementWiseLayer<CeilFunctor>,-1
465187,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<CeluFunctor>,,<includes>,ElementWiseLayer<CeluFunctor>,,true,,ElementWiseLayer<CeluFunctor>,-1
465188,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ChannelsPReLUFunctor>,,<includes>,ElementWiseLayer<ChannelsPReLUFunctor>,,true,,ElementWiseLayer<ChannelsPReLUFunctor>,-1
465189,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<CosFunctor>,,<includes>,ElementWiseLayer<CosFunctor>,,true,,ElementWiseLayer<CosFunctor>,-1
465190,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<CoshFunctor>,,<includes>,ElementWiseLayer<CoshFunctor>,,true,,ElementWiseLayer<CoshFunctor>,-1
465191,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ELUFunctor>,,<includes>,ElementWiseLayer<ELUFunctor>,,true,,ElementWiseLayer<ELUFunctor>,-1
465192,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ErfFunctor>,,<includes>,ElementWiseLayer<ErfFunctor>,,true,,ElementWiseLayer<ErfFunctor>,-1
465193,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ExpFunctor>,,<includes>,ElementWiseLayer<ExpFunctor>,,true,,ElementWiseLayer<ExpFunctor>,-1
465194,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<FloorFunctor>,,<includes>,ElementWiseLayer<FloorFunctor>,,true,,ElementWiseLayer<FloorFunctor>,-1
465195,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<GeluApproximationFunctor>,,<includes>,ElementWiseLayer<GeluApproximationFunctor>,,true,,ElementWiseLayer<GeluApproximationFunctor>,-1
465196,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<GeluFunctor>,,<includes>,ElementWiseLayer<GeluFunctor>,,true,,ElementWiseLayer<GeluFunctor>,-1
465197,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<HardSigmoidFunctor>,,<includes>,ElementWiseLayer<HardSigmoidFunctor>,,true,,ElementWiseLayer<HardSigmoidFunctor>,-1
465198,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<HardSwishFunctor>,,<includes>,ElementWiseLayer<HardSwishFunctor>,,true,,ElementWiseLayer<HardSwishFunctor>,-1
465199,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<LogFunctor>,,<includes>,ElementWiseLayer<LogFunctor>,,true,,ElementWiseLayer<LogFunctor>,-1
465200,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<MishFunctor>,,<includes>,ElementWiseLayer<MishFunctor>,,true,,ElementWiseLayer<MishFunctor>,-1
465201,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<NotFunctor>,,<includes>,ElementWiseLayer<NotFunctor>,,true,,ElementWiseLayer<NotFunctor>,-1
465202,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<PReLUFunctor>,,<includes>,ElementWiseLayer<PReLUFunctor>,,true,,ElementWiseLayer<PReLUFunctor>,-1
465203,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<PowerFunctor>,,<includes>,ElementWiseLayer<PowerFunctor>,,true,,ElementWiseLayer<PowerFunctor>,-1
465204,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ReLU6Functor>,,<includes>,ElementWiseLayer<ReLU6Functor>,,true,,ElementWiseLayer<ReLU6Functor>,-1
465205,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ReLUFunctor>,,<includes>,ElementWiseLayer<ReLUFunctor>,,true,,ElementWiseLayer<ReLUFunctor>,-1
465206,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ReciprocalFunctor>,,<includes>,ElementWiseLayer<ReciprocalFunctor>,,true,,ElementWiseLayer<ReciprocalFunctor>,-1
465207,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<RoundFunctor>,,<includes>,ElementWiseLayer<RoundFunctor>,,true,,ElementWiseLayer<RoundFunctor>,-1
465208,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SeluFunctor>,,<includes>,ElementWiseLayer<SeluFunctor>,,true,,ElementWiseLayer<SeluFunctor>,-1
465209,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ShrinkFunctor>,,<includes>,ElementWiseLayer<ShrinkFunctor>,,true,,ElementWiseLayer<ShrinkFunctor>,-1
465210,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SigmoidFunctor>,,<includes>,ElementWiseLayer<SigmoidFunctor>,,true,,ElementWiseLayer<SigmoidFunctor>,-1
465211,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SignFunctor>,,<includes>,ElementWiseLayer<SignFunctor>,,true,,ElementWiseLayer<SignFunctor>,-1
465212,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SinFunctor>,,<includes>,ElementWiseLayer<SinFunctor>,,true,,ElementWiseLayer<SinFunctor>,-1
465213,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SinhFunctor>,,<includes>,ElementWiseLayer<SinhFunctor>,,true,,ElementWiseLayer<SinhFunctor>,-1
465214,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SoftplusFunctor>,,<includes>,ElementWiseLayer<SoftplusFunctor>,,true,,ElementWiseLayer<SoftplusFunctor>,-1
465215,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SoftsignFunctor>,,<includes>,ElementWiseLayer<SoftsignFunctor>,,true,,ElementWiseLayer<SoftsignFunctor>,-1
465216,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SqrtFunctor>,,<includes>,ElementWiseLayer<SqrtFunctor>,,true,,ElementWiseLayer<SqrtFunctor>,-1
465217,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<SwishFunctor>,,<includes>,ElementWiseLayer<SwishFunctor>,,true,,ElementWiseLayer<SwishFunctor>,-1
465218,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<TanFunctor>,,<includes>,ElementWiseLayer<TanFunctor>,,true,,ElementWiseLayer<TanFunctor>,-1
465219,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<TanHFunctor>,,<includes>,ElementWiseLayer<TanHFunctor>,,true,,ElementWiseLayer<TanHFunctor>,-1
465220,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<ThresholdedReluFunctor>,,<includes>,ElementWiseLayer<ThresholdedReluFunctor>,,true,,ElementWiseLayer<ThresholdedReluFunctor>,-1
465221,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseLayerImpl,,<includes>,EltwiseLayerImpl,,true,,EltwiseLayerImpl,-1
465222,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseLayerInt8Impl,,<includes>,EltwiseLayerInt8Impl,,true,,EltwiseLayerInt8Impl,-1
465223,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseOp*,,<includes>,EltwiseOp*,,true,,EltwiseOp*,-1
465224,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseOpBase,,<includes>,EltwiseOpBase,,true,,EltwiseOpBase,-1
465225,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseOpType,,<includes>,EltwiseOpType,,true,,EltwiseOpType,-1
465226,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseParameter,,<includes>,EltwiseParameter,,true,,EltwiseParameter,-1
465227,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseParameter*,,<includes>,EltwiseParameter*,,true,,EltwiseParameter*,-1
465228,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseParameterDefaultTypeInternal,,<includes>,EltwiseParameterDefaultTypeInternal,,true,,EltwiseParameterDefaultTypeInternal,-1
465229,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseParameter_EltwiseOp,,<includes>,EltwiseParameter_EltwiseOp,,true,,EltwiseParameter_EltwiseOp,-1
465230,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseParameter_EltwiseOp*,,<includes>,EltwiseParameter_EltwiseOp*,,true,,EltwiseParameter_EltwiseOp*,-1
465231,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbedParameter,,<includes>,EmbedParameter,,true,,EmbedParameter,-1
465232,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbedParameter*,,<includes>,EmbedParameter*,,true,,EmbedParameter*,-1
465233,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbedParameterDefaultTypeInternal,,<includes>,EmbedParameterDefaultTypeInternal,,true,,EmbedParameterDefaultTypeInternal,-1
465234,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbeddingLookupSparseOptions,,<includes>,EmbeddingLookupSparseOptions,,true,,EmbeddingLookupSparseOptions,-1
465235,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbeddingLookupSparseOptionsBuilder,,<includes>,EmbeddingLookupSparseOptionsBuilder,,true,,EmbeddingLookupSparseOptionsBuilder,-1
465236,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Engine*,,<includes>,Engine*,,true,,Engine*,-1
465237,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EnumDescriptor,,<includes>,EnumDescriptor,,true,,EnumDescriptor,-1
465238,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EqualOptions,,<includes>,EqualOptions,,true,,EqualOptions,-1
465239,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EqualOptionsBuilder,,<includes>,EqualOptionsBuilder,,true,,EqualOptionsBuilder,-1
465240,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Error,,<includes>,Error,,true,,Error,-1
465241,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Event,,<includes>,Event,,true,,Event,-1
465242,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpFunctor,,<includes>,ExpFunctor,,true,,ExpFunctor,-1
465243,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpOptions,,<includes>,ExpOptions,,true,,ExpOptions,-1
465244,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpOptionsBuilder,,<includes>,ExpOptionsBuilder,,true,,ExpOptionsBuilder,-1
465245,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpParameter,,<includes>,ExpParameter,,true,,ExpParameter,-1
465246,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpParameter*,,<includes>,ExpParameter*,,true,,ExpParameter*,-1
465247,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpParameterDefaultTypeInternal,,<includes>,ExpParameterDefaultTypeInternal,,true,,ExpParameterDefaultTypeInternal,-1
465248,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpandDimsOptions,,<includes>,ExpandDimsOptions,,true,,ExpandDimsOptions,-1
465249,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpandDimsOptionsBuilder,,<includes>,ExpandDimsOptionsBuilder,,true,,ExpandDimsOptionsBuilder,-1
465250,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FILE*,,<includes>,FILE*,,true,,FILE*,-1
465251,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FPDenormalsIgnoreHintScope,,<includes>,FPDenormalsIgnoreHintScope,,true,,FPDenormalsIgnoreHintScope,-1
465252,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FakeQuantOptions,,<includes>,FakeQuantOptions,,true,,FakeQuantOptions,-1
465253,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FakeQuantOptionsBuilder,,<includes>,FakeQuantOptionsBuilder,,true,,FakeQuantOptionsBuilder,-1
465254,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FastConv,,<includes>,FastConv,,true,,FastConv,-1
465255,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FastGemmOpt,,<includes>,FastGemmOpt,,true,,FastGemmOpt,-1
465256,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FileStorage,,<includes>,FileStorage,,true,,FileStorage,-1
465257,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillOptions,,<includes>,FillOptions,,true,,FillOptions,-1
465258,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillOptionsBuilder,,<includes>,FillOptionsBuilder,,true,,FillOptionsBuilder,-1
465259,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillerParameter,,<includes>,FillerParameter,,true,,FillerParameter,-1
465260,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillerParameter*,,<includes>,FillerParameter*,,true,,FillerParameter*,-1
465261,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillerParameterDefaultTypeInternal,,<includes>,FillerParameterDefaultTypeInternal,,true,,FillerParameterDefaultTypeInternal,-1
465262,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillerParameter_VarianceNorm,,<includes>,FillerParameter_VarianceNorm,,true,,FillerParameter_VarianceNorm,-1
465263,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillerParameter_VarianceNorm*,,<includes>,FillerParameter_VarianceNorm*,,true,,FillerParameter_VarianceNorm*,-1
465264,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FilterDescriptor<T>,,<includes>,FilterDescriptor<T>,,true,,FilterDescriptor<T>,-1
465265,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FilterDescriptor<half>,,<includes>,FilterDescriptor<half>,,true,,FilterDescriptor<half>,-1
465266,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FlattenLayerImpl,,<includes>,FlattenLayerImpl,,true,,FlattenLayerImpl,-1
465267,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FlattenParameter,,<includes>,FlattenParameter,,true,,FlattenParameter,-1
465268,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FlattenParameter*,,<includes>,FlattenParameter*,,true,,FlattenParameter*,-1
465269,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FlattenParameterDefaultTypeInternal,,<includes>,FlattenParameterDefaultTypeInternal,,true,,FlattenParameterDefaultTypeInternal,-1
465270,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FloorDivOptions,,<includes>,FloorDivOptions,,true,,FloorDivOptions,-1
465271,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FloorDivOptionsBuilder,,<includes>,FloorDivOptionsBuilder,,true,,FloorDivOptionsBuilder,-1
465272,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FloorModOptions,,<includes>,FloorModOptions,,true,,FloorModOptions,-1
465273,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FloorModOptionsBuilder,,<includes>,FloorModOptionsBuilder,,true,,FloorModOptionsBuilder,-1
465274,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FlowWarpLayerImpl,,<includes>,FlowWarpLayerImpl,,true,,FlowWarpLayerImpl,-1
465275,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ForwardItr,,<includes>,ForwardItr,,true,,ForwardItr,-1
465276,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FullyConnectedLayerImpl,,<includes>,FullyConnectedLayerImpl,,true,,FullyConnectedLayerImpl,-1
465277,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FullyConnectedLayerInt8Impl,,<includes>,FullyConnectedLayerInt8Impl,,true,,FullyConnectedLayerInt8Impl,-1
465278,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FullyConnectedOptions,,<includes>,FullyConnectedOptions,,true,,FullyConnectedOptions,-1
465279,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FullyConnectedOptionsBuilder,,<includes>,FullyConnectedOptionsBuilder,,true,,FullyConnectedOptionsBuilder,-1
465280,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FullyConnectedOptionsWeightsFormat,,<includes>,FullyConnectedOptionsWeightsFormat,,true,,FullyConnectedOptionsWeightsFormat,-1
465281,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Func,,<includes>,Func,,true,,Func,-1
465282,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Func*,,<includes>,Func*,,true,,Func*,-1
465283,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Layer,,<includes>,Func.Layer,,true,,Layer,-1
465284,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Funcs,,<includes>,Funcs,,true,,Funcs,-1
465285,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef,,<includes>,FunctionDef,,true,,FunctionDef,-1
465286,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef*,,<includes>,FunctionDef*,,true,,FunctionDef*,-1
465287,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDefDefaultTypeInternal,,<includes>,FunctionDefDefaultTypeInternal,,true,,FunctionDefDefaultTypeInternal,-1
465288,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDefLibrary,,<includes>,FunctionDefLibrary,,true,,FunctionDefLibrary,-1
465289,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDefLibrary*,,<includes>,FunctionDefLibrary*,,true,,FunctionDefLibrary*,-1
465290,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDefLibraryDefaultTypeInternal,,<includes>,FunctionDefLibraryDefaultTypeInternal,,true,,FunctionDefLibraryDefaultTypeInternal,-1
465291,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef_Node,,<includes>,FunctionDef_Node,,true,,FunctionDef_Node,-1
465292,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef_Node*,,<includes>,FunctionDef_Node*,,true,,FunctionDef_Node*,-1
465293,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef_NodeDefaultTypeInternal,,<includes>,FunctionDef_NodeDefaultTypeInternal,,true,,FunctionDef_NodeDefaultTypeInternal,-1
465294,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef_Node_AttrEntry_DoNotUse,,<includes>,FunctionDef_Node_AttrEntry_DoNotUse,,true,,FunctionDef_Node_AttrEntry_DoNotUse,-1
465295,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal,,<includes>,FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal,,true,,FunctionDef_Node_AttrEntry_DoNotUseDefaultTypeInternal,-1
465296,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FusionMode,,<includes>,FusionMode,,true,,FusionMode,-1
465297,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GLogWrapper,,<includes>,GLogWrapper,,true,,GLogWrapper,-1
465298,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GRULayerImpl,,<includes>,GRULayerImpl,,true,,GRULayerImpl,-1
465299,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GatherNdOptions,,<includes>,GatherNdOptions,,true,,GatherNdOptions,-1
465300,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GatherNdOptionsBuilder,,<includes>,GatherNdOptionsBuilder,,true,,GatherNdOptionsBuilder,-1
465301,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GatherOptions,,<includes>,GatherOptions,,true,,GatherOptions,-1
465302,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GatherOptionsBuilder,,<includes>,GatherOptionsBuilder,,true,,GatherOptionsBuilder,-1
465303,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GeluApproximationConstants,,<includes>,GeluApproximationConstants,,true,,GeluApproximationConstants,-1
465304,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GeluOptions,,<includes>,GeluOptions,,true,,GeluOptions,-1
465305,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GeluOptionsBuilder,,<includes>,GeluOptionsBuilder,,true,,GeluOptionsBuilder,-1
465306,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GemmParamId,,<includes>,GemmParamId,,true,,GemmParamId,-1
465307,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GemmParam_t,,<includes>,GemmParam_t,,true,,GemmParam_t,-1
465308,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GetCUDABackendWrapperType<T>,,<includes>,GetCUDABackendWrapperType<T>,,true,,GetCUDABackendWrapperType<T>,-1
465309,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GradientDef,,<includes>,GradientDef,,true,,GradientDef,-1
465310,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GradientDef*,,<includes>,GradientDef*,,true,,GradientDef*,-1
465311,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GradientDefDefaultTypeInternal,,<includes>,GradientDefDefaultTypeInternal,,true,,GradientDefDefaultTypeInternal,-1
465312,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GraphDef,,<includes>,GraphDef,,true,,GraphDef,-1
465313,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GraphDef*,,<includes>,GraphDef*,,true,,GraphDef*,-1
465314,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GraphDefDefaultTypeInternal,,<includes>,GraphDefDefaultTypeInternal,,true,,GraphDefDefaultTypeInternal,-1
465315,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GraphProto,,<includes>,GraphProto,,true,,GraphProto,-1
465316,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GraphProto*,,<includes>,GraphProto*,,true,,GraphProto*,-1
465317,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GraphProtoDefaultTypeInternal,,<includes>,GraphProtoDefaultTypeInternal,,true,,GraphProtoDefaultTypeInternal,-1
465318,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GreaterEqualOptions,,<includes>,GreaterEqualOptions,,true,,GreaterEqualOptions,-1
465319,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GreaterEqualOptionsBuilder,,<includes>,GreaterEqualOptionsBuilder,,true,,GreaterEqualOptionsBuilder,-1
465320,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GreaterOptions,,<includes>,GreaterOptions,,true,,GreaterOptions,-1
465321,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GreaterOptionsBuilder,,<includes>,GreaterOptionsBuilder,,true,,GreaterOptionsBuilder,-1
465322,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HDF5DataParameter,,<includes>,HDF5DataParameter,,true,,HDF5DataParameter,-1
465323,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HDF5DataParameter*,,<includes>,HDF5DataParameter*,,true,,HDF5DataParameter*,-1
465324,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HDF5DataParameterDefaultTypeInternal,,<includes>,HDF5DataParameterDefaultTypeInternal,,true,,HDF5DataParameterDefaultTypeInternal,-1
465325,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HDF5OutputParameter,,<includes>,HDF5OutputParameter,,true,,HDF5OutputParameter,-1
465326,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HDF5OutputParameter*,,<includes>,HDF5OutputParameter*,,true,,HDF5OutputParameter*,-1
465327,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HDF5OutputParameterDefaultTypeInternal,,<includes>,HDF5OutputParameterDefaultTypeInternal,,true,,HDF5OutputParameterDefaultTypeInternal,-1
465328,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HalideScheduler,,<includes>,HalideScheduler,,true,,HalideScheduler,-1
465329,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Handle,,<includes>,Handle,,true,,Handle,-1
465330,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HardSwishOptions,,<includes>,HardSwishOptions,,true,,HardSwishOptions,-1
465331,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HardSwishOptionsBuilder,,<includes>,HardSwishOptionsBuilder,,true,,HardSwishOptionsBuilder,-1
465332,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HasBits*,,<includes>,HasBits*,,true,,HasBits*,-1
465333,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableFindOptions,,<includes>,HashtableFindOptions,,true,,HashtableFindOptions,-1
465334,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableFindOptionsBuilder,,<includes>,HashtableFindOptionsBuilder,,true,,HashtableFindOptionsBuilder,-1
465335,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableImportOptions,,<includes>,HashtableImportOptions,,true,,HashtableImportOptions,-1
465336,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableImportOptionsBuilder,,<includes>,HashtableImportOptionsBuilder,,true,,HashtableImportOptionsBuilder,-1
465337,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableOptions,,<includes>,HashtableOptions,,true,,HashtableOptions,-1
465338,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableOptionsBuilder,,<includes>,HashtableOptionsBuilder,,true,,HashtableOptionsBuilder,-1
465339,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableSizeOptions,,<includes>,HashtableSizeOptions,,true,,HashtableSizeOptions,-1
465340,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableSizeOptionsBuilder,,<includes>,HashtableSizeOptionsBuilder,,true,,HashtableSizeOptionsBuilder,-1
465341,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HingeLossParameter,,<includes>,HingeLossParameter,,true,,HingeLossParameter,-1
465342,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HingeLossParameter*,,<includes>,HingeLossParameter*,,true,,HingeLossParameter*,-1
465343,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HingeLossParameterDefaultTypeInternal,,<includes>,HingeLossParameterDefaultTypeInternal,,true,,HingeLossParameterDefaultTypeInternal,-1
465344,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HingeLossParameter_Norm,,<includes>,HingeLossParameter_Norm,,true,,HingeLossParameter_Norm,-1
465345,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HingeLossParameter_Norm*,,<includes>,HingeLossParameter_Norm*,,true,,HingeLossParameter_Norm*,-1
465346,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IfOptions,,<includes>,IfOptions,,true,,IfOptions,-1
465347,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IfOptionsBuilder,,<includes>,IfOptionsBuilder,,true,,IfOptionsBuilder,-1
465348,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Image2BlobParams,,<includes>,Image2BlobParams,,true,,Image2BlobParams,-1
465349,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Image2D,,<includes>,Image2D,,true,,Image2D,-1
465350,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ImageDataParameter,,<includes>,ImageDataParameter,,true,,ImageDataParameter,-1
465351,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ImageDataParameter*,,<includes>,ImageDataParameter*,,true,,ImageDataParameter*,-1
465352,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ImageDataParameterDefaultTypeInternal,,<includes>,ImageDataParameterDefaultTypeInternal,,true,,ImageDataParameterDefaultTypeInternal,-1
465353,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ImagePaddingMode,,<includes>,ImagePaddingMode,,true,,ImagePaddingMode,-1
465354,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Impl,,<includes>,Impl,,true,,Impl,-1
465355,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Importer,,<includes>,Importer,,true,,Importer,-1
465356,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InfogainLossParameter,,<includes>,InfogainLossParameter,,true,,InfogainLossParameter,-1
465357,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InfogainLossParameter*,,<includes>,InfogainLossParameter*,,true,,InfogainLossParameter*,-1
465358,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InfogainLossParameterDefaultTypeInternal,,<includes>,InfogainLossParameterDefaultTypeInternal,,true,,InfogainLossParameterDefaultTypeInternal,-1
465359,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InnerProductParameter,,<includes>,InnerProductParameter,,true,,InnerProductParameter,-1
465360,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InnerProductParameter*,,<includes>,InnerProductParameter*,,true,,InnerProductParameter*,-1
465361,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InnerProductParameterDefaultTypeInternal,,<includes>,InnerProductParameterDefaultTypeInternal,,true,,InnerProductParameterDefaultTypeInternal,-1
465362,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InputArray,,<includes>,InputArray,,true,,InputArray,-1
465363,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InputArrayOfArrays,,<includes>,InputArrayOfArrays,,true,,InputArrayOfArrays,-1
465364,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InputParameter,,<includes>,InputParameter,,true,,InputParameter,-1
465365,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InputParameter*,,<includes>,InputParameter*,,true,,InputParameter*,-1
465366,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InputParameterDefaultTypeInternal,,<includes>,InputParameterDefaultTypeInternal,,true,,InputParameterDefaultTypeInternal,-1
465367,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InstanceNormLayerImpl,,<includes>,InstanceNormLayerImpl,,true,,InstanceNormLayerImpl,-1
465368,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Int32Vector,,<includes>,Int32Vector,,true,,Int32Vector,-1
465369,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Int32VectorBuilder,,<includes>,Int32VectorBuilder,,true,,Int32VectorBuilder,-1
465370,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalFusionLocation,,<includes>,InternalFusionLocation,,true,,InternalFusionLocation,-1
465371,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InterpLayerImpl,,<includes>,InterpLayerImpl,,true,,InterpLayerImpl,-1
465372,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InterpolationType,,<includes>,InterpolationType,,true,,InterpolationType,-1
465373,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,JNIEnv*,,<includes>,JNIEnv*,,true,,JNIEnv*,-1
465374,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KERNEL_TYPE_BASIC,,<includes>,KERNEL_TYPE_BASIC,,true,,KERNEL_TYPE_BASIC,-1
465375,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KERNEL_TYPE_DWCONV,,<includes>,KERNEL_TYPE_DWCONV,,true,,KERNEL_TYPE_DWCONV,-1
465376,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KERNEL_TYPE_GEMM_LIKE,,<includes>,KERNEL_TYPE_GEMM_LIKE,,true,,KERNEL_TYPE_GEMM_LIKE,-1
465377,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KERNEL_TYPE_INTEL_IDLF,,<includes>,KERNEL_TYPE_INTEL_IDLF,,true,,KERNEL_TYPE_INTEL_IDLF,-1
465378,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Kernel,,<includes>,Kernel,,true,,Kernel,-1
465379,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,KernelArg,,<includes>,KernelArg,,true,,KernelArg,-1
465380,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,L2NormOptions,,<includes>,L2NormOptions,,true,,L2NormOptions,-1
465381,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,L2NormOptionsBuilder,,<includes>,L2NormOptionsBuilder,,true,,L2NormOptionsBuilder,-1
465382,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRN,,<includes>,LRN,,true,,LRN,-1
465383,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNLayerImpl,,<includes>,LRNLayerImpl,,true,,LRNLayerImpl,-1
465384,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter,,<includes>,LRNParameter,,true,,LRNParameter,-1
465385,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter*,,<includes>,LRNParameter*,,true,,LRNParameter*,-1
465386,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameterDefaultTypeInternal,,<includes>,LRNParameterDefaultTypeInternal,,true,,LRNParameterDefaultTypeInternal,-1
465387,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter_Engine,,<includes>,LRNParameter_Engine,,true,,LRNParameter_Engine,-1
465388,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter_Engine*,,<includes>,LRNParameter_Engine*,,true,,LRNParameter_Engine*,-1
465389,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter_NormRegion,,<includes>,LRNParameter_NormRegion,,true,,LRNParameter_NormRegion,-1
465390,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter_NormRegion*,,<includes>,LRNParameter_NormRegion*,,true,,LRNParameter_NormRegion*,-1
465391,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter_NormRegion_WITHIN_CHANNEL_t,,<includes>,LRNParameter_NormRegion_WITHIN_CHANNEL_t,,true,,LRNParameter_NormRegion_WITHIN_CHANNEL_t,-1
465392,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSHProjectionOptions,,<includes>,LSHProjectionOptions,,true,,LSHProjectionOptions,-1
465393,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSHProjectionOptionsBuilder,,<includes>,LSHProjectionOptionsBuilder,,true,,LSHProjectionOptionsBuilder,-1
465394,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSHProjectionType,,<includes>,LSHProjectionType,,true,,LSHProjectionType,-1
465395,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSTM,,<includes>,LSTM,,true,,LSTM,-1
465396,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSTMKernelType,,<includes>,LSTMKernelType,,true,,LSTMKernelType,-1
465397,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSTMLayerImpl,,<includes>,LSTMLayerImpl,,true,,LSTMLayerImpl,-1
465398,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSTMOptions,,<includes>,LSTMOptions,,true,,LSTMOptions,-1
465399,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSTMOptionsBuilder,,<includes>,LSTMOptionsBuilder,,true,,LSTMOptionsBuilder,-1
465400,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerClass,,<includes>,LayerClass,,true,,LayerClass,-1
465401,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerData,,<includes>,LayerData,,true,,LayerData,-1
465402,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerEinsumImpl,,<includes>,LayerEinsumImpl,,true,,LayerEinsumImpl,-1
465403,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerFactory,,<includes>,LayerFactory,,true,,LayerFactory,-1
465404,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerFactory_Impl*,,<includes>,LayerFactory_Impl*,,true,,LayerFactory_Impl*,-1
465405,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerHandler,,<includes>,LayerHandler,,true,,LayerHandler,-1
465406,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerParameter,,<includes>,LayerParameter,,true,,LayerParameter,-1
465407,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerParameter*,,<includes>,LayerParameter*,,true,,LayerParameter*,-1
465408,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerParameterDefaultTypeInternal,,<includes>,LayerParameterDefaultTypeInternal,,true,,LayerParameterDefaultTypeInternal,-1
465409,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerParams,,<includes>,LayerParams,,true,,LayerParams,-1
465410,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerPin,,<includes>,LayerPin,,true,,LayerPin,-1
465411,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerShapes,,<includes>,LayerShapes,,true,,LayerShapes,-1
465412,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerType*,,<includes>,LayerType*,,true,,LayerType*,-1
465413,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LeakyReluOptions,,<includes>,LeakyReluOptions,,true,,LeakyReluOptions,-1
465414,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LeakyReluOptionsBuilder,,<includes>,LeakyReluOptionsBuilder,,true,,LeakyReluOptionsBuilder,-1
465415,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LessEqualOptions,,<includes>,LessEqualOptions,,true,,LessEqualOptions,-1
465416,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LessEqualOptionsBuilder,,<includes>,LessEqualOptionsBuilder,,true,,LessEqualOptionsBuilder,-1
465417,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LessOptions,,<includes>,LessOptions,,true,,LessOptions,-1
465418,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LessOptionsBuilder,,<includes>,LessOptionsBuilder,,true,,LessOptionsBuilder,-1
465419,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LocalResponseNormalizationOptions,,<includes>,LocalResponseNormalizationOptions,,true,,LocalResponseNormalizationOptions,-1
465420,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LocalResponseNormalizationOptionsBuilder,,<includes>,LocalResponseNormalizationOptionsBuilder,,true,,LocalResponseNormalizationOptionsBuilder,-1
465421,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogParameter,,<includes>,LogParameter,,true,,LogParameter,-1
465422,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogParameter*,,<includes>,LogParameter*,,true,,LogParameter*,-1
465423,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogParameterDefaultTypeInternal,,<includes>,LogParameterDefaultTypeInternal,,true,,LogParameterDefaultTypeInternal,-1
465424,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogSoftmaxOptions,,<includes>,LogSoftmaxOptions,,true,,LogSoftmaxOptions,-1
465425,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogSoftmaxOptionsBuilder,,<includes>,LogSoftmaxOptionsBuilder,,true,,LogSoftmaxOptionsBuilder,-1
465426,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalAndOptions,,<includes>,LogicalAndOptions,,true,,LogicalAndOptions,-1
465427,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalAndOptionsBuilder,,<includes>,LogicalAndOptionsBuilder,,true,,LogicalAndOptionsBuilder,-1
465428,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalNotOptions,,<includes>,LogicalNotOptions,,true,,LogicalNotOptions,-1
465429,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalNotOptionsBuilder,,<includes>,LogicalNotOptionsBuilder,,true,,LogicalNotOptionsBuilder,-1
465430,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalOrOptions,,<includes>,LogicalOrOptions,,true,,LogicalOrOptions,-1
465431,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalOrOptionsBuilder,,<includes>,LogicalOrOptionsBuilder,,true,,LogicalOrOptionsBuilder,-1
465432,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LossParameter,,<includes>,LossParameter,,true,,LossParameter,-1
465433,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LossParameter*,,<includes>,LossParameter*,,true,,LossParameter*,-1
465434,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LossParameterDefaultTypeInternal,,<includes>,LossParameterDefaultTypeInternal,,true,,LossParameterDefaultTypeInternal,-1
465435,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LossParameter_NormalizationMode,,<includes>,LossParameter_NormalizationMode,,true,,LossParameter_NormalizationMode,-1
465436,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LossParameter_NormalizationMode*,,<includes>,LossParameter_NormalizationMode*,,true,,LossParameter_NormalizationMode*,-1
465437,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LstmParams,,<includes>,LstmParams,,true,,LstmParams,-1
465438,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MVNConfiguration,,<includes>,MVNConfiguration,,true,,MVNConfiguration,-1
465439,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MVNLayerImpl,,<includes>,MVNLayerImpl,,true,,MVNLayerImpl,-1
465440,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MVNParameter,,<includes>,MVNParameter,,true,,MVNParameter,-1
465441,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MVNParameter*,,<includes>,MVNParameter*,,true,,MVNParameter*,-1
465442,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MVNParameterDefaultTypeInternal,,<includes>,MVNParameterDefaultTypeInternal,,true,,MVNParameterDefaultTypeInternal,-1
465443,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ManagedPtr,,<includes>,ManagedPtr,,true,,ManagedPtr,-1
465444,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ManagedPtr<T>,,<includes>,ManagedPtr<T>,,true,,ManagedPtr<T>,-1
465445,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ManagedPtr<unsigned char>,,<includes>,ManagedPtr<unsigned char>,,true,,ManagedPtr<unsigned char>,-1
465446,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ManagedPtr<value_type>,,<includes>,ManagedPtr<value_type>,,true,,ManagedPtr<value_type>,-1
465447,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttrValue>,,<includes>,"Map<std.string,opencv_tensorflow.AttrValue>",,true,,AttrValue>,-1
465448,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Mat,,<includes>,Mat,,true,,Mat,-1
465449,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Mat*,,<includes>,Mat*,,true,,Mat*,-1
465450,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatConstIterator_<Dtype>,,<includes>,MatConstIterator_<Dtype>,,true,,MatConstIterator_<Dtype>,-1
465451,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatIterator_<Dtype>,,<includes>,MatIterator_<Dtype>,,true,,MatIterator_<Dtype>,-1
465452,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatMulHelper,,<includes>,MatMulHelper,,true,,MatMulHelper,-1
465453,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatMulParamId,,<includes>,MatMulParamId,,true,,MatMulParamId,-1
465454,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatShape,,<includes>,MatShape,,true,,MatShape,-1
465455,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatSize,,<includes>,MatSize,,true,,MatSize,-1
465456,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatStep,,<includes>,MatStep,,true,,MatStep,-1
465457,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatrixDiagOptions,,<includes>,MatrixDiagOptions,,true,,MatrixDiagOptions,-1
465458,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatrixDiagOptionsBuilder,,<includes>,MatrixDiagOptionsBuilder,,true,,MatrixDiagOptionsBuilder,-1
465459,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatrixSetDiagOptions,,<includes>,MatrixSetDiagOptions,,true,,MatrixSetDiagOptions,-1
465460,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatrixSetDiagOptionsBuilder,,<includes>,MatrixSetDiagOptionsBuilder,,true,,MatrixSetDiagOptionsBuilder,-1
465461,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaxPoolingConfiguration,,<includes>,MaxPoolingConfiguration,,true,,MaxPoolingConfiguration,-1
465462,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaxUnpoolLayerImpl,,<includes>,MaxUnpoolLayerImpl,,true,,MaxUnpoolLayerImpl,-1
465463,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaxUnpoolingConfiguration,,<includes>,MaxUnpoolingConfiguration,,true,,MaxUnpoolingConfiguration,-1
465464,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaximumMinimumOptions,,<includes>,MaximumMinimumOptions,,true,,MaximumMinimumOptions,-1
465465,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaximumMinimumOptionsBuilder,,<includes>,MaximumMinimumOptionsBuilder,,true,,MaximumMinimumOptionsBuilder,-1
465466,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MemoryDataParameter,,<includes>,MemoryDataParameter,,true,,MemoryDataParameter,-1
465467,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MemoryDataParameter*,,<includes>,MemoryDataParameter*,,true,,MemoryDataParameter*,-1
465468,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MemoryDataParameterDefaultTypeInternal,,<includes>,MemoryDataParameterDefaultTypeInternal,,true,,MemoryDataParameterDefaultTypeInternal,-1
465469,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MemoryLockGuard,,<includes>,MemoryLockGuard,,true,,MemoryLockGuard,-1
465470,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Message,,<includes>,Message,,true,,Message,-1
465471,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata,,<includes>,Metadata,,true,,Metadata,-1
465472,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MetadataBuilder,,<includes>,MetadataBuilder,,true,,MetadataBuilder,-1
465473,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MirrorPadMode,,<includes>,MirrorPadMode,,true,,MirrorPadMode,-1
465474,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MirrorPadOptions,,<includes>,MirrorPadOptions,,true,,MirrorPadOptions,-1
465475,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MirrorPadOptionsBuilder,,<includes>,MirrorPadOptionsBuilder,,true,,MirrorPadOptionsBuilder,-1
465476,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Model,,<includes>,Model,,true,,Model,-1
465477,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Impl,,<includes>,Model.Impl,,true,,Impl,-1
465478,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ModelBuilder,,<includes>,ModelBuilder,,true,,ModelBuilder,-1
465479,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ModelProto,,<includes>,ModelProto,,true,,ModelProto,-1
465480,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ModelProto*,,<includes>,ModelProto*,,true,,ModelProto*,-1
465481,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ModelProtoDefaultTypeInternal,,<includes>,ModelProtoDefaultTypeInternal,,true,,ModelProtoDefaultTypeInternal,-1
465482,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Module,,<includes>,Module,,true,,Module,-1
465483,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Module*,,<includes>,Module*,,true,,Module*,-1
465484,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MulOptions,,<includes>,MulOptions,,true,,MulOptions,-1
465485,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MulOptionsBuilder,,<includes>,MulOptionsBuilder,,true,,MulOptionsBuilder,-1
465486,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Mutex,,<includes>,Mutex,,true,,Mutex,-1
465487,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Mutex*,,<includes>,Mutex*,,true,,Mutex*,-1
465488,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NameAttrList,,<includes>,NameAttrList,,true,,NameAttrList,-1
465489,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NameAttrList*,,<includes>,NameAttrList*,,true,,NameAttrList*,-1
465490,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NameAttrListDefaultTypeInternal,,<includes>,NameAttrListDefaultTypeInternal,,true,,NameAttrListDefaultTypeInternal,-1
465491,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NameAttrList_AttrEntry_DoNotUse,,<includes>,NameAttrList_AttrEntry_DoNotUse,,true,,NameAttrList_AttrEntry_DoNotUse,-1
465492,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal,,<includes>,NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal,,true,,NameAttrList_AttrEntry_DoNotUseDefaultTypeInternal,-1
465493,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NaryEltwiseLayerImpl,,<includes>,NaryEltwiseLayerImpl,,true,,NaryEltwiseLayerImpl,-1
465494,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NegOptions,,<includes>,NegOptions,,true,,NegOptions,-1
465495,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NegOptionsBuilder,,<includes>,NegOptionsBuilder,,true,,NegOptionsBuilder,-1
465496,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Net,,<includes>,Net,,true,,Net,-1
465497,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetParameter,,<includes>,NetParameter,,true,,NetParameter,-1
465498,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetParameter*,,<includes>,NetParameter*,,true,,NetParameter*,-1
465499,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetParameterDefaultTypeInternal,,<includes>,NetParameterDefaultTypeInternal,,true,,NetParameterDefaultTypeInternal,-1
465500,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetState,,<includes>,NetState,,true,,NetState,-1
465501,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetState*,,<includes>,NetState*,,true,,NetState*,-1
465502,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetStateDefaultTypeInternal,,<includes>,NetStateDefaultTypeInternal,,true,,NetStateDefaultTypeInternal,-1
465503,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetStateRule,,<includes>,NetStateRule,,true,,NetStateRule,-1
465504,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetStateRule*,,<includes>,NetStateRule*,,true,,NetStateRule*,-1
465505,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetStateRuleDefaultTypeInternal,,<includes>,NetStateRuleDefaultTypeInternal,,true,,NetStateRuleDefaultTypeInternal,-1
465506,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetworkBackend,,<includes>,NetworkBackend,,true,,NetworkBackend,-1
465507,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeDef,,<includes>,NodeDef,,true,,NodeDef,-1
465508,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeDef*,,<includes>,NodeDef*,,true,,NodeDef*,-1
465509,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeDefDefaultTypeInternal,,<includes>,NodeDefDefaultTypeInternal,,true,,NodeDefDefaultTypeInternal,-1
465510,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeDef_AttrEntry_DoNotUse,,<includes>,NodeDef_AttrEntry_DoNotUse,,true,,NodeDef_AttrEntry_DoNotUse,-1
465511,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeDef_AttrEntry_DoNotUseDefaultTypeInternal,,<includes>,NodeDef_AttrEntry_DoNotUseDefaultTypeInternal,,true,,NodeDef_AttrEntry_DoNotUseDefaultTypeInternal,-1
465512,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeProto,,<includes>,NodeProto,,true,,NodeProto,-1
465513,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeProto*,,<includes>,NodeProto*,,true,,NodeProto*,-1
465514,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeProtoDefaultTypeInternal,,<includes>,NodeProtoDefaultTypeInternal,,true,,NodeProtoDefaultTypeInternal,-1
465515,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaxSuppressionV4Options,,<includes>,NonMaxSuppressionV4Options,,true,,NonMaxSuppressionV4Options,-1
465516,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaxSuppressionV4OptionsBuilder,,<includes>,NonMaxSuppressionV4OptionsBuilder,,true,,NonMaxSuppressionV4OptionsBuilder,-1
465517,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaxSuppressionV5Options,,<includes>,NonMaxSuppressionV5Options,,true,,NonMaxSuppressionV5Options,-1
465518,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaxSuppressionV5OptionsBuilder,,<includes>,NonMaxSuppressionV5OptionsBuilder,,true,,NonMaxSuppressionV5OptionsBuilder,-1
465519,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaximumSuppressionParameter,,<includes>,NonMaximumSuppressionParameter,,true,,NonMaximumSuppressionParameter,-1
465520,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaximumSuppressionParameter*,,<includes>,NonMaximumSuppressionParameter*,,true,,NonMaximumSuppressionParameter*,-1
465521,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaximumSuppressionParameterDefaultTypeInternal,,<includes>,NonMaximumSuppressionParameterDefaultTypeInternal,,true,,NonMaximumSuppressionParameterDefaultTypeInternal,-1
465522,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Norm*,,<includes>,Norm*,,true,,Norm*,-1
465523,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormRegion*,,<includes>,NormRegion*,,true,,NormRegion*,-1
465524,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizationMode*,,<includes>,NormalizationMode*,,true,,NormalizationMode*,-1
465525,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizeBBoxLayerImpl,,<includes>,NormalizeBBoxLayerImpl,,true,,NormalizeBBoxLayerImpl,-1
465526,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizeBBoxParameter,,<includes>,NormalizeBBoxParameter,,true,,NormalizeBBoxParameter,-1
465527,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizeBBoxParameter*,,<includes>,NormalizeBBoxParameter*,,true,,NormalizeBBoxParameter*,-1
465528,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizeBBoxParameterDefaultTypeInternal,,<includes>,NormalizeBBoxParameterDefaultTypeInternal,,true,,NormalizeBBoxParameterDefaultTypeInternal,-1
465529,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizeConfiguration<V>,,<includes>,NormalizeConfiguration<V>,,true,,NormalizeConfiguration<V>,-1
465530,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizedBBox,,<includes>,NormalizedBBox,,true,,NormalizedBBox,-1
465531,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizedBBox*,,<includes>,NormalizedBBox*,,true,,NormalizedBBox*,-1
465532,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizedBBoxDefaultTypeInternal,,<includes>,NormalizedBBoxDefaultTypeInternal,,true,,NormalizedBBoxDefaultTypeInternal,-1
465533,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NotEqualOptions,,<includes>,NotEqualOptions,,true,,NotEqualOptions,-1
465534,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NotEqualOptionsBuilder,,<includes>,NotEqualOptionsBuilder,,true,,NotEqualOptionsBuilder,-1
465535,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NotImplemented,,<includes>,NotImplemented,,true,,NotImplemented,-1
465536,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNConvConfig,,<includes>,OCL4DNNConvConfig,,true,,OCL4DNNConvConfig,-1
465537,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNConvSpatial <float>,,<includes>,OCL4DNNConvSpatial <float>,,true,,OCL4DNNConvSpatial <float>,-1
465538,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNInnerProductConfig,,<includes>,OCL4DNNInnerProductConfig,,true,,OCL4DNNInnerProductConfig,-1
465539,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNLRNConfig,,<includes>,OCL4DNNLRNConfig,,true,,OCL4DNNLRNConfig,-1
465540,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNPoolConfig,,<includes>,OCL4DNNPoolConfig,,true,,OCL4DNNPoolConfig,-1
465541,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNSoftmaxConfig,,<includes>,OCL4DNNSoftmaxConfig,,true,,OCL4DNNSoftmaxConfig,-1
465542,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ATan2Options>,,<includes>,Offset<ATan2Options>,,true,,Offset<ATan2Options>,-1
465543,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<AbsOptions>,,<includes>,Offset<AbsOptions>,,true,,Offset<AbsOptions>,-1
465544,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<AddNOptions>,,<includes>,Offset<AddNOptions>,,true,,Offset<AddNOptions>,-1
465545,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<AddOptions>,,<includes>,Offset<AddOptions>,,true,,Offset<AddOptions>,-1
465546,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ArgMaxOptions>,,<includes>,Offset<ArgMaxOptions>,,true,,Offset<ArgMaxOptions>,-1
465547,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ArgMinOptions>,,<includes>,Offset<ArgMinOptions>,,true,,Offset<ArgMinOptions>,-1
465548,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<AssignVariableOptions>,,<includes>,Offset<AssignVariableOptions>,,true,,Offset<AssignVariableOptions>,-1
465549,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<BatchMatMulOptions>,,<includes>,Offset<BatchMatMulOptions>,,true,,Offset<BatchMatMulOptions>,-1
465550,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<BatchToSpaceNDOptions>,,<includes>,Offset<BatchToSpaceNDOptions>,,true,,Offset<BatchToSpaceNDOptions>,-1
465551,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<BidirectionalSequenceLSTMOptions>,,<includes>,Offset<BidirectionalSequenceLSTMOptions>,,true,,Offset<BidirectionalSequenceLSTMOptions>,-1
465552,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<BidirectionalSequenceRNNOptions>,,<includes>,Offset<BidirectionalSequenceRNNOptions>,,true,,Offset<BidirectionalSequenceRNNOptions>,-1
465553,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<BroadcastToOptions>,,<includes>,Offset<BroadcastToOptions>,,true,,Offset<BroadcastToOptions>,-1
465554,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<BucketizeOptions>,,<includes>,Offset<BucketizeOptions>,,true,,Offset<BucketizeOptions>,-1
465555,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Buffer>,,<includes>,Offset<Buffer>,,true,,Offset<Buffer>,-1
465556,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<CallOnceOptions>,,<includes>,Offset<CallOnceOptions>,,true,,Offset<CallOnceOptions>,-1
465557,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<CallOptions>,,<includes>,Offset<CallOptions>,,true,,Offset<CallOptions>,-1
465558,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<CastOptions>,,<includes>,Offset<CastOptions>,,true,,Offset<CastOptions>,-1
465559,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ConcatEmbeddingsOptions>,,<includes>,Offset<ConcatEmbeddingsOptions>,,true,,Offset<ConcatEmbeddingsOptions>,-1
465560,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ConcatenationOptions>,,<includes>,Offset<ConcatenationOptions>,,true,,Offset<ConcatenationOptions>,-1
465561,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Conv2DOptions>,,<includes>,Offset<Conv2DOptions>,,true,,Offset<Conv2DOptions>,-1
465562,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Conv3DOptions>,,<includes>,Offset<Conv3DOptions>,,true,,Offset<Conv3DOptions>,-1
465563,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<CosOptions>,,<includes>,Offset<CosOptions>,,true,,Offset<CosOptions>,-1
465564,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<CumsumOptions>,,<includes>,Offset<CumsumOptions>,,true,,Offset<CumsumOptions>,-1
465565,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<CustomQuantization>,,<includes>,Offset<CustomQuantization>,,true,,Offset<CustomQuantization>,-1
465566,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<DensifyOptions>,,<includes>,Offset<DensifyOptions>,,true,,Offset<DensifyOptions>,-1
465567,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<DepthToSpaceOptions>,,<includes>,Offset<DepthToSpaceOptions>,,true,,Offset<DepthToSpaceOptions>,-1
465568,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<DepthwiseConv2DOptions>,,<includes>,Offset<DepthwiseConv2DOptions>,,true,,Offset<DepthwiseConv2DOptions>,-1
465569,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<DequantizeOptions>,,<includes>,Offset<DequantizeOptions>,,true,,Offset<DequantizeOptions>,-1
465570,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<DimensionMetadata>,,<includes>,Offset<DimensionMetadata>,,true,,Offset<DimensionMetadata>,-1
465571,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<DivOptions>,,<includes>,Offset<DivOptions>,,true,,Offset<DivOptions>,-1
465572,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<DynamicUpdateSliceOptions>,,<includes>,Offset<DynamicUpdateSliceOptions>,,true,,Offset<DynamicUpdateSliceOptions>,-1
465573,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<EmbeddingLookupSparseOptions>,,<includes>,Offset<EmbeddingLookupSparseOptions>,,true,,Offset<EmbeddingLookupSparseOptions>,-1
465574,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<EqualOptions>,,<includes>,Offset<EqualOptions>,,true,,Offset<EqualOptions>,-1
465575,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ExpOptions>,,<includes>,Offset<ExpOptions>,,true,,Offset<ExpOptions>,-1
465576,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ExpandDimsOptions>,,<includes>,Offset<ExpandDimsOptions>,,true,,Offset<ExpandDimsOptions>,-1
465577,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<FakeQuantOptions>,,<includes>,Offset<FakeQuantOptions>,,true,,Offset<FakeQuantOptions>,-1
465578,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<FillOptions>,,<includes>,Offset<FillOptions>,,true,,Offset<FillOptions>,-1
465579,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<FloorDivOptions>,,<includes>,Offset<FloorDivOptions>,,true,,Offset<FloorDivOptions>,-1
465580,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<FloorModOptions>,,<includes>,Offset<FloorModOptions>,,true,,Offset<FloorModOptions>,-1
465581,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<FullyConnectedOptions>,,<includes>,Offset<FullyConnectedOptions>,,true,,Offset<FullyConnectedOptions>,-1
465582,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<GatherNdOptions>,,<includes>,Offset<GatherNdOptions>,,true,,Offset<GatherNdOptions>,-1
465583,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<GatherOptions>,,<includes>,Offset<GatherOptions>,,true,,Offset<GatherOptions>,-1
465584,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<GeluOptions>,,<includes>,Offset<GeluOptions>,,true,,Offset<GeluOptions>,-1
465585,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<GreaterEqualOptions>,,<includes>,Offset<GreaterEqualOptions>,,true,,Offset<GreaterEqualOptions>,-1
465586,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<GreaterOptions>,,<includes>,Offset<GreaterOptions>,,true,,Offset<GreaterOptions>,-1
465587,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<HardSwishOptions>,,<includes>,Offset<HardSwishOptions>,,true,,Offset<HardSwishOptions>,-1
465588,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<HashtableFindOptions>,,<includes>,Offset<HashtableFindOptions>,,true,,Offset<HashtableFindOptions>,-1
465589,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<HashtableImportOptions>,,<includes>,Offset<HashtableImportOptions>,,true,,Offset<HashtableImportOptions>,-1
465590,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<HashtableOptions>,,<includes>,Offset<HashtableOptions>,,true,,Offset<HashtableOptions>,-1
465591,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<HashtableSizeOptions>,,<includes>,Offset<HashtableSizeOptions>,,true,,Offset<HashtableSizeOptions>,-1
465592,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<IfOptions>,,<includes>,Offset<IfOptions>,,true,,Offset<IfOptions>,-1
465593,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Int32Vector>,,<includes>,Offset<Int32Vector>,,true,,Offset<Int32Vector>,-1
465594,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<L2NormOptions>,,<includes>,Offset<L2NormOptions>,,true,,Offset<L2NormOptions>,-1
465595,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LSHProjectionOptions>,,<includes>,Offset<LSHProjectionOptions>,,true,,Offset<LSHProjectionOptions>,-1
465596,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LSTMOptions>,,<includes>,Offset<LSTMOptions>,,true,,Offset<LSTMOptions>,-1
465597,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LeakyReluOptions>,,<includes>,Offset<LeakyReluOptions>,,true,,Offset<LeakyReluOptions>,-1
465598,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LessEqualOptions>,,<includes>,Offset<LessEqualOptions>,,true,,Offset<LessEqualOptions>,-1
465599,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LessOptions>,,<includes>,Offset<LessOptions>,,true,,Offset<LessOptions>,-1
465600,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LocalResponseNormalizationOptions>,,<includes>,Offset<LocalResponseNormalizationOptions>,,true,,Offset<LocalResponseNormalizationOptions>,-1
465601,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LogSoftmaxOptions>,,<includes>,Offset<LogSoftmaxOptions>,,true,,Offset<LogSoftmaxOptions>,-1
465602,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LogicalAndOptions>,,<includes>,Offset<LogicalAndOptions>,,true,,Offset<LogicalAndOptions>,-1
465603,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LogicalNotOptions>,,<includes>,Offset<LogicalNotOptions>,,true,,Offset<LogicalNotOptions>,-1
465604,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<LogicalOrOptions>,,<includes>,Offset<LogicalOrOptions>,,true,,Offset<LogicalOrOptions>,-1
465605,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<MatrixDiagOptions>,,<includes>,Offset<MatrixDiagOptions>,,true,,Offset<MatrixDiagOptions>,-1
465606,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<MatrixSetDiagOptions>,,<includes>,Offset<MatrixSetDiagOptions>,,true,,Offset<MatrixSetDiagOptions>,-1
465607,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<MaximumMinimumOptions>,,<includes>,Offset<MaximumMinimumOptions>,,true,,Offset<MaximumMinimumOptions>,-1
465608,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Metadata>,,<includes>,Offset<Metadata>,,true,,Offset<Metadata>,-1
465609,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<MirrorPadOptions>,,<includes>,Offset<MirrorPadOptions>,,true,,Offset<MirrorPadOptions>,-1
465610,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Model>,,<includes>,Offset<Model>,,true,,Offset<Model>,-1
465611,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<MulOptions>,,<includes>,Offset<MulOptions>,,true,,Offset<MulOptions>,-1
465612,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<NegOptions>,,<includes>,Offset<NegOptions>,,true,,Offset<NegOptions>,-1
465613,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<NonMaxSuppressionV4Options>,,<includes>,Offset<NonMaxSuppressionV4Options>,,true,,Offset<NonMaxSuppressionV4Options>,-1
465614,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<NonMaxSuppressionV5Options>,,<includes>,Offset<NonMaxSuppressionV5Options>,,true,,Offset<NonMaxSuppressionV5Options>,-1
465615,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<NotEqualOptions>,,<includes>,Offset<NotEqualOptions>,,true,,Offset<NotEqualOptions>,-1
465616,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<OneHotOptions>,,<includes>,Offset<OneHotOptions>,,true,,Offset<OneHotOptions>,-1
465617,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Operator>,,<includes>,Offset<Operator>,,true,,Offset<Operator>,-1
465618,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<OperatorCode>,,<includes>,Offset<OperatorCode>,,true,,Offset<OperatorCode>,-1
465619,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<PackOptions>,,<includes>,Offset<PackOptions>,,true,,Offset<PackOptions>,-1
465620,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<PadOptions>,,<includes>,Offset<PadOptions>,,true,,Offset<PadOptions>,-1
465621,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<PadV2Options>,,<includes>,Offset<PadV2Options>,,true,,Offset<PadV2Options>,-1
465622,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Pool2DOptions>,,<includes>,Offset<Pool2DOptions>,,true,,Offset<Pool2DOptions>,-1
465623,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<PowOptions>,,<includes>,Offset<PowOptions>,,true,,Offset<PowOptions>,-1
465624,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<QuantizationParameters>,,<includes>,Offset<QuantizationParameters>,,true,,Offset<QuantizationParameters>,-1
465625,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<QuantizeOptions>,,<includes>,Offset<QuantizeOptions>,,true,,Offset<QuantizeOptions>,-1
465626,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<RNNOptions>,,<includes>,Offset<RNNOptions>,,true,,Offset<RNNOptions>,-1
465627,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<RandomOptions>,,<includes>,Offset<RandomOptions>,,true,,Offset<RandomOptions>,-1
465628,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<RangeOptions>,,<includes>,Offset<RangeOptions>,,true,,Offset<RangeOptions>,-1
465629,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<RankOptions>,,<includes>,Offset<RankOptions>,,true,,Offset<RankOptions>,-1
465630,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ReadVariableOptions>,,<includes>,Offset<ReadVariableOptions>,,true,,Offset<ReadVariableOptions>,-1
465631,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ReducerOptions>,,<includes>,Offset<ReducerOptions>,,true,,Offset<ReducerOptions>,-1
465632,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ReshapeOptions>,,<includes>,Offset<ReshapeOptions>,,true,,Offset<ReshapeOptions>,-1
465633,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ResizeBilinearOptions>,,<includes>,Offset<ResizeBilinearOptions>,,true,,Offset<ResizeBilinearOptions>,-1
465634,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ResizeNearestNeighborOptions>,,<includes>,Offset<ResizeNearestNeighborOptions>,,true,,Offset<ResizeNearestNeighborOptions>,-1
465635,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ReverseSequenceOptions>,,<includes>,Offset<ReverseSequenceOptions>,,true,,Offset<ReverseSequenceOptions>,-1
465636,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ReverseV2Options>,,<includes>,Offset<ReverseV2Options>,,true,,Offset<ReverseV2Options>,-1
465637,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Rfft2dOptions>,,<includes>,Offset<Rfft2dOptions>,,true,,Offset<Rfft2dOptions>,-1
465638,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SVDFOptions>,,<includes>,Offset<SVDFOptions>,,true,,Offset<SVDFOptions>,-1
465639,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ScatterNdOptions>,,<includes>,Offset<ScatterNdOptions>,,true,,Offset<ScatterNdOptions>,-1
465640,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SegmentSumOptions>,,<includes>,Offset<SegmentSumOptions>,,true,,Offset<SegmentSumOptions>,-1
465641,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SelectOptions>,,<includes>,Offset<SelectOptions>,,true,,Offset<SelectOptions>,-1
465642,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SelectV2Options>,,<includes>,Offset<SelectV2Options>,,true,,Offset<SelectV2Options>,-1
465643,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SequenceRNNOptions>,,<includes>,Offset<SequenceRNNOptions>,,true,,Offset<SequenceRNNOptions>,-1
465644,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ShapeOptions>,,<includes>,Offset<ShapeOptions>,,true,,Offset<ShapeOptions>,-1
465645,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SignOptions>,,<includes>,Offset<SignOptions>,,true,,Offset<SignOptions>,-1
465646,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SignatureDef>,,<includes>,Offset<SignatureDef>,,true,,Offset<SignatureDef>,-1
465647,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SkipGramOptions>,,<includes>,Offset<SkipGramOptions>,,true,,Offset<SkipGramOptions>,-1
465648,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SliceOptions>,,<includes>,Offset<SliceOptions>,,true,,Offset<SliceOptions>,-1
465649,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SoftmaxOptions>,,<includes>,Offset<SoftmaxOptions>,,true,,Offset<SoftmaxOptions>,-1
465650,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SpaceToBatchNDOptions>,,<includes>,Offset<SpaceToBatchNDOptions>,,true,,Offset<SpaceToBatchNDOptions>,-1
465651,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SpaceToDepthOptions>,,<includes>,Offset<SpaceToDepthOptions>,,true,,Offset<SpaceToDepthOptions>,-1
465652,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SparseToDenseOptions>,,<includes>,Offset<SparseToDenseOptions>,,true,,Offset<SparseToDenseOptions>,-1
465653,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SparsityParameters>,,<includes>,Offset<SparsityParameters>,,true,,Offset<SparsityParameters>,-1
465654,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SplitOptions>,,<includes>,Offset<SplitOptions>,,true,,Offset<SplitOptions>,-1
465655,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SplitVOptions>,,<includes>,Offset<SplitVOptions>,,true,,Offset<SplitVOptions>,-1
465656,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SquareOptions>,,<includes>,Offset<SquareOptions>,,true,,Offset<SquareOptions>,-1
465657,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SquaredDifferenceOptions>,,<includes>,Offset<SquaredDifferenceOptions>,,true,,Offset<SquaredDifferenceOptions>,-1
465658,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SqueezeOptions>,,<includes>,Offset<SqueezeOptions>,,true,,Offset<SqueezeOptions>,-1
465659,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<StridedSliceOptions>,,<includes>,Offset<StridedSliceOptions>,,true,,Offset<StridedSliceOptions>,-1
465660,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SubGraph>,,<includes>,Offset<SubGraph>,,true,,Offset<SubGraph>,-1
465661,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<SubOptions>,,<includes>,Offset<SubOptions>,,true,,Offset<SubOptions>,-1
465662,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Tensor>,,<includes>,Offset<Tensor>,,true,,Offset<Tensor>,-1
465663,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<TensorMap>,,<includes>,Offset<TensorMap>,,true,,Offset<TensorMap>,-1
465664,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<TileOptions>,,<includes>,Offset<TileOptions>,,true,,Offset<TileOptions>,-1
465665,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<TopKV2Options>,,<includes>,Offset<TopKV2Options>,,true,,Offset<TopKV2Options>,-1
465666,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<TransposeConvOptions>,,<includes>,Offset<TransposeConvOptions>,,true,,Offset<TransposeConvOptions>,-1
465667,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<TransposeOptions>,,<includes>,Offset<TransposeOptions>,,true,,Offset<TransposeOptions>,-1
465668,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Uint16Vector>,,<includes>,Offset<Uint16Vector>,,true,,Offset<Uint16Vector>,-1
465669,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<Uint8Vector>,,<includes>,Offset<Uint8Vector>,,true,,Offset<Uint8Vector>,-1
465670,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<UnidirectionalSequenceLSTMOptions>,,<includes>,Offset<UnidirectionalSequenceLSTMOptions>,,true,,Offset<UnidirectionalSequenceLSTMOptions>,-1
465671,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<UniqueOptions>,,<includes>,Offset<UniqueOptions>,,true,,Offset<UniqueOptions>,-1
465672,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<UnpackOptions>,,<includes>,Offset<UnpackOptions>,,true,,Offset<UnpackOptions>,-1
465673,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<UnsortedSegmentMaxOptions>,,<includes>,Offset<UnsortedSegmentMaxOptions>,,true,,Offset<UnsortedSegmentMaxOptions>,-1
465674,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<UnsortedSegmentMinOptions>,,<includes>,Offset<UnsortedSegmentMinOptions>,,true,,Offset<UnsortedSegmentMinOptions>,-1
465675,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<UnsortedSegmentProdOptions>,,<includes>,Offset<UnsortedSegmentProdOptions>,,true,,Offset<UnsortedSegmentProdOptions>,-1
465676,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<UnsortedSegmentSumOptions>,,<includes>,Offset<UnsortedSegmentSumOptions>,,true,,Offset<UnsortedSegmentSumOptions>,-1
465677,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<VarHandleOptions>,,<includes>,Offset<VarHandleOptions>,,true,,Offset<VarHandleOptions>,-1
465678,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<VariantSubType>,,<includes>,Offset<VariantSubType>,,true,,Offset<VariantSubType>,-1
465679,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<WhereOptions>,,<includes>,Offset<WhereOptions>,,true,,Offset<WhereOptions>,-1
465680,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<WhileOptions>,,<includes>,Offset<WhileOptions>,,true,,Offset<WhileOptions>,-1
465681,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Offset<ZerosLikeOptions>,,<includes>,Offset<ZerosLikeOptions>,,true,,Offset<ZerosLikeOptions>,-1
465682,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OneHotOptions,,<includes>,OneHotOptions,,true,,OneHotOptions,-1
465683,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OneHotOptionsBuilder,,<includes>,OneHotOptionsBuilder,,true,,OneHotOptionsBuilder,-1
465684,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef,,<includes>,OpDef,,true,,OpDef,-1
465685,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef*,,<includes>,OpDef*,,true,,OpDef*,-1
465686,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDefDefaultTypeInternal,,<includes>,OpDefDefaultTypeInternal,,true,,OpDefDefaultTypeInternal,-1
465687,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef_ArgDef,,<includes>,OpDef_ArgDef,,true,,OpDef_ArgDef,-1
465688,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef_ArgDef*,,<includes>,OpDef_ArgDef*,,true,,OpDef_ArgDef*,-1
465689,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef_ArgDefDefaultTypeInternal,,<includes>,OpDef_ArgDefDefaultTypeInternal,,true,,OpDef_ArgDefDefaultTypeInternal,-1
465690,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef_AttrDef,,<includes>,OpDef_AttrDef,,true,,OpDef_AttrDef,-1
465691,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef_AttrDef*,,<includes>,OpDef_AttrDef*,,true,,OpDef_AttrDef*,-1
465692,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef_AttrDefDefaultTypeInternal,,<includes>,OpDef_AttrDefDefaultTypeInternal,,true,,OpDef_AttrDefDefaultTypeInternal,-1
465693,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDeprecation,,<includes>,OpDeprecation,,true,,OpDeprecation,-1
465694,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDeprecation*,,<includes>,OpDeprecation*,,true,,OpDeprecation*,-1
465695,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDeprecationDefaultTypeInternal,,<includes>,OpDeprecationDefaultTypeInternal,,true,,OpDeprecationDefaultTypeInternal,-1
465696,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpList,,<includes>,OpList,,true,,OpList,-1
465697,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpList*,,<includes>,OpList*,,true,,OpList*,-1
465698,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpListDefaultTypeInternal,,<includes>,OpListDefaultTypeInternal,,true,,OpListDefaultTypeInternal,-1
465699,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpMode,,<includes>,OpMode,,true,,OpMode,-1
465700,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpenCV_API_Header,,<includes>,OpenCV_API_Header,,true,,OpenCV_API_Header,-1
465701,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Operand,,<includes>,Operand,,true,,Operand,-1
465702,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OperatorBuilder,,<includes>,OperatorBuilder,,true,,OperatorBuilder,-1
465703,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OperatorCodeBuilder,,<includes>,OperatorCodeBuilder,,true,,OperatorCodeBuilder,-1
465704,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OperatorSetIdProto,,<includes>,OperatorSetIdProto,,true,,OperatorSetIdProto,-1
465705,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OperatorSetIdProto*,,<includes>,OperatorSetIdProto*,,true,,OperatorSetIdProto*,-1
465706,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OperatorSetIdProtoDefaultTypeInternal,,<includes>,OperatorSetIdProtoDefaultTypeInternal,,true,,OperatorSetIdProtoDefaultTypeInternal,-1
465707,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OutputArray,,<includes>,OutputArray,,true,,OutputArray,-1
465708,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OutputArrayOfArrays,,<includes>,OutputArrayOfArrays,,true,,OutputArrayOfArrays,-1
465709,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PBody,,<includes>,PBody,,true,,PBody,-1
465710,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PROTOBUF_NAMESPACE_ID,,<includes>,PROTOBUF_NAMESPACE_ID,,true,,PROTOBUF_NAMESPACE_ID,-1
465711,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Message,,<includes>,PROTOBUF_NAMESPACE_ID.Message,,true,,Message,-1
465712,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TYPE_MESSAGE>,,<includes>,"PROTOBUF_NAMESPACE_ID.internal.MapEntry<FunctionDef_Node_AttrEntry_DoNotUse, std.string, .opencv_tensorflow.AttrValue, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_STRING, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_MESSAGE>",,true,,TYPE_MESSAGE>,-1
465713,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TYPE_MESSAGE>,,<includes>,"PROTOBUF_NAMESPACE_ID.internal.MapEntry<NameAttrList_AttrEntry_DoNotUse, std.string, .opencv_tensorflow.AttrValue, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_STRING, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_MESSAGE>",,true,,TYPE_MESSAGE>,-1
465714,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TYPE_MESSAGE>,,<includes>,"PROTOBUF_NAMESPACE_ID.internal.MapEntry<NodeDef_AttrEntry_DoNotUse, std.string, .opencv_tensorflow.AttrValue, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_STRING, .PROTOBUF_NAMESPACE_ID.internal.WireFormatLite.TYPE_MESSAGE>",,true,,TYPE_MESSAGE>,-1
465715,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PROTOBUF_NAMESPACE_OPEN,,<includes>,PROTOBUF_NAMESPACE_OPEN,,true,,PROTOBUF_NAMESPACE_OPEN,-1
465716,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PROTOBUF_SECTION_VARIABLE,,<includes>,PROTOBUF_SECTION_VARIABLE,,true,,PROTOBUF_SECTION_VARIABLE,-1
465717,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PReLUParameter,,<includes>,PReLUParameter,,true,,PReLUParameter,-1
465718,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PReLUParameter*,,<includes>,PReLUParameter*,,true,,PReLUParameter*,-1
465719,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PReLUParameterDefaultTypeInternal,,<includes>,PReLUParameterDefaultTypeInternal,,true,,PReLUParameterDefaultTypeInternal,-1
465720,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PSROIPoolingParameter,,<includes>,PSROIPoolingParameter,,true,,PSROIPoolingParameter,-1
465721,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PSROIPoolingParameter*,,<includes>,PSROIPoolingParameter*,,true,,PSROIPoolingParameter*,-1
465722,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PSROIPoolingParameterDefaultTypeInternal,,<includes>,PSROIPoolingParameterDefaultTypeInternal,,true,,PSROIPoolingParameterDefaultTypeInternal,-1
465723,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PackOptions,,<includes>,PackOptions,,true,,PackOptions,-1
465724,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PackOptionsBuilder,,<includes>,PackOptionsBuilder,,true,,PackOptionsBuilder,-1
465725,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PadOptions,,<includes>,PadOptions,,true,,PadOptions,-1
465726,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PadOptionsBuilder,,<includes>,PadOptionsBuilder,,true,,PadOptionsBuilder,-1
465727,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PadV2Options,,<includes>,PadV2Options,,true,,PadV2Options,-1
465728,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PadV2OptionsBuilder,,<includes>,PadV2OptionsBuilder,,true,,PadV2OptionsBuilder,-1
465729,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Padding,,<includes>,Padding,,true,,Padding,-1
465730,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PaddingLayerImpl,,<includes>,PaddingLayerImpl,,true,,PaddingLayerImpl,-1
465731,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PaddingMode,,<includes>,PaddingMode,,true,,PaddingMode,-1
465732,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PaddingType,,<includes>,PaddingType,,true,,PaddingType,-1
465733,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamGenerator<Conv1DParamID>,,<includes>,ParamGenerator<Conv1DParamID>,,true,,ParamGenerator<Conv1DParamID>,-1
465734,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamGenerator<Conv3DParamID>,,<includes>,ParamGenerator<Conv3DParamID>,,true,,ParamGenerator<Conv3DParamID>,-1
465735,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamGenerator<ConvParam_t>,,<includes>,ParamGenerator<ConvParam_t>,,true,,ParamGenerator<ConvParam_t>,-1
465736,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamGenerator<GemmParamId>,,<includes>,ParamGenerator<GemmParamId>,,true,,ParamGenerator<GemmParamId>,-1
465737,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamGenerator<MatMulParamId>,,<includes>,ParamGenerator<MatMulParamId>,,true,,ParamGenerator<MatMulParamId>,-1
465738,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamSpec,,<includes>,ParamSpec,,true,,ParamSpec,-1
465739,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamSpec*,,<includes>,ParamSpec*,,true,,ParamSpec*,-1
465740,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamSpecDefaultTypeInternal,,<includes>,ParamSpecDefaultTypeInternal,,true,,ParamSpecDefaultTypeInternal,-1
465741,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamSpec_DimCheckMode,,<includes>,ParamSpec_DimCheckMode,,true,,ParamSpec_DimCheckMode,-1
465742,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamSpec_DimCheckMode*,,<includes>,ParamSpec_DimCheckMode*,,true,,ParamSpec_DimCheckMode*,-1
465743,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParameterParameter,,<includes>,ParameterParameter,,true,,ParameterParameter,-1
465744,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParameterParameter*,,<includes>,ParameterParameter*,,true,,ParameterParameter*,-1
465745,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParameterParameterDefaultTypeInternal,,<includes>,ParameterParameterDefaultTypeInternal,,true,,ParameterParameterDefaultTypeInternal,-1
465746,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Params,,<includes>,Params,,true,,Params,-1
465747,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PermuteLayerImpl,,<includes>,PermuteLayerImpl,,true,,PermuteLayerImpl,-1
465748,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PermuteParameter,,<includes>,PermuteParameter,,true,,PermuteParameter,-1
465749,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PermuteParameter*,,<includes>,PermuteParameter*,,true,,PermuteParameter*,-1
465750,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PermuteParameterDefaultTypeInternal,,<includes>,PermuteParameterDefaultTypeInternal,,true,,PermuteParameterDefaultTypeInternal,-1
465751,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Phase,,<includes>,Phase,,true,,Phase,-1
465752,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Phase*,,<includes>,Phase*,,true,,Phase*,-1
465753,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Point,,<includes>,Point,,true,,Point,-1
465754,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Point2f,,<includes>,Point2f,,true,,Point2f,-1
465755,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Pool2DOptions,,<includes>,Pool2DOptions,,true,,Pool2DOptions,-1
465756,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Pool2DOptionsBuilder,,<includes>,Pool2DOptionsBuilder,,true,,Pool2DOptionsBuilder,-1
465757,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolMethod*,,<includes>,PoolMethod*,,true,,PoolMethod*,-1
465758,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Pooling,,<includes>,Pooling,,true,,Pooling,-1
465759,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingConfiguration,,<includes>,PoolingConfiguration,,true,,PoolingConfiguration,-1
465760,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingLayerImpl,,<includes>,PoolingLayerImpl,,true,,PoolingLayerImpl,-1
465761,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingLayerInt8Impl,,<includes>,PoolingLayerInt8Impl,,true,,PoolingLayerInt8Impl,-1
465762,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingMode,,<includes>,PoolingMode,,true,,PoolingMode,-1
465763,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameter,,<includes>,PoolingParameter,,true,,PoolingParameter,-1
465764,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameter*,,<includes>,PoolingParameter*,,true,,PoolingParameter*,-1
465765,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameterDefaultTypeInternal,,<includes>,PoolingParameterDefaultTypeInternal,,true,,PoolingParameterDefaultTypeInternal,-1
465766,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameter_Engine,,<includes>,PoolingParameter_Engine,,true,,PoolingParameter_Engine,-1
465767,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameter_Engine*,,<includes>,PoolingParameter_Engine*,,true,,PoolingParameter_Engine*,-1
465768,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameter_PoolMethod,,<includes>,PoolingParameter_PoolMethod,,true,,PoolingParameter_PoolMethod,-1
465769,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameter_PoolMethod*,,<includes>,PoolingParameter_PoolMethod*,,true,,PoolingParameter_PoolMethod*,-1
465770,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowOptions,,<includes>,PowOptions,,true,,PowOptions,-1
465771,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowOptionsBuilder,,<includes>,PowOptionsBuilder,,true,,PowOptionsBuilder,-1
465772,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowerFunctor,,<includes>,PowerFunctor,,true,,PowerFunctor,-1
465773,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowerParameter,,<includes>,PowerParameter,,true,,PowerParameter,-1
465774,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowerParameter*,,<includes>,PowerParameter*,,true,,PowerParameter*,-1
465775,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowerParameterDefaultTypeInternal,,<includes>,PowerParameterDefaultTypeInternal,,true,,PowerParameterDefaultTypeInternal,-1
465776,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PrefixScore,,<includes>,PrefixScore,,true,,PrefixScore,-1
465777,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxConfiguration,,<includes>,PriorBoxConfiguration,,true,,PriorBoxConfiguration,-1
465778,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxLayerImpl,,<includes>,PriorBoxLayerImpl,,true,,PriorBoxLayerImpl,-1
465779,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxParameter,,<includes>,PriorBoxParameter,,true,,PriorBoxParameter,-1
465780,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxParameter*,,<includes>,PriorBoxParameter*,,true,,PriorBoxParameter*,-1
465781,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxParameterDefaultTypeInternal,,<includes>,PriorBoxParameterDefaultTypeInternal,,true,,PriorBoxParameterDefaultTypeInternal,-1
465782,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxParameter_CodeType,,<includes>,PriorBoxParameter_CodeType,,true,,PriorBoxParameter_CodeType,-1
465783,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxParameter_CodeType*,,<includes>,PriorBoxParameter_CodeType*,,true,,PriorBoxParameter_CodeType*,-1
465784,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Program,,<includes>,Program,,true,,Program,-1
465785,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProposalLayerImpl,,<includes>,ProposalLayerImpl,,true,,ProposalLayerImpl,-1
465786,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProposalParameter,,<includes>,ProposalParameter,,true,,ProposalParameter,-1
465787,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProposalParameter*,,<includes>,ProposalParameter*,,true,,ProposalParameter*,-1
465788,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProposalParameterDefaultTypeInternal,,<includes>,ProposalParameterDefaultTypeInternal,,true,,ProposalParameterDefaultTypeInternal,-1
465789,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AbsLayer>,,<includes>,Ptr<AbsLayer>,,true,,Ptr<AbsLayer>,-1
465790,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AccumLayer>,,<includes>,Ptr<AccumLayer>,,true,,Ptr<AccumLayer>,-1
465791,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AcosLayer>,,<includes>,Ptr<AcosLayer>,,true,,Ptr<AcosLayer>,-1
465792,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AcoshLayer>,,<includes>,Ptr<AcoshLayer>,,true,,Ptr<AcoshLayer>,-1
465793,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ActivationLayer>,,<includes>,Ptr<ActivationLayer>,,true,,Ptr<ActivationLayer>,-1
465794,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ActivationLayerInt8>,,<includes>,Ptr<ActivationLayerInt8>,,true,,Ptr<ActivationLayerInt8>,-1
465795,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ArgLayer>,,<includes>,Ptr<ArgLayer>,,true,,Ptr<ArgLayer>,-1
465796,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AsinLayer>,,<includes>,Ptr<AsinLayer>,,true,,Ptr<AsinLayer>,-1
465797,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AsinhLayer>,,<includes>,Ptr<AsinhLayer>,,true,,Ptr<AsinhLayer>,-1
465798,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AtanLayer>,,<includes>,Ptr<AtanLayer>,,true,,Ptr<AtanLayer>,-1
465799,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AtanhLayer>,,<includes>,Ptr<AtanhLayer>,,true,,Ptr<AtanhLayer>,-1
465800,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<AttentionLayer>,,<includes>,Ptr<AttentionLayer>,,true,,Ptr<AttentionLayer>,-1
465801,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<BNLLLayer>,,<includes>,Ptr<BNLLLayer>,,true,,Ptr<BNLLLayer>,-1
465802,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<BackendNode>,,<includes>,Ptr<BackendNode>,,true,,Ptr<BackendNode>,-1
465803,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<BackendWrapper>,,<includes>,Ptr<BackendWrapper>,,true,,Ptr<BackendWrapper>,-1
465804,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<BaseConvolutionLayer>,,<includes>,Ptr<BaseConvolutionLayer>,,true,,Ptr<BaseConvolutionLayer>,-1
465805,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<BatchNormLayer>,,<includes>,Ptr<BatchNormLayer>,,true,,Ptr<BatchNormLayer>,-1
465806,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<BatchNormLayerInt8>,,<includes>,Ptr<BatchNormLayerInt8>,,true,,Ptr<BatchNormLayerInt8>,-1
465807,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<CeilLayer>,,<includes>,Ptr<CeilLayer>,,true,,Ptr<CeilLayer>,-1
465808,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<CeluLayer>,,<includes>,Ptr<CeluLayer>,,true,,Ptr<CeluLayer>,-1
465809,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ConcatLayer>,,<includes>,Ptr<ConcatLayer>,,true,,Ptr<ConcatLayer>,-1
465810,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<CorrelationLayer>,,<includes>,Ptr<CorrelationLayer>,,true,,Ptr<CorrelationLayer>,-1
465811,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<CosLayer>,,<includes>,Ptr<CosLayer>,,true,,Ptr<CosLayer>,-1
465812,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<CoshLayer>,,<includes>,Ptr<CoshLayer>,,true,,Ptr<CoshLayer>,-1
465813,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<CumSumLayer>,,<includes>,Ptr<CumSumLayer>,,true,,Ptr<CumSumLayer>,-1
465814,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<DataAugmentationLayer>,,<includes>,Ptr<DataAugmentationLayer>,,true,,Ptr<DataAugmentationLayer>,-1
465815,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<DequantizeLayer>,,<includes>,Ptr<DequantizeLayer>,,true,,Ptr<DequantizeLayer>,-1
465816,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<DetectionOutputLayer>,,<includes>,Ptr<DetectionOutputLayer>,,true,,Ptr<DetectionOutputLayer>,-1
465817,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ELULayer>,,<includes>,Ptr<ELULayer>,,true,,Ptr<ELULayer>,-1
465818,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<EinsumLayer>,,<includes>,Ptr<EinsumLayer>,,true,,Ptr<EinsumLayer>,-1
465819,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<EltwiseLayer>,,<includes>,Ptr<EltwiseLayer>,,true,,Ptr<EltwiseLayer>,-1
465820,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<EltwiseLayerInt8>,,<includes>,Ptr<EltwiseLayerInt8>,,true,,Ptr<EltwiseLayerInt8>,-1
465821,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ErfLayer>,,<includes>,Ptr<ErfLayer>,,true,,Ptr<ErfLayer>,-1
465822,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ExpLayer>,,<includes>,Ptr<ExpLayer>,,true,,Ptr<ExpLayer>,-1
465823,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ExpandLayer>,,<includes>,Ptr<ExpandLayer>,,true,,Ptr<ExpandLayer>,-1
465824,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<FastConv>,,<includes>,Ptr<FastConv>,,true,,Ptr<FastConv>,-1
465825,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<FlattenLayer>,,<includes>,Ptr<FlattenLayer>,,true,,Ptr<FlattenLayer>,-1
465826,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<FloorLayer>,,<includes>,Ptr<FloorLayer>,,true,,Ptr<FloorLayer>,-1
465827,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<FlowWarpLayer>,,<includes>,Ptr<FlowWarpLayer>,,true,,Ptr<FlowWarpLayer>,-1
465828,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<GRULayer>,,<includes>,Ptr<GRULayer>,,true,,Ptr<GRULayer>,-1
465829,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<GatherElementsLayer>,,<includes>,Ptr<GatherElementsLayer>,,true,,Ptr<GatherElementsLayer>,-1
465830,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<GatherLayer>,,<includes>,Ptr<GatherLayer>,,true,,Ptr<GatherLayer>,-1
465831,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<GeluApproximationLayer>,,<includes>,Ptr<GeluApproximationLayer>,,true,,Ptr<GeluApproximationLayer>,-1
465832,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<GeluLayer>,,<includes>,Ptr<GeluLayer>,,true,,Ptr<GeluLayer>,-1
465833,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<GemmLayer>,,<includes>,Ptr<GemmLayer>,,true,,Ptr<GemmLayer>,-1
465834,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<HardSigmoidLayer>,,<includes>,Ptr<HardSigmoidLayer>,,true,,Ptr<HardSigmoidLayer>,-1
465835,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<HardSwishLayer>,,<includes>,Ptr<HardSwishLayer>,,true,,Ptr<HardSwishLayer>,-1
465836,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ImportGraphWrapper>,,<includes>,Ptr<ImportGraphWrapper>,,true,,Ptr<ImportGraphWrapper>,-1
465837,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ImportNodeWrapper>,,<includes>,Ptr<ImportNodeWrapper>,,true,,Ptr<ImportNodeWrapper>,-1
465838,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<InnerProductLayer>,,<includes>,Ptr<InnerProductLayer>,,true,,Ptr<InnerProductLayer>,-1
465839,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<InnerProductLayerInt8>,,<includes>,Ptr<InnerProductLayerInt8>,,true,,Ptr<InnerProductLayerInt8>,-1
465840,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<InstanceNormLayer>,,<includes>,Ptr<InstanceNormLayer>,,true,,Ptr<InstanceNormLayer>,-1
465841,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<LRNLayer>,,<includes>,Ptr<LRNLayer>,,true,,Ptr<LRNLayer>,-1
465842,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<LSTMLayer>,,<includes>,Ptr<LSTMLayer>,,true,,Ptr<LSTMLayer>,-1
465843,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<Layer>,,<includes>,Ptr<Layer>,,true,,Ptr<Layer>,-1
465844,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<LayerNormLayer>,,<includes>,Ptr<LayerNormLayer>,,true,,Ptr<LayerNormLayer>,-1
465845,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<LogLayer>,,<includes>,Ptr<LogLayer>,,true,,Ptr<LogLayer>,-1
465846,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<MVNLayer>,,<includes>,Ptr<MVNLayer>,,true,,Ptr<MVNLayer>,-1
465847,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<MatMulLayer>,,<includes>,Ptr<MatMulLayer>,,true,,Ptr<MatMulLayer>,-1
465848,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<MaxUnpoolLayer>,,<includes>,Ptr<MaxUnpoolLayer>,,true,,Ptr<MaxUnpoolLayer>,-1
465849,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<MishLayer>,,<includes>,Ptr<MishLayer>,,true,,Ptr<MishLayer>,-1
465850,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<NaryEltwiseLayer>,,<includes>,Ptr<NaryEltwiseLayer>,,true,,Ptr<NaryEltwiseLayer>,-1
465851,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Impl>,,<includes>,Ptr<Net.Impl>,,true,,Impl>,-1
465852,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<NormalizeBBoxLayer>,,<includes>,Ptr<NormalizeBBoxLayer>,,true,,Ptr<NormalizeBBoxLayer>,-1
465853,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<NotLayer>,,<includes>,Ptr<NotLayer>,,true,,Ptr<NotLayer>,-1
465854,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<PaddingLayer>,,<includes>,Ptr<PaddingLayer>,,true,,Ptr<PaddingLayer>,-1
465855,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<PermuteLayer>,,<includes>,Ptr<PermuteLayer>,,true,,Ptr<PermuteLayer>,-1
465856,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<PoolingLayer>,,<includes>,Ptr<PoolingLayer>,,true,,Ptr<PoolingLayer>,-1
465857,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<PoolingLayerInt8>,,<includes>,Ptr<PoolingLayerInt8>,,true,,Ptr<PoolingLayerInt8>,-1
465858,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<PowerLayer>,,<includes>,Ptr<PowerLayer>,,true,,Ptr<PowerLayer>,-1
465859,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<PriorBoxLayer>,,<includes>,Ptr<PriorBoxLayer>,,true,,Ptr<PriorBoxLayer>,-1
465860,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ProposalLayer>,,<includes>,Ptr<ProposalLayer>,,true,,Ptr<ProposalLayer>,-1
465861,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<QuantizeLayer>,,<includes>,Ptr<QuantizeLayer>,,true,,Ptr<QuantizeLayer>,-1
465862,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<RNNLayer>,,<includes>,Ptr<RNNLayer>,,true,,Ptr<RNNLayer>,-1
465863,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ReLU6Layer>,,<includes>,Ptr<ReLU6Layer>,,true,,Ptr<ReLU6Layer>,-1
465864,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ReLULayer>,,<includes>,Ptr<ReLULayer>,,true,,Ptr<ReLULayer>,-1
465865,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ReciprocalLayer>,,<includes>,Ptr<ReciprocalLayer>,,true,,Ptr<ReciprocalLayer>,-1
465866,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ReduceLayer>,,<includes>,Ptr<ReduceLayer>,,true,,Ptr<ReduceLayer>,-1
465867,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<RegionLayer>,,<includes>,Ptr<RegionLayer>,,true,,Ptr<RegionLayer>,-1
465868,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ReorgLayer>,,<includes>,Ptr<ReorgLayer>,,true,,Ptr<ReorgLayer>,-1
465869,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<RequantizeLayer>,,<includes>,Ptr<RequantizeLayer>,,true,,Ptr<RequantizeLayer>,-1
465870,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ReshapeLayer>,,<includes>,Ptr<ReshapeLayer>,,true,,Ptr<ReshapeLayer>,-1
465871,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ResizeLayer>,,<includes>,Ptr<ResizeLayer>,,true,,Ptr<ResizeLayer>,-1
465872,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<RoundLayer>,,<includes>,Ptr<RoundLayer>,,true,,Ptr<RoundLayer>,-1
465873,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ScaleLayer>,,<includes>,Ptr<ScaleLayer>,,true,,Ptr<ScaleLayer>,-1
465874,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ScaleLayerInt8>,,<includes>,Ptr<ScaleLayerInt8>,,true,,Ptr<ScaleLayerInt8>,-1
465875,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ScatterLayer>,,<includes>,Ptr<ScatterLayer>,,true,,Ptr<ScatterLayer>,-1
465876,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ScatterNDLayer>,,<includes>,Ptr<ScatterNDLayer>,,true,,Ptr<ScatterNDLayer>,-1
465877,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SeluLayer>,,<includes>,Ptr<SeluLayer>,,true,,Ptr<SeluLayer>,-1
465878,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ShrinkLayer>,,<includes>,Ptr<ShrinkLayer>,,true,,Ptr<ShrinkLayer>,-1
465879,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SigmoidLayer>,,<includes>,Ptr<SigmoidLayer>,,true,,Ptr<SigmoidLayer>,-1
465880,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SignLayer>,,<includes>,Ptr<SignLayer>,,true,,Ptr<SignLayer>,-1
465881,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SinLayer>,,<includes>,Ptr<SinLayer>,,true,,Ptr<SinLayer>,-1
465882,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SinhLayer>,,<includes>,Ptr<SinhLayer>,,true,,Ptr<SinhLayer>,-1
465883,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SliceLayer>,,<includes>,Ptr<SliceLayer>,,true,,Ptr<SliceLayer>,-1
465884,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SoftmaxLayer>,,<includes>,Ptr<SoftmaxLayer>,,true,,Ptr<SoftmaxLayer>,-1
465885,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SoftmaxLayerInt8>,,<includes>,Ptr<SoftmaxLayerInt8>,,true,,Ptr<SoftmaxLayerInt8>,-1
465886,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SoftplusLayer>,,<includes>,Ptr<SoftplusLayer>,,true,,Ptr<SoftplusLayer>,-1
465887,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SoftsignLayer>,,<includes>,Ptr<SoftsignLayer>,,true,,Ptr<SoftsignLayer>,-1
465888,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SplitLayer>,,<includes>,Ptr<SplitLayer>,,true,,Ptr<SplitLayer>,-1
465889,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SqrtLayer>,,<includes>,Ptr<SqrtLayer>,,true,,Ptr<SqrtLayer>,-1
465890,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<SwishLayer>,,<includes>,Ptr<SwishLayer>,,true,,Ptr<SwishLayer>,-1
465891,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<TanHLayer>,,<includes>,Ptr<TanHLayer>,,true,,Ptr<TanHLayer>,-1
465892,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<TanLayer>,,<includes>,Ptr<TanLayer>,,true,,Ptr<TanLayer>,-1
465893,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<ThresholdedReluLayer>,,<includes>,Ptr<ThresholdedReluLayer>,,true,,Ptr<ThresholdedReluLayer>,-1
465894,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<TileLayer>,,<includes>,Ptr<TileLayer>,,true,,Ptr<TileLayer>,-1
465895,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Ptr<wrapper_type>,,<includes>,Ptr<wrapper_type>,,true,,Ptr<wrapper_type>,-1
465896,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PythonParameter,,<includes>,PythonParameter,,true,,PythonParameter,-1
465897,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PythonParameter*,,<includes>,PythonParameter*,,true,,PythonParameter*,-1
465898,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PythonParameterDefaultTypeInternal,,<includes>,PythonParameterDefaultTypeInternal,,true,,PythonParameterDefaultTypeInternal,-1
465899,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuantizationDetails,,<includes>,QuantizationDetails,,true,,QuantizationDetails,-1
465900,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuantizationParametersBuilder,,<includes>,QuantizationParametersBuilder,,true,,QuantizationParametersBuilder,-1
465901,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuantizeLayerImpl,,<includes>,QuantizeLayerImpl,,true,,QuantizeLayerImpl,-1
465902,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuantizeOptions,,<includes>,QuantizeOptions,,true,,QuantizeOptions,-1
465903,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuantizeOptionsBuilder,,<includes>,QuantizeOptionsBuilder,,true,,QuantizeOptionsBuilder,-1
465904,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Queue,,<includes>,Queue,,true,,Queue,-1
465905,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RNNConfiguration,,<includes>,RNNConfiguration,,true,,RNNConfiguration,-1
465906,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RNNDescriptor<T>,,<includes>,RNNDescriptor<T>,,true,,RNNDescriptor<T>,-1
465907,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RNNLayer,,<includes>,RNNLayer,,true,,RNNLayer,-1
465908,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RNNLayerImpl,,<includes>,RNNLayerImpl,,true,,RNNLayerImpl,-1
465909,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RNNOptions,,<includes>,RNNOptions,,true,,RNNOptions,-1
465910,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RNNOptionsBuilder,,<includes>,RNNOptionsBuilder,,true,,RNNOptionsBuilder,-1
465911,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ROIPoolingParameter,,<includes>,ROIPoolingParameter,,true,,ROIPoolingParameter,-1
465912,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ROIPoolingParameter*,,<includes>,ROIPoolingParameter*,,true,,ROIPoolingParameter*,-1
465913,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ROIPoolingParameterDefaultTypeInternal,,<includes>,ROIPoolingParameterDefaultTypeInternal,,true,,ROIPoolingParameterDefaultTypeInternal,-1
465914,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RandomOptions,,<includes>,RandomOptions,,true,,RandomOptions,-1
465915,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RandomOptionsBuilder,,<includes>,RandomOptionsBuilder,,true,,RandomOptionsBuilder,-1
465916,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Range,,<includes>,Range,,true,,Range,-1
465917,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RangeOptions,,<includes>,RangeOptions,,true,,RangeOptions,-1
465918,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RangeOptionsBuilder,,<includes>,RangeOptionsBuilder,,true,,RangeOptionsBuilder,-1
465919,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Range[],,<includes>,Range[],,true,,Range[],-1
465920,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RankOptions,,<includes>,RankOptions,,true,,RankOptions,-1
465921,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RankOptionsBuilder,,<includes>,RankOptionsBuilder,,true,,RankOptionsBuilder,-1
465922,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLU6Functor,,<includes>,ReLU6Functor,,true,,ReLU6Functor,-1
465923,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUFunctor,,<includes>,ReLUFunctor,,true,,ReLUFunctor,-1
465924,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUParameter,,<includes>,ReLUParameter,,true,,ReLUParameter,-1
465925,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUParameter*,,<includes>,ReLUParameter*,,true,,ReLUParameter*,-1
465926,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUParameterDefaultTypeInternal,,<includes>,ReLUParameterDefaultTypeInternal,,true,,ReLUParameterDefaultTypeInternal,-1
465927,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUParameter_Engine,,<includes>,ReLUParameter_Engine,,true,,ReLUParameter_Engine,-1
465928,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUParameter_Engine*,,<includes>,ReLUParameter_Engine*,,true,,ReLUParameter_Engine*,-1
465929,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReadVariableOptions,,<includes>,ReadVariableOptions,,true,,ReadVariableOptions,-1
465930,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReadVariableOptionsBuilder,,<includes>,ReadVariableOptionsBuilder,,true,,ReadVariableOptionsBuilder,-1
465931,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Rect,,<includes>,Rect,,true,,Rect,-1
465932,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Rect2d,,<includes>,Rect2d,,true,,Rect2d,-1
465933,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RecurrentParameter,,<includes>,RecurrentParameter,,true,,RecurrentParameter,-1
465934,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RecurrentParameter*,,<includes>,RecurrentParameter*,,true,,RecurrentParameter*,-1
465935,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RecurrentParameterDefaultTypeInternal,,<includes>,RecurrentParameterDefaultTypeInternal,,true,,RecurrentParameterDefaultTypeInternal,-1
465936,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReduceLayerImpl,,<includes>,ReduceLayerImpl,,true,,ReduceLayerImpl,-1
465937,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReducerOptions,,<includes>,ReducerOptions,,true,,ReducerOptions,-1
465938,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReducerOptionsBuilder,,<includes>,ReducerOptionsBuilder,,true,,ReducerOptionsBuilder,-1
465939,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReductionOp*,,<includes>,ReductionOp*,,true,,ReductionOp*,-1
465940,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReductionParameter,,<includes>,ReductionParameter,,true,,ReductionParameter,-1
465941,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReductionParameter*,,<includes>,ReductionParameter*,,true,,ReductionParameter*,-1
465942,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReductionParameterDefaultTypeInternal,,<includes>,ReductionParameterDefaultTypeInternal,,true,,ReductionParameterDefaultTypeInternal,-1
465943,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReductionParameter_ReductionOp,,<includes>,ReductionParameter_ReductionOp,,true,,ReductionParameter_ReductionOp,-1
465944,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReductionParameter_ReductionOp*,,<includes>,ReductionParameter_ReductionOp*,,true,,ReductionParameter_ReductionOp*,-1
465945,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Reflection,,<includes>,Reflection,,true,,Reflection,-1
465946,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RegionConfiguration<V>,,<includes>,RegionConfiguration<V>,,true,,RegionConfiguration<V>,-1
465947,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RegionLayerImpl,,<includes>,RegionLayerImpl,,true,,RegionLayerImpl,-1
465948,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReorgLayerImpl,,<includes>,ReorgLayerImpl,,true,,ReorgLayerImpl,-1
465949,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RepeatedField<bool>,,<includes>,RepeatedField<bool>,,true,,RepeatedField<bool>,-1
465950,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RepeatedField<double>,,<includes>,RepeatedField<double>,,true,,RepeatedField<double>,-1
465951,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RepeatedField<float>,,<includes>,RepeatedField<float>,,true,,RepeatedField<float>,-1
465952,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RepeatedField<int32_t>,,<includes>,RepeatedField<int32_t>,,true,,RepeatedField<int32_t>,-1
465953,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RepeatedField<int64_t>,,<includes>,RepeatedField<int64_t>,,true,,RepeatedField<int64_t>,-1
465954,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RepeatedField<int>,,<includes>,RepeatedField<int>,,true,,RepeatedField<int>,-1
465955,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RepeatedField<uint32_t>,,<includes>,RepeatedField<uint32_t>,,true,,RepeatedField<uint32_t>,-1
465956,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RepeatedField<uint64_t>,,<includes>,RepeatedField<uint64_t>,,true,,RepeatedField<uint64_t>,-1
465957,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobProto>,,<includes>,RepeatedPtrField<opencv_caffe.BlobProto>,,true,,BlobProto>,-1
465958,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BlobShape>,,<includes>,RepeatedPtrField<opencv_caffe.BlobShape>,,true,,BlobShape>,-1
465959,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillerParameter>,,<includes>,RepeatedPtrField<opencv_caffe.FillerParameter>,,true,,FillerParameter>,-1
465960,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerParameter>,,<includes>,RepeatedPtrField<opencv_caffe.LayerParameter>,,true,,LayerParameter>,-1
465961,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetParameter>,,<includes>,RepeatedPtrField<opencv_caffe.NetParameter>,,true,,NetParameter>,-1
465962,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetState>,,<includes>,RepeatedPtrField<opencv_caffe.NetState>,,true,,NetState>,-1
465963,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NetStateRule>,,<includes>,RepeatedPtrField<opencv_caffe.NetStateRule>,,true,,NetStateRule>,-1
465964,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamSpec>,,<includes>,RepeatedPtrField<opencv_caffe.ParamSpec>,,true,,ParamSpec>,-1
465965,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter>,,<includes>,RepeatedPtrField<opencv_caffe.V1LayerParameter>,,true,,V1LayerParameter>,-1
465966,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttributeProto>,,<includes>,RepeatedPtrField<opencv_onnx.AttributeProto>,,true,,AttributeProto>,-1
465967,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GraphProto>,,<includes>,RepeatedPtrField<opencv_onnx.GraphProto>,,true,,GraphProto>,-1
465968,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeProto>,,<includes>,RepeatedPtrField<opencv_onnx.NodeProto>,,true,,NodeProto>,-1
465969,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OperatorSetIdProto>,,<includes>,RepeatedPtrField<opencv_onnx.OperatorSetIdProto>,,true,,OperatorSetIdProto>,-1
465970,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringStringEntryProto>,,<includes>,RepeatedPtrField<opencv_onnx.StringStringEntryProto>,,true,,StringStringEntryProto>,-1
465971,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto>,,<includes>,RepeatedPtrField<opencv_onnx.TensorProto>,,true,,TensorProto>,-1
465972,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto_Dimension>,,<includes>,RepeatedPtrField<opencv_onnx.TensorShapeProto_Dimension>,,true,,TensorShapeProto_Dimension>,-1
465973,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueInfoProto>,,<includes>,RepeatedPtrField<opencv_onnx.ValueInfoProto>,,true,,ValueInfoProto>,-1
465974,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef>,,<includes>,RepeatedPtrField<opencv_tensorflow.FunctionDef>,,true,,FunctionDef>,-1
465975,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FunctionDef_Node>,,<includes>,RepeatedPtrField<opencv_tensorflow.FunctionDef_Node>,,true,,FunctionDef_Node>,-1
465976,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GradientDef>,,<includes>,RepeatedPtrField<opencv_tensorflow.GradientDef>,,true,,GradientDef>,-1
465977,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NodeDef>,,<includes>,RepeatedPtrField<opencv_tensorflow.NodeDef>,,true,,NodeDef>,-1
465978,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef>,,<includes>,RepeatedPtrField<opencv_tensorflow.OpDef>,,true,,OpDef>,-1
465979,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef_ArgDef>,,<includes>,RepeatedPtrField<opencv_tensorflow.OpDef_ArgDef>,,true,,OpDef_ArgDef>,-1
465980,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OpDef_AttrDef>,,<includes>,RepeatedPtrField<opencv_tensorflow.OpDef_AttrDef>,,true,,OpDef_AttrDef>,-1
465981,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto>,,<includes>,RepeatedPtrField<opencv_tensorflow.TensorProto>,,true,,TensorProto>,-1
465982,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto>,,<includes>,RepeatedPtrField<opencv_tensorflow.TensorShapeProto>,,true,,TensorShapeProto>,-1
465983,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto_Dim>,,<includes>,RepeatedPtrField<opencv_tensorflow.TensorShapeProto_Dim>,,true,,TensorShapeProto_Dim>,-1
465984,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string>,,<includes>,RepeatedPtrField<std.string>,,true,,string>,-1
465985,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RequantizeLayerImpl,,<includes>,RequantizeLayerImpl,,true,,RequantizeLayerImpl,-1
465986,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReshapeLayerImpl,,<includes>,ReshapeLayerImpl,,true,,ReshapeLayerImpl,-1
465987,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReshapeOptions,,<includes>,ReshapeOptions,,true,,ReshapeOptions,-1
465988,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReshapeOptionsBuilder,,<includes>,ReshapeOptionsBuilder,,true,,ReshapeOptionsBuilder,-1
465989,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReshapeParameter,,<includes>,ReshapeParameter,,true,,ReshapeParameter,-1
465990,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReshapeParameter*,,<includes>,ReshapeParameter*,,true,,ReshapeParameter*,-1
465991,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReshapeParameterDefaultTypeInternal,,<includes>,ReshapeParameterDefaultTypeInternal,,true,,ReshapeParameterDefaultTypeInternal,-1
465992,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeBilinearOptions,,<includes>,ResizeBilinearOptions,,true,,ResizeBilinearOptions,-1
465993,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeBilinearOptionsBuilder,,<includes>,ResizeBilinearOptionsBuilder,,true,,ResizeBilinearOptionsBuilder,-1
465994,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeConfiguration,,<includes>,ResizeConfiguration,,true,,ResizeConfiguration,-1
465995,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeLayer,,<includes>,ResizeLayer,,true,,ResizeLayer,-1
465996,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeLayerImpl,,<includes>,ResizeLayerImpl,,true,,ResizeLayerImpl,-1
465997,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeNearestNeighborOptions,,<includes>,ResizeNearestNeighborOptions,,true,,ResizeNearestNeighborOptions,-1
465998,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeNearestNeighborOptionsBuilder,,<includes>,ResizeNearestNeighborOptionsBuilder,,true,,ResizeNearestNeighborOptionsBuilder,-1
465999,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReverseSequenceOptions,,<includes>,ReverseSequenceOptions,,true,,ReverseSequenceOptions,-1
466000,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReverseSequenceOptionsBuilder,,<includes>,ReverseSequenceOptionsBuilder,,true,,ReverseSequenceOptionsBuilder,-1
466001,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReverseV2Options,,<includes>,ReverseV2Options,,true,,ReverseV2Options,-1
466002,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReverseV2OptionsBuilder,,<includes>,ReverseV2OptionsBuilder,,true,,ReverseV2OptionsBuilder,-1
466003,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Rfft2dOptions,,<includes>,Rfft2dOptions,,true,,Rfft2dOptions,-1
466004,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Rfft2dOptionsBuilder,,<includes>,Rfft2dOptionsBuilder,,true,,Rfft2dOptionsBuilder,-1
466005,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RotatedRect,,<includes>,RotatedRect,,true,,RotatedRect,-1
466006,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RoundingMode,,<includes>,RoundingMode,,true,,RoundingMode,-1
466007,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameter,,<includes>,SPPParameter,,true,,SPPParameter,-1
466008,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameter*,,<includes>,SPPParameter*,,true,,SPPParameter*,-1
466009,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameterDefaultTypeInternal,,<includes>,SPPParameterDefaultTypeInternal,,true,,SPPParameterDefaultTypeInternal,-1
466010,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameter_Engine,,<includes>,SPPParameter_Engine,,true,,SPPParameter_Engine,-1
466011,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameter_Engine*,,<includes>,SPPParameter_Engine*,,true,,SPPParameter_Engine*,-1
466012,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameter_PoolMethod,,<includes>,SPPParameter_PoolMethod,,true,,SPPParameter_PoolMethod,-1
466013,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameter_PoolMethod*,,<includes>,SPPParameter_PoolMethod*,,true,,SPPParameter_PoolMethod*,-1
466014,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SVDFOptions,,<includes>,SVDFOptions,,true,,SVDFOptions,-1
466015,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SVDFOptionsBuilder,,<includes>,SVDFOptionsBuilder,,true,,SVDFOptionsBuilder,-1
466016,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SaveOutputParameter,,<includes>,SaveOutputParameter,,true,,SaveOutputParameter,-1
466017,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SaveOutputParameter*,,<includes>,SaveOutputParameter*,,true,,SaveOutputParameter*,-1
466018,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SaveOutputParameterDefaultTypeInternal,,<includes>,SaveOutputParameterDefaultTypeInternal,,true,,SaveOutputParameterDefaultTypeInternal,-1
466019,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Scalar,,<includes>,Scalar,,true,,Scalar,-1
466020,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Scalar_<double>,,<includes>,Scalar_<double>,,true,,Scalar_<double>,-1
466021,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScaleLayerImpl,,<includes>,ScaleLayerImpl,,true,,ScaleLayerImpl,-1
466022,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScaleLayerInt8Impl,,<includes>,ScaleLayerInt8Impl,,true,,ScaleLayerInt8Impl,-1
466023,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScaleParameter,,<includes>,ScaleParameter,,true,,ScaleParameter,-1
466024,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScaleParameter*,,<includes>,ScaleParameter*,,true,,ScaleParameter*,-1
466025,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScaleParameterDefaultTypeInternal,,<includes>,ScaleParameterDefaultTypeInternal,,true,,ScaleParameterDefaultTypeInternal,-1
466026,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScaleShiftConfiguration,,<includes>,ScaleShiftConfiguration,,true,,ScaleShiftConfiguration,-1
466027,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScatterNdOptions,,<includes>,ScatterNdOptions,,true,,ScatterNdOptions,-1
466028,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScatterNdOptionsBuilder,,<includes>,ScatterNdOptionsBuilder,,true,,ScatterNdOptionsBuilder,-1
466029,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SegmentSumOptions,,<includes>,SegmentSumOptions,,true,,SegmentSumOptions,-1
466030,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SegmentSumOptionsBuilder,,<includes>,SegmentSumOptionsBuilder,,true,,SegmentSumOptionsBuilder,-1
466031,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SelectOptions,,<includes>,SelectOptions,,true,,SelectOptions,-1
466032,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SelectOptionsBuilder,,<includes>,SelectOptionsBuilder,,true,,SelectOptionsBuilder,-1
466033,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SelectV2Options,,<includes>,SelectV2Options,,true,,SelectV2Options,-1
466034,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SelectV2OptionsBuilder,,<includes>,SelectV2OptionsBuilder,,true,,SelectV2OptionsBuilder,-1
466035,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SequenceContainer,,<includes>,SequenceContainer,,true,,SequenceContainer,-1
466036,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SequenceRNNOptions,,<includes>,SequenceRNNOptions,,true,,SequenceRNNOptions,-1
466037,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SequenceRNNOptionsBuilder,,<includes>,SequenceRNNOptionsBuilder,,true,,SequenceRNNOptionsBuilder,-1
466038,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShapeOptions,,<includes>,ShapeOptions,,true,,ShapeOptions,-1
466039,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShapeOptionsBuilder,,<includes>,ShapeOptionsBuilder,,true,,ShapeOptionsBuilder,-1
466040,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShuffleChannelLayerImpl,,<includes>,ShuffleChannelLayerImpl,,true,,ShuffleChannelLayerImpl,-1
466041,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigmoidParameter,,<includes>,SigmoidParameter,,true,,SigmoidParameter,-1
466042,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigmoidParameter*,,<includes>,SigmoidParameter*,,true,,SigmoidParameter*,-1
466043,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigmoidParameterDefaultTypeInternal,,<includes>,SigmoidParameterDefaultTypeInternal,,true,,SigmoidParameterDefaultTypeInternal,-1
466044,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigmoidParameter_Engine,,<includes>,SigmoidParameter_Engine,,true,,SigmoidParameter_Engine,-1
466045,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigmoidParameter_Engine*,,<includes>,SigmoidParameter_Engine*,,true,,SigmoidParameter_Engine*,-1
466046,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignOptions,,<includes>,SignOptions,,true,,SignOptions,-1
466047,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignOptionsBuilder,,<includes>,SignOptionsBuilder,,true,,SignOptionsBuilder,-1
466048,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignatureDefBuilder,,<includes>,SignatureDefBuilder,,true,,SignatureDefBuilder,-1
466049,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Size,,<includes>,Size,,true,,Size,-1
466050,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Sizes,,<includes>,Sizes,,true,,Sizes,-1
466051,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SkipGramOptions,,<includes>,SkipGramOptions,,true,,SkipGramOptions,-1
466052,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SkipGramOptionsBuilder,,<includes>,SkipGramOptionsBuilder,,true,,SkipGramOptionsBuilder,-1
466053,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceLayer,,<includes>,SliceLayer,,true,,SliceLayer,-1
466054,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceLayerImpl,,<includes>,SliceLayerImpl,,true,,SliceLayerImpl,-1
466055,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceOptions,,<includes>,SliceOptions,,true,,SliceOptions,-1
466056,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceOptionsBuilder,,<includes>,SliceOptionsBuilder,,true,,SliceOptionsBuilder,-1
466057,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceParameter,,<includes>,SliceParameter,,true,,SliceParameter,-1
466058,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceParameter*,,<includes>,SliceParameter*,,true,,SliceParameter*,-1
466059,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceParameterDefaultTypeInternal,,<includes>,SliceParameterDefaultTypeInternal,,true,,SliceParameterDefaultTypeInternal,-1
466060,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SnapshotFormat*,,<includes>,SnapshotFormat*,,true,,SnapshotFormat*,-1
466061,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftMaxLayerImpl,,<includes>,SoftMaxLayerImpl,,true,,SoftMaxLayerImpl,-1
466062,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftMaxLayerInt8Impl,,<includes>,SoftMaxLayerInt8Impl,,true,,SoftMaxLayerInt8Impl,-1
466063,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftNMSMethod,,<includes>,SoftNMSMethod,,true,,SoftNMSMethod,-1
466064,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxOptions,,<includes>,SoftmaxOptions,,true,,SoftmaxOptions,-1
466065,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxOptionsBuilder,,<includes>,SoftmaxOptionsBuilder,,true,,SoftmaxOptionsBuilder,-1
466066,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxParameter,,<includes>,SoftmaxParameter,,true,,SoftmaxParameter,-1
466067,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxParameter*,,<includes>,SoftmaxParameter*,,true,,SoftmaxParameter*,-1
466068,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxParameterDefaultTypeInternal,,<includes>,SoftmaxParameterDefaultTypeInternal,,true,,SoftmaxParameterDefaultTypeInternal,-1
466069,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxParameter_Engine,,<includes>,SoftmaxParameter_Engine,,true,,SoftmaxParameter_Engine,-1
466070,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxParameter_Engine*,,<includes>,SoftmaxParameter_Engine*,,true,,SoftmaxParameter_Engine*,-1
466071,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverMode*,,<includes>,SolverMode*,,true,,SolverMode*,-1
466072,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter,,<includes>,SolverParameter,,true,,SolverParameter,-1
466073,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter*,,<includes>,SolverParameter*,,true,,SolverParameter*,-1
466074,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameterDefaultTypeInternal,,<includes>,SolverParameterDefaultTypeInternal,,true,,SolverParameterDefaultTypeInternal,-1
466075,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SnapshotFormat,,<includes>,SolverParameter_SnapshotFormat,,true,,SolverParameter_SnapshotFormat,-1
466076,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SnapshotFormat*,,<includes>,SolverParameter_SnapshotFormat*,,true,,SolverParameter_SnapshotFormat*,-1
466077,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SolverMode,,<includes>,SolverParameter_SolverMode,,true,,SolverParameter_SolverMode,-1
466078,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SolverMode*,,<includes>,SolverParameter_SolverMode*,,true,,SolverParameter_SolverMode*,-1
466079,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SolverType,,<includes>,SolverParameter_SolverType,,true,,SolverParameter_SolverType,-1
466080,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SolverType*,,<includes>,SolverParameter_SolverType*,,true,,SolverParameter_SolverType*,-1
466081,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverState,,<includes>,SolverState,,true,,SolverState,-1
466082,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverState*,,<includes>,SolverState*,,true,,SolverState*,-1
466083,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverStateDefaultTypeInternal,,<includes>,SolverStateDefaultTypeInternal,,true,,SolverStateDefaultTypeInternal,-1
466084,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverType*,,<includes>,SolverType*,,true,,SolverType*,-1
466085,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SpaceToBatchNDOptions,,<includes>,SpaceToBatchNDOptions,,true,,SpaceToBatchNDOptions,-1
466086,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SpaceToBatchNDOptionsBuilder,,<includes>,SpaceToBatchNDOptionsBuilder,,true,,SpaceToBatchNDOptionsBuilder,-1
466087,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SpaceToDepthOptions,,<includes>,SpaceToDepthOptions,,true,,SpaceToDepthOptions,-1
466088,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SpaceToDepthOptionsBuilder,,<includes>,SpaceToDepthOptionsBuilder,,true,,SpaceToDepthOptionsBuilder,-1
466089,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Span<T>,,<includes>,Span<T>,,true,,Span<T>,-1
466090,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SparseIndexVector,,<includes>,SparseIndexVector,,true,,SparseIndexVector,-1
466091,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SparseToDenseOptions,,<includes>,SparseToDenseOptions,,true,,SparseToDenseOptions,-1
466092,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SparseToDenseOptionsBuilder,,<includes>,SparseToDenseOptionsBuilder,,true,,SparseToDenseOptionsBuilder,-1
466093,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SparsityParametersBuilder,,<includes>,SparsityParametersBuilder,,true,,SparsityParametersBuilder,-1
466094,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SplitLayerImpl,,<includes>,SplitLayerImpl,,true,,SplitLayerImpl,-1
466095,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SplitOptions,,<includes>,SplitOptions,,true,,SplitOptions,-1
466096,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SplitOptionsBuilder,,<includes>,SplitOptionsBuilder,,true,,SplitOptionsBuilder,-1
466097,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SplitVOptions,,<includes>,SplitVOptions,,true,,SplitVOptions,-1
466098,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SplitVOptionsBuilder,,<includes>,SplitVOptionsBuilder,,true,,SplitVOptionsBuilder,-1
466099,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SquareOptions,,<includes>,SquareOptions,,true,,SquareOptions,-1
466100,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SquareOptionsBuilder,,<includes>,SquareOptionsBuilder,,true,,SquareOptionsBuilder,-1
466101,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SquaredDifferenceOptions,,<includes>,SquaredDifferenceOptions,,true,,SquaredDifferenceOptions,-1
466102,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SquaredDifferenceOptionsBuilder,,<includes>,SquaredDifferenceOptionsBuilder,,true,,SquaredDifferenceOptionsBuilder,-1
466103,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SquashMethod,,<includes>,SquashMethod,,true,,SquashMethod,-1
466104,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SqueezeOptions,,<includes>,SqueezeOptions,,true,,SqueezeOptions,-1
466105,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SqueezeOptionsBuilder,,<includes>,SqueezeOptionsBuilder,,true,,SqueezeOptionsBuilder,-1
466106,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Stream,,<includes>,Stream,,true,,Stream,-1
466107,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StridedSliceOptions,,<includes>,StridedSliceOptions,,true,,StridedSliceOptions,-1
466108,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StridedSliceOptionsBuilder,,<includes>,StridedSliceOptionsBuilder,,true,,StridedSliceOptionsBuilder,-1
466109,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,String,,<includes>,String,,true,,String,-1
466110,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringPiece,,<includes>,StringPiece,,true,,StringPiece,-1
466111,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringStringEntryProto,,<includes>,StringStringEntryProto,,true,,StringStringEntryProto,-1
466112,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringStringEntryProto*,,<includes>,StringStringEntryProto*,,true,,StringStringEntryProto*,-1
466113,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StringStringEntryProtoDefaultTypeInternal,,<includes>,StringStringEntryProtoDefaultTypeInternal,,true,,StringStringEntryProtoDefaultTypeInternal,-1
466114,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SubGraphBuilder,,<includes>,SubGraphBuilder,,true,,SubGraphBuilder,-1
466115,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SubOptions,,<includes>,SubOptions,,true,,SubOptions,-1
466116,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SubOptionsBuilder,,<includes>,SubOptionsBuilder,,true,,SubOptionsBuilder,-1
466117,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Subgraph,,<includes>,Subgraph,,true,,Subgraph,-1
466118,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,T,,<includes>,T,,true,,T,-1
466119,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,T*,,<includes>,T*,,true,,T*,-1
466120,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,THDiskFile*,,<includes>,THDiskFile*,,true,,THDiskFile*,-1
466121,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,THFile*,,<includes>,THFile*,,true,,THFile*,-1
466122,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,THFileVTable,,<includes>,THFileVTable,,true,,THFileVTable,-1
466123,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,THFileVTable*,,<includes>,THFileVTable*,,true,,THFileVTable*,-1
466124,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanHParameter,,<includes>,TanHParameter,,true,,TanHParameter,-1
466125,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanHParameter*,,<includes>,TanHParameter*,,true,,TanHParameter*,-1
466126,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanHParameterDefaultTypeInternal,,<includes>,TanHParameterDefaultTypeInternal,,true,,TanHParameterDefaultTypeInternal,-1
466127,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanHParameter_Engine,,<includes>,TanHParameter_Engine,,true,,TanHParameter_Engine,-1
466128,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanHParameter_Engine*,,<includes>,TanHParameter_Engine*,,true,,TanHParameter_Engine*,-1
466129,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Target,,<includes>,Target,,true,,Target,-1
466130,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TargetArchs,,<includes>,TargetArchs,,true,,TargetArchs,-1
466131,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Tensor<T>,,<includes>,Tensor<T>,,true,,Tensor<T>,-1
466132,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorBuilder,,<includes>,TensorBuilder,,true,,TensorBuilder,-1
466133,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorDescriptor<T>,,<includes>,TensorDescriptor<T>,,true,,TensorDescriptor<T>,-1
466134,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorDescriptor<half>,,<includes>,TensorDescriptor<half>,,true,,TensorDescriptor<half>,-1
466135,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorDescriptorsArray<T>,,<includes>,TensorDescriptorsArray<T>,,true,,TensorDescriptorsArray<T>,-1
466136,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorMapBuilder,,<includes>,TensorMapBuilder,,true,,TensorMapBuilder,-1
466137,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto,,<includes>,TensorProto,,true,,TensorProto,-1
466138,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto*,,<includes>,TensorProto*,,true,,TensorProto*,-1
466139,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProtoDefaultTypeInternal,,<includes>,TensorProtoDefaultTypeInternal,,true,,TensorProtoDefaultTypeInternal,-1
466140,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto_DataType,,<includes>,TensorProto_DataType,,true,,TensorProto_DataType,-1
466141,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto_DataType*,,<includes>,TensorProto_DataType*,,true,,TensorProto_DataType*,-1
466142,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto_Segment,,<includes>,TensorProto_Segment,,true,,TensorProto_Segment,-1
466143,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto_Segment*,,<includes>,TensorProto_Segment*,,true,,TensorProto_Segment*,-1
466144,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto_SegmentDefaultTypeInternal,,<includes>,TensorProto_SegmentDefaultTypeInternal,,true,,TensorProto_SegmentDefaultTypeInternal,-1
466145,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto,,<includes>,TensorShapeProto,,true,,TensorShapeProto,-1
466146,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto*,,<includes>,TensorShapeProto*,,true,,TensorShapeProto*,-1
466147,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProtoDefaultTypeInternal,,<includes>,TensorShapeProtoDefaultTypeInternal,,true,,TensorShapeProtoDefaultTypeInternal,-1
466148,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto_Dim,,<includes>,TensorShapeProto_Dim,,true,,TensorShapeProto_Dim,-1
466149,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto_Dim*,,<includes>,TensorShapeProto_Dim*,,true,,TensorShapeProto_Dim*,-1
466150,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto_DimDefaultTypeInternal,,<includes>,TensorShapeProto_DimDefaultTypeInternal,,true,,TensorShapeProto_DimDefaultTypeInternal,-1
466151,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto_Dimension,,<includes>,TensorShapeProto_Dimension,,true,,TensorShapeProto_Dimension,-1
466152,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto_Dimension*,,<includes>,TensorShapeProto_Dimension*,,true,,TensorShapeProto_Dimension*,-1
466153,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorShapeProto_DimensionDefaultTypeInternal,,<includes>,TensorShapeProto_DimensionDefaultTypeInternal,,true,,TensorShapeProto_DimensionDefaultTypeInternal,-1
466154,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorSpan,,<includes>,TensorSpan,,true,,TensorSpan,-1
466155,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorSpan<T>,,<includes>,TensorSpan<T>,,true,,TensorSpan<T>,-1
466156,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorTransform,,<includes>,TensorTransform,,true,,TensorTransform,-1
466157,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorType,,<includes>,TensorType,,true,,TensorType,-1
466158,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorType1,,<includes>,TensorType1,,true,,TensorType1,-1
466159,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorType2,,<includes>,TensorType2,,true,,TensorType2,-1
466160,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorView,,<includes>,TensorView,,true,,TensorView,-1
466161,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorView<T>,,<includes>,TensorView<T>,,true,,TensorView<T>,-1
466162,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TestBaseWithParam<EinsumParams>,,<includes>,TestBaseWithParam<EinsumParams>,,true,,TestBaseWithParam<EinsumParams>,-1
466163,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TestBaseWithParam<LstmParams>,,<includes>,TestBaseWithParam<LstmParams>,,true,,TestBaseWithParam<LstmParams>,-1
466164,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TestBaseWithParam<MatMulTestParam_t>,,<includes>,TestBaseWithParam<MatMulTestParam_t>,,true,,TestBaseWithParam<MatMulTestParam_t>,-1
466165,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"TestBaseWithParam<tuple<Backend, Target>>",,<includes>,"TestBaseWithParam<tuple<Backend, Target>>",,true,,"TestBaseWithParam<tuple<Backend, Target>>",-1
466166,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TestSize_,,<includes>,TestSize_,,true,,TestSize_,-1
466167,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TextDetectionModel_DB,,<includes>,TextDetectionModel_DB,,true,,TextDetectionModel_DB,-1
466168,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TextDetectionModel_DB_Impl,,<includes>,TextDetectionModel_DB_Impl,,true,,TextDetectionModel_DB_Impl,-1
466169,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TextDetectionModel_EAST,,<includes>,TextDetectionModel_EAST,,true,,TextDetectionModel_EAST,-1
466170,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TextDetectionModel_EAST_Impl,,<includes>,TextDetectionModel_EAST_Impl,,true,,TextDetectionModel_EAST_Impl,-1
466171,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TextDetectionModel_Impl,,<includes>,TextDetectionModel_Impl,,true,,TextDetectionModel_Impl,-1
466172,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TextRecognitionModel,,<includes>,TextRecognitionModel,,true,,TextRecognitionModel,-1
466173,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TextRecognitionModel_Impl,,<includes>,TextRecognitionModel_Impl,,true,,TextRecognitionModel_Impl,-1
466174,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThresholdParameter,,<includes>,ThresholdParameter,,true,,ThresholdParameter,-1
466175,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThresholdParameter*,,<includes>,ThresholdParameter*,,true,,ThresholdParameter*,-1
466176,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThresholdParameterDefaultTypeInternal,,<includes>,ThresholdParameterDefaultTypeInternal,,true,,ThresholdParameterDefaultTypeInternal,-1
466177,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TileOptions,,<includes>,TileOptions,,true,,TileOptions,-1
466178,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TileOptionsBuilder,,<includes>,TileOptionsBuilder,,true,,TileOptionsBuilder,-1
466179,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TileParameter,,<includes>,TileParameter,,true,,TileParameter,-1
466180,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TileParameter*,,<includes>,TileParameter*,,true,,TileParameter*,-1
466181,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TileParameterDefaultTypeInternal,,<includes>,TileParameterDefaultTypeInternal,,true,,TileParameterDefaultTypeInternal,-1
466182,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Tmat,,<includes>,Tmat,,true,,Tmat,-1
466183,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TopKV2Options,,<includes>,TopKV2Options,,true,,TopKV2Options,-1
466184,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TopKV2OptionsBuilder,,<includes>,TopKV2OptionsBuilder,,true,,TopKV2OptionsBuilder,-1
466185,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TorchImporter,,<includes>,TorchImporter,,true,,TorchImporter,-1
466186,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransformationParameter,,<includes>,TransformationParameter,,true,,TransformationParameter,-1
466187,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransformationParameter*,,<includes>,TransformationParameter*,,true,,TransformationParameter*,-1
466188,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransformationParameterDefaultTypeInternal,,<includes>,TransformationParameterDefaultTypeInternal,,true,,TransformationParameterDefaultTypeInternal,-1
466189,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvOptions,,<includes>,TransposeConvOptions,,true,,TransposeConvOptions,-1
466190,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvOptionsBuilder,,<includes>,TransposeConvOptionsBuilder,,true,,TransposeConvOptionsBuilder,-1
466191,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvolution,,<includes>,TransposeConvolution,,true,,TransposeConvolution,-1
466192,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvolutionAlgorithm<T>,,<includes>,TransposeConvolutionAlgorithm<T>,,true,,TransposeConvolutionAlgorithm<T>,-1
466193,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvolutionAlgorithm<half>,,<includes>,TransposeConvolutionAlgorithm<half>,,true,,TransposeConvolutionAlgorithm<half>,-1
466194,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvolutionConfiguration,,<includes>,TransposeConvolutionConfiguration,,true,,TransposeConvolutionConfiguration,-1
466195,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeOptions,,<includes>,TransposeOptions,,true,,TransposeOptions,-1
466196,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeOptionsBuilder,,<includes>,TransposeOptionsBuilder,,true,,TransposeOptionsBuilder,-1
466197,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Type,,<includes>,Type,,true,,Type,-1
466198,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Type*,,<includes>,Type*,,true,,Type*,-1
466199,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeIter,,<includes>,TypeIter,,true,,TypeIter,-1
466200,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeProto,,<includes>,TypeProto,,true,,TypeProto,-1
466201,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeProto*,,<includes>,TypeProto*,,true,,TypeProto*,-1
466202,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeProtoDefaultTypeInternal,,<includes>,TypeProtoDefaultTypeInternal,,true,,TypeProtoDefaultTypeInternal,-1
466203,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeProto_Tensor,,<includes>,TypeProto_Tensor,,true,,TypeProto_Tensor,-1
466204,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeProto_Tensor*,,<includes>,TypeProto_Tensor*,,true,,TypeProto_Tensor*,-1
466205,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TypeProto_TensorDefaultTypeInternal,,<includes>,TypeProto_TensorDefaultTypeInternal,,true,,TypeProto_TensorDefaultTypeInternal,-1
466206,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UMat,,<includes>,UMat,,true,,UMat,-1
466207,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint16Vector,,<includes>,Uint16Vector,,true,,Uint16Vector,-1
466208,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint16VectorBuilder,,<includes>,Uint16VectorBuilder,,true,,Uint16VectorBuilder,-1
466209,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint8Vector,,<includes>,Uint8Vector,,true,,Uint8Vector,-1
466210,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint8VectorBuilder,,<includes>,Uint8VectorBuilder,,true,,Uint8VectorBuilder,-1
466211,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnidirectionalSequenceLSTMOptions,,<includes>,UnidirectionalSequenceLSTMOptions,,true,,UnidirectionalSequenceLSTMOptions,-1
466212,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnidirectionalSequenceLSTMOptionsBuilder,,<includes>,UnidirectionalSequenceLSTMOptionsBuilder,,true,,UnidirectionalSequenceLSTMOptionsBuilder,-1
466213,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UniqueHandle,,<includes>,UniqueHandle,,true,,UniqueHandle,-1
466214,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UniqueOptions,,<includes>,UniqueOptions,,true,,UniqueOptions,-1
466215,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UniqueOptionsBuilder,,<includes>,UniqueOptionsBuilder,,true,,UniqueOptionsBuilder,-1
466216,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UniqueStream,,<includes>,UniqueStream,,true,,UniqueStream,-1
466217,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnknownFieldSet,,<includes>,UnknownFieldSet,,true,,UnknownFieldSet,-1
466218,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnpackOptions,,<includes>,UnpackOptions,,true,,UnpackOptions,-1
466219,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnpackOptionsBuilder,,<includes>,UnpackOptionsBuilder,,true,,UnpackOptionsBuilder,-1
466220,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentMaxOptions,,<includes>,UnsortedSegmentMaxOptions,,true,,UnsortedSegmentMaxOptions,-1
466221,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentMaxOptionsBuilder,,<includes>,UnsortedSegmentMaxOptionsBuilder,,true,,UnsortedSegmentMaxOptionsBuilder,-1
466222,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentMinOptions,,<includes>,UnsortedSegmentMinOptions,,true,,UnsortedSegmentMinOptions,-1
466223,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentMinOptionsBuilder,,<includes>,UnsortedSegmentMinOptionsBuilder,,true,,UnsortedSegmentMinOptionsBuilder,-1
466224,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentProdOptions,,<includes>,UnsortedSegmentProdOptions,,true,,UnsortedSegmentProdOptions,-1
466225,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentProdOptionsBuilder,,<includes>,UnsortedSegmentProdOptionsBuilder,,true,,UnsortedSegmentProdOptionsBuilder,-1
466226,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentSumOptions,,<includes>,UnsortedSegmentSumOptions,,true,,UnsortedSegmentSumOptions,-1
466227,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentSumOptionsBuilder,,<includes>,UnsortedSegmentSumOptionsBuilder,,true,,UnsortedSegmentSumOptionsBuilder,-1
466228,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Utf8Check,,<includes>,Utf8Check,,true,,Utf8Check,-1
466229,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V0LayerParameter,,<includes>,V0LayerParameter,,true,,V0LayerParameter,-1
466230,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V0LayerParameter*,,<includes>,V0LayerParameter*,,true,,V0LayerParameter*,-1
466231,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V0LayerParameterDefaultTypeInternal,,<includes>,V0LayerParameterDefaultTypeInternal,,true,,V0LayerParameterDefaultTypeInternal,-1
466232,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V0LayerParameter_PoolMethod,,<includes>,V0LayerParameter_PoolMethod,,true,,V0LayerParameter_PoolMethod,-1
466233,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V0LayerParameter_PoolMethod*,,<includes>,V0LayerParameter_PoolMethod*,,true,,V0LayerParameter_PoolMethod*,-1
466234,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter,,<includes>,V1LayerParameter,,true,,V1LayerParameter,-1
466235,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter*,,<includes>,V1LayerParameter*,,true,,V1LayerParameter*,-1
466236,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameterDefaultTypeInternal,,<includes>,V1LayerParameterDefaultTypeInternal,,true,,V1LayerParameterDefaultTypeInternal,-1
466237,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter_DimCheckMode,,<includes>,V1LayerParameter_DimCheckMode,,true,,V1LayerParameter_DimCheckMode,-1
466238,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter_DimCheckMode*,,<includes>,V1LayerParameter_DimCheckMode*,,true,,V1LayerParameter_DimCheckMode*,-1
466239,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter_LayerType,,<includes>,V1LayerParameter_LayerType,,true,,V1LayerParameter_LayerType,-1
466240,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter_LayerType*,,<includes>,V1LayerParameter_LayerType*,,true,,V1LayerParameter_LayerType*,-1
466241,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueCase,,<includes>,ValueCase,,true,,ValueCase,-1
466242,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueInfoProto,,<includes>,ValueInfoProto,,true,,ValueInfoProto,-1
466243,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueInfoProto*,,<includes>,ValueInfoProto*,,true,,ValueInfoProto*,-1
466244,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ValueInfoProtoDefaultTypeInternal,,<includes>,ValueInfoProtoDefaultTypeInternal,,true,,ValueInfoProtoDefaultTypeInternal,-1
466245,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VarHandleOptions,,<includes>,VarHandleOptions,,true,,VarHandleOptions,-1
466246,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VarHandleOptionsBuilder,,<includes>,VarHandleOptionsBuilder,,true,,VarHandleOptionsBuilder,-1
466247,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VarianceNorm*,,<includes>,VarianceNorm*,,true,,VarianceNorm*,-1
466248,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VariantSubTypeBuilder,,<includes>,VariantSubTypeBuilder,,true,,VariantSubTypeBuilder,-1
466249,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Version,,<includes>,Version,,true,,Version,-1
466250,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Version*,,<includes>,Version*,,true,,Version*,-1
466251,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VersionDef,,<includes>,VersionDef,,true,,VersionDef,-1
466252,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VersionDef*,,<includes>,VersionDef*,,true,,VersionDef*,-1
466253,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VersionDefDefaultTypeInternal,,<includes>,VersionDefDefaultTypeInternal,,true,,VersionDefDefaultTypeInternal,-1
466254,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,View<T>,,<includes>,View<T>,,true,,View<T>,-1
466255,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WhereOptions,,<includes>,WhereOptions,,true,,WhereOptions,-1
466256,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WhereOptionsBuilder,,<includes>,WhereOptionsBuilder,,true,,WhereOptionsBuilder,-1
466257,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WhileOptions,,<includes>,WhileOptions,,true,,WhileOptions,-1
466258,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WhileOptionsBuilder,,<includes>,WhileOptionsBuilder,,true,,WhileOptionsBuilder,-1
466259,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WindowDataParameter,,<includes>,WindowDataParameter,,true,,WindowDataParameter,-1
466260,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WindowDataParameter*,,<includes>,WindowDataParameter*,,true,,WindowDataParameter*,-1
466261,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WindowDataParameterDefaultTypeInternal,,<includes>,WindowDataParameterDefaultTypeInternal,,true,,WindowDataParameterDefaultTypeInternal,-1
466262,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WireFormat,,<includes>,WireFormat,,true,,WireFormat,-1
466263,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WireFormatLite,,<includes>,WireFormatLite,,true,,WireFormatLite,-1
466264,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Workspace,,<includes>,Workspace,,true,,Workspace,-1
466265,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkspaceAllocator,,<includes>,WorkspaceAllocator,,true,,WorkspaceAllocator,-1
466266,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkspaceBuilder,,<includes>,WorkspaceBuilder,,true,,WorkspaceBuilder,-1
466267,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WorkspaceInstance,,<includes>,WorkspaceInstance,,true,,WorkspaceInstance,-1
466268,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ZerosLikeOptions,,<includes>,ZerosLikeOptions,,true,,ZerosLikeOptions,-1
466269,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ZerosLikeOptionsBuilder,,<includes>,ZerosLikeOptionsBuilder,,true,,ZerosLikeOptionsBuilder,-1
466270,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,_Internal,,<includes>,_Internal,,true,,_Internal,-1
466271,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,_LayerStaticRegisterer,,<includes>,_LayerStaticRegisterer,,true,,_LayerStaticRegisterer,-1
466272,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,_Range,,<includes>,_Range,,true,,_Range,-1
466273,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,__device__,,<includes>,__device__,,true,,__device__,-1
466274,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,__half,,<includes>,__half,,true,,__half,-1
466275,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,applyTestTag,,<includes>,applyTestTag,,true,,applyTestTag,-1
466276,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,auto,,<includes>,auto,,true,,auto,-1
466277,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,auto*,,<includes>,auto*,,true,,auto*,-1
466278,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"basic_ostream<U,V>",,<includes>,"basic_ostream<U,V>",,true,,"basic_ostream<U,V>",-1
466279,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"block_stride_range_generic<0, BLOCK_SIZE>",,<includes>,"block_stride_range_generic<0, BLOCK_SIZE>",,true,,"block_stride_range_generic<0, BLOCK_SIZE>",-1
466280,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,block_stride_range_generic<0>,,<includes>,block_stride_range_generic<0>,,true,,block_stride_range_generic<0>,-1
466281,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,block_stride_range_generic<1>,,<includes>,block_stride_range_generic<1>,,true,,block_stride_range_generic<1>,-1
466282,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,block_stride_range_generic<2>,,<includes>,block_stride_range_generic<2>,,true,,block_stride_range_generic<2>,-1
466283,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,bool,,<includes>,bool,,true,,bool,-1
466284,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,bool (int),,<includes>,bool (int),,true,,bool (int),-1
466285,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char,,<includes>,char,,true,,char,-1
466286,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char const,,<includes>,char const,,true,,char const,-1
466287,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char*,,<includes>,char*,,true,,char*,-1
466288,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char**,,<includes>,char**,,true,,char**,-1
466289,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[100],,<includes>,char[100],,true,,char[100],-1
466290,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[102],,<includes>,char[102],,true,,char[102],-1
466291,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[107],,<includes>,char[107],,true,,char[107],-1
466292,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[108],,<includes>,char[108],,true,,char[108],-1
466293,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[10],,<includes>,char[10],,true,,char[10],-1
466294,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[111],,<includes>,char[111],,true,,char[111],-1
466295,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[11],,<includes>,char[11],,true,,char[11],-1
466296,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[120],,<includes>,char[120],,true,,char[120],-1
466297,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[124],,<includes>,char[124],,true,,char[124],-1
466298,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[125],,<includes>,char[125],,true,,char[125],-1
466299,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[12],,<includes>,char[12],,true,,char[12],-1
466300,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[131],,<includes>,char[131],,true,,char[131],-1
466301,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[13],,<includes>,char[13],,true,,char[13],-1
466302,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[144],,<includes>,char[144],,true,,char[144],-1
466303,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[14],,<includes>,char[14],,true,,char[14],-1
466304,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[15],,<includes>,char[15],,true,,char[15],-1
466305,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[160],,<includes>,char[160],,true,,char[160],-1
466306,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[16],,<includes>,char[16],,true,,char[16],-1
466307,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[17],,<includes>,char[17],,true,,char[17],-1
466308,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[18],,<includes>,char[18],,true,,char[18],-1
466309,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[19],,<includes>,char[19],,true,,char[19],-1
466310,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[1],,<includes>,char[1],,true,,char[1],-1
466311,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[20],,<includes>,char[20],,true,,char[20],-1
466312,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[21],,<includes>,char[21],,true,,char[21],-1
466313,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[22],,<includes>,char[22],,true,,char[22],-1
466314,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[23],,<includes>,char[23],,true,,char[23],-1
466315,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[246],,<includes>,char[246],,true,,char[246],-1
466316,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[24],,<includes>,char[24],,true,,char[24],-1
466317,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[25],,<includes>,char[25],,true,,char[25],-1
466318,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[26],,<includes>,char[26],,true,,char[26],-1
466319,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[27],,<includes>,char[27],,true,,char[27],-1
466320,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[28],,<includes>,char[28],,true,,char[28],-1
466321,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[29],,<includes>,char[29],,true,,char[29],-1
466322,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[2],,<includes>,char[2],,true,,char[2],-1
466323,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[30],,<includes>,char[30],,true,,char[30],-1
466324,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[31],,<includes>,char[31],,true,,char[31],-1
466325,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[32],,<includes>,char[32],,true,,char[32],-1
466326,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[33],,<includes>,char[33],,true,,char[33],-1
466327,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[34],,<includes>,char[34],,true,,char[34],-1
466328,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[35],,<includes>,char[35],,true,,char[35],-1
466329,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[36],,<includes>,char[36],,true,,char[36],-1
466330,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[37],,<includes>,char[37],,true,,char[37],-1
466331,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[38],,<includes>,char[38],,true,,char[38],-1
466332,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[39],,<includes>,char[39],,true,,char[39],-1
466333,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[3],,<includes>,char[3],,true,,char[3],-1
466334,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[40],,<includes>,char[40],,true,,char[40],-1
466335,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[41],,<includes>,char[41],,true,,char[41],-1
466336,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[42],,<includes>,char[42],,true,,char[42],-1
466337,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[43],,<includes>,char[43],,true,,char[43],-1
466338,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[44],,<includes>,char[44],,true,,char[44],-1
466339,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[45],,<includes>,char[45],,true,,char[45],-1
466340,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[46],,<includes>,char[46],,true,,char[46],-1
466341,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[47],,<includes>,char[47],,true,,char[47],-1
466342,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[48],,<includes>,char[48],,true,,char[48],-1
466343,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[49],,<includes>,char[49],,true,,char[49],-1
466344,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[4],,<includes>,char[4],,true,,char[4],-1
466345,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[50],,<includes>,char[50],,true,,char[50],-1
466346,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[51],,<includes>,char[51],,true,,char[51],-1
466347,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[52],,<includes>,char[52],,true,,char[52],-1
466348,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[53],,<includes>,char[53],,true,,char[53],-1
466349,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[54],,<includes>,char[54],,true,,char[54],-1
466350,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[55],,<includes>,char[55],,true,,char[55],-1
466351,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[56],,<includes>,char[56],,true,,char[56],-1
466352,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[57],,<includes>,char[57],,true,,char[57],-1
466353,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[58],,<includes>,char[58],,true,,char[58],-1
466354,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[59],,<includes>,char[59],,true,,char[59],-1
466355,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[5],,<includes>,char[5],,true,,char[5],-1
466356,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[604],,<includes>,char[604],,true,,char[604],-1
466357,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[60],,<includes>,char[60],,true,,char[60],-1
466358,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[61],,<includes>,char[61],,true,,char[61],-1
466359,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[62],,<includes>,char[62],,true,,char[62],-1
466360,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[63],,<includes>,char[63],,true,,char[63],-1
466361,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[64],,<includes>,char[64],,true,,char[64],-1
466362,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[65],,<includes>,char[65],,true,,char[65],-1
466363,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[66],,<includes>,char[66],,true,,char[66],-1
466364,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[67],,<includes>,char[67],,true,,char[67],-1
466365,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[68],,<includes>,char[68],,true,,char[68],-1
466366,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[69],,<includes>,char[69],,true,,char[69],-1
466367,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[6],,<includes>,char[6],,true,,char[6],-1
466368,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[70],,<includes>,char[70],,true,,char[70],-1
466369,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[71],,<includes>,char[71],,true,,char[71],-1
466370,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[72],,<includes>,char[72],,true,,char[72],-1
466371,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[74],,<includes>,char[74],,true,,char[74],-1
466372,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[75],,<includes>,char[75],,true,,char[75],-1
466373,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[76],,<includes>,char[76],,true,,char[76],-1
466374,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[77],,<includes>,char[77],,true,,char[77],-1
466375,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[78],,<includes>,char[78],,true,,char[78],-1
466376,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[7],,<includes>,char[7],,true,,char[7],-1
466377,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[80],,<includes>,char[80],,true,,char[80],-1
466378,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[81],,<includes>,char[81],,true,,char[81],-1
466379,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[83],,<includes>,char[83],,true,,char[83],-1
466380,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[86],,<includes>,char[86],,true,,char[86],-1
466381,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[88],,<includes>,char[88],,true,,char[88],-1
466382,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[8],,<includes>,char[8],,true,,char[8],-1
466383,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[93],,<includes>,char[93],,true,,char[93],-1
466384,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[94],,<includes>,char[94],,true,,char[94],-1
466385,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[95],,<includes>,char[95],,true,,char[95],-1
466386,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[99],,<includes>,char[99],,true,,char[99],-1
466387,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,char[9],,<includes>,char[9],,true,,char[9],-1
466388,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cl_float,,<includes>,cl_float,,true,,cl_float,-1
466389,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cl_float4,,<includes>,cl_float4,,true,,cl_float4,-1
466390,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cl_uint,,<includes>,cl_uint,,true,,cl_uint,-1
466391,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,computed,,<includes>,computed,,true,,computed,-1
466392,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,const char*,,<includes>,const char*,,true,,const char*,-1
466393,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,const char* const*,,<includes>,const char* const*,,true,,const char* const*,-1
466394,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,csl,,<includes>,csl,,true,,csl,-1
466395,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cublas,,<includes>,cublas,,true,,cublas,-1
466396,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cublasHandle_t,,<includes>,cublasHandle_t,,true,,cublasHandle_t,-1
466397,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cublasStatus_t,,<includes>,cublasStatus_t,,true,,cublasStatus_t,-1
466398,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cuda,,<includes>,cuda,,true,,cuda,-1
466399,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cuda4dnn,,<includes>,cuda4dnn,,true,,cuda4dnn,-1
466400,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudaError_t,,<includes>,cudaError_t,,true,,cudaError_t,-1
466401,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudaEvent_t,,<includes>,cudaEvent_t,,true,,cudaEvent_t,-1
466402,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudaStream_t,,<includes>,cudaStream_t,,true,,cudaStream_t,-1
466403,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnn,,<includes>,cudnn,,true,,cudnn,-1
466404,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnActivationDescriptor_t,,<includes>,cudnnActivationDescriptor_t,,true,,cudnnActivationDescriptor_t,-1
466405,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnConvolutionBwdDataAlgo_t,,<includes>,cudnnConvolutionBwdDataAlgo_t,,true,,cudnnConvolutionBwdDataAlgo_t,-1
466406,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnConvolutionDescriptor_t,,<includes>,cudnnConvolutionDescriptor_t,,true,,cudnnConvolutionDescriptor_t,-1
466407,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnConvolutionFwdAlgo_t,,<includes>,cudnnConvolutionFwdAlgo_t,,true,,cudnnConvolutionFwdAlgo_t,-1
466408,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnDataType_t,,<includes>,cudnnDataType_t,,true,,cudnnDataType_t,-1
466409,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnDropoutDescriptor_t,,<includes>,cudnnDropoutDescriptor_t,,true,,cudnnDropoutDescriptor_t,-1
466410,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnFilterDescriptor_t,,<includes>,cudnnFilterDescriptor_t,,true,,cudnnFilterDescriptor_t,-1
466411,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnHandle_t,,<includes>,cudnnHandle_t,,true,,cudnnHandle_t,-1
466412,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnLRNDescriptor_t,,<includes>,cudnnLRNDescriptor_t,,true,,cudnnLRNDescriptor_t,-1
466413,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnPoolingDescriptor_t,,<includes>,cudnnPoolingDescriptor_t,,true,,cudnnPoolingDescriptor_t,-1
466414,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnRNNAlgo_t,,<includes>,cudnnRNNAlgo_t,,true,,cudnnRNNAlgo_t,-1
466415,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnRNNDescriptor_t,,<includes>,cudnnRNNDescriptor_t,,true,,cudnnRNNDescriptor_t,-1
466416,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnRNNMode_t,,<includes>,cudnnRNNMode_t,,true,,cudnnRNNMode_t,-1
466417,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnSoftmaxAlgorithm_t,,<includes>,cudnnSoftmaxAlgorithm_t,,true,,cudnnSoftmaxAlgorithm_t,-1
466418,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnStatus_t,,<includes>,cudnnStatus_t,,true,,cudnnStatus_t,-1
466419,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnTensorDescriptor_t,,<includes>,cudnnTensorDescriptor_t,,true,,cudnnTensorDescriptor_t,-1
466420,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cudnnTensorTransformDescriptor_t,,<includes>,cudnnTensorTransformDescriptor_t,,true,,cudnnTensorTransformDescriptor_t,-1
466421,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,cv,,<includes>,cv,,true,,cv,-1
466422,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Exception,,<includes>,cv.Exception,,true,,Exception,-1
466423,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParallelLoopBody,,<includes>,cv.ParallelLoopBody,,true,,ParallelLoopBody,-1
466424,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Range,,<includes>,cv.Range,,true,,Range,-1
466425,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BaseDefaultFunctor<T>,,<includes>,cv.dnn.BaseDefaultFunctor<T>,,true,,BaseDefaultFunctor<T>,-1
466426,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ElementWiseLayer<Func>,,<includes>,cv.dnn.ElementWiseLayer<Func>,,true,,ElementWiseLayer<Func>,-1
466427,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AbsValOp<T>,,<includes>,cv.dnn.cuda4dnn.AbsValOp<T>,,true,,AbsValOp<T>,-1
466428,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AcosOp<T>,,<includes>,cv.dnn.cuda4dnn.AcosOp<T>,,true,,AcosOp<T>,-1
466429,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AcoshOp<T>,,<includes>,cv.dnn.cuda4dnn.AcoshOp<T>,,true,,AcoshOp<T>,-1
466430,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsinOp<T>,,<includes>,cv.dnn.cuda4dnn.AsinOp<T>,,true,,AsinOp<T>,-1
466431,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsinhOp<T>,,<includes>,cv.dnn.cuda4dnn.AsinhOp<T>,,true,,AsinhOp<T>,-1
466432,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AtanOp<T>,,<includes>,cv.dnn.cuda4dnn.AtanOp<T>,,true,,AtanOp<T>,-1
466433,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AtanhOp<T>,,<includes>,cv.dnn.cuda4dnn.AtanhOp<T>,,true,,AtanhOp<T>,-1
466434,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BNLLOp<T>,,<includes>,cv.dnn.cuda4dnn.BNLLOp<T>,,true,,BNLLOp<T>,-1
466435,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"BaseOp<template<>,T>",,<includes>,"cv.dnn.cuda4dnn.BaseOp<template<>,T>",,true,,"BaseOp<template<>,T>",-1
466436,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchNormOp<T>,,<includes>,cv.dnn.cuda4dnn.BatchNormOp<T>,,true,,BatchNormOp<T>,-1
466437,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CeilOp<T>,,<includes>,cv.dnn.cuda4dnn.CeilOp<T>,,true,,CeilOp<T>,-1
466438,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CeluOp<T>,,<includes>,cv.dnn.cuda4dnn.CeluOp<T>,,true,,CeluOp<T>,-1
466439,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ChannelwiseReLUOp<T>,,<includes>,cv.dnn.cuda4dnn.ChannelwiseReLUOp<T>,,true,,ChannelwiseReLUOp<T>,-1
466440,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClippedReLUOp<T>,,<includes>,cv.dnn.cuda4dnn.ClippedReLUOp<T>,,true,,ClippedReLUOp<T>,-1
466441,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatOp<T>,,<includes>,cv.dnn.cuda4dnn.ConcatOp<T>,,true,,ConcatOp<T>,-1
466442,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConstOp<T>,,<includes>,cv.dnn.cuda4dnn.ConstOp<T>,,true,,ConstOp<T>,-1
466443,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionOp<T>,,<includes>,cv.dnn.cuda4dnn.ConvolutionOp<T>,,true,,ConvolutionOp<T>,-1
466444,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CosOp<T>,,<includes>,cv.dnn.cuda4dnn.CosOp<T>,,true,,CosOp<T>,-1
466445,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CoshOp<T>,,<includes>,cv.dnn.cuda4dnn.CoshOp<T>,,true,,CoshOp<T>,-1
466446,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CropAndResizeOp<T>,,<includes>,cv.dnn.cuda4dnn.CropAndResizeOp<T>,,true,,CropAndResizeOp<T>,-1
466447,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DetectionOutputOp<T>,,<includes>,cv.dnn.cuda4dnn.DetectionOutputOp<T>,,true,,DetectionOutputOp<T>,-1
466448,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ELUOp<T>,,<includes>,cv.dnn.cuda4dnn.ELUOp<T>,,true,,ELUOp<T>,-1
466449,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseOp<T>,,<includes>,cv.dnn.cuda4dnn.EltwiseOp<T>,,true,,EltwiseOp<T>,-1
466450,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ErfOp<T>,,<includes>,cv.dnn.cuda4dnn.ErfOp<T>,,true,,ErfOp<T>,-1
466451,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpOp<T>,,<includes>,cv.dnn.cuda4dnn.ExpOp<T>,,true,,ExpOp<T>,-1
466452,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FloorOp<T>,,<includes>,cv.dnn.cuda4dnn.FloorOp<T>,,true,,FloorOp<T>,-1
466453,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GeluOp<T>,,<includes>,cv.dnn.cuda4dnn.GeluOp<T>,,true,,GeluOp<T>,-1
466454,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HardSigmoidOp<T>,,<includes>,cv.dnn.cuda4dnn.HardSigmoidOp<T>,,true,,HardSigmoidOp<T>,-1
466455,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HardSwishOp<T>,,<includes>,cv.dnn.cuda4dnn.HardSwishOp<T>,,true,,HardSwishOp<T>,-1
466456,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InnerProductOp<T>,,<includes>,cv.dnn.cuda4dnn.InnerProductOp<T>,,true,,InnerProductOp<T>,-1
466457,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InstanceNormOp<T>,,<includes>,cv.dnn.cuda4dnn.InstanceNormOp<T>,,true,,InstanceNormOp<T>,-1
466458,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNOp<T>,,<includes>,cv.dnn.cuda4dnn.LRNOp<T>,,true,,LRNOp<T>,-1
466459,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSTMOp<T>,,<includes>,cv.dnn.cuda4dnn.LSTMOp<T>,,true,,LSTMOp<T>,-1
466460,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LayerNormOp<T>,,<includes>,cv.dnn.cuda4dnn.LayerNormOp<T>,,true,,LayerNormOp<T>,-1
466461,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogOp<T>,,<includes>,cv.dnn.cuda4dnn.LogOp<T>,,true,,LogOp<T>,-1
466462,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MVNOp<T>,,<includes>,cv.dnn.cuda4dnn.MVNOp<T>,,true,,MVNOp<T>,-1
466463,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatMulBroadcastOp<T>,,<includes>,cv.dnn.cuda4dnn.MatMulBroadcastOp<T>,,true,,MatMulBroadcastOp<T>,-1
466464,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatMulOp<T>,,<includes>,cv.dnn.cuda4dnn.MatMulOp<T>,,true,,MatMulOp<T>,-1
466465,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaxPoolingOp<T>,,<includes>,cv.dnn.cuda4dnn.MaxPoolingOp<T>,,true,,MaxPoolingOp<T>,-1
466466,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaxUnpoolingOp<T>,,<includes>,cv.dnn.cuda4dnn.MaxUnpoolingOp<T>,,true,,MaxUnpoolingOp<T>,-1
466467,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MishOp<T>,,<includes>,cv.dnn.cuda4dnn.MishOp<T>,,true,,MishOp<T>,-1
466468,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizeConfiguration<T>,,<includes>,cv.dnn.cuda4dnn.NormalizeConfiguration<T>,,true,,NormalizeConfiguration<T>,-1
466469,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NormalizeOp<T>,,<includes>,cv.dnn.cuda4dnn.NormalizeOp<T>,,true,,NormalizeOp<T>,-1
466470,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NotOp<T>,,<includes>,cv.dnn.cuda4dnn.NotOp<T>,,true,,NotOp<T>,-1
466471,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PaddingOp<T>,,<includes>,cv.dnn.cuda4dnn.PaddingOp<T>,,true,,PaddingOp<T>,-1
466472,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PermuteOp<T>,,<includes>,cv.dnn.cuda4dnn.PermuteOp<T>,,true,,PermuteOp<T>,-1
466473,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingOp<T>,,<includes>,cv.dnn.cuda4dnn.PoolingOp<T>,,true,,PoolingOp<T>,-1
466474,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowerOp<T>,,<includes>,cv.dnn.cuda4dnn.PowerOp<T>,,true,,PowerOp<T>,-1
466475,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxOp<T>,,<includes>,cv.dnn.cuda4dnn.PriorBoxOp<T>,,true,,PriorBoxOp<T>,-1
466476,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ROIPoolingOp<T>,,<includes>,cv.dnn.cuda4dnn.ROIPoolingOp<T>,,true,,ROIPoolingOp<T>,-1
466477,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUOp<T>,,<includes>,cv.dnn.cuda4dnn.ReLUOp<T>,,true,,ReLUOp<T>,-1
466478,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReciprocalOp<T>,,<includes>,cv.dnn.cuda4dnn.ReciprocalOp<T>,,true,,ReciprocalOp<T>,-1
466479,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RegionConfiguration<T>,,<includes>,cv.dnn.cuda4dnn.RegionConfiguration<T>,,true,,RegionConfiguration<T>,-1
466480,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RegionOp<T>,,<includes>,cv.dnn.cuda4dnn.RegionOp<T>,,true,,RegionOp<T>,-1
466481,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReorgOp<T>,,<includes>,cv.dnn.cuda4dnn.ReorgOp<T>,,true,,ReorgOp<T>,-1
466482,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReshapeOp<T>,,<includes>,cv.dnn.cuda4dnn.ReshapeOp<T>,,true,,ReshapeOp<T>,-1
466483,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeOp<T>,,<includes>,cv.dnn.cuda4dnn.ResizeOp<T>,,true,,ResizeOp<T>,-1
466484,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RoundOp<T>,,<includes>,cv.dnn.cuda4dnn.RoundOp<T>,,true,,RoundOp<T>,-1
466485,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScaleShiftOp<T>,,<includes>,cv.dnn.cuda4dnn.ScaleShiftOp<T>,,true,,ScaleShiftOp<T>,-1
466486,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SeluOp<T>,,<includes>,cv.dnn.cuda4dnn.SeluOp<T>,,true,,SeluOp<T>,-1
466487,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShortcutOp<T>,,<includes>,cv.dnn.cuda4dnn.ShortcutOp<T>,,true,,ShortcutOp<T>,-1
466488,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShrinkOp<T>,,<includes>,cv.dnn.cuda4dnn.ShrinkOp<T>,,true,,ShrinkOp<T>,-1
466489,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShuffleChannelOp<T>,,<includes>,cv.dnn.cuda4dnn.ShuffleChannelOp<T>,,true,,ShuffleChannelOp<T>,-1
466490,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigmoidOp<T>,,<includes>,cv.dnn.cuda4dnn.SigmoidOp<T>,,true,,SigmoidOp<T>,-1
466491,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignOp<T>,,<includes>,cv.dnn.cuda4dnn.SignOp<T>,,true,,SignOp<T>,-1
466492,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SinOp<T>,,<includes>,cv.dnn.cuda4dnn.SinOp<T>,,true,,SinOp<T>,-1
466493,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SinhOp<T>,,<includes>,cv.dnn.cuda4dnn.SinhOp<T>,,true,,SinhOp<T>,-1
466494,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceOp<T>,,<includes>,cv.dnn.cuda4dnn.SliceOp<T>,,true,,SliceOp<T>,-1
466495,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxOp<T>,,<includes>,cv.dnn.cuda4dnn.SoftmaxOp<T>,,true,,SoftmaxOp<T>,-1
466496,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftplusOp<T>,,<includes>,cv.dnn.cuda4dnn.SoftplusOp<T>,,true,,SoftplusOp<T>,-1
466497,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftsignOp<T>,,<includes>,cv.dnn.cuda4dnn.SoftsignOp<T>,,true,,SoftsignOp<T>,-1
466498,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SplitOp<T>,,<includes>,cv.dnn.cuda4dnn.SplitOp<T>,,true,,SplitOp<T>,-1
466499,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SqrtOp<T>,,<includes>,cv.dnn.cuda4dnn.SqrtOp<T>,,true,,SqrtOp<T>,-1
466500,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SwishOp<T>,,<includes>,cv.dnn.cuda4dnn.SwishOp<T>,,true,,SwishOp<T>,-1
466501,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanHOp<T>,,<includes>,cv.dnn.cuda4dnn.TanHOp<T>,,true,,TanHOp<T>,-1
466502,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanOp<T>,,<includes>,cv.dnn.cuda4dnn.TanOp<T>,,true,,TanOp<T>,-1
466503,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThresholdedReluOp<T>,,<includes>,cv.dnn.cuda4dnn.ThresholdedReluOp<T>,,true,,ThresholdedReluOp<T>,-1
466504,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvolutionOp<T>,,<includes>,cv.dnn.cuda4dnn.TransposeConvolutionOp<T>,,true,,TransposeConvolutionOp<T>,-1
466505,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Convolution<T>,,<includes>,cv.dnn.cuda4dnn.csl.Convolution<T>,,true,,Convolution<T>,-1
466506,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<T>,,<includes>,cv.dnn.cuda4dnn.csl.DevicePtr<T>,,true,,DevicePtr<T>,-1
466507,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DevicePtr<void><>,,<includes>,cv.dnn.cuda4dnn.csl.DevicePtr<void><>,,true,,DevicePtr<void><>,-1
466508,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRN<T>,,<includes>,cv.dnn.cuda4dnn.csl.LRN<T>,,true,,LRN<T>,-1
466509,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSTM<T>,,<includes>,cv.dnn.cuda4dnn.csl.LSTM<T>,,true,,LSTM<T>,-1
466510,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ManagedPtr<T>,,<includes>,cv.dnn.cuda4dnn.csl.ManagedPtr<T>,,true,,ManagedPtr<T>,-1
466511,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Pooling<T>,,<includes>,cv.dnn.cuda4dnn.csl.Pooling<T>,,true,,Pooling<T>,-1
466512,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Span<T>,,<includes>,cv.dnn.cuda4dnn.csl.Span<T>,,true,,Span<T>,-1
466513,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Tensor<T>,,<includes>,cv.dnn.cuda4dnn.csl.Tensor<T>,,true,,Tensor<T>,-1
466514,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorSpan<T>,,<includes>,cv.dnn.cuda4dnn.csl.TensorSpan<T>,,true,,TensorSpan<T>,-1
466515,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorTransform<T>,,<includes>,cv.dnn.cuda4dnn.csl.TensorTransform<T>,,true,,TensorTransform<T>,-1
466516,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorView<T>,,<includes>,cv.dnn.cuda4dnn.csl.TensorView<T>,,true,,TensorView<T>,-1
466517,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvolution<T>,,<includes>,cv.dnn.cuda4dnn.csl.TransposeConvolution<T>,,true,,TransposeConvolution<T>,-1
466518,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionAlgorithm<T>,,<includes>,cv.dnn.cuda4dnn.csl.cudnn.ConvolutionAlgorithm<T>,,true,,ConvolutionAlgorithm<T>,-1
466519,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionDescriptor<T>,,<includes>,cv.dnn.cuda4dnn.csl.cudnn.ConvolutionDescriptor<T>,,true,,ConvolutionDescriptor<T>,-1
466520,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FilterDescriptor<T>,,<includes>,cv.dnn.cuda4dnn.csl.cudnn.FilterDescriptor<T>,,true,,FilterDescriptor<T>,-1
466521,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RNNDescriptor<T>,,<includes>,cv.dnn.cuda4dnn.csl.cudnn.RNNDescriptor<T>,,true,,RNNDescriptor<T>,-1
466522,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorDescriptor<T>,,<includes>,cv.dnn.cuda4dnn.csl.cudnn.TensorDescriptor<T>,,true,,TensorDescriptor<T>,-1
466523,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorDescriptorsArray<T>,,<includes>,cv.dnn.cuda4dnn.csl.cudnn.TensorDescriptorsArray<T>,,true,,TensorDescriptorsArray<T>,-1
466524,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvolutionAlgorithm<T>,,<includes>,cv.dnn.cuda4dnn.csl.cudnn.TransposeConvolutionAlgorithm<T>,,true,,TransposeConvolutionAlgorithm<T>,-1
466525,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t>,,<includes>,"cv.dnn.cuda4dnn.csl.device.array<T,std.size_t>",,true,,size_t>,-1
466526,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"block_stride_range_generic<int,int=0,index_type,size_type>",,<includes>,"cv.dnn.cuda4dnn.csl.device.block_stride_range_generic<int,int=0,index_type,size_type>",,true,,"block_stride_range_generic<int,int=0,index_type,size_type>",-1
466527,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raw_type<size_type>,,<includes>,cv.dnn.cuda4dnn.csl.device.detail.raw_type<size_type>,,true,,raw_type<size_type>,-1
466528,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raw_type_<128><>,,<includes>,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<128><>,,true,,raw_type_<128><>,-1
466529,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raw_type_<16><>,,<includes>,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<16><>,,true,,raw_type_<16><>,-1
466530,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raw_type_<256><>,,<includes>,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<256><>,,true,,raw_type_<256><>,-1
466531,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raw_type_<32><>,,<includes>,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<32><>,,true,,raw_type_<32><>,-1
466532,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raw_type_<64><>,,<includes>,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<64><>,,true,,raw_type_<64><>,-1
466533,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raw_type_<8><>,,<includes>,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<8><>,,true,,raw_type_<8><>,-1
466534,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,raw_type_<size_type>,,<includes>,cv.dnn.cuda4dnn.csl.device.detail.raw_type_<size_type>,,true,,raw_type_<size_type>,-1
466535,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"get_vector_type<T,size_type>",,<includes>,"cv.dnn.cuda4dnn.csl.device.get_vector_type<T,size_type>",,true,,"get_vector_type<T,size_type>",-1
466536,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"grid_stride_range_generic<int,index_type,size_type>",,<includes>,"cv.dnn.cuda4dnn.csl.device.grid_stride_range_generic<int,index_type,size_type>",,true,,"grid_stride_range_generic<int,index_type,size_type>",-1
466537,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,numeric_limits<T>,,<includes>,cv.dnn.cuda4dnn.csl.device.numeric_limits<T>,,true,,numeric_limits<T>,-1
466538,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,numeric_limits<__half><>,,<includes>,cv.dnn.cuda4dnn.csl.device.numeric_limits<__half><>,,true,,numeric_limits<__half><>,-1
466539,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,numeric_limits<float><>,,<includes>,cv.dnn.cuda4dnn.csl.device.numeric_limits<float><>,,true,,numeric_limits<float><>,-1
466540,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"vector_type<T,size_type>",,<includes>,"cv.dnn.cuda4dnn.csl.device.vector_type<T,size_type>",,true,,"vector_type<T,size_type>",-1
466541,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"is_iterator_helper<T,Tag,>",,<includes>,"cv.dnn.cuda4dnn.cxx_utils.detail.is_iterator_helper<T,Tag,>",,true,,"is_iterator_helper<T,Tag,>",-1
466542,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"type><T,Tag>",,<includes>,"cv.dnn.cuda4dnn.cxx_utils.detail.is_iterator_helper<T,Tag,std.enable_if<std.is_base_of<Tag,std.iterator_traits<T>.iterator_category>.value,void>.type><T,Tag>",,true,,"type><T,Tag>",-1
466543,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t>,,<includes>,"cv.dnn.cuda4dnn.cxx_utils.resizable_static_array<T,std.size_t>",,true,,size_t>,-1
466544,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AbsFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.AbsFunctor<T>,,true,,AbsFunctor<T>,-1
466545,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AcosFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.AcosFunctor<T>,,true,,AcosFunctor<T>,-1
466546,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AcoshFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.AcoshFunctor<T>,,true,,AcoshFunctor<T>,-1
466547,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsinFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.AsinFunctor<T>,,true,,AsinFunctor<T>,-1
466548,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AsinhFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.AsinhFunctor<T>,,true,,AsinhFunctor<T>,-1
466549,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AtanFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.AtanFunctor<T>,,true,,AtanFunctor<T>,-1
466550,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AtanhFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.AtanhFunctor<T>,,true,,AtanhFunctor<T>,-1
466551,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BNLLFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.BNLLFunctor<T>,,true,,BNLLFunctor<T>,-1
466552,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CeilFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.CeilFunctor<T>,,true,,CeilFunctor<T>,-1
466553,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CeluFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.CeluFunctor<T>,,true,,CeluFunctor<T>,-1
466554,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ClippedReLUFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ClippedReLUFunctor<T>,,true,,ClippedReLUFunctor<T>,-1
466555,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CosFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.CosFunctor<T>,,true,,CosFunctor<T>,-1
466556,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CoshFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.CoshFunctor<T>,,true,,CoshFunctor<T>,-1
466557,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DivFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.DivFunctor<T>,,true,,DivFunctor<T>,-1
466558,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ELUFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ELUFunctor<T>,,true,,ELUFunctor<T>,-1
466559,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ErfFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ErfFunctor<T>,,true,,ErfFunctor<T>,-1
466560,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ExpFunctor<T>,,true,,ExpFunctor<T>,-1
466561,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FloorFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.FloorFunctor<T>,,true,,FloorFunctor<T>,-1
466562,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GeluFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.GeluFunctor<T>,,true,,GeluFunctor<T>,-1
466563,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HardSigmoidFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.HardSigmoidFunctor<T>,,true,,HardSigmoidFunctor<T>,-1
466564,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HardSwishFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.HardSwishFunctor<T>,,true,,HardSwishFunctor<T>,-1
466565,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IdentityFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.IdentityFunctor<T>,,true,,IdentityFunctor<T>,-1
466566,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.LogFunctor<T>,,true,,LogFunctor<T>,-1
466567,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaxFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.MaxFunctor<T>,,true,,MaxFunctor<T>,-1
466568,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MinFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.MinFunctor<T>,,true,,MinFunctor<T>,-1
466569,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MishFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.MishFunctor<T>,,true,,MishFunctor<T>,-1
466570,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MishFunctor<__half><>,,<includes>,cv.dnn.cuda4dnn.kernels.MishFunctor<__half><>,,true,,MishFunctor<__half><>,-1
466571,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MishFunctor<float><>,,<includes>,cv.dnn.cuda4dnn.kernels.MishFunctor<float><>,,true,,MishFunctor<float><>,-1
466572,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NotFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.NotFunctor<T>,,true,,NotFunctor<T>,-1
466573,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowerFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.PowerFunctor<T>,,true,,PowerFunctor<T>,-1
466574,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ProductFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ProductFunctor<T>,,true,,ProductFunctor<T>,-1
466575,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ReLUFunctor<T>,,true,,ReLUFunctor<T>,-1
466576,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReciprocalFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ReciprocalFunctor<T>,,true,,ReciprocalFunctor<T>,-1
466577,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RintFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.RintFunctor<T>,,true,,RintFunctor<T>,-1
466578,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScaledSumFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ScaledSumFunctor<T>,,true,,ScaledSumFunctor<T>,-1
466579,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SeluFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SeluFunctor<T>,,true,,SeluFunctor<T>,-1
466580,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShrinkFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ShrinkFunctor<T>,,true,,ShrinkFunctor<T>,-1
466581,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigmoidFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SigmoidFunctor<T>,,true,,SigmoidFunctor<T>,-1
466582,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SignFunctor<T>,,true,,SignFunctor<T>,-1
466583,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SinFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SinFunctor<T>,,true,,SinFunctor<T>,-1
466584,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SinhFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SinhFunctor<T>,,true,,SinhFunctor<T>,-1
466585,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftplusFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SoftplusFunctor<T>,,true,,SoftplusFunctor<T>,-1
466586,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftsignFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SoftsignFunctor<T>,,true,,SoftsignFunctor<T>,-1
466587,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SqrtFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SqrtFunctor<T>,,true,,SqrtFunctor<T>,-1
466588,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SubFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SubFunctor<T>,,true,,SubFunctor<T>,-1
466589,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SumFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SumFunctor<T>,,true,,SumFunctor<T>,-1
466590,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SwishFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.SwishFunctor<T>,,true,,SwishFunctor<T>,-1
466591,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.TanFunctor<T>,,true,,TanFunctor<T>,-1
466592,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanHFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.TanHFunctor<T>,,true,,TanHFunctor<T>,-1
466593,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ThresholdedReluFunctor<T>,,<includes>,cv.dnn.cuda4dnn.kernels.ThresholdedReluFunctor<T>,,true,,ThresholdedReluFunctor<T>,-1
466594,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNConvSpatial<Dtype>,,<includes>,cv.dnn.ocl4dnn.OCL4DNNConvSpatial<Dtype>,,true,,OCL4DNNConvSpatial<Dtype>,-1
466595,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNInnerProduct<Dtype>,,<includes>,cv.dnn.ocl4dnn.OCL4DNNInnerProduct<Dtype>,,true,,OCL4DNNInnerProduct<Dtype>,-1
466596,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNLRN<Dtype>,,<includes>,cv.dnn.ocl4dnn.OCL4DNNLRN<Dtype>,,true,,OCL4DNNLRN<Dtype>,-1
466597,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNPool<Dtype>,,<includes>,cv.dnn.ocl4dnn.OCL4DNNPool<Dtype>,,true,,OCL4DNNPool<Dtype>,-1
466598,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OCL4DNNSoftmax<Dtype>,,<includes>,cv.dnn.ocl4dnn.OCL4DNNSoftmax<Dtype>,,true,,OCL4DNNSoftmax<Dtype>,-1
466599,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype,,<includes>,decltype,,true,,decltype,-1
466600,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(ACROSS_CHANNELS),,<includes>,decltype(ACROSS_CHANNELS),,true,,decltype(ACROSS_CHANNELS),-1
466601,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(AVERAGE_EXCLUDE_PADDING),,<includes>,decltype(AVERAGE_EXCLUDE_PADDING),,true,,decltype(AVERAGE_EXCLUDE_PADDING),-1
466602,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(AVERAGE_INCLUDE_PADDING),,<includes>,decltype(AVERAGE_INCLUDE_PADDING),,true,,decltype(AVERAGE_INCLUDE_PADDING),-1
466603,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(IDENTITY),,<includes>,decltype(IDENTITY),,true,,decltype(IDENTITY),-1
466604,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(LSTM),,<includes>,decltype(LSTM),,true,,decltype(LSTM),-1
466605,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(MAX),,<includes>,decltype(MAX),,true,,decltype(MAX),-1
466606,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(RELU),,<includes>,decltype(RELU),,true,,decltype(RELU),-1
466607,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,decltype(WITHIN_CHANNEL),,<includes>,decltype(WITHIN_CHANNEL),,true,,decltype(WITHIN_CHANNEL),-1
466608,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,detail,,<includes>,detail,,true,,detail,-1
466609,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,dilation,,<includes>,dilation,,true,,dilation,-1
466610,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,dim3,,<includes>,dim3,,true,,dim3,-1
466611,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,dnn,,<includes>,dnn,,true,,dnn,-1
466612,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,double,,<includes>,double,,true,,double,-1
466613,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,double*,,<includes>,double*,,true,,double*,-1
466614,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,double[96],,<includes>,double[96],,true,,double[96],-1
466615,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,element_type*,,<includes>,element_type*,,true,,element_type*,-1
466616,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,enum,,<includes>,enum,,true,,enum,-1
466617,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,execution_policy,,<includes>,execution_policy,,true,,execution_policy,-1
466618,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,explicit,,<includes>,explicit,,true,,explicit,-1
466619,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float,,<includes>,float,,true,,float,-1
466620,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float*,,<includes>,float*,,true,,float*,-1
466621,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float**,,<includes>,float**,,true,,float**,-1
466622,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float16_t,,<includes>,float16_t,,true,,float16_t,-1
466623,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float16_t*,,<includes>,float16_t*,,true,,float16_t*,-1
466624,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float[12],,<includes>,float[12],,true,,float[12],-1
466625,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float[64],,<includes>,float[64],,true,,float[64],-1
466626,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float[8],,<includes>,float[8],,true,,float[8],-1
466627,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float[8][3],,<includes>,float[8][3],,true,,float[8][3],-1
466628,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,float[96],,<includes>,float[96],,true,,float[96],-1
466629,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,fusion_location,,<includes>,fusion_location,,true,,fusion_location,-1
466630,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,gemm_type_t,,<includes>,gemm_type_t,,true,,gemm_type_t,-1
466631,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,generateTunerItems,,<includes>,generateTunerItems,,true,,generateTunerItems,-1
466632,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,grid_stride_range_generic<0>,,<includes>,grid_stride_range_generic<0>,,true,,grid_stride_range_generic<0>,-1
466633,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,grid_stride_range_generic<1>,,<includes>,grid_stride_range_generic<1>,,true,,grid_stride_range_generic<1>,-1
466634,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,grid_stride_range_generic<2>,,<includes>,grid_stride_range_generic<2>,,true,,grid_stride_range_generic<2>,-1
466635,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,half,,<includes>,half,,true,,half,-1
466636,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,half**,,<includes>,half**,,true,,half**,-1
466637,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int,,<includes>,int,,true,,int,-1
466638,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"int (int, int)",,<includes>,"int (int, int)",,true,,"int (int, int)",-1
466639,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int*,,<includes>,int*,,true,,int*,-1
466640,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int32_t,,<includes>,int32_t,,true,,int32_t,-1
466641,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int32_t*,,<includes>,int32_t*,,true,,int32_t*,-1
466642,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int32_t[3],,<includes>,int32_t[3],,true,,int32_t[3],-1
466643,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int64,,<includes>,int64,,true,,int64,-1
466644,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int64*,,<includes>,int64*,,true,,int64*,-1
466645,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int64_t,,<includes>,int64_t,,true,,int64_t,-1
466646,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int8_t,,<includes>,int8_t,,true,,int8_t,-1
466647,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int8_t*,,<includes>,int8_t*,,true,,int8_t*,-1
466648,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int[1],,<includes>,int[1],,true,,int[1],-1
466649,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int[2],,<includes>,int[2],,true,,int[2],-1
466650,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int[3],,<includes>,int[3],,true,,int[3],-1
466651,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int[4],,<includes>,int[4],,true,,int[4],-1
466652,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int[5],,<includes>,int[5],,true,,int[5],-1
466653,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int[6],,<includes>,int[6],,true,,int[6],-1
466654,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,int[],,<includes>,int[],,true,,int[],-1
466655,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,internal,,<includes>,internal,,true,,internal,-1
466656,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ios,,<includes>,ios,,true,,ios,-1
466657,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ios_base,,<includes>,ios_base,,true,,ios_base,-1
466658,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,iostream,,<includes>,iostream,,true,,iostream,-1
466659,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConvolutionParameter_Engine><>,,<includes>,is_proto_enum<opencv_caffe.ConvolutionParameter_Engine><>,,true,,ConvolutionParameter_Engine><>,-1
466660,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataParameter_DB><>,,<includes>,is_proto_enum<opencv_caffe.DataParameter_DB><>,,true,,DataParameter_DB><>,-1
466661,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EltwiseParameter_EltwiseOp><>,,<includes>,is_proto_enum<opencv_caffe.EltwiseParameter_EltwiseOp><>,,true,,EltwiseParameter_EltwiseOp><>,-1
466662,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillerParameter_VarianceNorm><>,,<includes>,is_proto_enum<opencv_caffe.FillerParameter_VarianceNorm><>,,true,,FillerParameter_VarianceNorm><>,-1
466663,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HingeLossParameter_Norm><>,,<includes>,is_proto_enum<opencv_caffe.HingeLossParameter_Norm><>,,true,,HingeLossParameter_Norm><>,-1
466664,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter_Engine><>,,<includes>,is_proto_enum<opencv_caffe.LRNParameter_Engine><>,,true,,LRNParameter_Engine><>,-1
466665,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LRNParameter_NormRegion><>,,<includes>,is_proto_enum<opencv_caffe.LRNParameter_NormRegion><>,,true,,LRNParameter_NormRegion><>,-1
466666,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LossParameter_NormalizationMode><>,,<includes>,is_proto_enum<opencv_caffe.LossParameter_NormalizationMode><>,,true,,LossParameter_NormalizationMode><>,-1
466667,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ParamSpec_DimCheckMode><>,,<includes>,is_proto_enum<opencv_caffe.ParamSpec_DimCheckMode><>,,true,,ParamSpec_DimCheckMode><>,-1
466668,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Phase><>,,<includes>,is_proto_enum<opencv_caffe.Phase><>,,true,,Phase><>,-1
466669,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameter_Engine><>,,<includes>,is_proto_enum<opencv_caffe.PoolingParameter_Engine><>,,true,,PoolingParameter_Engine><>,-1
466670,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PoolingParameter_PoolMethod><>,,<includes>,is_proto_enum<opencv_caffe.PoolingParameter_PoolMethod><>,,true,,PoolingParameter_PoolMethod><>,-1
466671,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PriorBoxParameter_CodeType><>,,<includes>,is_proto_enum<opencv_caffe.PriorBoxParameter_CodeType><>,,true,,PriorBoxParameter_CodeType><>,-1
466672,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReLUParameter_Engine><>,,<includes>,is_proto_enum<opencv_caffe.ReLUParameter_Engine><>,,true,,ReLUParameter_Engine><>,-1
466673,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReductionParameter_ReductionOp><>,,<includes>,is_proto_enum<opencv_caffe.ReductionParameter_ReductionOp><>,,true,,ReductionParameter_ReductionOp><>,-1
466674,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameter_Engine><>,,<includes>,is_proto_enum<opencv_caffe.SPPParameter_Engine><>,,true,,SPPParameter_Engine><>,-1
466675,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SPPParameter_PoolMethod><>,,<includes>,is_proto_enum<opencv_caffe.SPPParameter_PoolMethod><>,,true,,SPPParameter_PoolMethod><>,-1
466676,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SigmoidParameter_Engine><>,,<includes>,is_proto_enum<opencv_caffe.SigmoidParameter_Engine><>,,true,,SigmoidParameter_Engine><>,-1
466677,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxParameter_Engine><>,,<includes>,is_proto_enum<opencv_caffe.SoftmaxParameter_Engine><>,,true,,SoftmaxParameter_Engine><>,-1
466678,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SnapshotFormat><>,,<includes>,is_proto_enum<opencv_caffe.SolverParameter_SnapshotFormat><>,,true,,SolverParameter_SnapshotFormat><>,-1
466679,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SolverMode><>,,<includes>,is_proto_enum<opencv_caffe.SolverParameter_SolverMode><>,,true,,SolverParameter_SolverMode><>,-1
466680,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SolverParameter_SolverType><>,,<includes>,is_proto_enum<opencv_caffe.SolverParameter_SolverType><>,,true,,SolverParameter_SolverType><>,-1
466681,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TanHParameter_Engine><>,,<includes>,is_proto_enum<opencv_caffe.TanHParameter_Engine><>,,true,,TanHParameter_Engine><>,-1
466682,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Type><>,,<includes>,is_proto_enum<opencv_caffe.Type><>,,true,,Type><>,-1
466683,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V0LayerParameter_PoolMethod><>,,<includes>,is_proto_enum<opencv_caffe.V0LayerParameter_PoolMethod><>,,true,,V0LayerParameter_PoolMethod><>,-1
466684,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter_DimCheckMode><>,,<includes>,is_proto_enum<opencv_caffe.V1LayerParameter_DimCheckMode><>,,true,,V1LayerParameter_DimCheckMode><>,-1
466685,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,V1LayerParameter_LayerType><>,,<includes>,is_proto_enum<opencv_caffe.V1LayerParameter_LayerType><>,,true,,V1LayerParameter_LayerType><>,-1
466686,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AttributeProto_AttributeType><>,,<includes>,is_proto_enum<opencv_onnx.AttributeProto_AttributeType><>,,true,,AttributeProto_AttributeType><>,-1
466687,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TensorProto_DataType><>,,<includes>,is_proto_enum<opencv_onnx.TensorProto_DataType><>,,true,,TensorProto_DataType><>,-1
466688,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Version><>,,<includes>,is_proto_enum<opencv_onnx.Version><>,,true,,Version><>,-1
466689,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DataType><>,,<includes>,is_proto_enum<opencv_tensorflow.DataType><>,,true,,DataType><>,-1
466690,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,is_same,,<includes>,is_same,,true,,is_same,-1
466691,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,jclass,,<includes>,jclass,,true,,jclass,-1
466692,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,jint,,<includes>,jint,,true,,jint,-1
466693,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,jmethodID,,<includes>,jmethodID,,true,,jmethodID,-1
466694,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,jobject,,<includes>,jobject,,true,,jobject,-1
466695,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,kernel,,<includes>,kernel,,true,,kernel,-1
466696,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,kernelConfig,,<includes>,kernelConfig,,true,,kernelConfig,-1
466697,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,kernelConfig*,,<includes>,kernelConfig*,,true,,kernelConfig*,-1
466698,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,kernels,,<includes>,kernels,,true,,kernels,-1
466699,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,long,,<includes>,long,,true,,long,-1
466700,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,long int,,<includes>,long int,,true,,long int,-1
466701,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,mutable int,,<includes>,mutable int,,true,,mutable int,-1
466702,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,numeric_limits,,<includes>,numeric_limits,,true,,numeric_limits,-1
466703,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ocl,,<includes>,ocl,,true,,ocl,-1
466704,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ocl4dnnConvSpatialKernelType_t,,<includes>,ocl4dnnConvSpatialKernelType_t,,true,,ocl4dnnConvSpatialKernelType_t,-1
466705,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ocl4dnnConvSpatialType_t,,<includes>,ocl4dnnConvSpatialType_t,,true,,ocl4dnnConvSpatialType_t,-1
466706,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ocl4dnnFusedActiv_t,,<includes>,ocl4dnnFusedActiv_t,,true,,ocl4dnnFusedActiv_t,-1
466707,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ocl4dnnPoolingMethod_t,,<includes>,ocl4dnnPoolingMethod_t,,true,,ocl4dnnPoolingMethod_t,-1
466708,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,off_t,,<includes>,off_t,,true,,off_t,-1
466709,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,opencv_caffe,,<includes>,opencv_caffe,,true,,opencv_caffe,-1
466710,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.AccuracyParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466711,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ArgMaxParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466712,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.BatchNormParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466713,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.BiasParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466714,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.BlobProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466715,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.BlobProtoVector.InternalHelper<T>,,true,,InternalHelper<T>,-1
466716,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.BlobShape.InternalHelper<T>,,true,,InternalHelper<T>,-1
466717,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ConcatParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466718,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ContrastiveLossParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466719,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ConvolutionParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466720,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.CropParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466721,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.DataParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466722,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.Datum.InternalHelper<T>,,true,,InternalHelper<T>,-1
466723,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.DetectionOutputParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466724,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.DropoutParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466725,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.DummyDataParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466726,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ELUParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466727,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.EltwiseParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466728,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.EmbedParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466729,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ExpParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466730,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.FillerParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466731,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.FlattenParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466732,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.HDF5DataParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466733,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.HDF5OutputParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466734,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.HingeLossParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466735,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ImageDataParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466736,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.InfogainLossParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466737,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.InnerProductParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466738,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.InputParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466739,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.LRNParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466740,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.LayerParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466741,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.LogParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466742,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.LossParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466743,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.MVNParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466744,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.MemoryDataParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466745,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.NetParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466746,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.NetState.InternalHelper<T>,,true,,InternalHelper<T>,-1
466747,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.NetStateRule.InternalHelper<T>,,true,,InternalHelper<T>,-1
466748,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.NonMaximumSuppressionParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466749,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.NormalizeBBoxParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466750,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.NormalizedBBox.InternalHelper<T>,,true,,InternalHelper<T>,-1
466751,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.PReLUParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466752,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.PSROIPoolingParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466753,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ParamSpec.InternalHelper<T>,,true,,InternalHelper<T>,-1
466754,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ParameterParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466755,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.PermuteParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466756,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.PoolingParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466757,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.PowerParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466758,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.PriorBoxParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466759,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ProposalParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466760,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.PythonParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466761,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ROIPoolingParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466762,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ReLUParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466763,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.RecurrentParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466764,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ReductionParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466765,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ReshapeParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466766,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.SPPParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466767,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.SaveOutputParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466768,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ScaleParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466769,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.SigmoidParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466770,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.SliceParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466771,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.SoftmaxParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466772,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.SolverParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466773,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.SolverState.InternalHelper<T>,,true,,InternalHelper<T>,-1
466774,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.TanHParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466775,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.ThresholdParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466776,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.TileParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466777,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.TransformationParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466778,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.V0LayerParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466779,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.V1LayerParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466780,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_caffe.WindowDataParameter.InternalHelper<T>,,true,,InternalHelper<T>,-1
466781,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,opencv_onnx,,<includes>,opencv_onnx,,true,,opencv_onnx,-1
466782,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.AttributeProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466783,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.GraphProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466784,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.ModelProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466785,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.NodeProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466786,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.OperatorSetIdProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466787,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.StringStringEntryProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466788,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.TensorProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466789,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.TensorProto_Segment.InternalHelper<T>,,true,,InternalHelper<T>,-1
466790,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.TensorShapeProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466791,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.TensorShapeProto_Dimension.InternalHelper<T>,,true,,InternalHelper<T>,-1
466792,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.TypeProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466793,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.TypeProto_Tensor.InternalHelper<T>,,true,,InternalHelper<T>,-1
466794,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_onnx.ValueInfoProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466795,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,opencv_tensorflow,,<includes>,opencv_tensorflow,,true,,opencv_tensorflow,-1
466796,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.AttrValue.InternalHelper<T>,,true,,InternalHelper<T>,-1
466797,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.AttrValue_ListValue.InternalHelper<T>,,true,,InternalHelper<T>,-1
466798,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.FunctionDef.InternalHelper<T>,,true,,InternalHelper<T>,-1
466799,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.FunctionDefLibrary.InternalHelper<T>,,true,,InternalHelper<T>,-1
466800,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.FunctionDef_Node.InternalHelper<T>,,true,,InternalHelper<T>,-1
466801,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.GradientDef.InternalHelper<T>,,true,,InternalHelper<T>,-1
466802,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.GraphDef.InternalHelper<T>,,true,,InternalHelper<T>,-1
466803,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.NameAttrList.InternalHelper<T>,,true,,InternalHelper<T>,-1
466804,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.NodeDef.InternalHelper<T>,,true,,InternalHelper<T>,-1
466805,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.OpDef.InternalHelper<T>,,true,,InternalHelper<T>,-1
466806,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.OpDef_ArgDef.InternalHelper<T>,,true,,InternalHelper<T>,-1
466807,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.OpDef_AttrDef.InternalHelper<T>,,true,,InternalHelper<T>,-1
466808,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.OpDeprecation.InternalHelper<T>,,true,,InternalHelper<T>,-1
466809,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.OpList.InternalHelper<T>,,true,,InternalHelper<T>,-1
466810,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.TensorProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466811,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.TensorShapeProto.InternalHelper<T>,,true,,InternalHelper<T>,-1
466812,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.TensorShapeProto_Dim.InternalHelper<T>,,true,,InternalHelper<T>,-1
466813,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,InternalHelper<T>,,<includes>,opencv_tensorflow.VersionDef.InternalHelper<T>,,true,,InternalHelper<T>,-1
466814,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BuiltinOptionsTraits<T>,,<includes>,opencv_tflite.BuiltinOptionsTraits<T>,,true,,BuiltinOptionsTraits<T>,-1
466815,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ATan2Options><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ATan2Options><>,,true,,ATan2Options><>,-1
466816,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AbsOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AbsOptions><>,,true,,AbsOptions><>,-1
466817,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AddNOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AddNOptions><>,,true,,AddNOptions><>,-1
466818,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AddOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AddOptions><>,,true,,AddOptions><>,-1
466819,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMaxOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ArgMaxOptions><>,,true,,ArgMaxOptions><>,-1
466820,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ArgMinOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ArgMinOptions><>,,true,,ArgMinOptions><>,-1
466821,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,AssignVariableOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.AssignVariableOptions><>,,true,,AssignVariableOptions><>,-1
466822,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchMatMulOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BatchMatMulOptions><>,,true,,BatchMatMulOptions><>,-1
466823,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BatchToSpaceNDOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BatchToSpaceNDOptions><>,,true,,BatchToSpaceNDOptions><>,-1
466824,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BidirectionalSequenceLSTMOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BidirectionalSequenceLSTMOptions><>,,true,,BidirectionalSequenceLSTMOptions><>,-1
466825,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BidirectionalSequenceRNNOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BidirectionalSequenceRNNOptions><>,,true,,BidirectionalSequenceRNNOptions><>,-1
466826,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BroadcastToOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BroadcastToOptions><>,,true,,BroadcastToOptions><>,-1
466827,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,BucketizeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.BucketizeOptions><>,,true,,BucketizeOptions><>,-1
466828,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallOnceOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CallOnceOptions><>,,true,,CallOnceOptions><>,-1
466829,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CallOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CallOptions><>,,true,,CallOptions><>,-1
466830,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CastOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CastOptions><>,,true,,CastOptions><>,-1
466831,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatEmbeddingsOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ConcatEmbeddingsOptions><>,,true,,ConcatEmbeddingsOptions><>,-1
466832,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ConcatenationOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ConcatenationOptions><>,,true,,ConcatenationOptions><>,-1
466833,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv2DOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Conv2DOptions><>,,true,,Conv2DOptions><>,-1
466834,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Conv3DOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Conv3DOptions><>,,true,,Conv3DOptions><>,-1
466835,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CosOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CosOptions><>,,true,,CosOptions><>,-1
466836,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CumsumOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.CumsumOptions><>,,true,,CumsumOptions><>,-1
466837,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DensifyOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DensifyOptions><>,,true,,DensifyOptions><>,-1
466838,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DepthToSpaceOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DepthToSpaceOptions><>,,true,,DepthToSpaceOptions><>,-1
466839,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DepthwiseConv2DOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DepthwiseConv2DOptions><>,,true,,DepthwiseConv2DOptions><>,-1
466840,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DequantizeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DequantizeOptions><>,,true,,DequantizeOptions><>,-1
466841,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DivOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DivOptions><>,,true,,DivOptions><>,-1
466842,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,DynamicUpdateSliceOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.DynamicUpdateSliceOptions><>,,true,,DynamicUpdateSliceOptions><>,-1
466843,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EmbeddingLookupSparseOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.EmbeddingLookupSparseOptions><>,,true,,EmbeddingLookupSparseOptions><>,-1
466844,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,EqualOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.EqualOptions><>,,true,,EqualOptions><>,-1
466845,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ExpOptions><>,,true,,ExpOptions><>,-1
466846,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ExpandDimsOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ExpandDimsOptions><>,,true,,ExpandDimsOptions><>,-1
466847,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FakeQuantOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FakeQuantOptions><>,,true,,FakeQuantOptions><>,-1
466848,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FillOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FillOptions><>,,true,,FillOptions><>,-1
466849,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FloorDivOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FloorDivOptions><>,,true,,FloorDivOptions><>,-1
466850,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FloorModOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FloorModOptions><>,,true,,FloorModOptions><>,-1
466851,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,FullyConnectedOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.FullyConnectedOptions><>,,true,,FullyConnectedOptions><>,-1
466852,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GatherNdOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GatherNdOptions><>,,true,,GatherNdOptions><>,-1
466853,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GatherOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GatherOptions><>,,true,,GatherOptions><>,-1
466854,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GeluOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GeluOptions><>,,true,,GeluOptions><>,-1
466855,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GreaterEqualOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GreaterEqualOptions><>,,true,,GreaterEqualOptions><>,-1
466856,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,GreaterOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.GreaterOptions><>,,true,,GreaterOptions><>,-1
466857,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HardSwishOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HardSwishOptions><>,,true,,HardSwishOptions><>,-1
466858,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableFindOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableFindOptions><>,,true,,HashtableFindOptions><>,-1
466859,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableImportOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableImportOptions><>,,true,,HashtableImportOptions><>,-1
466860,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableOptions><>,,true,,HashtableOptions><>,-1
466861,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,HashtableSizeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.HashtableSizeOptions><>,,true,,HashtableSizeOptions><>,-1
466862,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,IfOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.IfOptions><>,,true,,IfOptions><>,-1
466863,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,L2NormOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.L2NormOptions><>,,true,,L2NormOptions><>,-1
466864,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSHProjectionOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LSHProjectionOptions><>,,true,,LSHProjectionOptions><>,-1
466865,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LSTMOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LSTMOptions><>,,true,,LSTMOptions><>,-1
466866,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LeakyReluOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LeakyReluOptions><>,,true,,LeakyReluOptions><>,-1
466867,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LessEqualOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LessEqualOptions><>,,true,,LessEqualOptions><>,-1
466868,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LessOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LessOptions><>,,true,,LessOptions><>,-1
466869,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LocalResponseNormalizationOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LocalResponseNormalizationOptions><>,,true,,LocalResponseNormalizationOptions><>,-1
466870,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogSoftmaxOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogSoftmaxOptions><>,,true,,LogSoftmaxOptions><>,-1
466871,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalAndOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalAndOptions><>,,true,,LogicalAndOptions><>,-1
466872,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalNotOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalNotOptions><>,,true,,LogicalNotOptions><>,-1
466873,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,LogicalOrOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.LogicalOrOptions><>,,true,,LogicalOrOptions><>,-1
466874,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatrixDiagOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MatrixDiagOptions><>,,true,,MatrixDiagOptions><>,-1
466875,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MatrixSetDiagOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MatrixSetDiagOptions><>,,true,,MatrixSetDiagOptions><>,-1
466876,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MaximumMinimumOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MaximumMinimumOptions><>,,true,,MaximumMinimumOptions><>,-1
466877,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MirrorPadOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MirrorPadOptions><>,,true,,MirrorPadOptions><>,-1
466878,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,MulOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.MulOptions><>,,true,,MulOptions><>,-1
466879,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NegOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NegOptions><>,,true,,NegOptions><>,-1
466880,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaxSuppressionV4Options><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NonMaxSuppressionV4Options><>,,true,,NonMaxSuppressionV4Options><>,-1
466881,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NonMaxSuppressionV5Options><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NonMaxSuppressionV5Options><>,,true,,NonMaxSuppressionV5Options><>,-1
466882,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,NotEqualOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.NotEqualOptions><>,,true,,NotEqualOptions><>,-1
466883,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,OneHotOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.OneHotOptions><>,,true,,OneHotOptions><>,-1
466884,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PackOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PackOptions><>,,true,,PackOptions><>,-1
466885,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PadOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PadOptions><>,,true,,PadOptions><>,-1
466886,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PadV2Options><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PadV2Options><>,,true,,PadV2Options><>,-1
466887,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Pool2DOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Pool2DOptions><>,,true,,Pool2DOptions><>,-1
466888,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,PowOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.PowOptions><>,,true,,PowOptions><>,-1
466889,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuantizeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.QuantizeOptions><>,,true,,QuantizeOptions><>,-1
466890,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RNNOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RNNOptions><>,,true,,RNNOptions><>,-1
466891,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RandomOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RandomOptions><>,,true,,RandomOptions><>,-1
466892,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RangeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RangeOptions><>,,true,,RangeOptions><>,-1
466893,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RankOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.RankOptions><>,,true,,RankOptions><>,-1
466894,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReadVariableOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReadVariableOptions><>,,true,,ReadVariableOptions><>,-1
466895,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReducerOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReducerOptions><>,,true,,ReducerOptions><>,-1
466896,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReshapeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReshapeOptions><>,,true,,ReshapeOptions><>,-1
466897,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeBilinearOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ResizeBilinearOptions><>,,true,,ResizeBilinearOptions><>,-1
466898,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ResizeNearestNeighborOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ResizeNearestNeighborOptions><>,,true,,ResizeNearestNeighborOptions><>,-1
466899,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReverseSequenceOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReverseSequenceOptions><>,,true,,ReverseSequenceOptions><>,-1
466900,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ReverseV2Options><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ReverseV2Options><>,,true,,ReverseV2Options><>,-1
466901,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Rfft2dOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.Rfft2dOptions><>,,true,,Rfft2dOptions><>,-1
466902,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SVDFOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SVDFOptions><>,,true,,SVDFOptions><>,-1
466903,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ScatterNdOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ScatterNdOptions><>,,true,,ScatterNdOptions><>,-1
466904,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SegmentSumOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SegmentSumOptions><>,,true,,SegmentSumOptions><>,-1
466905,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SelectOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SelectOptions><>,,true,,SelectOptions><>,-1
466906,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SelectV2Options><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SelectV2Options><>,,true,,SelectV2Options><>,-1
466907,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SequenceRNNOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SequenceRNNOptions><>,,true,,SequenceRNNOptions><>,-1
466908,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ShapeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ShapeOptions><>,,true,,ShapeOptions><>,-1
466909,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SignOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SignOptions><>,,true,,SignOptions><>,-1
466910,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SkipGramOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SkipGramOptions><>,,true,,SkipGramOptions><>,-1
466911,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SliceOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SliceOptions><>,,true,,SliceOptions><>,-1
466912,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SoftmaxOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SoftmaxOptions><>,,true,,SoftmaxOptions><>,-1
466913,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SpaceToBatchNDOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SpaceToBatchNDOptions><>,,true,,SpaceToBatchNDOptions><>,-1
466914,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SpaceToDepthOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SpaceToDepthOptions><>,,true,,SpaceToDepthOptions><>,-1
466915,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SparseToDenseOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SparseToDenseOptions><>,,true,,SparseToDenseOptions><>,-1
466916,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SplitOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SplitOptions><>,,true,,SplitOptions><>,-1
466917,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SplitVOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SplitVOptions><>,,true,,SplitVOptions><>,-1
466918,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SquareOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SquareOptions><>,,true,,SquareOptions><>,-1
466919,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SquaredDifferenceOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SquaredDifferenceOptions><>,,true,,SquaredDifferenceOptions><>,-1
466920,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SqueezeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SqueezeOptions><>,,true,,SqueezeOptions><>,-1
466921,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,StridedSliceOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.StridedSliceOptions><>,,true,,StridedSliceOptions><>,-1
466922,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SubOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.SubOptions><>,,true,,SubOptions><>,-1
466923,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TileOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TileOptions><>,,true,,TileOptions><>,-1
466924,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TopKV2Options><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TopKV2Options><>,,true,,TopKV2Options><>,-1
466925,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeConvOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TransposeConvOptions><>,,true,,TransposeConvOptions><>,-1
466926,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,TransposeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.TransposeOptions><>,,true,,TransposeOptions><>,-1
466927,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnidirectionalSequenceLSTMOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnidirectionalSequenceLSTMOptions><>,,true,,UnidirectionalSequenceLSTMOptions><>,-1
466928,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UniqueOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UniqueOptions><>,,true,,UniqueOptions><>,-1
466929,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnpackOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnpackOptions><>,,true,,UnpackOptions><>,-1
466930,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentMaxOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentMaxOptions><>,,true,,UnsortedSegmentMaxOptions><>,-1
466931,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentMinOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentMinOptions><>,,true,,UnsortedSegmentMinOptions><>,-1
466932,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentProdOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentProdOptions><>,,true,,UnsortedSegmentProdOptions><>,-1
466933,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,UnsortedSegmentSumOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.UnsortedSegmentSumOptions><>,,true,,UnsortedSegmentSumOptions><>,-1
466934,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,VarHandleOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.VarHandleOptions><>,,true,,VarHandleOptions><>,-1
466935,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WhereOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.WhereOptions><>,,true,,WhereOptions><>,-1
466936,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,WhileOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.WhileOptions><>,,true,,WhileOptions><>,-1
466937,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ZerosLikeOptions><>,,<includes>,opencv_tflite.BuiltinOptionsTraits<opencv_tflite.ZerosLikeOptions><>,,true,,ZerosLikeOptions><>,-1
466938,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,QuantizationDetailsTraits<T>,,<includes>,opencv_tflite.QuantizationDetailsTraits<T>,,true,,QuantizationDetailsTraits<T>,-1
466939,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,CustomQuantization><>,,<includes>,opencv_tflite.QuantizationDetailsTraits<opencv_tflite.CustomQuantization><>,,true,,CustomQuantization><>,-1
466940,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,SparseIndexVectorTraits<T>,,<includes>,opencv_tflite.SparseIndexVectorTraits<T>,,true,,SparseIndexVectorTraits<T>,-1
466941,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Int32Vector><>,,<includes>,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Int32Vector><>,,true,,Int32Vector><>,-1
466942,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint16Vector><>,,<includes>,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Uint16Vector><>,,true,,Uint16Vector><>,-1
466943,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Uint8Vector><>,,<includes>,opencv_tflite.SparseIndexVectorTraits<opencv_tflite.Uint8Vector><>,,true,,Uint8Vector><>,-1
466944,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ostream,,<includes>,ostream,,true,,ostream,-1
466945,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,pad,,<includes>,pad,,true,,pad,-1
466946,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,padAdjust,,<includes>,padAdjust,,true,,padAdjust,-1
466947,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"pair<int,float>",,<includes>,"pair<int,float>",,true,,"pair<int,float>",-1
466948,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,params_type,,<includes>,params_type,,true,,params_type,-1
466949,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"TestBaseWithParam<tuple<Backend, Target>>",,<includes>,"perf.TestBaseWithParam<tuple<Backend, Target>>",,true,,"TestBaseWithParam<tuple<Backend, Target>>",-1
466950,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,ptrdiff_t,,<includes>,ptrdiff_t,,true,,ptrdiff_t,-1
466951,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,setActivation,,<includes>,setActivation,,true,,setActivation,-1
466952,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,setLayersParams,,<includes>,setLayersParams,,true,,setLayersParams,-1
466953,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shapeIn,,<includes>,shapeIn,,true,,shapeIn,-1
466954,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,shared_ptr<IDNNBackendFactory>,,<includes>,shared_ptr<IDNNBackendFactory>,,true,,shared_ptr<IDNNBackendFactory>,-1
466955,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Node>,,<includes>,shared_ptr<ngraph.Node>,,true,,Node>,-1
466956,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,short,,<includes>,short,,true,,short,-1
466957,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,short*,,<includes>,short*,,true,,short*,-1
466958,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t,,<includes>,size_t,,true,,size_t,-1
466959,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t*,,<includes>,size_t*,,true,,size_t*,-1
466960,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t[1],,<includes>,size_t[1],,true,,size_t[1],-1
466961,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t[2],,<includes>,size_t[2],,true,,size_t[2],-1
466962,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,size_t[3],,<includes>,size_t[3],,true,,size_t[3],-1
466963,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,stat,,<includes>,stat,,true,,stat,-1
466964,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[13],,<includes>,static .PROTOBUF_NAMESPACE_ID.Metadata[13],,true,,Metadata[13],-1
466965,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[1],,<includes>,static .PROTOBUF_NAMESPACE_ID.Metadata[1],,true,,Metadata[1],-1
466966,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[2],,<includes>,static .PROTOBUF_NAMESPACE_ID.Metadata[2],,true,,Metadata[2],-1
466967,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[3],,<includes>,static .PROTOBUF_NAMESPACE_ID.Metadata[3],,true,,Metadata[3],-1
466968,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[4],,<includes>,static .PROTOBUF_NAMESPACE_ID.Metadata[4],,true,,Metadata[4],-1
466969,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[5],,<includes>,static .PROTOBUF_NAMESPACE_ID.Metadata[5],,true,,Metadata[5],-1
466970,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Metadata[71],,<includes>,static .PROTOBUF_NAMESPACE_ID.Metadata[71],,true,,Metadata[71],-1
466971,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,std,,<includes>,std,,true,,std,-1
466972,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,false_type,,<includes>,std.false_type,,true,,false_type,-1
466973,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,streambuf,,<includes>,std.streambuf,,true,,streambuf,-1
466974,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,true_type,,<includes>,std.true_type,,true,,true_type,-1
466975,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,stride,,<includes>,stride,,true,,stride,-1
466976,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string,,<includes>,string,,true,,string,-1
466977,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,struct,,<includes>,struct,,true,,struct,-1
466978,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,tensor_ops,,<includes>,tensor_ops,,true,,tensor_ops,-1
466979,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,tunerParam,,<includes>,tunerParam,,true,,tunerParam,-1
466980,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"tuple<MatMulParamId, tuple<Backend, Target>>",,<includes>,"tuple<MatMulParamId, tuple<Backend, Target>>",,true,,"tuple<MatMulParamId, tuple<Backend, Target>>",-1
466981,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uchar*,,<includes>,uchar*,,true,,uchar*,-1
466982,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint,,<includes>,uint,,true,,uint,-1
466983,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint16_t,,<includes>,uint16_t,,true,,uint16_t,-1
466984,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint32_t,,<includes>,uint32_t,,true,,uint32_t,-1
466985,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint32_t[1],,<includes>,uint32_t[1],,true,,uint32_t[1],-1
466986,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint64_t,,<includes>,uint64_t,,true,,uint64_t,-1
466987,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint8_t,,<includes>,uint8_t,,true,,uint8_t,-1
466988,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,uint8_t*,,<includes>,uint8_t*,,true,,uint8_t*,-1
466989,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,union ValueUnion,,<includes>,union ValueUnion,,true,,union ValueUnion,-1
466990,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned,,<includes>,unsigned,,true,,unsigned,-1
466991,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned char,,<includes>,unsigned char,,true,,unsigned char,-1
466992,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned char*,,<includes>,unsigned char*,,true,,unsigned char*,-1
466993,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned int,,<includes>,unsigned int,,true,,unsigned int,-1
466994,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned int[1977],,<includes>,unsigned int[1977],,true,,unsigned int[1977],-1
466995,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned int[2092],,<includes>,unsigned int[2092],,true,,unsigned int[2092],-1
466996,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned int[2902],,<includes>,unsigned int[2902],,true,,unsigned int[2902],-1
466997,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned int[3134],,<includes>,unsigned int[3134],,true,,unsigned int[3134],-1
466998,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned int[3565],,<includes>,unsigned int[3565],,true,,unsigned int[3565],-1
466999,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned longint,,<includes>,unsigned longint,,true,,unsigned longint,-1
467000,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,unsigned longlongint,,<includes>,unsigned longlongint,,true,,unsigned longlongint,-1
467001,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,v0,,<includes>,v0,,true,,v0,-1
467002,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,value_,,<includes>,value_,,true,,value_,-1
467003,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<Mat>,,<includes>,vector<Mat>,,true,,vector<Mat>,-1
467004,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<MatShape>,,<includes>,vector<MatShape>,,true,,vector<MatShape>,-1
467005,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<Point2f>,,<includes>,vector<Point2f>,,true,,vector<Point2f>,-1
467006,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<T>,,<includes>,vector<T>,,true,,vector<T>,-1
467007,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<cudnnTensorDescriptor_t>,,<includes>,vector<cudnnTensorDescriptor_t>,,true,,vector<cudnnTensorDescriptor_t>,-1
467008,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Layer>>,,<includes>,vector<cv.Ptr<cv.dnn.Layer>>,,true,,Layer>>,-1
467009,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,RotatedRect>,,<includes>,vector<cv.RotatedRect>,,true,,RotatedRect>,-1
467010,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<size_type>,,<includes>,vector<size_type>,,true,,vector<size_type>,-1
467011,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"pair<float,int>>",,<includes>,"vector<std.pair<float,int>>",,true,,"pair<float,int>>",-1
467012,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,string>,,<includes>,vector<std.string>,,true,,string>,-1
467013,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vector<Point2f>>,,<includes>,vector<std.vector<Point2f>>,,true,,vector<Point2f>>,-1
467014,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,Range>>,,<includes>,vector<std.vector<cv.Range>>,,true,,Range>>,-1
467015,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,virtual,,<includes>,virtual,,true,,virtual,-1
467016,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void,,<includes>,void,,true,,void,-1
467017,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void (),,<includes>,void (),,true,,void (),-1
467018,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"void (int, int, int, float, char , int, int, char , float, char , int, int, bool)",,<includes>,"void (int, int, int, float, char , int, int, char , float, char , int, int, bool)",,true,,"void (int, int, int, float, char , int, int, char , float, char , int, int, bool)",-1
467019,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,"void (int, int, int, float, char , int, int, char , int, int, float, char , int, int, bool)",,<includes>,"void (int, int, int, float, char , int, int, char , int, int, float, char , int, int, bool)",,true,,"void (int, int, int, float, char , int, int, char , int, int, float, char , int, int, bool)",-1
467020,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void(void*),,<includes>,void(void*),,true,,void(void*),-1
467021,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,void*,,<includes>,void*,,true,,void*,-1
467022,TYPE_DECL,,<includes>:<global>,NAMESPACE_BLOCK,vtable,,<includes>,vtable,,true,,vtable,-1
