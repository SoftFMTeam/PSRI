88,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            callback, argc, argv,
                            async_context_);",3,32,1
109,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            method, argc, argv,
                            async_context_);",3,40,1
130,RETURN,-1,,"return node::MakeCallback(env_->isolate(), get_resource(),
                            symbol, argc, argv,
                            async_context_);",3,48,1
148,RETURN,-1,,return resource_.Get(env_->isolate());,3,54,1
161,RETURN,-1,,return async_context_.async_id;,3,58,1
169,RETURN,-1,,return async_context_.trigger_async_id;,3,62,1
296,RETURN,-1,,return;,5,61,2
389,RETURN,1,,return;,16,97,1
404,RETURN,1,,return;,28,111,1
453,RETURN,1,,return;,16,123,1
464,RETURN,-1,,return;,5,126,1
479,RETURN,1,,return;,34,131,1
549,RETURN,-1,,return;,5,150,1
570,RETURN,1,,return;,34,156,1
702,RETURN,-1,,return MaybeLocal<Value>();,5,199,1
813,RETURN,-1,,return MaybeLocal<Value>();,5,220,2
825,RETURN,-1,,return MaybeLocal<Value>();,5,225,1
827,RETURN,-1,,return ret;,3,228,19
854,RETURN,-1,,"return MakeCallback(isolate, recv, method_string, argc, argv, asyncContext);",3,241,2
895,RETURN,1,,return Local<Value>();,33,254,1
919,RETURN,1,,return Local<Value>();,5,258,1
928,RETURN,-1,,return Undefined(isolate);,5,262,1
941,RETURN,-1,,"return MakeCallback(isolate, recv, callback, argc, argv, asyncContext);",3,265,9
1008,RETURN,-1,,return Undefined(isolate);,5,290,1
1011,RETURN,-1,,return ret;,3,292,8
1045,RETURN,1,,return Local<Value>();,33,307,1
1066,RETURN,-1,,"return callback->Call(context, recv, argc, argv);",5,314,1
1095,RETURN,-1,,return ret;,3,322,10
1109,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, method, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,333,3
1139,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, symbol, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,344,3
1169,RETURN,-1,,"return handle_scope.Escape(
      MakeCallback(isolate, recv, callback, argc, argv, {0, 0})
          .FromMaybe(Local<Value>()));",3,355,3
1228,RETURN,-1,,"return CreateEnvironment(
            setup->isolate_data(),
            setup->context(),
            args,
            exec_args,
            static_cast<EnvironmentFlags::Flags>(env_flags));",9,193,1
1310,RETURN,1,,return Nothing<ExitCode>();,27,32,1
1436,RETURN,1,,return Nothing<ExitCode>();,27,66,1
1457,RETURN,-1,,return EmitProcessExitInternal(env);,3,76,21
1526,RETURN,-1,,return;,5,108,2
1693,RETURN,-1,,return;,7,153,3
1721,RETURN,-1,,return;,7,160,2
1782,RETURN,-1,,return ret;,3,201,6
1938,RETURN,1,,return {};,42,247,1
1939,RETURN,-1,,return result;,3,249,9
1960,RETURN,-1,,return Nothing<int>();,5,255,1
1962,RETURN,-1,,return Just(static_cast<int>(result.FromJust()));,3,257,3
1974,RETURN,-1,,return &impl_->loop;,3,261,1
1983,RETURN,-1,,return impl_->allocator;,3,266,1
1991,RETURN,-1,,return impl_->isolate;,3,270,1
1999,RETURN,-1,,return impl_->isolate_data.get();,3,274,1
2010,RETURN,-1,,return impl_->env.get();,3,278,1
2021,RETURN,-1,,return impl_->main_context.Get(impl_->isolate);,3,282,1
2035,RETURN,-1,,return impl_->snapshot_creator ? &impl_->snapshot_creator.value() : nullptr;,3,286,1
2087,RETURN,-1,,"return EmbedderSnapshotData::Pointer{new EmbedderSnapshotData(
      SnapshotBuilder::GetEmbeddedSnapshotData(), false)};",3,300,1
2133,RETURN,-1,,return {};,5,311,1
2134,RETURN,-1,,return result;,3,313,7
2141,RETURN,-1,,return FromBlob(ReadFileSync(in));,3,317,1
2149,RETURN,-1,,return impl_->ToBlob();,3,321,1
2174,RETURN,-1,,return true;,3,336,1
2244,RETURN,1,,return UTF8;,11,27,1
2256,RETURN,1,,return UCS2;,11,29,1
2299,RETURN,1,,return UCS2;,11,34,1
2306,RETURN,1,,return UTF8;,9,37,1
2313,RETURN,1,,return UTF8;,9,39,1
2320,RETURN,1,,return UCS2;,9,41,1
2327,RETURN,1,,return UCS2;,9,43,1
2334,RETURN,1,,return UCS2;,9,45,1
2341,RETURN,1,,return UCS2;,9,47,1
2365,RETURN,1,,return LATIN1;,11,55,1
2372,RETURN,1,,return LATIN1;,9,58,1
2396,RETURN,1,,return LATIN1;,11,66,1
2417,RETURN,1,,return BUFFER;,11,70,1
2438,RETURN,1,,return BASE64;,11,74,1
2450,RETURN,1,,return BASE64URL;,11,76,1
2457,RETURN,1,,return LATIN1;,9,79,1
2464,RETURN,1,,return BUFFER;,9,81,1
2471,RETURN,1,,return BASE64;,9,83,1
2478,RETURN,1,,return BASE64URL;,9,85,1
2502,RETURN,1,,return ASCII;,11,93,1
2509,RETURN,1,,return ASCII;,9,96,1
2536,RETURN,1,,return HEX;,11,104,1
2543,RETURN,1,,return HEX;,9,106,1
2546,RETURN,-1,,return default_encoding;,3,109,2
2568,RETURN,1,,return default_encoding;,5,119,1
2574,RETURN,-1,,"return ParseEncoding(*encoding, default_encoding);",3,123,5
2595,RETURN,-1,,"return StringBytes::Encode(isolate, buf, len, encoding, &error)
      .ToLocalChecked();",3,132,3
2621,RETURN,-1,,"return StringBytes::Encode(isolate, buf, len, &error)
      .ToLocalChecked();",3,138,2
2644,RETURN,-1,,"return StringBytes::Size(isolate, val, encoding).FromMaybe(-1);",3,148,3
2666,RETURN,-1,,"return StringBytes::Write(isolate, buf, buflen, val, encoding);",3,157,1
2697,RETURN,-1,,"return info.run_cjs->Call(
            env->context(), Null(env->isolate()), 1, &main_script);",9,559,2
2790,RETURN,-1,,return wasm_code_gen->IsUndefined() || wasm_code_gen->IsTrue();,3,51,2
2816,RETURN,-1,,"return env != nullptr &&
         (env->is_main_thread() || !env->is_stopping()) &&
         env->abort_on_uncaught_exception() &&
         env->should_abort_on_uncaught_toggle()[0] &&
         !env->inside_should_not_abort_on_uncaught_scope();",3,57,5
2869,RETURN,-1,,return exception->ToString(context).FromMaybe(Local<Value>());,5,69,1
2920,RETURN,-1,,return exception->ToString(context).FromMaybe(Local<Value>());,5,84,1
2978,RETURN,-1,,return result;,3,101,15
3025,RETURN,-1,,return ret;,3,112,4
3054,RETURN,-1,,return ret;,3,119,4
3094,RETURN,-1,,return ret;,3,127,4
3144,RETURN,-1,,return data;,3,143,6
3165,RETURN,-1,,return data;,3,150,6
3218,RETURN,-1,,return nullptr;,5,171,2
3247,RETURN,-1,,return ret;,3,181,8
3296,RETURN,1,,return;,24,198,1
3337,RETURN,1,,return;,24,211,1
3364,RETURN,1,,return std::make_unique<DebuggingArrayBufferAllocator>();,5,218,1
3371,RETURN,1,,return std::make_unique<NodeArrayBufferAllocator>();,5,220,1
3380,RETURN,-1,,return ArrayBufferAllocator::Create().release();,3,224,1
3727,RETURN,1,,return nullptr;,27,333,1
3768,RETURN,-1,,return isolate;,3,365,9
3790,RETURN,-1,,"return NewIsolate(&params,
                    event_loop,
                    platform,
                    SnapshotData::FromEmbedderWrapper(snapshot_data),
                    settings);",3,375,3
3820,RETURN,-1,,"return NewIsolate(&params,
                    event_loop,
                    platform,
                    SnapshotData::FromEmbedderWrapper(snapshot_data),
                    settings);",3,389,3
3849,RETURN,-1,,"return new IsolateData(isolate, loop, platform, allocator, snapshot_data);",3,404,3
3968,RETURN,-1,,return nullptr;,7,464,2
3999,RETURN,-1,,return nullptr;,5,486,2
4001,RETURN,-1,,return env;,3,489,18
4085,RETURN,-1,,"return GetInspectorParentHandle(env, thread_id, url, """");",3,524,1
4124,RETURN,-1,,return nullptr;,5,533,1
4126,RETURN,-1,,return {};,3,539,5
4141,RETURN,-1,,"return StartExecution(env, cb);",3,549,3
4154,RETURN,-1,,"return LoadEnvironment(
      env, [&](const StartExecutionCallbackInfo& info) -> MaybeLocal<Value> {
        Local<Value> main_script =
            ToV8Value(env->context(), main_script_source_utf8).ToLocalChecked();
        return info.run_cjs->Call(
            env->context(), Null(env->isolate()), 1, &main_script);
      });",3,555,2
4163,RETURN,-1,,return Environment::GetCurrent(context);,3,565,1
4174,RETURN,-1,,return env->isolate_data();,3,569,1
4184,RETURN,-1,,return isolate_data->node_allocator();,3,573,1
4194,RETURN,-1,,return env->context();,3,577,1
4204,RETURN,-1,,return GetMultiIsolatePlatform(env->isolate_data());,3,581,1
4215,RETURN,-1,,return env->platform();,3,585,1
4226,RETURN,-1,,"return CreatePlatform(
      thread_pool_size,
      static_cast<v8::TracingController*>(tracing_controller));",3,591,1
4238,RETURN,-1,,"return MultiIsolatePlatform::Create(thread_pool_size,
                                      tracing_controller)
      .release();",3,599,1
4262,RETURN,-1,,"return std::make_unique<NodePlatform>(thread_pool_size,
                                        tracing_controller,
                                        page_allocator);",3,612,1
4332,RETURN,1,,return MaybeLocal<Object>();,5,627,1
4340,RETURN,1,,return handle_scope.Escape(existing_value.As<Object>());,5,629,1
4381,RETURN,1,,return MaybeLocal<Object>();,5,634,1
4383,RETURN,-1,,return handle_scope.Escape(exports);,3,635,12
4411,RETURN,1,,return context;,26,644,1
4420,RETURN,-1,,return Local<Context>();,5,647,1
4422,RETURN,-1,,return context;,3,650,5
4483,RETURN,-1,,return Just(true);,5,677,1
4532,RETURN,-1,,return Nothing<bool>();,7,693,1
4556,RETURN,-1,,return Nothing<bool>();,7,700,1
4593,RETURN,-1,,return Nothing<bool>();,7,713,1
4625,RETURN,-1,,return Nothing<bool>();,7,719,1
4653,RETURN,-1,,return Nothing<bool>();,7,728,1
4669,RETURN,-1,,return Just(true);,3,735,14
4731,RETURN,-1,,return Nothing<bool>();,7,752,1
4752,RETURN,-1,,return Nothing<bool>();,7,757,1
4754,RETURN,-1,,return Just(true);,3,760,6
4797,RETURN,-1,,return Nothing<bool>();,5,774,1
4799,RETURN,-1,,return InitializePrimordials(context);,3,776,8
4874,RETURN,-1,,return Nothing<bool>();,5,793,1
4920,RETURN,-1,,return Nothing<bool>();,7,814,1
4922,RETURN,-1,,return Just(true);,3,818,13
4937,RETURN,-1,,return Nothing<bool>();,5,824,1
4939,RETURN,-1,,return InitializeContextRuntime(context);,3,827,2
4966,RETURN,1,,return nullptr;,26,833,1
4981,RETURN,1,,return nullptr;,23,835,1
4983,RETURN,-1,,return env->event_loop();,3,836,8
5119,RETURN,-1,,return ThreadId { next_thread_id++ };,3,894,1
5478,RETURN,-1,,return e;,3,72,20
5486,RETURN,-1,,"return String::NewFromUtf8(isolate, path).ToLocalChecked();",3,87,1
5804,RETURN,-1,,return e;,3,151,23
5932,RETURN,-1,,return Nothing<bool>();,5,43,1
5954,RETURN,-1,,"return ProcessEmit(env, ""beforeExit"", exit_code).IsEmpty() ?
      Nothing<bool>() : Just(true);",3,49,11
5971,RETURN,-1,,return EmitProcessExitInternal(env).FromMaybe(ExitCode::kGenericUserError);,3,54,1
5985,RETURN,-1,,return static_cast<int>(EmitExitInternal(env));,3,58,1
6023,RETURN,-1,,return Nothing<ExitCode>();,5,70,1
6054,RETURN,-1,,return Nothing<ExitCode>();,5,77,1
6056,RETURN,-1,,return Just(env->exit_code(ExitCode::kNoFailure));,3,80,11
6084,RETURN,-1,,return Nothing<int>();,5,86,1
6086,RETURN,-1,,return Just(static_cast<int>(result.FromJust()));,3,88,3
6287,RETURN,-1,,return new ACHHandle { info };,3,161,11
6302,RETURN,1,,return;,30,166,1
6354,RETURN,1,,return -1;,23,183,1
6357,RETURN,-1,,return env->execution_async_id();,3,184,4
6380,RETURN,1,,return -1;,23,189,1
6383,RETURN,-1,,return env->trigger_async_id();,3,190,4
6417,RETURN,-1,,"return EmitAsyncInit(isolate, resource, type, trigger_async_id);",3,202,4
6478,RETURN,-1,,return context;,3,226,10
6529,RETURN,-1,,SIGNO_CASE(SIGTERM),5,74,3
6532,RETURN,-1,,"return """";",7,165,5
6649,RETURN,1,,return;,35,75,1
6703,RETURN,1,,return;,9,85,1
6743,RETURN,1,,return;,5,95,1
7280,RETURN,-1,,return;,5,221,1
7587,RETURN,1,,return;,57,277,1
7883,RETURN,-1,,return tmpl;,3,352,3
8609,RETURN,-1,,return init_hook_ran_;,3,529,1
8655,RETURN,-1,,return;,5,555,1
8780,RETURN,1,,return;,15,628,1
8834,RETURN,-1,,return;,5,646,1
8933,RETURN,-1,,return ret;,3,678,8
8939,RETURN,-1,,return provider_names[provider_type()];,3,682,1
8949,RETURN,-1,,return buf;,3,693,3
8955,RETURN,-1,,"return GetOwner(env(), object());",3,697,1
9014,RETURN,-1,,return handle_scope.Escape(obj);,7,710,1
9217,RETURN,-1,,return;,5,38,1
9252,RETURN,1,,return;,47,50,1
9298,RETURN,-1,,return MakeLazilyInitializedJSTemplate(env->isolate_data());,3,85,1
9331,RETURN,-1,,return t;,3,93,3
9363,RETURN,-1,,return pointer_data_;,3,104,3
9463,RETURN,-1,,return self->Detach();,5,130,1
9474,RETURN,-1,,return true;,3,136,1
9480,RETURN,-1,,return object();,3,140,1
9486,RETURN,-1,,return !persistent_handle_.IsWeak();,3,144,1
9496,RETURN,-1,,return IsWeakOrDetached();,3,148,1
9691,RETURN,1,,return Nothing<bool>();,11,1474,1
9695,RETURN,-1,,return Just(true);,7,1477,2
9759,RETURN,-1,,return static_cast<uint32_t>(p[0] << 8U) | (static_cast<uint32_t>(p[1]));,3,82,1
9816,RETURN,-1,,return;,5,96,2
9930,RETURN,-1,,return;,9,133,1
10065,RETURN,-1,,return scope.Escape(ret);,3,171,6
10125,RETURN,-1,,return names;,3,186,4
10165,RETURN,-1,,"return Array::New(env->isolate(), ttls.out(), naddrttls);",3,198,4
10265,RETURN,1,,return status;,5,241,1
10320,RETURN,-1,,return ARES_SUCCESS;,5,257,3
10466,RETURN,-1,,return ARES_SUCCESS;,3,281,13
10497,RETURN,1,,return status;,5,295,1
10630,RETURN,-1,,return ARES_SUCCESS;,3,316,13
10661,RETURN,1,,return status;,5,330,1
10798,RETURN,-1,,return ARES_SUCCESS;,3,352,13
10829,RETURN,1,,return status;,5,367,1
11101,RETURN,-1,,return ARES_SUCCESS;,3,415,18
11132,RETURN,1,,return status;,5,430,1
11317,RETURN,-1,,return ARES_SUCCESS;,3,457,13
11348,RETURN,1,,return status;,5,473,1
11576,RETURN,-1,,return ARES_SUCCESS;,3,510,13
11627,RETURN,-1,,return status == ARES_EBADNAME ? ARES_EBADRESP : status;,5,535,1
11648,RETURN,-1,,return ARES_EBADRESP;,5,541,1
11688,RETURN,1,,return status2 == ARES_EBADNAME ? ARES_EBADRESP : status2;,7,551,1
11710,RETURN,-1,,return ARES_EBADRESP;,7,557,1
11753,RETURN,-1,,return status3 == ARES_EBADNAME ? ARES_EBADRESP : status3;,9,573,1
11787,RETURN,-1,,return status4 == ARES_EBADNAME ? ARES_EBADRESP : status4;,9,584,1
11811,RETURN,-1,,return ARES_EBADRESP;,9,590,1
12071,RETURN,-1,,return ARES_SUCCESS;,3,634,19
12277,RETURN,-1,,return nullptr;,5,705,2
12279,RETURN,-1,,return task;,3,708,6
12334,RETURN,1,,return env()->ThrowError(ToErrorCodeString(r));,7,727,1
12368,RETURN,-1,,return env()->ThrowError(ToErrorCodeString(r));,5,739,4
12412,RETURN,-1,,return;,5,751,1
12451,RETURN,1,,return;,5,761,1
12495,RETURN,-1,,return;,5,796,1
12509,RETURN,1,,return;,27,804,1
12522,RETURN,-1,,return;,5,808,3
12566,RETURN,-1,,return;,5,818,3
12588,RETURN,-1,,return 0;,3,833,2
12603,RETURN,-1,,return 0;,3,838,2
12618,RETURN,-1,,return 0;,3,843,2
12635,RETURN,-1,,return 0;,3,848,2
12650,RETURN,-1,,return 0;,3,853,2
12665,RETURN,-1,,return 0;,3,858,2
12680,RETURN,-1,,return 0;,3,863,2
12695,RETURN,-1,,return 0;,3,868,2
12710,RETURN,-1,,return 0;,3,873,2
12725,RETURN,-1,,return 0;,3,878,2
12740,RETURN,-1,,return 0;,3,883,2
12755,RETURN,-1,,return 0;,3,888,2
12769,RETURN,1,,return ARES_EBADRESP;,5,895,1
12860,RETURN,1,,return status;,5,921,1
13111,RETURN,1,,return status;,5,966,1
13261,RETURN,1,,return status;,5,988,1
13290,RETURN,1,,return status;,5,995,1
13397,RETURN,1,,return status;,5,1011,1
13416,RETURN,1,,return status;,5,1016,1
13445,RETURN,1,,return status;,5,1023,1
13552,RETURN,1,,return status;,5,1038,1
13578,RETURN,1,,return status;,5,1044,1
13620,RETURN,1,,return status;,5,1052,1
13627,RETURN,-1,,return 0;,3,1055,61
13641,RETURN,1,,return ARES_EBADRESP;,5,1062,1
13720,RETURN,1,,return status;,5,1084,1
13743,RETURN,-1,,return 0;,3,1089,23
13757,RETURN,1,,return ARES_EBADRESP;,5,1096,1
13836,RETURN,1,,return status;,5,1118,1
13859,RETURN,-1,,return 0;,3,1123,23
13873,RETURN,1,,return ARES_EBADRESP;,5,1130,1
13937,RETURN,1,,return status;,5,1142,1
13944,RETURN,-1,,return 0;,3,1145,17
13958,RETURN,1,,return ARES_EBADRESP;,5,1152,1
14028,RETURN,1,,return status;,5,1165,1
14035,RETURN,-1,,return 0;,3,1168,19
14049,RETURN,1,,return ARES_EBADRESP;,5,1175,1
14113,RETURN,1,,return status;,5,1188,1
14120,RETURN,-1,,return 0;,3,1191,17
14134,RETURN,1,,return ARES_EBADRESP;,5,1198,1
14204,RETURN,1,,return status;,5,1211,1
14211,RETURN,-1,,return 0;,3,1214,19
14225,RETURN,1,,return ARES_EBADRESP;,5,1221,1
14289,RETURN,1,,return status;,5,1233,1
14296,RETURN,-1,,return 0;,3,1236,17
14310,RETURN,1,,return ARES_EBADRESP;,5,1243,1
14374,RETURN,1,,return status;,5,1255,1
14381,RETURN,-1,,return 0;,3,1258,17
14395,RETURN,1,,return ARES_EBADRESP;,5,1265,1
14465,RETURN,1,,return status;,5,1279,1
14472,RETURN,-1,,return 0;,3,1282,19
14486,RETURN,1,,return ARES_EBADRESP;,5,1289,1
14550,RETURN,1,,return status;,5,1301,1
14557,RETURN,-1,,return 0;,3,1304,17
14571,RETURN,1,,return ARES_EBADRESP;,5,1311,1
14622,RETURN,1,,return status;,5,1324,1
14821,RETURN,-1,,return 0;,3,1355,26
14868,RETURN,-1,,return UV_EINVAL;,5,1369,1
14904,RETURN,-1,,return 0;,3,1384,7
14919,RETURN,1,,return ARES_EBADRESP;,5,1391,1
14956,RETURN,-1,,return 0;,3,1399,11
15200,RETURN,1,,return;,7,1481,1
15214,RETURN,1,,return;,9,1484,1
15429,RETURN,1,,return;,5,1546,1
15994,RETURN,-1,,return;,7,1679,1
16030,RETURN,-1,,return args.GetReturnValue().Set(DNS_ESETSRVPENDING);,5,1693,1
16079,RETURN,-1,,return args.GetReturnValue().Set(rv);,5,1704,3
16498,RETURN,-1,,return;,5,1796,2
16539,RETURN,-1,,return;,9,1806,2
16569,RETURN,-1,,return;,9,1813,2
16583,RETURN,-1,,return;,7,1819,2
17341,RETURN,-1,,return a.insertion_order_counter_ > b.insertion_order_counter_;,15,20,1
17426,RETURN,-1,,return std::hash<void*>()(cb.arg_);,3,37,1
17441,RETURN,-1,,return a.fn_ == b.fn_ && a.arg_ == b.arg_;,3,42,1
17610,RETURN,1,,return;,7,54,1
17630,RETURN,1,,return;,7,64,1
17906,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,61,1
17930,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,69,1
17968,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,82,1
18013,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,11,96,1
18082,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,124,1
18124,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,144,1
18157,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,152,1
18189,RETURN,1,,return WebCryptoCipherStatus::FAILED;,7,163,1
18208,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,170,33
18218,RETURN,-1,,return a == 0 ? 0 : 1 + (a - 1) / b;,3,179,1
18266,RETURN,-1,,"return BignumPointer(BN_bin2bn(
        data + params.iv.size() - byte_length,
        byte_length,
        nullptr));",5,188,3
18319,RETURN,-1,,"return BignumPointer(BN_bin2bn(counter.data(), counter.size(), nullptr));",3,202,11
18403,RETURN,-1,,return new_counter_block;,3,220,13
18444,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,241,1
18475,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,252,1
18492,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,256,1
18509,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,260,1
18513,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,262,14
18542,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,274,1
18568,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,281,1
18585,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,286,1
18608,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,292,1
18667,RETURN,-1,,return status;,5,309,4
18716,RETURN,1,,return status;,5,325,1
18773,RETURN,-1,,return status;,3,342,27
18797,RETURN,-1,,return false;,5,353,2
18815,RETURN,-1,,return true;,3,358,5
18864,RETURN,-1,,return false;,5,371,2
18866,RETURN,-1,,return true;,3,373,4
18890,RETURN,-1,,return false;,9,386,2
18906,RETURN,-1,,return false;,9,391,2
18937,RETURN,-1,,return false;,9,401,2
18959,RETURN,-1,,return false;,9,406,2
18964,RETURN,-1,,return true;,3,413,2
18992,RETURN,-1,,return false;,7,426,2
19010,RETURN,-1,,return true;,3,432,2
19044,RETURN,1,,return *this;,23,450,1
19051,RETURN,-1,,return *new (this) AESCipherConfig(std::move(other));,3,452,3
19172,RETURN,-1,,return Nothing<bool>();,9,485,1
19202,RETURN,-1,,return Nothing<bool>();,9,492,1
19232,RETURN,-1,,return Nothing<bool>();,9,499,1
19252,RETURN,1,,return Nothing<bool>();,9,505,1
19272,RETURN,1,,return Nothing<bool>();,9,510,1
19292,RETURN,1,,return Nothing<bool>();,9,515,1
19359,RETURN,-1,,return Nothing<bool>();,9,534,1
19402,RETURN,-1,,return Nothing<bool>();,9,542,1
19445,RETURN,-1,,return Nothing<bool>();,9,550,1
19468,RETURN,-1,,return Nothing<bool>();,5,561,2
19487,RETURN,-1,,return Nothing<bool>();,5,567,2
19489,RETURN,-1,,return Just(true);,3,570,11
19582,RETURN,-1,,return method;,5,233,10
19634,RETURN,-1,,return bio;,3,39,3
19677,RETURN,-1,,return BIOPointer();,5,50,1
19679,RETURN,-1,,return bio;,3,53,4
19693,RETURN,-1,,return 1;,3,61,3
19705,RETURN,1,,return 0;,5,67,1
19726,RETURN,-1,,return 1;,3,76,3
19769,RETURN,-1,,return bytes;,3,93,7
19786,RETURN,-1,,return read_head_->data_ + read_head_->read_pos_;,3,99,2
19883,RETURN,-1,,return total;,3,126,10
19901,RETURN,-1,,return len;,3,135,3
19909,RETURN,-1,,"return Write(bio, str, strlen(str));",3,140,1
19935,RETURN,1,,return 0;,5,148,1
19984,RETURN,-1,,return i;,3,165,10
20105,RETURN,-1,,return ret;,3,218,6
20116,RETURN,-1,,return method;,3,236,3
20253,RETURN,-1,,return bytes_read;,3,289,13
20264,RETURN,1,,return;,5,295,1
20280,RETURN,1,,return;,5,298,1
20296,RETURN,1,,return;,5,301,1
20428,RETURN,-1,,return bytes_read;,7,342,1
20449,RETURN,-1,,return max;,3,352,11
20590,RETURN,-1,,return write_head_->data_ + write_head_->write_pos_;,3,405,5
20749,RETURN,1,,return;,5,461,1
20806,RETURN,1,,return;,5,479,1
20841,RETURN,-1,,return static_cast<NodeBIO*>(BIO_get_data(bio));,3,495,2
20889,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,854,1
20918,RETURN,-1,,return;,7,863,2
21002,RETURN,-1,,return true;,5,36,7
21006,RETURN,-1,,return EVP_CIPHER_nid(cipher) == NID_chacha20_poly1305;,5,38,10
21012,RETURN,-1,,return false;,5,40,12
21024,RETURN,-1,,return IsSupportedAuthenticatedMode(cipher);,3,46,3
21032,RETURN,-1,,return tag_len == 4 || tag_len == 8 || (tag_len >= 12 && tag_len <= 16);,3,50,1
21140,RETURN,1,,return;,5,71,1
21265,RETURN,1,,return;,7,103,1
21295,RETURN,1,,return;,9,108,1
21333,RETURN,1,,return;,13,121,1
21350,RETURN,-1,,return;,13,131,1
21358,RETURN,1,,return;,13,136,1
21391,RETURN,-1,,return;,5,147,1
21417,RETURN,-1,,return;,5,158,1
21447,RETURN,-1,,return;,5,165,1
21480,RETURN,-1,,return;,5,174,1
21513,RETURN,-1,,return;,5,183,1
21542,RETURN,-1,,return;,5,190,1
21573,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_new"");",5,202,1
21589,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_new"");",5,207,1
22278,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error(),
                            ""Failed to initialize cipher"");",5,381,1
22297,RETURN,1,,return;,7,388,1
22311,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_KEYLEN(env());,5,393,2
22328,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error(),
                            ""Failed to initialize cipher"");",5,397,1
22350,RETURN,-1,,"return THROW_ERR_CRYPTO_UNSUPPORTED_OPERATION(env(),
        ""crypto.createCipher() is not supported in FIPS mode."");",5,412,1
22364,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_CIPHER(env());,5,418,1
22473,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""password is too large"");",5,458,1
22555,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_CIPHER(env());,5,482,1
22585,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,5,490,1
22603,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,5,498,1
22622,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_IV(env());,7,507,1
22700,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,535,1
22726,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""iv is too big"");",5,541,1
22805,RETURN,-1,,return false;,5,568,2
22834,RETURN,-1,,return false;,9,579,2
22864,RETURN,-1,,return false;,9,596,2
22880,RETURN,-1,,return false;,7,610,2
22897,RETURN,-1,,return false;,7,618,2
22934,RETURN,-1,,return true;,3,633,7
22956,RETURN,-1,,return false;,5,642,2
22958,RETURN,-1,,return true;,3,645,4
22965,RETURN,-1,,return IsSupportedAuthenticatedMode(ctx_.get());,3,651,2
23009,RETURN,-1,,return;,5,663,1
23077,RETURN,-1,,return args.GetReturnValue().Set(false);,5,680,1
23099,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,685,1
23168,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_AUTH_TAG(
      env, ""Invalid authentication tag length: %u"", tag_len);",5,705,1
23240,RETURN,-1,,return false;,7,725,1
23245,RETURN,-1,,return true;,3,729,2
23260,RETURN,1,,return false;,5,736,1
23285,RETURN,-1,,return false;,7,748,2
23292,RETURN,1,,return false;,7,752,1
23303,RETURN,1,,return false;,9,756,1
23318,RETURN,1,,return false;,7,761,1
23320,RETURN,-1,,"return 1 == EVP_CipherUpdate(ctx_.get(),
                               nullptr,
                               &outlen,
                               data.data(),
                               data.size());",3,764,7
23398,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,782,1
23430,RETURN,1,,return kErrorState;,5,791,1
23450,RETURN,1,,return kErrorMessageSize;,5,797,1
23478,RETURN,1,,return kErrorState;,35,806,1
23510,RETURN,-1,,return kErrorState;,5,817,1
23613,RETURN,-1,,return kSuccess;,5,841,2
23615,RETURN,-1,,return r == 1 ? kSuccess : kErrorState;,3,843,20
23643,RETURN,1,,return false;,5,874,1
23646,RETURN,-1,,"return EVP_CIPHER_CTX_set_padding(ctx_.get(), auto_padding);",3,876,3
23703,RETURN,1,,return false;,5,889,1
23771,RETURN,-1,,return false;,5,907,1
23913,RETURN,-1,,return ok;,3,946,10
23943,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_STATE(env);,5,955,1
23980,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), msg);",5,968,3
24049,RETURN,1,,return false;,5,989,1
24060,RETURN,1,,return false;,5,991,1
24072,RETURN,1,,return false;,5,993,1
24089,RETURN,1,,return false;,7,997,1
24100,RETURN,1,,return false;,57,1000,1
24126,RETURN,-1,,return false;,5,1009,1
24173,RETURN,-1,,return false;,5,1023,1
24219,RETURN,-1,,return true;,3,1032,15
24253,RETURN,1,,return;,5,1046,1
24267,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too long"");",5,1050,1
24292,RETURN,1,,return;,68,1053,1
24328,RETURN,1,,return THROW_ERR_OSSL_EVP_INVALID_DIGEST(env);,7,1060,1
24357,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""oaepLabel is too big"");",5,1066,1
24380,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error());",5,1071,1
24506,RETURN,1,,return false;,5,50,1
24553,RETURN,-1,,return false;,5,61,2
24561,RETURN,-1,,return false;,5,68,2
24563,RETURN,-1,,return true;,3,71,4
24577,RETURN,1,,return End();,23,81,1
24586,RETURN,1,,return;,5,85,1
24612,RETURN,-1,,return End();,5,98,1
24632,RETURN,1,,return End();,9,104,1
24636,RETURN,-1,,return End();,7,107,1
24655,RETURN,-1,,return End();,7,114,1
24714,RETURN,1,,return;,11,138,1
24734,RETURN,1,,return;,11,141,1
24754,RETURN,1,,return;,13,144,1
24766,RETURN,1,,return;,13,147,1
24793,RETURN,1,,return;,13,151,1
24843,RETURN,1,,return false;,5,176,1
24874,RETURN,1,,return false;,5,186,1
24903,RETURN,1,,return false;,5,194,1
24924,RETURN,1,,return false;,5,201,1
24931,RETURN,1,,return true;,5,205,1
24951,RETURN,1,,return false;,7,213,1
24993,RETURN,1,,return false;,7,221,1
25009,RETURN,1,,return false;,5,232,1
25011,RETURN,-1,,return true;,3,234,26
25155,RETURN,-1,,return result;,3,65,7
25194,RETURN,-1,,return;,5,81,1
25252,RETURN,1,,return default_value;,5,99,1
25283,RETURN,1,,return MaybeLocal<Value>();,5,106,1
25285,RETURN,-1,,return ret;,3,108,8
25293,RETURN,-1,,"return session != nullptr && SSL_set_session(ssl.get(), session.get()) == 1;",3,114,1
25315,RETURN,-1,,"return SSLSessionPointer(d2i_SSL_SESSION(nullptr, &buf, length));",3,118,1
25387,RETURN,-1,,return X509_V_OK;,7,137,1
25389,RETURN,-1,,return err;,3,140,4
25471,RETURN,-1,,return err == 1;,3,154,13
25500,RETURN,-1,,return nullptr;,5,168,1
25520,RETURN,1,,return nullptr;,23,172,1
25522,RETURN,-1,,return reinterpret_cast<const char*>(buf + 3);,3,173,7
25553,RETURN,-1,,return nullptr;,5,186,1
25573,RETURN,1,,return nullptr;,5,191,1
25590,RETURN,1,,return nullptr;,60,194,1
25599,RETURN,1,,return nullptr;,5,197,1
25621,RETURN,1,,return nullptr;,5,200,1
25623,RETURN,-1,,return reinterpret_cast<const char*>(buf + 5);,3,201,13
25634,RETURN,-1,,"return SSL_get_servername(ssl, TLSEXT_NAMETYPE_host_name);",3,205,1
25644,RETURN,-1,,"return SSL_CTX_set1_groups_list(sc->ctx().get(), groups) == 1;",3,209,1
25892,RETURN,-1,,return code;,3,248,4
25905,RETURN,1,,return Undefined(env->isolate());,5,253,1
25916,RETURN,-1,,"return OneByteString(env->isolate(), reason);",3,255,4
25934,RETURN,1,,return Undefined(env->isolate());,5,260,1
25940,RETURN,-1,,"return OneByteString(env->isolate(), X509ErrorCode(err));",3,261,2
25968,RETURN,1,,return Undefined(env->isolate());,5,268,1
25983,RETURN,-1,,return maybe_cert.FromMaybe<Value>(Local<Value>());,3,271,6
26035,RETURN,-1,,return ret.FromMaybe(Local<Value>());,3,284,5
26064,RETURN,1,,return false;,5,296,1
26072,RETURN,1,,return true;,5,300,1
26074,RETURN,-1,,"return !target->Set(context, name, value).IsNothing();",3,302,4
26097,RETURN,1,,return Undefined(env->isolate());,5,308,1
26103,RETURN,-1,,"return OneByteString(env->isolate(), getstr(cipher));",3,310,2
26217,RETURN,1,,return MaybeLocal<Object>();,9,350,1
26230,RETURN,1,,return MaybeLocal<Object>();,9,353,1
26256,RETURN,-1,,return MaybeLocal<Object>(object);,3,366,4
26339,RETURN,1,,return MaybeLocal<Object>();,7,383,1
26352,RETURN,1,,return MaybeLocal<Object>();,7,386,1
26377,RETURN,-1,,return MaybeLocal<Object>(issuer_chain);,3,398,3
26470,RETURN,-1,,"return name != nullptr ?
      MaybeLocal<Value>(OneByteString(env->isolate(), name)) :
      MaybeLocal<Value>(Undefined(env->isolate()));",3,421,3
26514,RETURN,1,,return Undefined(env->isolate());,5,432,1
26520,RETURN,-1,,"return ECPointToBuffer(
      env,
      group,
      pubkey,
      EC_KEY_get_conv_form(ec.get()),
      nullptr).FromMaybe(Local<Object>());",3,434,4
26547,RETURN,1,,return Undefined(env->isolate());,5,447,1
26563,RETURN,1,,return Undefined(env->isolate());,5,451,1
26569,RETURN,-1,,"return Integer::New(env->isolate(), bits);",3,453,5
26659,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,470,10
26690,RETURN,-1,,"return ToV8Value(env, bio);",3,479,4
26700,RETURN,-1,,"return Integer::New(env->isolate(), BN_num_bits(n));",3,483,1
26724,RETURN,-1,,"return ToV8Value(env, bio);",3,491,2
26799,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,508,9
26858,RETURN,1,,"return OneByteString(env->isolate(), buf.data<unsigned char>());",16,517,1
26868,RETURN,-1,,return Undefined(env->isolate());,3,521,2
26940,RETURN,-1,,"return Array::New(env->isolate(), ext_key_usage.out(), count);",5,541,9
26954,RETURN,-1,,return Undefined(env->isolate());,3,544,5
26966,RETURN,-1,,"return GetCipherName(env, SSL_get_current_cipher(ssl.get()));",3,549,1
26980,RETURN,-1,,"return GetCipherVersion(env, SSL_get_current_cipher(ssl.get()));",3,554,1
27010,RETURN,-1,,"return OneByteString(env->isolate(), fingerprint);",5,567,2
27017,RETURN,-1,,return Undefined(env->isolate());,3,569,5
27037,RETURN,-1,,"return ToV8Value(env, bio);",3,577,2
27055,RETURN,-1,,"return ToV8Value(env, bio);",3,585,2
27095,RETURN,-1,,return false;,7,604,9
27112,RETURN,-1,,return false;,11,611,1
27125,RETURN,-1,,return false;,11,618,1
27127,RETURN,-1,,return true;,3,623,2
27461,RETURN,-1,,return false;,7,726,1
27762,RETURN,-1,,return true;,3,814,2
27792,RETURN,1,,return false;,5,823,1
27841,RETURN,-1,,return ok;,3,839,11
27871,RETURN,1,,return false;,5,849,1
27944,RETURN,-1,,return ok;,3,872,12
27966,RETURN,1,,return Undefined(env->isolate());,5,881,1
27993,RETURN,-1,,return v8::Null(env->isolate());,5,888,2
28002,RETURN,-1,,"return ToV8Value(env, bio);",3,891,8
28026,RETURN,1,,return Undefined(env->isolate());,5,900,1
28053,RETURN,-1,,return v8::Null(env->isolate());,5,907,2
28062,RETURN,-1,,"return ToV8Value(env, bio);",3,910,8
28097,RETURN,-1,,return Undefined(env->isolate());,5,924,2
28103,RETURN,-1,,"return ToV8Value(env, bio);",3,927,4
28134,RETURN,-1,,return Undefined(env->isolate());,5,940,2
28140,RETURN,-1,,"return ToV8Value(env, bio);",3,943,2
28193,RETURN,-1,,return MaybeLocal<Value>();,5,957,1
28276,RETURN,-1,,return MaybeLocal<Value>();,7,986,1
28290,RETURN,-1,,return Undefined(env->isolate());,7,997,1
28329,RETURN,-1,,return MaybeLocal<Value>();,7,1007,1
28349,RETURN,-1,,return MaybeLocal<Value>();,7,1017,1
28378,RETURN,-1,,return MaybeLocal<Value>();,9,1021,1
28415,RETURN,-1,,return MaybeLocal<Value>();,11,1026,1
28445,RETURN,-1,,return MaybeLocal<Value>();,9,1031,1
28464,RETURN,-1,,return MaybeLocal<Value>();,7,1034,1
28466,RETURN,-1,,return result;,3,1038,10
28474,RETURN,-1,,"return Get(env, SSL_get_current_cipher(ssl.get()));",3,1044,1
28603,RETURN,-1,,return MaybeLocal<Array>();,7,1072,1
28630,RETURN,-1,,return scope.Escape(ret);,3,1077,14
28651,RETURN,1,,return MaybeLocal<Object>();,5,1083,1
28719,RETURN,-1,,return MaybeLocal<Object>();,5,1099,1
28721,RETURN,-1,,return scope.Escape(info);,3,1102,6
28771,RETURN,1,,return scope.Escape(info);,5,1112,1
28843,RETURN,-1,,return MaybeLocal<Object>();,9,1126,1
28932,RETURN,-1,,return MaybeLocal<Object>();,11,1153,1
28935,RETURN,-1,,return scope.Escape(info);,3,1159,15
28974,RETURN,-1,,return MaybeLocal<Object>();,5,1170,2
29032,RETURN,-1,,return MaybeLocal<Object>();,5,1187,2
29053,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength()).FromMaybe(Local<Object>());",3,1191,9
29121,RETURN,1,,return Undefined(env->isolate());,5,1208,1
29143,RETURN,-1,,return maybe_cert.ToLocal(&result) ? result : MaybeLocal<Value>();,5,1214,2
29168,RETURN,1,,return Undefined(env->isolate());,5,1219,1
29201,RETURN,1,,return MaybeLocal<Value>();,5,1226,1
29234,RETURN,1,,return MaybeLocal<Value>();,5,1238,1
29257,RETURN,1,,return MaybeLocal<Value>();,5,1249,1
29285,RETURN,-1,,return MaybeLocal<Value>();,5,1257,1
29287,RETURN,-1,,return result;,3,1260,25
29408,RETURN,-1,,return MaybeLocal<Object>();,5,1292,1
29516,RETURN,-1,,return MaybeLocal<Object>();,7,1326,1
29558,RETURN,-1,,return MaybeLocal<Object>();,7,1339,1
29595,RETURN,-1,,return MaybeLocal<Object>();,9,1354,1
29638,RETURN,-1,,return MaybeLocal<Object>();,5,1375,1
29720,RETURN,-1,,return MaybeLocal<Object>();,5,1405,1
29722,RETURN,-1,,return scope.Escape(info);,3,1408,22
29804,RETURN,-1,,return store;,3,59,3
29832,RETURN,1,,return nullptr;,15,67,1
29851,RETURN,1,,return nullptr;,32,69,1
29874,RETURN,1,,return nullptr;,22,71,1
29886,RETURN,1,,return nullptr;,54,72,1
29888,RETURN,-1,,return bio;,5,73,10
29890,RETURN,-1,,return nullptr;,3,75,2
29917,RETURN,1,,return 0;,5,160,1
29930,RETURN,1,,return 0;,5,166,1
29950,RETURN,-1,,return 0;,5,177,2
29969,RETURN,-1,,return 0;,5,187,1
29971,RETURN,-1,,"return SSL_CTX_use_certificate_chain(ctx,
                                       std::move(x),
                                       extra_certs.get(),
                                       cert,
                                       issuer);",3,190,13
30092,RETURN,-1,,return store;,3,238,12
30151,RETURN,-1,,return;,7,250,1
30176,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,259,1
30497,RETURN,-1,,return tmpl;,3,328,3
30724,RETURN,-1,,return nullptr;,5,393,1
30726,RETURN,-1,,"return new SecureContext(env, obj);",3,396,3
30910,RETURN,-1,,return;,7,450,2
30929,RETURN,-1,,return;,7,455,2
31153,RETURN,-1,,return;,7,511,2
31168,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_new"");",5,517,1
31272,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Error generating ticket keys"");",5,552,1
31288,RETURN,-1,,return SSLPointer(SSL_new(ctx_.get()));,3,559,1
31357,RETURN,-1,,return Nothing<bool>();,5,582,2
31379,RETURN,-1,,return Nothing<bool>();,5,588,2
31381,RETURN,-1,,return Just(true);,3,591,4
31422,RETURN,1,,return;,5,604,1
31465,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""PEM_read_bio_PrivateKey"");",5,621,1
31484,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_use_PrivateKey"");",5,624,1
31544,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,639,1
31585,RETURN,-1,,"return THROW_ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED(
        env,
        ""Programmatic selection of OpenSSL engines is unsupported while the ""
        ""experimental permission model is enabled"");",5,652,1
31636,RETURN,-1,,return;,5,665,3
31645,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Failure to initialize engine"");",5,669,1
31678,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""ENGINE_load_private_key"");",5,680,1
31697,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""SSL_CTX_use_PrivateKey"");",5,683,1
31722,RETURN,1,,return Just(false);,13,691,1
31755,RETURN,-1,,return Nothing<bool>();,5,701,2
31757,RETURN,-1,,return Just(true);,3,703,6
31815,RETURN,1,,return;,13,720,1
31909,RETURN,1,,return Just(false);,13,747,1
31934,RETURN,-1,,return Nothing<bool>();,5,754,2
31973,RETURN,-1,,return Just(true);,3,767,10
32106,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""Failed to set ciphers"");",5,810,1
32182,RETURN,-1,,return;,7,832,1
32183,RETURN,-1,,"return ThrowCryptoError(env, err, ""Failed to set ciphers"");",5,834,4
32246,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to set ECDH curve"");",5,849,1
32294,RETURN,-1,,return;,5,866,2
32308,RETURN,1,,return;,7,873,1
32325,RETURN,1,,return;,5,881,1
32346,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(
        env, ""DH parameter is less than 1024 bits"");",5,887,1
32384,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Error setting temp DH parameter"");",5,895,1
32690,RETURN,1,,return;,5,975,1
32851,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(env, ""PFX certificate argument is mandatory"");",5,1022,1
32866,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(
        env, ""Unable to load PFX certificate"");",5,1027,1
33140,RETURN,-1,,return env->ThrowError(str);,5,1089,6
33196,RETURN,-1,,"return THROW_ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED(
        env,
        ""Programmatic selection of OpenSSL engines is unsupported while the ""
        ""experimental permission model is enabled"");",5,1113,1
33247,RETURN,-1,,return;,5,1126,3
33262,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,1131,1
33306,RETURN,1,,return;,5,1142,1
33534,RETURN,-1,,return -1;,5,1203,1
33593,RETURN,-1,,return -1;,5,1217,1
33634,RETURN,-1,,return -1;,5,1224,1
33652,RETURN,1,,return r;,5,1229,1
33705,RETURN,-1,,return -1;,5,1237,1
33770,RETURN,-1,,return -1;,7,1247,1
33835,RETURN,-1,,return r;,3,1276,32
33900,RETURN,-1,,return -1;,7,1298,1
33903,RETURN,-1,,return 1;,5,1300,3
33918,RETURN,-1,,return 0;,5,1305,1
33946,RETURN,-1,,return -1;,5,1312,1
33949,RETURN,-1,,return 1;,3,1314,6
34039,RETURN,1,,return args.GetReturnValue().SetNull();,5,1336,1
34072,RETURN,1,,return;,5,1341,1
34113,RETURN,1,,return ERR_get_error();,5,1358,1
34138,RETURN,-1,,return 0;,5,1369,1
34140,RETURN,-1,,return err;,3,1372,10
34153,RETURN,1,,return;,21,1378,1
34195,RETURN,-1,,return args.GetReturnValue().Set(extra_root_certs_loaded);,3,1396,1
34362,RETURN,-1,,return p;,5,358,3
34377,RETURN,-1,,return g;,5,366,3
34391,RETURN,-1,,return pub_key;,5,374,3
34405,RETURN,-1,,return priv_key;,5,382,3
34414,RETURN,-1,,"return DH_set0_key(dh, num, nullptr);",36,461,1
34426,RETURN,-1,,"return DH_set0_key(dh, nullptr, num);",36,467,1
34669,RETURN,1,,return false;,5,136,1
34671,RETURN,-1,,return VerifyContext();,3,137,3
34704,RETURN,-1,,"return bn_g && BN_set_word(bn_g.get(), g) &&
         DH_set0_pqg(dh_.get(), bn_p.release(), nullptr, bn_g.release()) &&
         VerifyContext();",3,148,5
34757,RETURN,-1,,return false;,5,158,2
34774,RETURN,-1,,return false;,5,163,2
34809,RETURN,-1,,return false;,5,172,3
34811,RETURN,-1,,return VerifyContext();,3,174,9
34841,RETURN,-1,,return false;,5,182,2
34858,RETURN,-1,,return false;,5,187,2
34888,RETURN,-1,,return false;,5,195,3
34914,RETURN,-1,,return false;,5,202,3
34916,RETURN,-1,,return VerifyContext();,3,204,10
34926,RETURN,-1,,return BignumPointer(p(nullptr));,3,211,1
34947,RETURN,1,,"V(""modp1"", BN_get_rfc2409_prime_768);",3,221,1
34957,RETURN,1,,"V(""modp2"", BN_get_rfc2409_prime_1024);",3,222,1
34967,RETURN,1,,"V(""modp5"", BN_get_rfc3526_prime_1536);",3,223,1
34977,RETURN,1,,"V(""modp14"", BN_get_rfc3526_prime_2048);",3,224,1
34987,RETURN,1,,"V(""modp15"", BN_get_rfc3526_prime_3072);",3,225,1
34997,RETURN,1,,"V(""modp16"", BN_get_rfc3526_prime_4096);",3,226,1
35007,RETURN,1,,"V(""modp17"", BN_get_rfc3526_prime_6144);",3,227,1
35017,RETURN,1,,"V(""modp18"", BN_get_rfc3526_prime_8192);",3,228,1
35019,RETURN,-1,,return nullptr;,3,230,9
35080,RETURN,1,,return THROW_ERR_CRYPTO_UNKNOWN_DH_GROUP(env);,5,246,1
35187,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""prime is too big"");",9,269,1
35237,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""generator is too big"");",11,277,1
35267,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Initialization failed"");",5,285,1
35303,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Key generation failed"");",5,297,1
35414,RETURN,1,,return;,68,318,1
35461,RETURN,1,,"return THROW_ERR_CRYPTO_INVALID_STATE(env, err_if_null);",5,333,1
35560,RETURN,1,,return;,68,350,1
35646,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""secret is too big"");",5,397,1
35740,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Invalid Key"");",7,420,1
35755,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYLEN(env,
            ""Supplied key is too small"");",9,423,1
35766,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYLEN(env,
            ""Supplied key is too large"");",9,426,1
35770,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_KEYTYPE(env);,5,431,5
35831,RETURN,1,,return;,68,441,1
35882,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buf is too big"");",5,453,1
35973,RETURN,1,,return false;,5,483,1
35978,RETURN,-1,,return true;,3,485,4
36028,RETURN,-1,,return Nothing<bool>();,7,514,2
36080,RETURN,-1,,return Nothing<bool>();,9,525,2
36108,RETURN,-1,,return Nothing<bool>();,9,532,2
36159,RETURN,-1,,return Just(true);,3,543,4
36193,RETURN,1,,return EVPKeyCtxPointer();,7,552,1
36231,RETURN,-1,,return EVPKeyCtxPointer();,7,558,1
36330,RETURN,-1,,return EVPKeyCtxPointer();,7,579,1
36359,RETURN,1,,return EVPKeyCtxPointer();,5,589,1
36361,RETURN,-1,,return ctx;,3,591,6
36370,RETURN,-1,,return Just(true);,3,598,1
36400,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,611,1
36404,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,612,4
36421,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,615,1
36425,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,616,8
36485,RETURN,1,,return ByteSource();,5,633,1
36505,RETURN,-1,,return ByteSource();,5,637,1
36517,RETURN,-1,,return std::move(out).release();,3,641,9
36631,RETURN,1,,return;,31,662,1
36641,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error(), ""diffieHellman failed"");",5,665,1
36727,RETURN,-1,,return Nothing<bool>();,5,689,2
36745,RETURN,-1,,return Just(true);,3,695,12
36764,RETURN,-1,,return Just(!result->IsEmpty());,3,704,2
36794,RETURN,-1,,return true;,3,714,2
36817,RETURN,-1,,return Just(true);,3,723,4
36907,RETURN,-1,,return EVPKeyCtxPointer();,5,49,1
36948,RETURN,-1,,return EVPKeyCtxPointer();,7,55,1
36961,RETURN,1,,return EVPKeyCtxPointer();,5,60,1
36986,RETURN,1,,return EVPKeyCtxPointer();,5,66,1
36988,RETURN,-1,,return key_ctx;,3,68,13
37062,RETURN,-1,,return Just(true);,3,95,7
37072,RETURN,-1,,return Just(true);,3,102,1
37094,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,7,115,3
37108,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,118,1
37112,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,119,7
37129,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,122,1
37133,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,123,11
37259,RETURN,-1,,return Nothing<bool>();,5,161,1
37261,RETURN,-1,,return Just(true);,3,164,19
37321,RETURN,-1,,"return OneByteString(env->isolate(), OBJ_nid2sn(curve.nid));",5,116,1
37388,RETURN,-1,,return nid;,3,45,4
37447,RETURN,-1,,return nid;,3,61,3
37977,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_CURVE(env);,5,146,1
37988,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
      ""Failed to create key using named curve"");",5,150,1
38035,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to generate key"");",5,163,1
38058,RETURN,-1,,return pub;,5,175,2
38074,RETURN,-1,,return ECPointPointer();,5,181,2
38097,RETURN,1,,return ECPointPointer();,5,190,1
38099,RETURN,-1,,return pub;,3,192,10
38135,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_KEYPAIR(env);,5,206,1
38168,RETURN,-1,,return;,5,216,2
38232,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to compute ECDH key"");",5,230,1
38279,RETURN,1,,return;,68,234,1
38340,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to get ECDH public key"");",5,250,1
38390,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, error);",5,260,1
38438,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to get ECDH private key"");",5,272,1
38530,RETURN,1,,return;,68,286,1
38573,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,298,1
38593,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to BN"");",5,303,1
38605,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_KEYTYPE(env,
        ""Private key is not valid for specified curve."");",5,308,1
38640,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert BN to a private key"");",5,319,1
38681,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to generate ECDH public key"");",5,334,1
38697,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to set generated public key"");",5,339,1
38765,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to EC_POINT"");",5,361,1
38787,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to set EC_POINT as the public key"");",5,367,1
38809,RETURN,-1,,return false;,5,378,1
38816,RETURN,-1,,"return EC_GROUP_get_order(group_, order.get(), nullptr) &&
         BN_cmp(private_key.get(), order.get()) < 0;",3,382,7
38844,RETURN,-1,,return 1 == EC_KEY_check_key(key_.get());,3,389,3
38890,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""key is too big"");",5,402,1
38902,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,404,1
38930,RETURN,1,,return THROW_ERR_CRYPTO_INVALID_CURVE(env);,5,410,1
38942,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Failed to get EC_GROUP"");",5,415,1
38965,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
        ""Failed to convert Buffer to EC_POINT"");",5,423,1
39021,RETURN,1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, error);",5,434,1
39066,RETURN,-1,,return Just(!result->IsEmpty());,3,449,2
39166,RETURN,-1,,return Nothing<bool>();,5,474,2
39191,RETURN,-1,,return Just(true);,3,481,16
39287,RETURN,-1,,return false;,9,505,1
39307,RETURN,-1,,return false;,9,511,1
39365,RETURN,1,,return false;,9,530,1
39412,RETURN,-1,,return false;,9,542,1
39425,RETURN,-1,,return true;,3,549,8
39519,RETURN,-1,,return EVPKeyCtxPointer();,9,574,1
39549,RETURN,-1,,return key_ctx;,3,584,4
39615,RETURN,-1,,return Nothing<bool>();,5,610,2
39655,RETURN,-1,,return Nothing<bool>();,5,617,2
39661,RETURN,-1,,return Just(true);,3,622,12
39751,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,654,1
39773,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,657,1
39799,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,7,661,1
39831,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,7,669,1
39856,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,7,674,1
39874,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,680,11
39885,RETURN,-1,,return Just(true);,3,688,1
39907,RETURN,-1,,"return EC_Raw_Export(key_data.get(), params, out);",7,700,3
39925,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,703,1
39929,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,704,7
39947,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,707,1
39967,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",9,711,1
40020,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,24,725,1
40045,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,24,729,1
40125,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,11,745,1
40137,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,9,747,33
40235,RETURN,-1,,return Nothing<void>();,5,779,2
40258,RETURN,-1,,return Nothing<void>();,5,786,1
40293,RETURN,-1,,return Nothing<void>();,5,801,1
40359,RETURN,-1,,return Nothing<void>();,7,822,2
40379,RETURN,-1,,return Nothing<void>();,5,829,1
40394,RETURN,-1,,"return SetEncodedValue(
      env,
      target,
      env->jwk_d_string(),
      pvt,
      degree_bytes).IsJust() ? JustVoid() : Nothing<void>();",5,834,3
40410,RETURN,-1,,return JustVoid();,3,842,30
40493,RETURN,-1,,return Nothing<bool>();,5,873,1
40520,RETURN,1,,return Nothing<bool>();,5,881,1
40603,RETURN,-1,,return Nothing<bool>();,7,894,2
40675,RETURN,-1,,return Nothing<bool>();,5,906,2
40698,RETURN,-1,,return Nothing<bool>();,5,913,1
40700,RETURN,-1,,return Just(true);,3,916,19
40743,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,930,2
40821,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,940,1
40854,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,947,2
40880,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,955,2
40934,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,966,2
40974,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,973,2
40993,RETURN,-1,,"return KeyObjectData::CreateAsymmetric(type, ManagedEVPPKey(std::move(pkey)));",3,980,26
41053,RETURN,-1,,"return target->Set(
      env->context(),
      env->named_curve_string(),
      OneByteString(env->isolate(), OBJ_nid2sn(nid)));",3,997,13
41104,RETURN,-1,,return BN_num_bytes(order.get());,3,1014,9
41156,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,145,1
41481,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(),
                            ""Digest method not supported"");",5,103,1
41507,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Digest copy error"");",5,109,1
41541,RETURN,-1,,return false;,5,117,2
41571,RETURN,-1,,return false;,7,126,2
41579,RETURN,-1,,return true;,3,131,5
41591,RETURN,1,,return false;,5,136,1
41593,RETURN,-1,,"return EVP_DigestUpdate(mdctx_.get(), data, len) == 1;",3,137,2
41735,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",7,191,1
41800,RETURN,-1,,return;,5,202,3
41829,RETURN,1,,return *this;,23,214,1
41836,RETURN,-1,,return *new (this) HashConfig(std::move(other));,3,216,3
41881,RETURN,-1,,return Just(!result->IsEmpty());,3,231,2
41945,RETURN,-1,,return Nothing<bool>();,5,248,2
41965,RETURN,-1,,return Nothing<bool>();,5,254,2
42045,RETURN,-1,,return Nothing<bool>();,9,270,2
42047,RETURN,-1,,return Just(true);,3,275,17
42097,RETURN,-1,,return false;,5,288,1
42158,RETURN,1,,return false;,7,303,1
42171,RETURN,-1,,return true;,3,308,5
42229,RETURN,1,,return *this;,23,29,1
42236,RETURN,-1,,return *new (this) HKDFConfig(std::move(other));,3,31,3
42262,RETURN,-1,,return Just(!result->IsEmpty());,3,40,2
42357,RETURN,-1,,return Nothing<bool>();,5,62,2
42402,RETURN,-1,,return Nothing<bool>();,5,74,2
42415,RETURN,-1,,return Nothing<bool>();,5,78,2
42486,RETURN,-1,,return Nothing<bool>();,5,97,2
42488,RETURN,-1,,return Just(true);,3,100,30
42545,RETURN,-1,,return false;,5,113,1
42608,RETURN,-1,,return false;,5,141,1
42628,RETURN,-1,,return false;,5,145,1
42654,RETURN,1,,return false;,5,151,1
42667,RETURN,-1,,return true;,3,154,17
42741,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,107,1
42949,RETURN,1,,"return THROW_ERR_CRYPTO_INVALID_DIGEST(
        env(), ""Invalid digest: %s"", hash_type);",5,74,1
42986,RETURN,-1,,"return ThrowCryptoError(env(), ERR_get_error());",5,82,2
43050,RETURN,-1,,"return ctx_ && HMAC_Update(ctx_.get(),
                             reinterpret_cast<const unsigned char*>(data),
                             len) == 1;",3,97,1
43153,RETURN,-1,,"return ThrowCryptoError(env, ERR_get_error(), ""Failed to finalize HMAC"");",7,131,1
43204,RETURN,-1,,return;,5,145,3
43233,RETURN,1,,return *this;,23,159,1
43240,RETURN,-1,,return *new (this) HmacConfig(std::move(other));,3,161,3
43378,RETURN,-1,,return Nothing<bool>();,5,193,2
43416,RETURN,-1,,return Nothing<bool>();,5,203,2
43463,RETURN,-1,,return Nothing<bool>();,7,213,2
43481,RETURN,-1,,return Just(true);,3,220,20
43521,RETURN,-1,,return false;,5,236,1
43543,RETURN,-1,,return false;,5,243,1
43563,RETURN,-1,,return false;,5,250,1
43577,RETURN,-1,,return true;,3,255,10
43659,RETURN,-1,,return Just(!result->IsEmpty());,3,276,2
43746,RETURN,-1,,return Just(true);,3,43,4
43777,RETURN,1,,return EVPKeyCtxPointer();,5,50,1
43779,RETURN,-1,,return ctx;,3,52,4
43835,RETURN,-1,,return Just(true);,3,68,6
43862,RETURN,1,,return KeyGenJobStatus::FAILED;,5,75,1
43878,RETURN,-1,,return KeyGenJobStatus::OK;,3,77,5
43908,RETURN,-1,,"return Just(KeyObjectHandle::Create(env, data).ToLocal(result));",3,85,2
43980,RETURN,-1,,"return d2i_PUBKEY(nullptr, p, l);",9,116,1
43993,RETURN,-1,,"return d2i_PublicKey(EVP_PKEY_RSA, nullptr, p, l);",9,125,1
44012,RETURN,-1,,return x509 ? X509_get_pubkey(x509.get()) : nullptr;,9,135,3
44231,RETURN,1,,return ParseKeyResult::kParseKeyNotRecognized;,7,92,1
44250,RETURN,-1,,"return *pkey ? ParseKeyResult::kParseKeyOk :
                 ParseKeyResult::kParseKeyFailed;",3,100,8
44278,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,5,109,1
44297,RETURN,1,,return ret;,5,119,1
44319,RETURN,1,,return ret;,5,128,1
44327,RETURN,-1,,"return TryParsePublicKey(pkey, bp, ""CERTIFICATE"",
      [](const unsigned char** p, long l) {  // NOLINT(runtime/int)
        X509Pointer x509(d2i_X509(nullptr, p, l));
        return x509 ? X509_get_pubkey(x509.get()) : nullptr;
      });",3,132,11
44348,RETURN,-1,,"return ParsePublicKeyPEM(pkey, key, key_len);",5,144,1
44405,RETURN,-1,,"return *pkey ? ParseKeyResult::kParseKeyOk :
                   ParseKeyResult::kParseKeyFailed;",5,156,5
44434,RETURN,1,,return false;,5,164,1
44464,RETURN,1,,return false;,7,170,1
44534,RETURN,-1,,return true;,3,182,3
44554,RETURN,1,,return false;,5,189,1
44556,RETURN,-1,,"return len >= 3 &&
         data[offset] == 2 &&
         data[offset + 1] == 1 &&
         !(data[offset + 2] & 0xfe);",3,196,4
44601,RETURN,1,,return false;,5,206,1
44603,RETURN,-1,,"return len >= 1 &&
         data[offset] != 2;",3,210,4
44646,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,7,223,1
44717,RETURN,1,,return ParseKeyResult::kParseKeyFailed;,9,238,1
44806,RETURN,1,,return ParseKeyResult::kParseKeyOk;,5,264,1
44829,RETURN,1,,return ParseKeyResult::kParseKeyNeedPassphrase;,7,268,1
44833,RETURN,-1,,return ParseKeyResult::kParseKeyFailed;,3,270,9
44854,RETURN,-1,,"return String::NewFromUtf8(env->isolate(), bptr->data,
                               NewStringType::kNormal,
                               bptr->length).FromMaybe(Local<Value>());",5,281,1
44881,RETURN,-1,,"return Buffer::Copy(env, bptr->data, bptr->length)
        .FromMaybe(Local<Value>());",5,287,2
45168,RETURN,-1,,return MaybeLocal<Value>();,5,389,2
45170,RETURN,-1,,"return BIOToStringOrBuffer(env, bio.get(), config.format_);",3,391,14
45212,RETURN,-1,,"return PEM_write_bio_RSAPublicKey(bio.get(), rsa.get()) == 1;",7,403,1
45231,RETURN,-1,,"return i2d_RSAPublicKey_bio(bio.get(), rsa.get()) == 1;",7,407,2
45260,RETURN,-1,,"return PEM_write_bio_PUBKEY(bio.get(), pkey) == 1;",7,413,1
45276,RETURN,-1,,"return i2d_PUBKEY_bio(bio.get(), pkey) == 1;",7,417,2
45310,RETURN,-1,,return MaybeLocal<Value>();,5,430,2
45312,RETURN,-1,,"return BIOToStringOrBuffer(env, bio.get(), config.format_);",3,432,4
45390,RETURN,-1,,return Nothing<bool>();,5,453,3
45401,RETURN,1,,return Nothing<bool>();,5,456,1
45441,RETURN,-1,,return Nothing<bool>();,5,466,1
45443,RETURN,-1,,return Just(true);,3,469,8
45486,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,479,2
45509,RETURN,-1,,return KeyObjectData::CreateSecret(std::move(key_data));,3,484,6
45543,RETURN,1,,"return ExportJWKRsaKey(env, key, target);",25,494,1
45551,RETURN,-1,,"return ExportJWKRsaKey(env, key, target);",24,497,6
45558,RETURN,-1,,"return ExportJWKEcKey(env, key, target).IsJust() ?
                               Just(true) : Nothing<bool>();",23,498,9
45578,RETURN,-1,,"return ExportJWKEdKey(env, key, target);",25,506,18
45585,RETURN,-1,,return Just(false);,3,509,3
45604,RETURN,-1,,"return ImportJWKRsaKey(env, jwk, args, offset);",5,519,1
45619,RETURN,-1,,"return ImportJWKEcKey(env, jwk, args, offset);",5,521,1
45629,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,3,525,3
45650,RETURN,-1,,"return target->Set(env->context(),
                     env->length_string(),
                     Number::New(env->isolate(), static_cast<double>(length)));",3,536,3
45695,RETURN,-1,,"return GetRsaKeyDetail(env, key, target);",28,548,5
45702,RETURN,-1,,"return GetDsaKeyDetail(env, key, target);",24,549,8
45709,RETURN,-1,,"return GetEcKeyDetail(env, key, target);",23,550,11
45716,RETURN,-1,,"return GetDhKeyDetail(env, key, target);",23,551,14
45723,RETURN,-1,,return Nothing<bool>();,3,554,3
45771,RETURN,-1,,return *this;,3,575,6
45778,RETURN,-1,,return !!pkey_;,3,579,1
45786,RETURN,-1,,return pkey_.get();,3,583,1
45795,RETURN,-1,,return mutex_.get();,3,587,1
45827,RETURN,-1,,"return (pkey_ && EVP_PKEY_get_raw_private_key(
      pkey_.get(), nullptr, &len) == 1) ? len : 0;",3,599,3
45851,RETURN,-1,,"return (pkey_ && EVP_PKEY_get_raw_public_key(
      pkey_.get(), nullptr, &len) == 1) ? len : 0;",3,605,3
45872,RETURN,-1,,return b ? Just(true) : Nothing<bool>();,3,611,1
45894,RETURN,-1,,"return ExportJWKSecretKey(env, key, result.As<Object>());",7,620,3
45906,RETURN,-1,,"return ExportJWKAsymmetricKey(
        env, key, result.As<Object>(), handleRsaPss);",7,624,8
45929,RETURN,1,,return Nothing<bool>();,15,635,1
45951,RETURN,-1,,"return Tristate(KeyObjectHandle::Create(env, data).ToLocal(out));",5,641,2
45998,RETURN,-1,,"return ExportJWKInner(env, data, *out, false);",5,646,3
46005,RETURN,-1,,"return Tristate(WritePublicKey(env, get(), config).ToLocal(out));",3,649,3
46027,RETURN,1,,return Nothing<bool>();,15,656,1
46049,RETURN,-1,,"return Tristate(KeyObjectHandle::Create(env, data).ToLocal(out));",5,660,2
46096,RETURN,-1,,"return ExportJWKInner(env, data, *out, false);",5,665,3
46103,RETURN,-1,,"return Tristate(WritePrivateKey(env, get(), config).ToLocal(out));",3,668,3
46194,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>();,11,692,2
46250,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>();,9,707,2
46280,RETURN,-1,,return NonCopyableMaybe<PrivateKeyEncodingConfig>(std::move(result));,3,717,7
46304,RETURN,-1,,return result;,3,726,3
46365,RETURN,1,,return ManagedEVPPKey();,7,739,1
46386,RETURN,-1,,"return GetParsedKey(env, std::move(pkey), ret,
                        ""Failed to read private key"");",5,744,10
46433,RETURN,-1,,return key->Data()->GetAsymmetricKey();,5,752,6
46480,RETURN,-1,,return ManagedEVPPKey();,7,764,2
46498,RETURN,1,,return ManagedEVPPKey();,7,769,1
46628,RETURN,-1,,"return ManagedEVPPKey::GetParsedKey(
        env, std::move(pkey), ret, ""Failed to read asymmetric key"");",5,808,13
46680,RETURN,-1,,return key->Data()->GetAsymmetricKey();,5,816,7
46719,RETURN,-1,,return ManagedEVPPKey(std::move(pkey));,3,836,2
46775,RETURN,-1,,return std::shared_ptr<KeyObjectData>(new KeyObjectData(std::move(key)));,3,863,1
46797,RETURN,-1,,"return std::shared_ptr<KeyObjectData>(new KeyObjectData(key_type, pkey));",3,870,2
46812,RETURN,-1,,return key_type_;,3,874,1
46821,RETURN,-1,,return asymmetric_key_;,3,879,2
46830,RETURN,-1,,return symmetric_key_.data<char>();,3,884,2
46842,RETURN,-1,,return symmetric_key_.size();,3,889,2
46863,RETURN,-1,,return !t.IsEmpty() && t->HasInstance(value);,3,894,2
46973,RETURN,-1,,return templ->GetFunction(env->context()).ToLocalChecked();,3,920,3
47094,RETURN,1,,return MaybeLocal<Object>();,5,945,1
47111,RETURN,-1,,return obj;,3,950,9
47117,RETURN,-1,,return data_;,3,954,1
47243,RETURN,1,,return;,7,993,1
47281,RETURN,1,,return;,7,1003,1
47367,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_JWK(env);,5,1028,1
47398,RETURN,-1,,return;,7,1038,1
47418,RETURN,-1,,return;,7,1044,1
47484,RETURN,1,,return args.GetReturnValue().Set(false);,5,1064,1
47530,RETURN,-1,,return args.GetReturnValue().Set(false);,5,1072,1
47698,RETURN,1,,return args.GetReturnValue().Set(false);,9,1116,1
47884,RETURN,-1,,return THROW_ERR_CRYPTO_UNSUPPORTED_OPERATION(env);,9,1167,3
47966,RETURN,1,,return;,9,1191,1
47986,RETURN,1,,return;,9,1197,1
48020,RETURN,-1,,return env()->crypto_rsa_string();,5,1210,3
48027,RETURN,-1,,return env()->crypto_rsa_pss_string();,5,1212,6
48034,RETURN,-1,,return env()->crypto_dsa_string();,5,1214,9
48041,RETURN,-1,,return env()->crypto_dh_string();,5,1216,12
48048,RETURN,-1,,return env()->crypto_ec_string();,5,1218,15
48055,RETURN,-1,,return env()->crypto_ed25519_string();,5,1220,18
48062,RETURN,-1,,return env()->crypto_ed448_string();,5,1222,21
48069,RETURN,-1,,return env()->crypto_x25519_string();,5,1224,24
48076,RETURN,-1,,return env()->crypto_x448_string();,5,1226,27
48082,RETURN,-1,,return Undefined(env()->isolate());,5,1228,29
48246,RETURN,1,,return;,7,1271,1
48302,RETURN,-1,,"return Buffer::Copy(env(), buf, len).FromMaybe(Local<Value>());",3,1283,5
48319,RETURN,-1,,"return WritePublicKey(env(), data_->GetAsymmetricKey().get(), config);",3,1288,1
48335,RETURN,-1,,"return WritePrivateKey(env(), data_->GetAsymmetricKey().get(), config);",3,1293,1
48573,RETURN,1,,return;,5,1347,1
48613,RETURN,-1,,return;,5,1353,1
48641,RETURN,1,,return;,52,1356,1
48667,RETURN,1,,return;,52,1358,1
48693,RETURN,1,,return;,52,1360,1
48727,RETURN,-1,,return {};,5,1371,2
48747,RETURN,1,,return {};,5,1376,1
48786,RETURN,-1,,return {};,5,1384,1
48843,RETURN,1,,return {};,5,1402,1
48844,RETURN,-1,,return BaseObjectPtr<BaseObject>(Unwrap<KeyObjectHandle>(key.As<Object>()));,3,1404,10
48861,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,1408,1
48871,RETURN,-1,,return std::make_unique<KeyObjectTransferData>(handle_data_);,3,1413,1
48924,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,5,1425,1
48936,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,1428,10
48992,RETURN,1,,return WebCryptoKeyExportStatus::FAILED;,5,1442,1
49004,RETURN,-1,,return WebCryptoKeyExportStatus::OK;,3,1445,12
51091,RETURN,1,,return *this;,23,29,1
51098,RETURN,-1,,return *new (this) PBKDF2Config(std::move(other));,3,31,3
51152,RETURN,-1,,return Just(!result->IsEmpty());,3,48,2
51203,RETURN,-1,,return Nothing<bool>();,5,72,2
51216,RETURN,-1,,return Nothing<bool>();,5,77,2
51303,RETURN,-1,,return Nothing<bool>();,5,95,2
51331,RETURN,-1,,return Nothing<bool>();,5,101,2
51363,RETURN,-1,,return Nothing<bool>();,5,108,2
51365,RETURN,-1,,return Just(true);,3,111,23
51422,RETURN,-1,,return false;,5,132,1
51435,RETURN,-1,,return true;,3,135,5
51496,RETURN,-1,,return Just(!result->IsEmpty());,3,34,2
51595,RETURN,-1,,return Just(true);,3,56,14
51605,RETURN,-1,,"return CSPRNG(params.buffer, params.size).is_ok();",3,63,1
51693,RETURN,-1,,return Just(true);,3,83,6
51795,RETURN,-1,,return Nothing<bool>();,7,104,2
51840,RETURN,-1,,return Nothing<bool>();,7,113,2
51870,RETURN,-1,,return Nothing<bool>();,7,128,2
51897,RETURN,-1,,return Nothing<bool>();,9,136,2
51925,RETURN,-1,,return Nothing<bool>();,5,146,2
51927,RETURN,-1,,return Just(true);,3,149,20
51977,RETURN,-1,,return false;,5,166,1
51979,RETURN,-1,,return true;,3,169,3
52056,RETURN,-1,,return Just(true);,3,194,7
52092,RETURN,1,,return false;,16,209,1
52116,RETURN,-1,,return true;,3,213,10
52145,RETURN,-1,,return Just(true);,3,222,2
52269,RETURN,1,,return EVPKeyCtxPointer();,5,41,1
52285,RETURN,-1,,return EVPKeyCtxPointer();,5,46,1
52328,RETURN,1,,return EVPKeyCtxPointer();,7,56,1
52365,RETURN,-1,,return EVPKeyCtxPointer();,7,64,1
52409,RETURN,-1,,return EVPKeyCtxPointer();,7,80,1
52454,RETURN,-1,,return EVPKeyCtxPointer();,7,92,1
52456,RETURN,-1,,return ctx;,3,96,7
52648,RETURN,-1,,return Nothing<bool>();,9,157,2
52707,RETURN,-1,,return Nothing<bool>();,9,168,2
52761,RETURN,-1,,return Nothing<bool>();,9,179,2
52767,RETURN,-1,,return Just(true);,3,186,13
52778,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,3,194,1
52831,RETURN,1,,return WebCryptoCipherStatus::FAILED;,5,212,1
52847,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,215,1
52880,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,221,1
52892,RETURN,1,,return WebCryptoCipherStatus::FAILED;,44,224,1
52920,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,233,1
52950,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,5,243,1
52966,RETURN,-1,,return WebCryptoCipherStatus::OK;,3,247,19
52999,RETURN,-1,,return Just(true);,3,258,3
53021,RETURN,-1,,return WebCryptoKeyExportStatus::FAILED;,7,271,3
53027,RETURN,-1,,"return RSA_JWK_Export(key_data.get(), params, out);",7,273,6
53045,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,276,1
53049,RETURN,-1,,"return PKEY_PKCS8_Export(key_data.get(), out);",7,277,10
53066,RETURN,1,,return WebCryptoKeyExportStatus::INVALID_KEY_TYPE;,9,280,1
53070,RETURN,-1,,"return PKEY_SPKI_Export(key_data.get(), out);",7,281,14
53196,RETURN,-1,,return Nothing<bool>();,9,321,2
53224,RETURN,-1,,return Nothing<bool>();,11,328,2
53238,RETURN,-1,,return Nothing<bool>();,7,336,6
53240,RETURN,-1,,return Just(true);,3,339,9
53264,RETURN,-1,,"return RSA_Cipher<EVP_PKEY_encrypt_init, EVP_PKEY_encrypt>(
          env, key_data.get(), params, in, out);",7,352,4
53282,RETURN,-1,,"return RSA_Cipher<EVP_PKEY_decrypt_init, EVP_PKEY_decrypt>(
          env, key_data.get(), params, in, out);",7,356,8
53292,RETURN,-1,,return WebCryptoCipherStatus::FAILED;,3,359,2
53396,RETURN,-1,,return Nothing<bool>();,5,395,1
53423,RETURN,-1,,return Nothing<bool>();,5,400,1
53520,RETURN,-1,,return Nothing<bool>();,7,412,1
53522,RETURN,-1,,return Just(true);,3,416,23
53621,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,434,2
53642,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,439,2
53710,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,5,455,2
53844,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,471,2
53883,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,480,2
54029,RETURN,-1,,return std::shared_ptr<KeyObjectData>();,7,498,2
54048,RETURN,-1,,"return KeyObjectData::CreateAsymmetric(type, ManagedEVPPKey(std::move(pkey)));",3,505,19
54165,RETURN,-1,,return Nothing<bool>();,5,540,1
54242,RETURN,-1,,return Nothing<bool>();,5,559,1
54314,RETURN,-1,,return Nothing<bool>();,9,589,1
54373,RETURN,-1,,return Nothing<bool>();,11,608,1
54396,RETURN,-1,,return Nothing<bool>();,11,615,2
54426,RETURN,-1,,return Nothing<bool>();,9,625,1
54428,RETURN,-1,,return Just<bool>(true);,3,630,22
54543,RETURN,1,,return *this;,23,34,1
54550,RETURN,-1,,return *new (this) ScryptConfig(std::move(other));,3,36,3
54604,RETURN,-1,,return Just(!result->IsEmpty());,3,52,2
54655,RETURN,-1,,return Nothing<bool>();,5,69,2
54668,RETURN,-1,,return Nothing<bool>();,5,74,2
54836,RETURN,-1,,return Nothing<bool>();,5,108,2
54858,RETURN,-1,,return Just(true);,3,114,24
54920,RETURN,-1,,return false;,5,135,1
54933,RETURN,-1,,return true;,3,138,5
54971,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,380,1
55018,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""data is too long"");",7,497,1
55110,RETURN,-1,,"return (L == 1024 && N == 160) ||
           (L == 2048 && N == 224) ||
           (L == 2048 && N == 256) ||
           (L == 3072 && N == 256);",5,48,11
55142,RETURN,-1,,return true;,3,54,2
55184,RETURN,1,,return false;,7,65,1
55206,RETURN,1,,return false;,9,68,1
55208,RETURN,-1,,return true;,3,72,2
55232,RETURN,1,,return nullptr;,5,84,1
55369,RETURN,-1,,return sig;,5,106,3
55371,RETURN,-1,,return nullptr;,3,109,14
55378,RETURN,-1,,"return EVP_PKEY_id(m_pkey.get()) == EVP_PKEY_RSA_PSS ? RSA_PKCS1_PSS_PADDING :
                                                         RSA_PKCS1_PADDING;",3,113,1
55447,RETURN,-1,,return kNoDsaSignature;,5,129,1
55449,RETURN,-1,,return (bits + 7) / 8;,3,132,5
55474,RETURN,1,,return false;,5,142,1
55492,RETURN,-1,,"return BN_bn2binpad(pr, out, n) > 0 && BN_bn2binpad(ps, out + n, n) > 0;",3,147,8
55525,RETURN,1,,return std::move(signature);,5,155,1
55579,RETURN,1,,return std::move(signature);,5,165,1
55585,RETURN,-1,,return buf;,3,167,7
55604,RETURN,1,,return ByteSource();,5,177,1
55641,RETURN,1,,return ByteSource();,5,185,1
55643,RETURN,-1,,return std::move(out).release();,3,187,10
55668,RETURN,1,,return std::move(out);,5,195,1
55691,RETURN,1,,return ByteSource();,5,200,1
55752,RETURN,1,,return ByteSource();,5,216,1
55756,RETURN,-1,,"return ByteSource::Allocated(data, len);",3,220,25
55784,RETURN,-1,,return THROW_ERR_CRYPTO_INVALID_DIGEST(env);,7,228,3
55793,RETURN,-1,,"return THROW_ERR_CRYPTO_INVALID_STATE(env, ""Not initialised"");",7,231,6
55803,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env, ""Malformed signature"");",7,234,9
55839,RETURN,1,,"return ThrowCryptoError(env, err);",11,243,1
55852,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""EVP_SignInit_ex failed"");",13,246,3
55862,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""EVP_SignUpdate failed"");",13,249,6
55872,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""PEM_read_bio_PrivateKey failed"");",13,252,9
55882,RETURN,-1,,"return THROW_ERR_CRYPTO_OPERATION_FAILED(env,
                ""PEM_read_bio_PUBKEY failed"");",13,255,12
55894,RETURN,-1,,return;,7,263,21
55911,RETURN,-1,,return true;,7,271,5
55914,RETURN,-1,,return false;,7,273,7
55933,RETURN,-1,,return dsa_encoding == kSigEncP1363;,7,282,5
55938,RETURN,-1,,return false;,7,284,7
55972,RETURN,1,,return kSignUnknownDigest;,5,299,1
55996,RETURN,-1,,return kSignInit;,5,304,2
55998,RETURN,-1,,return kSignOk;,3,307,8
56011,RETURN,1,,return kSignNotInitialised;,5,312,1
56023,RETURN,1,,return kSignUpdate;,5,314,1
56025,RETURN,-1,,return kSignOk;,3,315,3
56257,RETURN,1,,return SignResult(kSignNotInitialised);,5,392,1
56276,RETURN,1,,return SignResult(kSignPrivateKey);,5,397,1
56328,RETURN,-1,,"return SignResult(error, std::move(buffer));",3,406,9
56377,RETURN,1,,return;,5,419,1
56491,RETURN,1,,"return crypto::CheckThrow(env, ret.error);",5,444,1
56716,RETURN,1,,return kSignNotInitialised;,5,509,1
56743,RETURN,1,,return kSignPublicKey;,5,517,1
56814,RETURN,-1,,return kSignOk;,3,530,11
56856,RETURN,1,,return;,5,544,1
56870,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""buffer is too big"");",5,548,1
57003,RETURN,1,,"return crypto::CheckThrow(env, Error::kSignMalformedSignature);",7,570,1
57031,RETURN,1,,"return crypto::CheckThrow(env, err);",5,577,1
57062,RETURN,1,,return *this;,23,595,1
57069,RETURN,-1,,return *new (this) SignConfiguration(std::move(other));,3,597,3
57198,RETURN,1,,return Nothing<bool>();,5,631,1
57223,RETURN,-1,,return Nothing<bool>();,5,637,2
57281,RETURN,-1,,return Nothing<bool>();,7,648,2
57390,RETURN,-1,,return Nothing<bool>();,7,667,2
57419,RETURN,-1,,return Nothing<bool>();,7,675,2
57469,RETURN,-1,,return Just(true);,3,691,22
57526,RETURN,-1,,return false;,9,711,2
57563,RETURN,-1,,return false;,9,722,2
57620,RETURN,-1,,return false;,5,740,2
57672,RETURN,-1,,return false;,11,754,2
57713,RETURN,-1,,return false;,11,763,2
57770,RETURN,-1,,return false;,11,774,2
57799,RETURN,-1,,return false;,11,780,2
57909,RETURN,-1,,return true;,3,807,13
57963,RETURN,-1,,return Just(!result->IsEmpty());,3,825,2
58031,RETURN,1,,return false;,5,30,1
58045,RETURN,1,,return false;,5,34,1
58047,RETURN,-1,,"return NETSCAPE_SPKI_verify(spki.get(), pkey.get()) > 0;",3,36,9
58085,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,43,1
58101,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,46,1
58129,RETURN,1,,return ByteSource();,13,54,1
58150,RETURN,1,,return ByteSource();,14,65,1
58163,RETURN,1,,return ByteSource();,14,68,1
58178,RETURN,1,,return ByteSource();,57,70,1
58180,RETURN,-1,,return ByteSource::FromBIO(bio);,3,72,12
58212,RETURN,1,,return args.GetReturnValue().SetEmptyString();,26,79,1
58228,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,82,1
58242,RETURN,1,,return args.GetReturnValue().SetEmptyString();,14,85,1
58290,RETURN,1,,return ByteSource();,5,101,1
58307,RETURN,-1,,"return (buf_size >= 0) ? ByteSource::Allocated(buf, buf_size) : ByteSource();",3,105,10
58345,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,113,1
58361,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""spkac is too large"");",5,116,1
58374,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,120,1
58517,RETURN,-1,,return;,5,28,2
58528,RETURN,-1,,return;,5,34,2
58552,RETURN,-1,,return;,5,42,2
58553,RETURN,-1,,"return args.GetReturnValue().Set(
      CRYPTO_memcmp(buf1.data(), buf2.data(), buf1.size()) == 0);",3,45,10
58625,RETURN,-1,,return 0;,9,349,2
58651,RETURN,-1,,return c == ' ' ? '_' : ToUpper(c);,39,807,1
58745,RETURN,-1,,return w->ReleaseSession();,3,74,4
58922,RETURN,-1,,return;,5,107,1
59002,RETURN,1,,return;,5,124,1
59066,RETURN,1,,return 0;,5,138,1
59082,RETURN,1,,return 0;,5,143,1
59107,RETURN,1,,return 0;,5,148,1
59159,RETURN,1,,return 0;,5,164,1
59189,RETURN,-1,,return 0;,3,178,27
59217,RETURN,1,,return 1;,5,185,1
59225,RETURN,1,,return -1;,5,190,1
59349,RETURN,-1,,return 1;,5,210,1
59367,RETURN,-1,,return w->is_cert_cb_running() ? -1 : 1;,3,216,21
59452,RETURN,-1,,return SSL_TLSEXT_ERR_ALERT_FATAL;,7,241,1
59470,RETURN,-1,,return SSL_TLSEXT_ERR_ALERT_FATAL;,7,250,1
59502,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,5,262,15
59516,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,28,267,1
59536,RETURN,-1,,"return status == OPENSSL_NPN_NEGOTIATED ? SSL_TLSEXT_ERR_OK
                                          : SSL_TLSEXT_ERR_ALERT_FATAL;",3,281,9
59606,RETURN,-1,,return 1;,5,300,3
59629,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,307,1
59662,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,3,320,17
59701,RETURN,1,,return ignore_null;,5,336,1
59703,RETURN,-1,,"return !target->Set(
      env->context(),
      name,
      OneByteString(env->isolate(), value))
          .IsNothing();",3,337,2
59734,RETURN,-1,,return ret;,3,352,3
59797,RETURN,1,,return MaybeLocal<ArrayBufferView>();,5,389,1
59799,RETURN,-1,,"return PersistentToLocal::Default(env()->isolate(), ocsp_response_);",3,390,2
59821,RETURN,-1,,return next_sess_.release();,3,398,1
59841,RETURN,1,,return;,5,404,1
60095,RETURN,-1,,return;,5,490,1
60268,RETURN,1,,return;,5,538,1
60444,RETURN,-1,,return;,5,584,2
60453,RETURN,-1,,return;,5,590,2
60460,RETURN,-1,,return;,5,596,2
60479,RETURN,-1,,return;,5,607,2
60526,RETURN,-1,,return;,5,634,3
60607,RETURN,-1,,return;,5,652,2
60679,RETURN,-1,,return;,5,676,7
60700,RETURN,-1,,return;,7,688,2
60703,RETURN,-1,,return;,5,693,3
60736,RETURN,-1,,return;,5,712,2
60743,RETURN,-1,,return;,5,718,2
60752,RETURN,-1,,return;,5,723,2
60828,RETURN,-1,,return;,9,752,2
60873,RETURN,-1,,return;,9,776,4
60903,RETURN,1,,return;,44,784,1
60934,RETURN,1,,return;,44,788,1
60949,RETURN,1,,return;,42,790,1
60969,RETURN,1,,return;,66,792,1
61017,RETURN,1,,return;,68,799,1
61054,RETURN,1,,return;,72,809,1
61057,RETURN,-1,,return;,9,814,12
61094,RETURN,-1,,return;,5,832,2
61103,RETURN,-1,,return;,5,837,2
61118,RETURN,-1,,return;,5,843,2
61192,RETURN,-1,,return;,5,857,2
61224,RETURN,-1,,return;,5,868,4
61260,RETURN,-1,,return name;,3,881,5
61266,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,885,1
61274,RETURN,-1,,return underlying_stream()->IsIPCPipe();,3,889,1
61283,RETURN,-1,,return underlying_stream()->GetFD();,3,893,1
61292,RETURN,-1,,"return ssl_ &&
      underlying_stream() != nullptr &&
      underlying_stream()->IsAlive();",3,897,1
61307,RETURN,-1,,return underlying_stream()->IsClosing();,3,903,1
61327,RETURN,1,,return underlying_stream()->ReadStart();,5,909,1
61332,RETURN,-1,,return 0;,3,910,3
61341,RETURN,-1,,return underlying_stream() != nullptr ? underlying_stream()->ReadStop() : 0;,3,915,2
61355,RETURN,-1,,return error_.empty() ? nullptr : error_.c_str();,3,919,1
61396,RETURN,-1,,return UV_EPROTO;,5,938,3
61501,RETURN,-1,,return 0;,7,978,7
61520,RETURN,-1,,return 0;,5,989,2
61734,RETURN,-1,,return UV_EPROTO;,7,1042,3
61763,RETURN,-1,,return 0;,3,1058,27
61788,RETURN,-1,,"return uv_buf_init(base, size);",3,1066,6
61805,RETURN,1,,return;,5,1074,1
61822,RETURN,-1,,return;,5,1086,4
61870,RETURN,-1,,"return hello_parser_.Parse(data, avail);",5,1108,7
61883,RETURN,-1,,return underlying_stream()->CreateShutdownWrap(req_wrap_object);,3,1116,1
61918,RETURN,-1,,return underlying_stream()->DoShutdown(req_wrap);,3,1128,6
62045,RETURN,1,,return;,5,1171,1
62168,RETURN,1,,return;,5,1228,1
62473,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,1315,1
62513,RETURN,1,,return SSL_TLSEXT_ERR_NOACK;,5,1321,1
62551,RETURN,-1,,return SSL_TLSEXT_ERR_NOACK;,5,1327,3
62604,RETURN,-1,,return SSL_TLSEXT_ERR_OK;,3,1338,22
62632,RETURN,1,,return err;,5,1345,1
62654,RETURN,-1,,return 1;,3,1352,6
62824,RETURN,1,,return 0;,5,1396,1
62838,RETURN,1,,return 0;,34,1400,1
62888,RETURN,1,,return 0;,5,1411,1
62901,RETURN,1,,return 0;,5,1416,1
62913,RETURN,-1,,return psk_buf.length();,3,1419,20
63006,RETURN,1,,return 0;,7,1444,1
63047,RETURN,1,,return 0;,5,1453,1
63094,RETURN,1,,return 0;,5,1460,1
63107,RETURN,1,,return 0;,5,1464,1
63144,RETURN,1,,return 0;,5,1469,1
63161,RETURN,1,,return 0;,5,1474,1
63181,RETURN,-1,,return psk_buf.length();,3,1479,25
63205,RETURN,1,,return info.GetReturnValue().Set(0);,5,1489,1
63360,RETURN,1,,return;,5,1518,1
63420,RETURN,-1,,"return ThrowCryptoError(env, err, ""CertCbDone"");",7,1531,3
63458,RETURN,-1,,return;,5,1537,3
63525,RETURN,1,,"return env->ThrowTypeError(""Must give a Buffer as first argument"");",5,1558,1
63864,RETURN,1,,return;,5,1634,1
63953,RETURN,1,,return;,68,1647,1
64002,RETURN,1,,return;,5,1665,1
64091,RETURN,1,,return;,68,1678,1
64136,RETURN,1,,return;,5,1690,1
64148,RETURN,1,,return;,5,1694,1
64232,RETURN,1,,return;,68,1707,1
64270,RETURN,1,,"return THROW_ERR_MISSING_ARGS(env, ""Session argument is mandatory"");",5,1718,1
64302,RETURN,1,,return;,5,1724,1
64311,RETURN,1,,"return env->ThrowError(""SSL_set_session error"");",5,1727,1
64382,RETURN,1,,return args.GetReturnValue().SetNull();,5,1751,1
64891,RETURN,-1,,"return ThrowCryptoError(
         env,
         ERR_get_error(),
         ""SSL_export_keying_material"");",5,1899,1
64939,RETURN,1,,return;,68,1907,1
64992,RETURN,1,,"return ThrowCryptoError(w->env(), ERR_get_error());",5,1922,1
65034,RETURN,1,,return;,5,1932,1
65118,RETURN,1,,"return THROW_ERR_MISSING_ARGS(env, ""OCSP response argument is mandatory"");",5,1958,1
65196,RETURN,1,,return args.GetReturnValue().SetNull();,5,1981,1
65392,RETURN,1,,return;,5,2027,1
66149,RETURN,-1,,return 1;,3,60,1
66201,RETURN,1,,return {true};,9,75,1
66205,RETURN,-1,,return {false};,3,94,4
66244,RETURN,1,,return -1;,7,103,1
66254,RETURN,-1,,return len;,5,105,7
66256,RETURN,-1,,return -1;,3,108,4
66267,RETURN,-1,,return 0;,3,117,1
66291,RETURN,1,,return FIPS_mode_set(1);,27,133,1
66294,RETURN,-1,,return true;,3,137,2
66330,RETURN,-1,,return false;,5,146,2
66332,RETURN,-1,,return true;,3,148,7
66503,RETURN,1,,return;,5,240,1
66513,RETURN,-1,,"return ThrowCryptoError(env, err);",5,248,3
66581,RETURN,-1,,return errors_.empty();,3,285,1
66656,RETURN,-1,,return MaybeLocal<Value>();,7,306,1
66664,RETURN,-1,,"return copy.ToException(env, exception_string);",5,309,9
66743,RETURN,-1,,return MaybeLocal<Value>();,7,322,1
66745,RETURN,-1,,return exception_v;,3,326,5
66798,RETURN,-1,,return *this;,3,348,2
66838,RETURN,-1,,return ptr;,3,365,7
66854,RETURN,-1,,"return ArrayBuffer::New(env->isolate(), std::move(store));",3,370,2
66881,RETURN,-1,,"return Buffer::New(env, ab, 0, ab->ByteLength());",3,375,2
66924,RETURN,-1,,return std::move(out).release();,3,384,7
66998,RETURN,-1,,return out;,3,400,5
67006,RETURN,-1,,"return IsAnyByteSource(value) ? FromBuffer(value)
                                : FromString(env, value.As<String>());",3,405,1
67083,RETURN,-1,,return std::move(out).release();,3,418,12
67101,RETURN,-1,,return ntc ? buf.ToNullTerminatedCopy() : buf.ToByteSource();,3,423,3
67118,RETURN,-1,,"return value->IsString() || IsAnyByteSource(value) ?
           ByteSource::FromStringOrBuffer(env, value) :
           ByteSource::FromSymmetricKeyObjectHandle(value);",3,432,1
67144,RETURN,-1,,"return Buffer::HasInstance(value) ? FromBuffer(value, true)
                                    : FromString(env, value.As<String>(), true);",3,439,1
67184,RETURN,-1,,"return Foreign(key->Data()->GetSymmetricKey(),
                 key->Data()->GetSymmetricKeySize());",3,447,5
67206,RETURN,-1,,"return ByteSource(data, data, size);",3,452,1
67217,RETURN,-1,,"return ByteSource(data, nullptr, size);",3,456,1
67235,RETURN,1,,return Just(true);,17,462,1
67292,RETURN,-1,,return Nothing<bool>();,7,474,1
67316,RETURN,-1,,return Nothing<bool>();,7,480,1
67340,RETURN,-1,,return Nothing<bool>();,7,486,1
67649,RETURN,1,,return Nothing<bool>();,7,559,1
67651,RETURN,-1,,return Just(true);,3,562,14
67721,RETURN,1,,return;,5,581,1
67767,RETURN,-1,,return;,5,587,1
67850,RETURN,-1,,return engine;,3,615,6
67870,RETURN,1,,return false;,5,622,1
67890,RETURN,-1,,return false;,5,627,2
67892,RETURN,-1,,return true;,3,630,6
67940,RETURN,1,,return;,57,637,1
67960,RETURN,-1,,"return THROW_ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED(
        env,
        ""Programmatic selection of OpenSSL engines is unsupported while the ""
        ""experimental permission model is enabled"");",5,642,1
68000,RETURN,-1,,"return StringBytes::Encode(
      env->isolate(),
      reinterpret_cast<const char*>(buf.data()),
      buf.size(),
      BASE64URL,
      error);",3,659,3
68080,RETURN,-1,,return Nothing<bool>();,5,681,2
68082,RETURN,-1,,"return target->Set(env->context(), name, value);",3,683,6
68143,RETURN,-1,,return false;,7,695,2
68145,RETURN,-1,,return true;,3,698,2
68170,RETURN,-1,,return static_cast<CryptoJobMode>(mode);,3,705,5
68215,RETURN,-1,,return;,5,722,1
68696,RETURN,-1,,return *this;,3,45,3
68941,RETURN,-1,,return tmpl;,3,101,3
68949,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(object);,3,105,1
68978,RETURN,1,,return MaybeLocal<Object>();,5,139,1
68984,RETURN,-1,,"return New(env, std::move(ptr));",3,142,7
69050,RETURN,1,,return MaybeLocal<Object>();,5,158,1
69075,RETURN,-1,,"return sk_X509_num(ssl_certs)
      ? New(env, std::move(cert), ssl_certs)
      : New(env, std::move(cert));",3,167,11
69148,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",5,183,1
69183,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",7,195,1
69205,RETURN,1,,return;,7,198,1
69226,RETURN,-1,,return;,5,200,1
69739,RETURN,1,,"return ThrowCryptoError(env, ERR_get_error());",14,308,1
69967,RETURN,-1,,return args.GetReturnValue().Set(ret);,7,359,3
69978,RETURN,-1,,return;,7,362,6
69982,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid name"");",7,364,9
69987,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,366,11
70062,RETURN,-1,,return args.GetReturnValue().Set(args[0]);,7,387,3
70075,RETURN,-1,,return;,7,389,6
70079,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid name"");",7,391,9
70084,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,393,11
70155,RETURN,-1,,return args.GetReturnValue().Set(args[0]);,7,410,3
70168,RETURN,-1,,return;,7,412,6
70172,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Invalid IP"");",7,414,9
70177,RETURN,-1,,return THROW_ERR_CRYPTO_OPERATION_FAILED(env);,7,416,11
70476,RETURN,-1,,return {};,5,520,2
70496,RETURN,1,,return {};,5,525,1
70497,RETURN,-1,,"return BaseObjectPtr<BaseObject>(
      Unwrap<X509Certificate>(handle.As<Object>()));",3,527,4
70514,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,533,1
70524,RETURN,-1,,return std::make_unique<X509CertificateTransferData>(cert_);,3,538,1
70832,RETURN,-1,,return;,13,273,6
70983,RETURN,-1,,return;,13,433,6
71033,RETURN,-1,,return std::make_unique<EmptyEntry>();,9,640,1
71038,RETURN,-1,,"return std::make_unique<InMemoryEntry>(backing_store_, start, len);",7,643,2
71149,RETURN,-1,,return true;,7,1039,1
71171,RETURN,-1,,return true;,7,1050,1
71173,RETURN,-1,,return false;,5,1053,3
71276,RETURN,1,,return nullptr;,45,68,1
71404,RETURN,-1,,"return std::make_shared<DataQueueImpl>(std::move(slices), len);",5,103,14
71423,RETURN,-1,,return size_;,51,106,1
71429,RETURN,-1,,return idempotent_;,41,108,1
71435,RETURN,-1,,return capped_size_.has_value();,37,110,1
71448,RETURN,1,,return std::nullopt;,22,113,1
71456,RETURN,1,,return false;,17,114,1
71504,RETURN,-1,,return false;,9,125,1
71527,RETURN,-1,,return true;,5,135,5
71537,RETURN,1,,return;,26,139,1
71555,RETURN,-1,,return;,7,144,2
71588,RETURN,-1,,return capped_size > size ? capped_size - size : 0UL;,7,155,5
71597,RETURN,-1,,return std::nullopt;,5,157,2
71711,RETURN,-1,,return bob::Status::STATUS_EOS;,7,212,2
71749,RETURN,-1,,return bob::Status::STATUS_EOS;,9,225,3
71777,RETURN,-1,,return UV_EINVAL;,7,241,2
71804,RETURN,1,,return bob::Status::STATUS_CONTINUE;,20,286,1
71810,RETURN,-1,,return status;,5,305,12
71854,RETURN,-1,,return current_reader_.get();,5,318,4
71948,RETURN,-1,,return bob::Status::STATUS_EOS;,7,365,2
71983,RETURN,-1,,return bob::STATUS_BLOCK;,9,378,2
72026,RETURN,-1,,return bob::STATUS_BLOCK;,11,391,2
72050,RETURN,-1,,return bob::STATUS_EOS;,7,404,6
72073,RETURN,-1,,return UV_EINVAL;,7,410,2
72100,RETURN,1,,return bob::Status::STATUS_CONTINUE;,20,447,1
72106,RETURN,-1,,return status;,5,466,12
72146,RETURN,-1,,return current_reader_.get();,5,476,4
72175,RETURN,-1,,return std::make_shared<IdempotentDataQueueReader>(shared_from_this());,5,492,1
72186,RETURN,1,,return nullptr;,26,495,1
72191,RETURN,-1,,return std::make_shared<NonIdempotentDataQueueReader>(shared_from_this());,3,498,4
72230,RETURN,-1,,return bob::Status::STATUS_EOS;,9,517,2
72253,RETURN,-1,,return bob::Status::STATUS_CONTINUE;,7,523,6
72288,RETURN,-1,,return std::make_shared<EmptyReader>();,5,543,1
72304,RETURN,1,,return nullptr;,21,549,1
72306,RETURN,-1,,return std::make_unique<EmptyEntry>();,5,550,2
72315,RETURN,-1,,return 0;,51,553,1
72321,RETURN,-1,,return true;,41,555,1
72369,RETURN,-1,,return bob::Status::STATUS_EOS;,9,587,2
72416,RETURN,-1,,return bob::Status::STATUS_CONTINUE;,7,601,8
72470,RETURN,-1,,return std::make_shared<InMemoryReader>(*this);,5,631,1
72531,RETURN,-1,,"return makeEntry(start, end - start);",7,657,4
72537,RETURN,-1,,"return makeEntry(start, byte_length_ - start);",5,662,6
72547,RETURN,-1,,return byte_length_;,51,665,1
72553,RETURN,-1,,return true;,41,667,1
72607,RETURN,-1,,return std::make_shared<ReaderImpl>(data_queue_->get_reader());,5,702,1
72642,RETURN,1,,return nullptr;,18,708,1
72644,RETURN,-1,,return std::make_unique<DataQueueEntry>(std::move(sliced));,5,710,3
72660,RETURN,-1,,return data_queue_->size();,51,719,1
72669,RETURN,-1,,return data_queue_->is_idempotent();,41,727,1
72690,RETURN,-1,,return *data_queue_;,31,734,1
72717,RETURN,-1,,"return inner_->Pull(
          std::move(next), options, data, count, max_count_hint);",7,754,3
72775,RETURN,1,,return nullptr;,61,794,1
72777,RETURN,-1,,"return std::make_unique<FdEntry>(
        env, std::move(buf), req.statbuf, 0, req.statbuf.st_size);",5,796,8
72814,RETURN,-1,,return ReaderImpl::Create(this);,5,812,1
72861,RETURN,-1,,"return std::make_unique<FdEntry>(env_, path_, stat_, new_start, new_end);",5,826,8
72879,RETURN,-1,,return end_ - start_;,51,829,1
72887,RETURN,-1,,return true;,41,831,1
72893,RETURN,-1,,return env_;,30,833,1
72905,RETURN,-1,,"return other.st_size != stat_.st_size ||
           other.st_mtim.tv_nsec != stat_.st_mtim.tv_nsec;",5,847,1
72949,RETURN,1,,return true;,54,860,1
72951,RETURN,-1,,return entry->is_modified(req.statbuf);,5,861,6
73003,RETURN,-1,,return nullptr;,9,875,2
73015,RETURN,-1,,"return std::make_shared<ReaderImpl>(
          BaseObjectPtr<fs::FileHandle>(fs::FileHandle::New(
              realm->GetBindingData<fs::BindingData>(realm->context()),
              file,
              Local<Object>(),
              entry->start_,
              entry->end_ - entry->start_)),
          entry);",7,878,9
73105,RETURN,-1,,return env_->allocate_managed_buffer(suggested_size);,7,901,1
73140,RETURN,-1,,return;,9,912,2
73168,RETURN,-1,,return;,9,922,3
73207,RETURN,-1,,return DrainAndClose();,9,932,2
73291,RETURN,-1,,return bob::STATUS_EOS;,9,954,2
73317,RETURN,-1,,return UV_EINVAL;,9,960,3
73340,RETURN,-1,,return bob::STATUS_WAIT;,7,968,5
73373,RETURN,1,,return;,19,996,1
73438,RETURN,-1,,return std::move(pending_pulls_.front());,7,1019,4
73496,RETURN,-1,,return nullptr;,5,1057,1
73498,RETURN,-1,,"return std::make_shared<DataQueueImpl>(std::move(list), size);",3,1060,6
73518,RETURN,-1,,return std::make_shared<DataQueueImpl>(capped);,3,1064,1
73541,RETURN,-1,,return nullptr;,5,1075,1
73576,RETURN,-1,,"return CreateInMemoryEntryFromBackingStore(std::move(store), offset, length);",3,1081,9
73604,RETURN,-1,,return nullptr;,5,1089,1
73606,RETURN,-1,,"return std::make_unique<InMemoryEntry>(std::move(store), offset, length);",3,1091,3
73627,RETURN,-1,,return std::make_unique<DataQueueEntry>(std::move(data_queue));,3,1096,1
73645,RETURN,-1,,"return FdEntry::Create(env, path);",3,1101,1
74026,RETURN,-1,,"return NameAndDisplacement(pSymbol->Name, dwDisplacement);",7,180,1
74038,RETURN,-1,,return NameAndDisplacement();,5,190,9
74087,RETURN,-1,,return sym;,5,225,8
74103,RETURN,-1,,return szUndName;,7,238,1
74111,RETURN,-1,,return nullptr;,5,246,3
74162,RETURN,-1,,return ret;,5,256,7
74181,RETURN,1,,return false;,7,263,1
74183,RETURN,-1,,return info.State == MEM_COMMIT && info.Protect != 0;,5,265,3
74201,RETURN,-1,,"return CaptureStackBackTrace(0, count, frames, nullptr);",5,269,1
74232,RETURN,-1,,"return std::unique_ptr<NativeSymbolDebuggingContext>(
      new Win32SymbolDebuggingContext());",3,285,1
74283,RETURN,-1,,return oss.str();,3,303,6
74361,RETURN,1,,return;,33,318,1
74413,RETURN,-1,,return list;,3,473,2
74433,RETURN,-1,,return;,5,484,2
74576,RETURN,-1,,return true;,3,61,4
74595,RETURN,-1,,return info;,3,68,5
74958,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        env->isolate(),
        ""The \""list\"" argument must be an instance of SharedArrayBuffer, ""
        ""ArrayBuffer or ArrayBufferView."");",5,152,1
75022,RETURN,-1,,"return node::THROW_ERR_ENCODING_INVALID_ENCODED_DATA(
          env->isolate(), ""The encoded data was not valid for encoding utf-8"");",7,170,1
75059,RETURN,1,,return args.GetReturnValue().SetEmptyString();,20,182,1
75119,RETURN,-1,,return;,5,192,3
75417,RETURN,-1,,return el.IsEmpty();,51,216,1
75619,RETURN,-1,,return true;,9,1176,2
75621,RETURN,-1,,return false;,5,1179,6
75649,RETURN,-1,,return;,7,1229,1
75964,RETURN,1,,return false;,45,131,1
76098,RETURN,-1,,return fields_[kStackLength] > 0;,3,169,10
76457,RETURN,-1,,return output;,3,266,4
76490,RETURN,-1,,return output;,3,279,2
76552,RETURN,-1,,return output;,3,294,2
76611,RETURN,-1,,return info;,3,341,21
76865,RETURN,-1,,return;,5,548,1
76874,RETURN,-1,,return;,5,552,1
76910,RETURN,1,,return;,5,562,1
77096,RETURN,-1,,return cwd;,5,626,2
77102,RETURN,-1,,"return exec_path.substr(0, exec_path.find_last_of(kPathSeparator));",3,632,9
77193,RETURN,-1,,return buf;,3,650,7
77246,RETURN,-1,,return bs;,3,662,3
77291,RETURN,-1,,return exec_path;,3,688,6
78132,RETURN,1,,return;,24,1060,1
78168,RETURN,-1,,"return handle_scope.EscapeMaybe(snapshot_serialize_callback()->Call(
        context(), v8::Undefined(isolate()), 0, nullptr));",5,1075,3
78185,RETURN,-1,,return handle_scope.Escape(Undefined(isolate()));,3,1078,4
78209,RETURN,-1,,"return handle_scope.EscapeMaybe(snapshot_deserialize_main()->Call(
        context(), v8::Undefined(isolate()), 0, nullptr));",5,1085,3
78226,RETURN,-1,,return handle_scope.Escape(Undefined(isolate()));,3,1088,4
78484,RETURN,-1,,return;,5,1219,2
78499,RETURN,1,,return;,25,1237,1
78513,RETURN,1,,return;,25,1242,1
78551,RETURN,1,,return;,5,1256,1
78645,RETURN,1,,return;,5,1282,1
78765,RETURN,1,,return;,5,1322,1
78825,RETURN,1,,return;,25,1338,1
78851,RETURN,-1,,return now;,3,1353,6
78866,RETURN,1,,"return Integer::NewFromUnsigned(isolate(), static_cast<uint32_t>(now));",5,1359,1
78877,RETURN,1,,"return Number::New(isolate(), static_cast<double>(now));",5,1361,1
79100,RETURN,1,,return;,5,1411,1
79155,RETURN,-1,,"return {fields_.Serialize(context, creator)};",3,1429,1
79181,RETURN,-1,,return output;,3,1439,2
79200,RETURN,-1,,"return {fields_.Serialize(context, creator)};",3,1448,1
79226,RETURN,-1,,return output;,3,1458,2
79458,RETURN,-1,,return output;,3,1540,2
79608,RETURN,-1,,return info;,3,1575,12
79807,RETURN,1,,return nullptr;,36,1644,1
79809,RETURN,-1,,return worker_context()->env();,3,1645,2
79823,RETURN,1,,return;,32,1649,1
79851,RETURN,1,,return;,32,1658,1
80002,RETURN,-1,,return info;,3,1692,14
80210,RETURN,-1,,return free_in_system;,5,1745,1
80222,RETURN,-1,,return free_in_system;,5,1750,1
80229,RETURN,-1,,return free_in_system;,5,1754,1
80231,RETURN,-1,,return allowed - rss;,3,1757,11
80376,RETURN,-1,,return new_limit;,5,1838,2
80394,RETURN,-1,,return new_limit;,5,1851,3
80519,RETURN,-1,,return new_limit;,3,1895,43
80547,RETURN,-1,,return size;,3,1908,7
81097,RETURN,-1,,return args.GetReturnValue().Set(err);,5,161,1
81131,RETURN,-1,,return args.GetReturnValue().Set(err);,5,169,2
81479,RETURN,1,,return;,5,74,1
81540,RETURN,-1,,"return IsWeakOrDetached() ||
         !HandleWrap::HasRef(this) ||
         !uv_is_active(GetHandle());",3,103,1
81719,RETURN,-1,,return GetConstructorTemplate(env->isolate_data());,3,158,1
81810,RETURN,-1,,return tmpl;,3,176,3
81885,RETURN,-1,,"return ""<JS Node>"";",33,48,1
81891,RETURN,-1,,return 0;,35,49,1
81897,RETURN,-1,,return false;,36,50,1
81903,RETURN,-1,,return PersistentToLocal::Strong(persistent_);,28,51,1
81926,RETURN,1,,return v.As<Object>()->GetIdentityHash();,24,55,1
81940,RETURN,1,,return v.As<v8::Name>()->GetIdentityHash();,22,56,1
81954,RETURN,1,,return v.As<v8::Int32>()->Value();,23,57,1
81962,RETURN,-1,,return 0;,5,58,5
81982,RETURN,-1,,return static_cast<size_t>(n->IdentityHash());,7,68,1
81996,RETURN,-1,,return a->JSValue()->SameValue(b->JSValue());,7,74,1
82047,RETURN,1,,return *it;,7,90,1
82058,RETURN,-1,,return AddNode(std::unique_ptr<Node>(n.release()));,5,92,7
82091,RETURN,-1,,return n;,5,98,4
82382,RETURN,-1,,return MaybeLocal<Array>();,11,150,1
82397,RETURN,1,,return MaybeLocal<Array>();,11,153,1
82429,RETURN,1,,return MaybeLocal<Array>();,13,157,1
82481,RETURN,1,,return MaybeLocal<Array>();,9,168,1
82520,RETURN,-1,,return MaybeLocal<Array>();,9,176,1
82588,RETURN,-1,,return MaybeLocal<Array>();,13,189,1
82641,RETURN,-1,,return MaybeLocal<Array>();,11,197,1
82643,RETURN,-1,,return handle_scope.Escape(nodes);,5,202,19
82719,RETURN,-1,,return 65536;,5,228,1
82776,RETURN,-1,,return kAbort;,9,248,2
82791,RETURN,-1,,return kContinue;,5,254,6
82797,RETURN,-1,,return status_;,24,257,1
82827,RETURN,-1,,return 65536;,5,283,1
82893,RETURN,-1,,return kContinue;,5,303,4
82910,RETURN,-1,,return 0;,5,309,3
82916,RETURN,-1,,return 0;,5,313,1
82937,RETURN,-1,,return snapshot_ != nullptr;,29,327,1
82945,RETURN,-1,,return snapshot_ == nullptr;,31,328,1
82953,RETURN,-1,,return this;,40,329,1
83053,RETURN,-1,,return Nothing<void>();,5,370,2
83083,RETURN,-1,,return Nothing<void>();,5,377,2
83109,RETURN,-1,,return Nothing<void>();,5,384,2
83111,RETURN,-1,,return JustVoid();,3,387,14
83230,RETURN,-1,,return {};,5,414,1
83231,RETURN,-1,,"return MakeBaseObject<HeapSnapshotStream>(env, std::move(snapshot), obj);",3,416,6
83319,RETURN,-1,,return result;,3,432,8
83454,RETURN,1,,return;,57,457,1
83477,RETURN,-1,,return;,5,461,5
83495,RETURN,1,,return;,55,466,1
83496,RETURN,-1,,return args.GetReturnValue().Set(filename_v);,3,467,14
84446,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(env, ""value is out of range"");",5,206,1
84559,RETURN,-1,,return BaseObjectPtr<HistogramBase>();,5,233,1
84561,RETURN,-1,,"return MakeBaseObject<HistogramBase>(env, obj, options);",3,236,3
84605,RETURN,-1,,return BaseObjectPtr<HistogramBase>();,5,247,1
84607,RETURN,-1,,"return MakeBaseObject<HistogramBase>(env, obj, std::move(histogram));",3,249,3
84952,RETURN,-1,,return tmpl;,3,317,3
85079,RETURN,-1,,"return Create(env, std::move(histogram_));",3,356,1
85091,RETURN,-1,,return std::make_unique<HistogramTransferData>(this);,3,360,1
85259,RETURN,-1,,return tmpl;,3,400,3
85402,RETURN,-1,,return BaseObjectPtr<IntervalHistogram>();,5,452,1
85404,RETURN,-1,,"return MakeBaseObject<IntervalHistogram>(
      env,
      obj,
      AsyncWrap::PROVIDER_ELDHISTOGRAM,
      interval,
      std::move(on_interval),
      options);",3,455,3
85474,RETURN,1,,return;,38,478,1
85510,RETURN,1,,return;,39,487,1
86128,RETURN,-1,,return std::make_unique<HistogramBase::HistogramTransferData>(histogram());,3,634,1
86237,RETURN,-1,,"return
        static_cast<DeletableWrapper<T>*>(thread->GetObject(id))->object_.get();",5,25,1
86256,RETURN,-1,,"return std::unique_ptr<DeletableWrapper<T>>(
      new DeletableWrapper<T>(std::move(object)));",3,35,1
86300,RETURN,-1,,"return std::unique_ptr<Request>(
      new CreateObjectRequest<Factory>(object_id, std::move(factory)));",3,56,1
86475,RETURN,-1,,"return std::make_unique<MainThreadSessionState>(thread, prevent_shutdown);",5,139,1
86678,RETURN,-1,,return true;,3,230,3
86687,RETURN,1,,return;,5,235,1
86775,RETURN,-1,,return handle_;,3,259,2
86818,RETURN,-1,,return pointer;,3,277,4
86841,RETURN,-1,,return nullptr;,5,283,1
86843,RETURN,-1,,return iterator->second.get();,3,285,4
86901,RETURN,-1,,return StringBuffer::create(view);,3,295,9
86913,RETURN,-1,,"return std::unique_ptr<InspectorSession>(
      new CrossThreadInspectorSession(++next_session_id_,
                                      shared_from_this(),
                                      std::move(delegate),
                                      prevent_shutdown));",3,301,1
86943,RETURN,1,,return false;,5,311,1
86954,RETURN,-1,,return true;,3,313,5
86986,RETURN,-1,,"return std::unique_ptr<InspectorSessionDelegate>(
      new ThreadSafeDelegate(shared_from_this(), id));",3,326,4
87004,RETURN,-1,,return main_thread_ == nullptr;,3,332,3
87077,RETURN,-1,,return ++next_object_id_;,5,54,1
87145,RETURN,-1,,return agent_;,5,83,1
87299,RETURN,1,,return nullptr;,5,39,1
87343,RETURN,1,,return nullptr;,26,48,1
87348,RETURN,-1,,"return parseJSONCharacters(reinterpret_cast<const uint16_t*>(buffer.out()),
                             utf16_length);",3,50,10
87370,RETURN,1,,return nullptr;,5,56,1
87378,RETURN,1,,"return parseJSONCharacters(string.characters8(), string.length());",5,58,1
87388,RETURN,-1,,"return parseJSONCharacters(string.characters16(), string.length());",3,59,3
87411,RETURN,1,,"return """";",5,64,1
87419,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(view.characters8()),
                       view.length());",5,66,1
87482,RETURN,-1,,"return String(buffer.out(), utf8_length);",3,82,12
87508,RETURN,-1,,return stream.str();,3,89,4
87550,RETURN,-1,,return d;,3,98,7
87561,RETURN,-1,,"return Value::parseBinary(
        reinterpret_cast<const uint8_t*>(message.data()),
        message.length());",5,104,1
87576,RETURN,-1,,return parseJSON(message);,3,108,2
87584,RETURN,-1,,return message;,3,112,1
87591,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(message.data()),
                     message.size());",3,116,1
87612,RETURN,-1,,"return std::string(reinterpret_cast<const char*>(data), length);",3,121,1
87666,RETURN,-1,,"return String(buffer.out(), utf8_length);",3,137,10
87678,RETURN,-1,,return reinterpret_cast<const uint8_t*>(s.data());,3,141,1
87690,RETURN,-1,,"return simdutf::utf32_length_from_utf8(s.data(), s.length());",3,149,1
87786,RETURN,-1,,"return string.substr(start, count);",3,50,1
87798,RETURN,-1,,return std::to_string(n);,3,53,1
87809,RETURN,-1,,return builder.str();,3,56,1
87820,RETURN,-1,,return string.find(substring);,3,59,1
87897,RETURN,-1,,return nullptr;,3,82,1
87904,RETURN,-1,,return nullptr;,3,85,1
87990,RETURN,-1,,return DispatchResponse::OK();,3,20,2
88006,RETURN,-1,,return true;,5,26,2
88008,RETURN,-1,,return false;,3,28,2
88077,RETURN,-1,,return frontend_.lock().get();,34,25,1
88163,RETURN,1,,return;,38,70,1
88223,RETURN,1,,return;,7,97,1
88355,RETURN,-1,,"return DispatchResponse::Error(
        ""Call NodeTracing::end to stop tracing before updating the config"");",5,139,1
88368,RETURN,-1,,"return DispatchResponse::Error(
        ""Tracing properties can only be changed through main thread sessions"");",5,143,1
88427,RETURN,1,,"return DispatchResponse::Error(""At least one category should be enabled"");",5,154,1
88467,RETURN,-1,,return DispatchResponse::OK();,3,164,10
88484,RETURN,-1,,return DispatchResponse::OK();,3,170,3
88618,RETURN,-1,,return DispatchResponse::OK();,3,198,23
88810,RETURN,-1,,"return NodeWorker::WorkerInfo::create()
      .setWorkerId(id)
      .setTitle(title)
      .setUrl(url)
      .setType(""worker"").build();",3,72,1
88900,RETURN,-1,,return DispatchResponse::OK();,3,96,2
88921,RETURN,-1,,return DispatchResponse::OK();,5,102,1
88951,RETURN,-1,,return DispatchResponse::OK();,3,110,6
88964,RETURN,-1,,return DispatchResponse::OK();,3,115,2
88979,RETURN,-1,,return DispatchResponse::OK();,3,120,2
89003,RETURN,1,,return;,5,129,1
89123,RETURN,1,,return;,5,152,1
89247,RETURN,-1,,"return ""[worker "" + std::to_string(id) + ""]"" +
           (name == """" ? """" : "" "" + name);",5,29,1
89374,RETURN,-1,,"return parent_thread_->Connect(std::move(delegate), prevent_shutdown);",3,85,1
89410,RETURN,1,,return;,5,96,1
89442,RETURN,-1,,"return std::make_unique<ParentInspectorHandle>(
      thread_id, url, thread_, wait, name);",3,106,3
89506,RETURN,-1,,"return std::make_unique<WorkerManagerEventHandle>(shared_from_this(), id);",3,124,7
89640,RETURN,-1,,"return std::make_unique<ParentInspectorHandle>(
        thread_id, url, parent_thread_, wait_, name);",5,64,1
89664,RETURN,-1,,return wait_;,5,70,1
89670,RETURN,-1,,return url_;,36,72,1
89728,RETURN,-1,,return thread_;,5,99,1
89904,RETURN,-1,,"return StringBuffer::create(StringView(*buffer, buffer.length()));",3,69,3
89949,RETURN,-1,,return result.str();,3,209,3
90199,RETURN,-1,,return prevent_shutdown_;,5,276,1
90211,RETURN,-1,,return retaining_context_;,5,281,2
90217,RETURN,-1,,return retaining_context_;,5,285,1
90411,RETURN,-1,,return !path.empty() && path[0] == '/';,3,383,1
90538,RETURN,-1,,return;,7,431,1
90687,RETURN,-1,,return session_id;,5,482,4
90710,RETURN,1,,return;,7,488,1
90740,RETURN,1,,return;,11,494,1
90773,RETURN,-1,,return env_->context();,5,507,1
91091,RETURN,1,,return true;,9,594,1
91093,RETURN,-1,,return false;,5,596,2
91118,RETURN,-1,,return retaining_context;,5,605,4
91140,RETURN,-1,,return interface_->GetHandle();,5,613,2
91153,RETURN,-1,,return nullptr;,7,618,1
91169,RETURN,-1,,return worker_manager_;,5,624,3
91175,RETURN,-1,,return !channels_.empty();,5,628,1
91188,RETURN,1,,return true;,7,634,1
91195,RETURN,-1,,return hasConnectedSessions();,7,636,1
91197,RETURN,-1,,return false;,5,638,3
91206,RETURN,1,,return;,7,643,1
91231,RETURN,-1,,return env_->isolate_data()->platform()->CurrentClockTimeMillis();,5,655,1
91262,RETURN,1,,return nullptr;,7,663,1
91274,RETURN,-1,,return Utf8ToStringView(url);,5,666,6
91436,RETURN,-1,,return false;,5,741,1
91465,RETURN,-1,,return true;,3,752,12
91476,RETURN,1,,return true;,5,757,1
91498,RETURN,-1,,return false;,5,765,2
91521,RETURN,-1,,return false;,5,775,1
91524,RETURN,-1,,return true;,3,778,8
91561,RETURN,-1,,return std::unique_ptr<InspectorSession>{};,5,794,2
91578,RETURN,-1,,"return std::unique_ptr<InspectorSession>(
      new SameThreadInspectorSession(session_id, client_));",3,801,6
91616,RETURN,-1,,return std::unique_ptr<InspectorSession>{};,5,814,2
91636,RETURN,-1,,"return parent_handle_->Connect(std::move(thread_safe_delegate),
                                 prevent_shutdown);",3,821,7
91670,RETURN,-1,,return;,5,831,2
91742,RETURN,1,,return;,5,855,1
91910,RETURN,1,,return;,41,911,1
92026,RETURN,-1,,return;,5,951,1
92050,RETURN,1,,return;,5,965,1
92066,RETURN,1,,return false;,5,971,1
92068,RETURN,-1,,return io_ != nullptr || client_->IsActive();,3,972,2
92117,RETURN,-1,,return std::unique_ptr<ParentInspectorHandle>{};,5,988,2
92125,RETURN,-1,,"return client_->getWorkerManager()->NewParentHandle(thread_id, url, name);",5,993,1
92138,RETURN,-1,,"return parent_handle_->NewParentInspectorHandle(thread_id, url, name);",5,995,1
92169,RETURN,-1,,return;,5,1004,2
92200,RETURN,-1,,return std::unique_ptr<WorkerManager>{};,5,1018,2
92204,RETURN,-1,,return client_->getWorkerManager();,3,1022,4
92218,RETURN,1,,"return """";",5,1027,1
92220,RETURN,-1,,return io_->GetWsUrl();,3,1028,2
92422,RETURN,-1,,return script_path;,3,42,3
92478,RETURN,-1,,return uuid;,3,61,5
92629,RETURN,-1,,return handle_;,5,135,1
92648,RETURN,-1,,return messages;,5,145,5
92659,RETURN,1,,return;,7,150,1
92731,RETURN,-1,,return data_ == nullptr;,5,184,3
92856,RETURN,-1,,return nullptr;,5,249,1
92858,RETURN,-1,,return io;,3,251,4
93069,RETURN,-1,,"return FormatWsAddress(host_port->host(), host_port->port(), id_, true);",3,324,3
93179,RETURN,-1,,return { target_id_ };,3,360,1
93185,RETURN,-1,,return script_name_.empty() ? GetHumanReadableProcessName() : script_name_;,3,364,1
93198,RETURN,-1,,"return ""file://"" + script_path_;",3,368,1
93280,RETURN,-1,,"return StringBuffer::create(StringView(*buffer, buffer.length()));",3,38,3
93299,RETURN,-1,,"return inspector->Connect(std::move(delegate), false);",5,44,1
93315,RETURN,-1,,"return FIXED_ONE_BYTE_STRING(env->isolate(), ""Connection"");",5,48,1
93329,RETURN,-1,,"return inspector->ConnectToMainThread(std::move(delegate), true);",5,55,1
93345,RETURN,-1,,"return FIXED_ONE_BYTE_STRING(env->isolate(), ""MainThreadConnection"");",5,59,1
93410,RETURN,1,,return;,73,82,1
93686,RETURN,-1,,return true;,5,161,1
93702,RETURN,-1,,return agent->IsActive();,3,171,3
93940,RETURN,1,,return;,9,215,1
93981,RETURN,-1,,return reinterpret_cast<void*>(asyncId << 1);,3,236,1
94413,RETURN,-1,,return;,5,313,1
94854,RETURN,-1,,return id;,3,65,16
94889,RETURN,-1,,return;,5,76,4
94972,RETURN,-1,,return;,5,99,2
95011,RETURN,-1,,return;,5,111,2
95058,RETURN,-1,,return;,5,122,4
95089,RETURN,-1,,return;,5,129,4
95118,RETURN,-1,,return;,5,142,2
95130,RETURN,-1,,return;,5,148,2
95190,RETURN,-1,,return false;,5,167,4
95192,RETURN,-1,,return true;,3,169,5
95206,RETURN,-1,,"return SPrintF(""coverage-%s-%s-%s.json"",
      uv_os_getpid(),
      timestamp,
      env()->thread_id());",3,175,3
95245,RETURN,-1,,return;,5,187,1
95271,RETURN,-1,,return;,5,193,2
95288,RETURN,-1,,return;,5,200,1
95351,RETURN,-1,,return;,5,223,1
95367,RETURN,-1,,return;,5,229,1
95408,RETURN,-1,,return;,9,242,1
95469,RETURN,-1,,return;,5,258,2
95486,RETURN,-1,,return;,5,265,1
95517,RETURN,-1,,return result;,3,276,1
95523,RETURN,-1,,return env()->coverage_directory();,3,280,1
95565,RETURN,-1,,return;,5,302,1
95574,RETURN,-1,,return env()->cpu_prof_dir();,3,309,1
95583,RETURN,-1,,return env()->cpu_prof_name();,3,313,1
95623,RETURN,-1,,return MaybeLocal<Object>();,5,323,2
95635,RETURN,-1,,return MaybeLocal<Object>();,5,327,2
95637,RETURN,-1,,return profile_v.As<Object>();,3,329,4
95687,RETURN,-1,,return;,5,346,1
95699,RETURN,-1,,return env()->heap_prof_dir();,3,353,1
95708,RETURN,-1,,return env()->heap_prof_name();,3,357,1
95748,RETURN,-1,,return MaybeLocal<Object>();,5,367,2
95760,RETURN,-1,,return MaybeLocal<Object>();,5,371,2
95762,RETURN,-1,,return profile_v.As<Object>();,3,373,4
95810,RETURN,-1,,return;,5,389,1
96379,RETURN,-1,,return b == 0;,61,204,1
96434,RETURN,-1,,return &tcp_;,5,31,1
96446,RETURN,-1,,"return node::ContainerOf(&TcpHolder::tcp_,
                             reinterpret_cast<uv_tcp_t*>(handle));",5,37,1
96527,RETURN,-1,,return inspector_;,5,67,1
96562,RETURN,-1,,"return node::ContainerOf(&WriteRequest::req, req);",5,117,1
96698,RETURN,1,,return host;,5,159,1
96721,RETURN,1,,"return host.substr(0, last_colon_pos);",5,162,1
96728,RETURN,-1,,return host;,3,163,7
96748,RETURN,1,,return false;,45,174,1
96782,RETURN,1,,return false;,48,182,1
96797,RETURN,1,,return false;,46,186,1
96834,RETURN,1,,return false;,54,193,1
96848,RETURN,-1,,return false;,7,205,1
96850,RETURN,-1,,return true;,5,210,9
96864,RETURN,1,,return false;,55,219,1
96873,RETURN,1,,return false;,21,226,1
96875,RETURN,-1,,return true;,3,229,6
97077,RETURN,-1,,return frame;,3,281,9
97100,RETURN,1,,return FRAME_INCOMPLETE;,5,291,1
97179,RETURN,1,,return FRAME_ERROR;,5,306,1
97206,RETURN,-1,,return FRAME_ERROR;,7,320,17
97214,RETURN,-1,,return FRAME_ERROR;,5,325,1
97248,RETURN,-1,,return FRAME_ERROR;,7,336,1
97260,RETURN,1,,return FRAME_INCOMPLETE;,7,339,1
97306,RETURN,-1,,return FRAME_ERROR;,5,352,1
97324,RETURN,1,,return FRAME_INCOMPLETE;,5,357,1
97381,RETURN,-1,,return closed ? FRAME_CLOSE : FRAME_OK;,3,367,46
97612,RETURN,-1,,return bytes_consumed;,5,459,9
97843,RETURN,-1,,return;,9,550,2
97873,RETURN,-1,,return;,9,555,2
97964,RETURN,-1,,return 0;,5,582,5
98002,RETURN,-1,,return 0;,5,592,5
98024,RETURN,-1,,return 0;,5,598,4
98031,RETURN,-1,,"return node::ContainerOf(&HttpHandler::parser_, parser);",5,602,1
98099,RETURN,-1,,return 0;,5,617,8
98138,RETURN,1,,"return """";",11,627,1
98148,RETURN,-1,,return value;,5,632,5
98160,RETURN,-1,,"return host.empty() || IsIPAddress(host)
           || node::StringEqualNoCase(host.data(), ""localhost"");",5,637,3
98204,RETURN,-1,,"return tcp_->WriteRaw(buffer, write_cb);",3,662,1
98215,RETURN,-1,,return tcp_->delegate();,3,666,1
98250,RETURN,1,,"return """";",5,677,1
98294,RETURN,1,,"return """";",5,686,1
98296,RETURN,-1,,return ip;,3,687,10
98365,RETURN,-1,,return TcpHolder::Pointer(result);,5,710,1
98375,RETURN,-1,,return nullptr;,5,713,2
98427,RETURN,-1,,return err < 0;,3,734,8
98435,RETURN,-1,,return delegate_.get();,3,738,1
98593,RETURN,-1,,return InspectorSocket::Pointer(inspector);,5,792,4
98601,RETURN,-1,,return InspectorSocket::Pointer(nullptr);,5,794,1
98629,RETURN,-1,,return protocol_handler_->GetHost();,3,807,1
98782,RETURN,-1,,return url.str();,3,45,8
98808,RETURN,-1,,return url.str();,3,55,4
98859,RETURN,-1,,return json.str();,3,70,7
98898,RETURN,-1,,return json.str();,3,85,7
98927,RETURN,1,,return path + len + 1;,27,91,1
98940,RETURN,1,,return path + len;,28,92,1
98944,RETURN,-1,,return nullptr;,3,94,4
99142,RETURN,-1,,"return FormatAddress(FormatHostPort(host, port), target_id, include_protocol);",3,151,1
99186,RETURN,-1,,return id_;,20,164,1
99192,RETURN,-1,,return server_port_;,5,166,1
99198,RETURN,-1,,return ws_socket_.get();,5,169,1
99259,RETURN,-1,,return server_->Session(session_id_);,7,192,1
99296,RETURN,-1,,return port_;,22,213,1
99303,RETURN,-1,,"return node::ContainerOf(&ServerSocket::tcp_socket_,
                             reinterpret_cast<uv_tcp_t*>(socket));",5,218,1
99366,RETURN,-1,,return;,5,241,1
99433,RETURN,-1,,return it == connected_sessions_.end() ? nullptr : it->second.second.get();,3,274,3
99471,RETURN,-1,,return;,5,283,2
99501,RETURN,-1,,return;,5,292,1
99596,RETURN,-1,,return true;,5,322,2
99612,RETURN,1,,return false;,5,326,1
99629,RETURN,-1,,return true;,5,330,2
99640,RETURN,-1,,return true;,5,333,2
99651,RETURN,-1,,return true;,5,336,2
99653,RETURN,-1,,return false;,3,338,10
99818,RETURN,-1,,return frontend_url.str();,3,383,6
99908,RETURN,-1,,return false;,5,405,2
99984,RETURN,-1,,return false;,5,424,2
100008,RETURN,-1,,return true;,3,434,21
100021,RETURN,1,,return;,5,439,1
100086,RETURN,-1,,return found != target_ids.end();,3,455,5
100104,RETURN,-1,,return server_sockets_[0]->port();,5,460,1
100111,RETURN,-1,,return port_;,3,462,2
100339,RETURN,1,,return err;,5,527,1
100371,RETURN,-1,,return err;,3,534,10
100419,RETURN,-1,,return err;,3,549,8
101513,RETURN,-1,,return;,29,445,1
101528,RETURN,-1,,"return v8::String::NewFromOneByte(isolate,
                                      reinterpret_cast<const uint8_t*>(str),
                                      v8::NewStringType::kNormal,
                                      length);",5,1531,1
101554,RETURN,-1,,"return v8::String::NewFromUtf8(
        isolate, str, v8::NewStringType::kNormal, static_cast<int>(length));",5,1543,1
101579,RETURN,-1,,"return v8::String::NewFromTwoByte(isolate,
                                      reinterpret_cast<const uint16_t*>(str),
                                      v8::NewStringType::kNormal,
                                      length);",5,1553,1
101631,RETURN,-1,,"return v8::String::NewExternalOneByte(isolate, resource);",9,1583,4
101678,RETURN,-1,,"return v8::String::NewExternalTwoByte(isolate, resource);",9,1610,4
101731,RETURN,-1,,CHECK_ENV(env),3,70,1
101751,RETURN,-1,,"CHECK_ARG(env, str)",19,71,1
101768,RETURN,-1,,"CHECK_ARG(env, result)",3,72,1
101789,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, (length == NAPI_AUTO_LENGTH) || length <= INT_MAX, napi_invalid_arg)",3,73,1
101820,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, str_maybe, napi_generic_failure)",3,78,1
101836,RETURN,-1,,return napi_clear_last_error(env);,3,80,11
101874,RETURN,-1,,return status;,3,111,4
101915,RETURN,1,,return;,40,137,1
101949,RETURN,-1,,return string_;,39,163,1
101955,RETURN,-1,,return length_;,36,164,1
101973,RETURN,-1,,return string_;,43,183,1
101979,RETURN,-1,,return length_;,36,184,1
102028,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,196,1
102043,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,196,1
102081,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, *result, p->utf8name)",5,196,1
102130,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, property_value->IsName(), napi_name_expected)",5,201,1
102142,RETURN,-1,,return napi_ok;,3,205,2
102217,RETURN,-1,,return static_cast<v8::PropertyAttribute>(attribute_flags);,3,227,6
102226,RETURN,-1,,return reinterpret_cast<napi_deferred>(local);,3,232,1
102235,RETURN,-1,,return reinterpret_cast<v8impl::Persistent<v8::Value>*>(local);,3,237,1
102256,RETURN,-1,,return escape_called_;,32,257,1
102266,RETURN,-1,,return scope.Escape(handle);,5,261,2
102279,RETURN,-1,,return reinterpret_cast<napi_handle_scope>(s);,3,270,1
102288,RETURN,-1,,return reinterpret_cast<HandleScopeWrapper*>(s);,3,274,1
102297,RETURN,-1,,return reinterpret_cast<napi_escapable_handle_scope>(s);,3,280,1
102306,RETURN,-1,,return reinterpret_cast<EscapableHandleScopeWrapper*>(s);,3,286,1
102328,RETURN,-1,,NAPI_PREAMBLE(env),3,293,1
102342,RETURN,-1,,NAPI_PREAMBLE(env),3,293,1
102356,RETURN,-1,,NAPI_PREAMBLE(env),3,293,1
102385,RETURN,-1,,"CHECK_ARG(env, result)",3,294,1
102489,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, success.FromMaybe(false), napi_generic_failure)",3,312,1
102494,RETURN,-1,,return GET_RETURN_STATUS(env);,3,314,18
102529,RETURN,-1,,NAPI_PREAMBLE(env),3,323,1
102543,RETURN,-1,,NAPI_PREAMBLE(env),3,323,1
102557,RETURN,-1,,NAPI_PREAMBLE(env),3,323,1
102586,RETURN,-1,,"CHECK_ARG(env, js_object)",3,324,1
102608,RETURN,-1,,"CHECK_ARG(env, result)",5,326,1
102659,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsObject(), napi_invalid_arg)",3,332,1
102719,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsExternal(), napi_invalid_arg)",3,337,1
102791,RETURN,-1,,return GET_RETURN_STATUS(env);,3,356,20
102866,RETURN,-1,,return cbdata;,5,382,8
102913,RETURN,-1,,return _this;,23,406,1
102919,RETURN,-1,,return _args_length;,25,408,1
102925,RETURN,-1,,return _data;,18,410,1
103063,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure)",5,471,1
103105,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_function, napi_generic_failure)",5,475,1
103117,RETURN,-1,,return napi_clear_last_error(env);,5,478,6
103167,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, !cbdata.IsEmpty(), napi_generic_failure)",5,488,1
103187,RETURN,-1,,return napi_clear_last_error(env);,5,491,4
103205,RETURN,-1,,return v8impl::JsValueFromV8LocalValue(_cbinfo.NewTarget());,7,500,1
103216,RETURN,-1,,return nullptr;,7,502,1
103339,RETURN,-1,,NAPI_PREAMBLE(env),3,537,1
103353,RETURN,-1,,NAPI_PREAMBLE(env),3,537,1
103367,RETURN,-1,,NAPI_PREAMBLE(env),3,537,1
103396,RETURN,-1,,"CHECK_ARG(env, js_object)",3,538,1
103447,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsObject(), napi_invalid_arg)",3,543,1
103494,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env,
      !obj->HasPrivate(context, NAPI_PRIVATE_KEY(context, wrapper)).FromJust(),
      napi_invalid_arg)",3,547,1
103520,RETURN,-1,,"CHECK_ARG(env, finalize_cb)",5,558,1
103608,RETURN,-1,,return GET_RETURN_STATUS(env);,3,584,17
103627,RETURN,-1,,return value->IsObject() || value->IsSymbol();,3,596,1
103693,RETURN,-1,,"return new RefBase(env,
                     initial_refcount,
                     ownership,
                     finalize_callback,
                     finalize_data,
                     finalize_hint);",3,635,1
103706,RETURN,-1,,return finalize_data_;,3,644,1
103712,RETURN,-1,,return ++refcount_;,3,648,1
103724,RETURN,-1,,return 0;,5,653,1
103726,RETURN,-1,,return --refcount_;,3,655,2
103733,RETURN,-1,,return refcount_;,3,659,1
103810,RETURN,-1,,"return new Reference(env,
                       value,
                       initial_refcount,
                       ownership,
                       finalize_callback,
                       finalize_data,
                       finalize_hint);",3,712,1
103830,RETURN,-1,,return 0;,5,725,1
103850,RETURN,-1,,return refcount;,3,731,5
103862,RETURN,-1,,return 0;,5,738,1
103885,RETURN,-1,,return refcount;,3,745,7
103897,RETURN,-1,,return v8::Local<v8::Value>();,5,750,1
103904,RETURN,-1,,"return v8::Local<v8::Value>::New(env_->isolate, persistent_);",5,752,1
104026,RETURN,-1,,CHECK_ENV(env),3,817,1
104041,RETURN,-1,,"CHECK_ARG(env, result)",3,818,1
104102,RETURN,-1,,return napi_ok;,3,837,10
104124,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
104138,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
104152,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
104181,RETURN,-1,,"CHECK_ARG(env, result)",3,847,1
104198,RETURN,-1,,"CHECK_ARG(env, cb)",3,848,1
104250,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
      env, cb, callback_data, &fn))",3,853,1
104303,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,859,1
104316,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,859,1
104352,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",5,859,1
104377,RETURN,-1,,return GET_RETURN_STATUS(env);,3,865,17
104413,RETURN,-1,,NAPI_PREAMBLE(env),3,877,1
104427,RETURN,-1,,NAPI_PREAMBLE(env),3,877,1
104441,RETURN,-1,,NAPI_PREAMBLE(env),3,877,1
104470,RETURN,-1,,"CHECK_ARG(env, result)",3,878,1
104487,RETURN,-1,,"CHECK_ARG(env, constructor)",3,879,1
104509,RETURN,-1,,"CHECK_ARG(env, properties)",5,882,1
104556,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
      env, constructor, callback_data, &tpl))",3,889,1
104597,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,893,1
104610,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,893,1
104646,RETURN,-1,,"CHECK_NEW_FROM_UTF8_LEN(env, name_string, utf8name, length)",3,893,1
104727,RETURN,1,,"STATUS_CALL(v8impl::V8NameFromPropertyDescriptor(env, p, &property_name))",5,907,1
104804,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
            env, p->getter, p->data, &getter_tpl))",9,920,1
104842,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
            env, p->setter, p->data, &setter_tpl))",9,924,1
104915,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewTemplate(
          env, p->method, p->data, &t, v8::Signature::New(isolate, tpl)))",7,935,1
105059,RETURN,1,,"STATUS_CALL(napi_define_properties(
        env, *result, static_descriptors.size(), static_descriptors.data()))",5,960,1
105062,RETURN,-1,,return GET_RETURN_STATUS(env);,3,964,25
105083,RETURN,-1,,"return napi_get_all_property_names(
      env,
      object,
      napi_key_include_prototypes,
      static_cast<napi_key_filter>(napi_key_enumerable | napi_key_skip_symbols),
      napi_key_numbers_to_strings,
      result);",3,970,1
105115,RETURN,-1,,NAPI_PREAMBLE(env),3,986,1
105129,RETURN,-1,,NAPI_PREAMBLE(env),3,986,1
105143,RETURN,-1,,NAPI_PREAMBLE(env),3,986,1
105172,RETURN,-1,,"CHECK_ARG(env, result)",3,987,1
105217,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,991,1
105244,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,991,1
105370,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,1025,10
105398,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,1036,10
105440,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(
      env, maybe_all_propertynames, napi_generic_failure)",3,1046,1
105462,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1051,25
105494,RETURN,-1,,NAPI_PREAMBLE(env),3,1058,1
105508,RETURN,-1,,NAPI_PREAMBLE(env),3,1058,1
105522,RETURN,-1,,NAPI_PREAMBLE(env),3,1058,1
105551,RETURN,-1,,"CHECK_ARG(env, key)",3,1059,1
105568,RETURN,-1,,"CHECK_ARG(env, value)",3,1060,1
105613,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1065,1
105640,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1065,1
105711,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1072,1
105716,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1073,17
105748,RETURN,-1,,NAPI_PREAMBLE(env),3,1080,1
105762,RETURN,-1,,NAPI_PREAMBLE(env),3,1080,1
105776,RETURN,-1,,NAPI_PREAMBLE(env),3,1080,1
105805,RETURN,-1,,"CHECK_ARG(env, result)",3,1081,1
105822,RETURN,-1,,"CHECK_ARG(env, key)",3,1082,1
105867,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1087,1
105894,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1087,1
105945,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1092,1
105958,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1095,17
105990,RETURN,-1,,NAPI_PREAMBLE(env),3,1102,1
106004,RETURN,-1,,NAPI_PREAMBLE(env),3,1102,1
106018,RETURN,-1,,NAPI_PREAMBLE(env),3,1102,1
106047,RETURN,-1,,"CHECK_ARG(env, key)",3,1103,1
106064,RETURN,-1,,"CHECK_ARG(env, result)",3,1104,1
106124,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1110,1
106151,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1110,1
106187,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1114,1
106214,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1118,18
106246,RETURN,-1,,NAPI_PREAMBLE(env),3,1125,1
106260,RETURN,-1,,NAPI_PREAMBLE(env),3,1125,1
106274,RETURN,-1,,NAPI_PREAMBLE(env),3,1125,1
106303,RETURN,-1,,"CHECK_ARG(env, key)",3,1126,1
106363,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1132,1
106390,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1132,1
106426,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, delete_maybe, napi_generic_failure)",3,1134,1
106444,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1138,16
106476,RETURN,-1,,NAPI_PREAMBLE(env),3,1145,1
106490,RETURN,-1,,NAPI_PREAMBLE(env),3,1145,1
106504,RETURN,-1,,NAPI_PREAMBLE(env),3,1145,1
106533,RETURN,-1,,"CHECK_ARG(env, key)",3,1146,1
106550,RETURN,-1,,"CHECK_ARG(env, result)",3,1147,1
106595,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1152,1
106622,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1152,1
106666,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, k->IsName(), napi_name_expected)",3,1154,1
106698,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1156,1
106711,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1159,18
106743,RETURN,-1,,NAPI_PREAMBLE(env),3,1166,1
106757,RETURN,-1,,NAPI_PREAMBLE(env),3,1166,1
106771,RETURN,-1,,NAPI_PREAMBLE(env),3,1166,1
106800,RETURN,-1,,"CHECK_ARG(env, value)",3,1167,1
106845,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1172,1
106872,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1172,1
106921,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1175,1
106934,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1175,1
106970,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1175,1
107026,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1181,1
107031,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1182,17
107063,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
107077,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
107091,RETURN,-1,,NAPI_PREAMBLE(env),3,1189,1
107120,RETURN,-1,,"CHECK_ARG(env, result)",3,1190,1
107165,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1195,1
107192,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1195,1
107241,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1198,1
107254,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1198,1
107290,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1198,1
107326,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1202,1
107339,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1205,17
107371,RETURN,-1,,NAPI_PREAMBLE(env),3,1212,1
107385,RETURN,-1,,NAPI_PREAMBLE(env),3,1212,1
107399,RETURN,-1,,NAPI_PREAMBLE(env),3,1212,1
107428,RETURN,-1,,"CHECK_ARG(env, result)",3,1213,1
107484,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1218,1
107497,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1218,1
107533,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, key, utf8name)",3,1218,1
107571,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1222,1
107598,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1222,1
107634,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1226,1
107661,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1230,18
107693,RETURN,-1,,NAPI_PREAMBLE(env),3,1237,1
107707,RETURN,-1,,NAPI_PREAMBLE(env),3,1237,1
107721,RETURN,-1,,NAPI_PREAMBLE(env),3,1237,1
107750,RETURN,-1,,"CHECK_ARG(env, value)",3,1238,1
107795,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1243,1
107822,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1243,1
107878,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, set_maybe.FromMaybe(false), napi_generic_failure)",3,1248,1
107883,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1250,15
107915,RETURN,-1,,NAPI_PREAMBLE(env),3,1257,1
107929,RETURN,-1,,NAPI_PREAMBLE(env),3,1257,1
107943,RETURN,-1,,NAPI_PREAMBLE(env),3,1257,1
107972,RETURN,-1,,"CHECK_ARG(env, result)",3,1258,1
108017,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1263,1
108044,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1263,1
108080,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure)",3,1267,1
108093,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1270,15
108125,RETURN,-1,,NAPI_PREAMBLE(env),3,1277,1
108139,RETURN,-1,,NAPI_PREAMBLE(env),3,1277,1
108153,RETURN,-1,,NAPI_PREAMBLE(env),3,1277,1
108182,RETURN,-1,,"CHECK_ARG(env, result)",3,1278,1
108227,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1283,1
108254,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1283,1
108290,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, get_maybe, napi_generic_failure)",3,1287,1
108306,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1290,15
108338,RETURN,-1,,NAPI_PREAMBLE(env),3,1297,1
108352,RETURN,-1,,NAPI_PREAMBLE(env),3,1297,1
108366,RETURN,-1,,NAPI_PREAMBLE(env),3,1297,1
108423,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1302,1
108450,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1302,1
108486,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, delete_maybe, napi_generic_failure)",3,1304,1
108504,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1308,14
108536,RETURN,-1,,NAPI_PREAMBLE(env),3,1316,1
108550,RETURN,-1,,NAPI_PREAMBLE(env),3,1316,1
108564,RETURN,-1,,NAPI_PREAMBLE(env),3,1316,1
108598,RETURN,-1,,"CHECK_ARG(env, properties)",5,1318,1
108643,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1324,1
108670,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1324,1
108731,RETURN,1,,"STATUS_CALL(v8impl::V8NameFromPropertyDescriptor(env, p, &property_name))",5,1330,1
108800,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
            env, p->getter, p->data, &local_getter))",9,1337,1
108838,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
            env, p->setter, p->data, &local_setter))",9,1341,1
108885,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",9,1353,1
108935,RETURN,1,,"STATUS_CALL(v8impl::FunctionCallbackWrapper::NewFunction(
          env, p->method, p->data, &method))",7,1357,1
108988,RETURN,-1,,"return napi_set_last_error(env, napi_generic_failure);",9,1368,1
109106,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",9,1393,1
109110,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1398,12
109140,RETURN,-1,,NAPI_PREAMBLE(env),3,1402,1
109154,RETURN,-1,,NAPI_PREAMBLE(env),3,1402,1
109168,RETURN,-1,,NAPI_PREAMBLE(env),3,1402,1
109225,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1407,1
109252,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1407,1
109296,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, set_frozen.FromMaybe(false), napi_generic_failure)",3,1412,1
109307,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1415,13
109337,RETURN,-1,,NAPI_PREAMBLE(env),3,1419,1
109351,RETURN,-1,,NAPI_PREAMBLE(env),3,1419,1
109365,RETURN,-1,,NAPI_PREAMBLE(env),3,1419,1
109422,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1424,1
109449,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1424,1
109493,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, set_sealed.FromMaybe(false), napi_generic_failure)",3,1429,1
109504,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1432,13
109535,RETURN,-1,,CHECK_ENV(env),3,1438,1
109550,RETURN,-1,,"CHECK_ARG(env, value)",3,1439,1
109567,RETURN,-1,,"CHECK_ARG(env, result)",3,1440,1
109594,RETURN,-1,,return napi_clear_last_error(env);,3,1445,6
109614,RETURN,-1,,NAPI_PREAMBLE(env),3,1451,1
109628,RETURN,-1,,NAPI_PREAMBLE(env),3,1451,1
109642,RETURN,-1,,NAPI_PREAMBLE(env),3,1451,1
109671,RETURN,-1,,"CHECK_ARG(env, value)",3,1452,1
109688,RETURN,-1,,"CHECK_ARG(env, result)",3,1453,1
109725,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsArray(), napi_array_expected)",3,1456,1
109751,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1461,13
109783,RETURN,-1,,NAPI_PREAMBLE(env),3,1468,1
109797,RETURN,-1,,NAPI_PREAMBLE(env),3,1468,1
109811,RETURN,-1,,NAPI_PREAMBLE(env),3,1468,1
109840,RETURN,-1,,"CHECK_ARG(env, lhs)",3,1469,1
109857,RETURN,-1,,"CHECK_ARG(env, rhs)",3,1470,1
109874,RETURN,-1,,"CHECK_ARG(env, result)",3,1471,1
109917,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1477,13
109948,RETURN,-1,,NAPI_PREAMBLE(env),3,1483,1
109962,RETURN,-1,,NAPI_PREAMBLE(env),3,1483,1
109976,RETURN,-1,,NAPI_PREAMBLE(env),3,1483,1
110005,RETURN,-1,,"CHECK_ARG(env, result)",3,1484,1
110050,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1489,1
110077,RETURN,-1,,"CHECK_TO_OBJECT(env, context, obj, object)",3,1489,1
110111,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1493,13
110141,RETURN,-1,,CHECK_ENV(env),3,1497,1
110156,RETURN,-1,,"CHECK_ARG(env, result)",3,1498,1
110177,RETURN,-1,,return napi_clear_last_error(env);,3,1502,4
110196,RETURN,-1,,CHECK_ENV(env),3,1506,1
110211,RETURN,-1,,"CHECK_ARG(env, result)",3,1507,1
110232,RETURN,-1,,return napi_clear_last_error(env);,3,1511,4
110252,RETURN,-1,,CHECK_ENV(env),3,1517,1
110267,RETURN,-1,,"CHECK_ARG(env, result)",3,1518,1
110289,RETURN,-1,,return napi_clear_last_error(env);,3,1523,4
110298,RETURN,-1,,"return v8impl::NewString(env, str, length, result, [&](v8::Isolate* isolate) {
    return v8::String::NewFromOneByte(isolate,
                                      reinterpret_cast<const uint8_t*>(str),
                                      v8::NewStringType::kNormal,
                                      length);
  });",3,1530,1
110314,RETURN,-1,,"return v8impl::NewString(env, str, length, result, [&](v8::Isolate* isolate) {
    return v8::String::NewFromUtf8(
        isolate, str, v8::NewStringType::kNormal, static_cast<int>(length));
  });",3,1542,1
110330,RETURN,-1,,"return v8impl::NewString(env, str, length, result, [&](v8::Isolate* isolate) {
    return v8::String::NewFromTwoByte(isolate,
                                      reinterpret_cast<const uint16_t*>(str),
                                      v8::NewStringType::kNormal,
                                      length);
  });",3,1552,1
110346,RETURN,-1,,"return v8impl::NewExternalString(
      env,
      str,
      length,
      finalize_callback,
      finalize_hint,
      result,
      copied,
      napi_create_string_latin1,
      [&](v8::Isolate* isolate) {
        if (length == NAPI_AUTO_LENGTH) {
          length = (std::string_view(str)).length();
        }
        auto resource = new v8impl::ExternalOneByteStringResource(
            env, str, length, finalize_callback, finalize_hint);
        return v8::String::NewExternalOneByte(isolate, resource);
      });",3,1568,1
110366,RETURN,-1,,"return v8impl::NewExternalString(
      env,
      str,
      length,
      finalize_callback,
      finalize_hint,
      result,
      copied,
      napi_create_string_utf16,
      [&](v8::Isolate* isolate) {
        if (length == NAPI_AUTO_LENGTH) {
          length = (std::u16string_view(str)).length();
        }
        auto resource = new v8impl::ExternalStringResource(
            env, str, length, finalize_callback, finalize_hint);
        return v8::String::NewExternalTwoByte(isolate, resource);
      });",3,1595,1
110397,RETURN,-1,,CHECK_ENV(env),3,1617,1
110412,RETURN,-1,,"CHECK_ARG(env, result)",3,1618,1
110434,RETURN,-1,,return napi_clear_last_error(env);,3,1623,4
110454,RETURN,-1,,CHECK_ENV(env),3,1629,1
110469,RETURN,-1,,"CHECK_ARG(env, result)",3,1630,1
110491,RETURN,-1,,return napi_clear_last_error(env);,3,1635,4
110511,RETURN,-1,,CHECK_ENV(env),3,1641,1
110526,RETURN,-1,,"CHECK_ARG(env, result)",3,1642,1
110548,RETURN,-1,,return napi_clear_last_error(env);,3,1647,4
110568,RETURN,-1,,CHECK_ENV(env),3,1653,1
110583,RETURN,-1,,"CHECK_ARG(env, result)",3,1654,1
110607,RETURN,-1,,return napi_clear_last_error(env);,3,1659,4
110627,RETURN,-1,,CHECK_ENV(env),3,1665,1
110642,RETURN,-1,,"CHECK_ARG(env, result)",3,1666,1
110664,RETURN,-1,,return napi_clear_last_error(env);,3,1671,4
110684,RETURN,-1,,CHECK_ENV(env),3,1677,1
110699,RETURN,-1,,"CHECK_ARG(env, result)",3,1678,1
110721,RETURN,-1,,return napi_clear_last_error(env);,3,1683,4
110743,RETURN,-1,,NAPI_PREAMBLE(env),3,1691,1
110757,RETURN,-1,,NAPI_PREAMBLE(env),3,1691,1
110771,RETURN,-1,,NAPI_PREAMBLE(env),3,1691,1
110800,RETURN,-1,,"CHECK_ARG(env, words)",3,1692,1
110817,RETURN,-1,,"CHECK_ARG(env, result)",3,1693,1
110848,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, word_count <= INT_MAX, napi_invalid_arg)",3,1697,1
110888,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, b, napi_generic_failure)",3,1702,1
110910,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1705,14
110941,RETURN,-1,,CHECK_ENV(env),3,1711,1
110956,RETURN,-1,,"CHECK_ARG(env, result)",3,1712,1
110996,RETURN,-1,,return napi_clear_last_error(env);,3,1722,6
111016,RETURN,-1,,CHECK_ENV(env),3,1728,1
111031,RETURN,-1,,"CHECK_ARG(env, result)",3,1729,1
111095,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, desc->IsString(), napi_string_expected)",5,1737,1
111118,RETURN,-1,,return napi_clear_last_error(env);,3,1743,6
111139,RETURN,-1,,CHECK_ENV(env),3,1750,1
111154,RETURN,-1,,"CHECK_ARG(env, result)",3,1751,1
111179,RETURN,1,,"STATUS_CALL(napi_create_string_utf8(
      env, utf8description, length, &js_description_string))",3,1754,1
111217,RETURN,-1,,return napi_clear_last_error(env);,3,1762,7
111309,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, code_value->IsString(), napi_string_expected)",7,1776,1
111344,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1778,1
111357,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1778,1
111393,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_value, code_cstring)",7,1778,1
111442,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1782,1
111455,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1782,1
111491,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, code_key, ""code"")",5,1782,1
111532,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
        env, set_maybe.FromMaybe(false), napi_generic_failure)",5,1785,1
111537,RETURN,-1,,return napi_ok;,3,1788,2
111557,RETURN,-1,,CHECK_ENV(env),3,1795,1
111572,RETURN,-1,,"CHECK_ARG(env, msg)",3,1796,1
111589,RETURN,-1,,"CHECK_ARG(env, result)",3,1797,1
111626,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1800,1
111669,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1804,1
111680,RETURN,-1,,return napi_clear_last_error(env);,3,1808,9
111701,RETURN,-1,,CHECK_ENV(env),3,1815,1
111716,RETURN,-1,,"CHECK_ARG(env, msg)",3,1816,1
111733,RETURN,-1,,"CHECK_ARG(env, result)",3,1817,1
111770,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1820,1
111813,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1824,1
111824,RETURN,-1,,return napi_clear_last_error(env);,3,1828,9
111845,RETURN,-1,,CHECK_ENV(env),3,1835,1
111860,RETURN,-1,,"CHECK_ARG(env, msg)",3,1836,1
111877,RETURN,-1,,"CHECK_ARG(env, result)",3,1837,1
111914,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1840,1
111957,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1844,1
111968,RETURN,-1,,return napi_clear_last_error(env);,3,1848,9
111989,RETURN,-1,,CHECK_ENV(env),3,1855,1
112004,RETURN,-1,,"CHECK_ARG(env, msg)",3,1856,1
112021,RETURN,-1,,"CHECK_ARG(env, result)",3,1857,1
112058,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, message_value->IsString(), napi_string_expected)",3,1860,1
112101,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, code, nullptr))",3,1864,1
112112,RETURN,-1,,return napi_clear_last_error(env);,3,1868,9
112132,RETURN,-1,,CHECK_ENV(env),3,1876,1
112147,RETURN,-1,,"CHECK_ARG(env, value)",3,1877,1
112164,RETURN,-1,,"CHECK_ARG(env, result)",3,1878,1
112304,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",5,1908,1
112308,RETURN,-1,,return napi_clear_last_error(env);,3,1911,6
112327,RETURN,-1,,CHECK_ENV(env),3,1915,1
112342,RETURN,-1,,"CHECK_ARG(env, result)",3,1916,1
112361,RETURN,-1,,return napi_clear_last_error(env);,3,1920,4
112380,RETURN,-1,,CHECK_ENV(env),3,1924,1
112395,RETURN,-1,,"CHECK_ARG(env, result)",3,1925,1
112414,RETURN,-1,,return napi_clear_last_error(env);,3,1929,4
112437,RETURN,-1,,CHECK_ENV(env),3,1941,1
112452,RETURN,-1,,"CHECK_ARG(env, cbinfo)",3,1942,1
112480,RETURN,-1,,"CHECK_ARG(env, argc)",5,1948,1
112528,RETURN,-1,,return napi_clear_last_error(env);,3,1961,9
112548,RETURN,-1,,CHECK_ENV(env),3,1967,1
112563,RETURN,-1,,"CHECK_ARG(env, cbinfo)",3,1968,1
112580,RETURN,-1,,"CHECK_ARG(env, result)",3,1969,1
112598,RETURN,-1,,return napi_clear_last_error(env);,3,1975,7
112621,RETURN,-1,,NAPI_PREAMBLE(env),3,1984,1
112635,RETURN,-1,,NAPI_PREAMBLE(env),3,1984,1
112649,RETURN,-1,,NAPI_PREAMBLE(env),3,1984,1
112678,RETURN,-1,,"CHECK_ARG(env, recv)",3,1985,1
112700,RETURN,-1,,"CHECK_ARG(env, argv)",5,1987,1
112758,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,1995,1
112787,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,1995,1
112820,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,2004,1
112846,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",7,2007,1
112862,RETURN,-1,,return napi_clear_last_error(env);,5,2010,2
112881,RETURN,-1,,CHECK_ENV(env),3,2015,1
112896,RETURN,-1,,"CHECK_ARG(env, result)",3,2016,1
112915,RETURN,-1,,return napi_clear_last_error(env);,3,2020,4
112934,RETURN,-1,,NAPI_PREAMBLE(env),3,2024,1
112948,RETURN,-1,,NAPI_PREAMBLE(env),3,2024,1
112962,RETURN,-1,,NAPI_PREAMBLE(env),3,2024,1
112991,RETURN,-1,,"CHECK_ARG(env, error)",3,2025,1
113011,RETURN,-1,,return napi_clear_last_error(env);,3,2032,11
113031,RETURN,-1,,NAPI_PREAMBLE(env),3,2038,1
113045,RETURN,-1,,NAPI_PREAMBLE(env),3,2038,1
113059,RETURN,-1,,NAPI_PREAMBLE(env),3,2038,1
113119,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2042,1
113132,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2042,1
113168,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2042,1
113215,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,2045,1
113223,RETURN,-1,,return napi_clear_last_error(env);,3,2050,14
113243,RETURN,-1,,NAPI_PREAMBLE(env),3,2056,1
113257,RETURN,-1,,NAPI_PREAMBLE(env),3,2056,1
113271,RETURN,-1,,NAPI_PREAMBLE(env),3,2056,1
113331,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2060,1
113344,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2060,1
113380,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2060,1
113427,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,2063,1
113435,RETURN,-1,,return napi_clear_last_error(env);,3,2068,14
113455,RETURN,-1,,NAPI_PREAMBLE(env),3,2074,1
113469,RETURN,-1,,NAPI_PREAMBLE(env),3,2074,1
113483,RETURN,-1,,NAPI_PREAMBLE(env),3,2074,1
113543,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2078,1
113556,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2078,1
113592,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2078,1
113639,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,2081,1
113647,RETURN,-1,,return napi_clear_last_error(env);,3,2086,14
113667,RETURN,-1,,NAPI_PREAMBLE(env),3,2092,1
113681,RETURN,-1,,NAPI_PREAMBLE(env),3,2092,1
113695,RETURN,-1,,NAPI_PREAMBLE(env),3,2092,1
113755,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2096,1
113768,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2096,1
113804,RETURN,-1,,"CHECK_NEW_FROM_UTF8(env, str, msg)",3,2096,1
113851,RETURN,1,,"STATUS_CALL(set_error_code(env, error_obj, nullptr, code))",3,2099,1
113859,RETURN,-1,,return napi_clear_last_error(env);,3,2104,14
113879,RETURN,-1,,CHECK_ENV(env),3,2112,1
113894,RETURN,-1,,"CHECK_ARG(env, value)",3,2113,1
113911,RETURN,-1,,"CHECK_ARG(env, result)",3,2114,1
113938,RETURN,-1,,return napi_clear_last_error(env);,3,2119,6
113958,RETURN,-1,,CHECK_ENV(env),3,2127,1
113973,RETURN,-1,,"CHECK_ARG(env, value)",3,2128,1
113990,RETURN,-1,,"CHECK_ARG(env, result)",3,2129,1
114027,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",3,2132,1
114042,RETURN,-1,,return napi_clear_last_error(env);,3,2136,7
114062,RETURN,-1,,CHECK_ENV(env),3,2144,1
114077,RETURN,-1,,"CHECK_ARG(env, value)",3,2145,1
114094,RETURN,-1,,"CHECK_ARG(env, result)",3,2146,1
114149,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",5,2153,1
114174,RETURN,-1,,return napi_clear_last_error(env);,3,2160,6
114194,RETURN,-1,,CHECK_ENV(env),3,2168,1
114209,RETURN,-1,,"CHECK_ARG(env, value)",3,2169,1
114226,RETURN,-1,,"CHECK_ARG(env, result)",3,2170,1
114281,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",5,2177,1
114306,RETURN,-1,,return napi_clear_last_error(env);,3,2184,6
114326,RETURN,-1,,CHECK_ENV(env),3,2192,1
114341,RETURN,-1,,"CHECK_ARG(env, value)",3,2193,1
114358,RETURN,-1,,"CHECK_ARG(env, result)",3,2194,1
114394,RETURN,-1,,return napi_clear_last_error(env);,5,2201,2
114414,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsNumber(), napi_number_expected)",3,2204,1
114462,RETURN,-1,,return napi_clear_last_error(env);,3,2218,10
114483,RETURN,-1,,CHECK_ENV(env),3,2225,1
114498,RETURN,-1,,"CHECK_ARG(env, value)",3,2226,1
114515,RETURN,-1,,"CHECK_ARG(env, result)",3,2227,1
114532,RETURN,-1,,"CHECK_ARG(env, lossless)",3,2228,1
114569,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2232,1
114585,RETURN,-1,,return napi_clear_last_error(env);,3,2236,8
114606,RETURN,-1,,CHECK_ENV(env),3,2243,1
114621,RETURN,-1,,"CHECK_ARG(env, value)",3,2244,1
114638,RETURN,-1,,"CHECK_ARG(env, result)",3,2245,1
114655,RETURN,-1,,"CHECK_ARG(env, lossless)",3,2246,1
114692,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2250,1
114708,RETURN,-1,,return napi_clear_last_error(env);,3,2254,8
114730,RETURN,-1,,CHECK_ENV(env),3,2262,1
114745,RETURN,-1,,"CHECK_ARG(env, value)",3,2263,1
114762,RETURN,-1,,"CHECK_ARG(env, word_count)",3,2264,1
114799,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBigInt(), napi_bigint_expected)",3,2268,1
114852,RETURN,-1,,"CHECK_ARG(env, sign_bit)",5,2277,1
114869,RETURN,-1,,"CHECK_ARG(env, words)",5,2278,1
114886,RETURN,-1,,return napi_clear_last_error(env);,3,2284,11
114906,RETURN,-1,,CHECK_ENV(env),3,2292,1
114921,RETURN,-1,,"CHECK_ARG(env, value)",3,2293,1
114938,RETURN,-1,,"CHECK_ARG(env, result)",3,2294,1
114975,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsBoolean(), napi_boolean_expected)",3,2297,1
114990,RETURN,-1,,return napi_clear_last_error(env);,3,2301,7
115012,RETURN,-1,,CHECK_ENV(env),3,2314,1
115027,RETURN,-1,,"CHECK_ARG(env, value)",3,2315,1
115064,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2318,1
115085,RETURN,-1,,"CHECK_ARG(env, result)",5,2321,1
115157,RETURN,-1,,return napi_clear_last_error(env);,3,2339,6
115179,RETURN,-1,,CHECK_ENV(env),3,2352,1
115194,RETURN,-1,,"CHECK_ARG(env, value)",3,2353,1
115231,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2356,1
115252,RETURN,-1,,"CHECK_ARG(env, result)",5,2359,1
115331,RETURN,-1,,return napi_clear_last_error(env);,3,2377,6
115353,RETURN,-1,,CHECK_ENV(env),3,2393,1
115368,RETURN,-1,,"CHECK_ARG(env, value)",3,2394,1
115405,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsString(), napi_string_expected)",3,2397,1
115426,RETURN,-1,,"CHECK_ARG(env, result)",5,2400,1
115498,RETURN,-1,,return napi_clear_last_error(env);,3,2418,6
115518,RETURN,-1,,NAPI_PREAMBLE(env),3,2424,1
115532,RETURN,-1,,NAPI_PREAMBLE(env),3,2424,1
115546,RETURN,-1,,NAPI_PREAMBLE(env),3,2424,1
115575,RETURN,-1,,"CHECK_ARG(env, value)",3,2425,1
115592,RETURN,-1,,"CHECK_ARG(env, result)",3,2426,1
115630,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2432,13
115658,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115672,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115686,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115711,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115724,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115762,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115789,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,1
115809,RETURN,-1,,"GEN_COERCE_FUNCTION(NUMBER, Number, number)",1,2451,13
115834,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115848,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115862,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115887,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115900,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115938,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115965,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,1
115985,RETURN,-1,,"GEN_COERCE_FUNCTION(OBJECT, Object, object)",1,2452,13
116010,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
116024,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
116038,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
116063,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
116076,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
116114,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
116141,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,1
116161,RETURN,-1,,"GEN_COERCE_FUNCTION(STRING, String, string)",1,2453,13
116182,RETURN,-1,,"return v8impl::Wrap(
      env, js_object, native_object, finalize_cb, finalize_hint, result);",3,2463,1
116200,RETURN,-1,,"return v8impl::Unwrap(env, obj, result, v8impl::KeepWrap);",3,2470,1
116218,RETURN,-1,,"return v8impl::Unwrap(env, obj, result, v8impl::RemoveWrap);",3,2476,1
116248,RETURN,-1,,NAPI_PREAMBLE(env),3,2484,1
116262,RETURN,-1,,NAPI_PREAMBLE(env),3,2484,1
116276,RETURN,-1,,NAPI_PREAMBLE(env),3,2484,1
116305,RETURN,-1,,"CHECK_ARG(env, result)",3,2485,1
116362,RETURN,-1,,return napi_clear_last_error(env);,3,2505,13
116382,RETURN,-1,,NAPI_PREAMBLE(env),3,2511,1
116396,RETURN,-1,,NAPI_PREAMBLE(env),3,2511,1
116410,RETURN,-1,,NAPI_PREAMBLE(env),3,2511,1
116467,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2514,1
116500,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2514,1
116530,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, type_tag)",3,2515,1
116581,RETURN,-1,,"CHECK_MAYBE_NOTHING_WITH_PREAMBLE(env, maybe_has, napi_generic_failure)",3,2519,1
116611,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, !maybe_has.FromJust(), napi_invalid_arg)",3,2520,1
116652,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, tag, napi_generic_failure)",3,2525,1
116691,RETURN,-1,,"CHECK_MAYBE_NOTHING_WITH_PREAMBLE(env, maybe_set, napi_generic_failure)",3,2528,1
116719,RETURN,-1,,"RETURN_STATUS_IF_FALSE_WITH_PREAMBLE(
      env, maybe_set.FromJust(), napi_generic_failure)",3,2529,1
116730,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2532,24
116762,RETURN,-1,,NAPI_PREAMBLE(env),3,2539,1
116776,RETURN,-1,,NAPI_PREAMBLE(env),3,2539,1
116790,RETURN,-1,,NAPI_PREAMBLE(env),3,2539,1
116847,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2542,1
116880,RETURN,-1,,"CHECK_TO_OBJECT_WITH_PREAMBLE(env, context, obj, object)",3,2542,1
116910,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, type_tag)",3,2543,1
116933,RETURN,-1,,"CHECK_ARG_WITH_PREAMBLE(env, result)",3,2544,1
116980,RETURN,-1,,"CHECK_MAYBE_EMPTY_WITH_PREAMBLE(env, maybe_value, napi_generic_failure)",3,2548,1
117108,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2573,18
117139,RETURN,-1,,CHECK_ENV(env),3,2579,1
117154,RETURN,-1,,"CHECK_ARG(env, value)",3,2580,1
117171,RETURN,-1,,"CHECK_ARG(env, result)",3,2581,1
117208,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsExternal(), napi_invalid_arg)",3,2584,1
117234,RETURN,-1,,return napi_clear_last_error(env);,3,2589,8
117255,RETURN,-1,,CHECK_ENV(env),3,2599,1
117270,RETURN,-1,,"CHECK_ARG(env, value)",3,2600,1
117287,RETURN,-1,,"CHECK_ARG(env, result)",3,2601,1
117333,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,2607,1
117360,RETURN,-1,,return napi_clear_last_error(env);,3,2615,9
117379,RETURN,-1,,CHECK_ENV(env),3,2623,1
117394,RETURN,-1,,"CHECK_ARG(env, ref)",3,2624,1
117403,RETURN,-1,,return napi_clear_last_error(env);,3,2628,4
117423,RETURN,-1,,CHECK_ENV(env),3,2641,1
117438,RETURN,-1,,"CHECK_ARG(env, ref)",3,2642,1
117465,RETURN,-1,,return napi_clear_last_error(env);,3,2651,8
117485,RETURN,-1,,CHECK_ENV(env),3,2663,1
117500,RETURN,-1,,"CHECK_ARG(env, ref)",3,2664,1
117519,RETURN,-1,,"return napi_set_last_error(env, napi_generic_failure);",5,2669,1
117539,RETURN,-1,,return napi_clear_last_error(env);,3,2678,9
117559,RETURN,-1,,CHECK_ENV(env),3,2689,1
117574,RETURN,-1,,"CHECK_ARG(env, ref)",3,2690,1
117591,RETURN,-1,,"CHECK_ARG(env, result)",3,2691,1
117613,RETURN,-1,,return napi_clear_last_error(env);,3,2696,7
117632,RETURN,-1,,CHECK_ENV(env),3,2703,1
117647,RETURN,-1,,"CHECK_ARG(env, result)",3,2704,1
117668,RETURN,-1,,return napi_clear_last_error(env);,3,2709,5
117687,RETURN,-1,,CHECK_ENV(env),3,2716,1
117702,RETURN,-1,,"CHECK_ARG(env, scope)",3,2717,1
117714,RETURN,-1,,return napi_handle_scope_mismatch;,5,2719,1
117726,RETURN,-1,,return napi_clear_last_error(env);,3,2724,6
117745,RETURN,-1,,CHECK_ENV(env),3,2731,1
117760,RETURN,-1,,"CHECK_ARG(env, result)",3,2732,1
117781,RETURN,-1,,return napi_clear_last_error(env);,3,2737,5
117800,RETURN,-1,,CHECK_ENV(env),3,2744,1
117815,RETURN,-1,,"CHECK_ARG(env, scope)",3,2745,1
117827,RETURN,-1,,return napi_handle_scope_mismatch;,5,2747,1
117839,RETURN,-1,,return napi_clear_last_error(env);,3,2752,6
117860,RETURN,-1,,CHECK_ENV(env),3,2761,1
117875,RETURN,-1,,"CHECK_ARG(env, scope)",3,2762,1
117892,RETURN,-1,,"CHECK_ARG(env, escapee)",3,2763,1
117909,RETURN,-1,,"CHECK_ARG(env, result)",3,2764,1
117945,RETURN,-1,,return napi_clear_last_error(env);,5,2771,2
117948,RETURN,-1,,"return napi_set_last_error(env, napi_escape_called_twice);",3,2773,8
117971,RETURN,-1,,NAPI_PREAMBLE(env),3,2781,1
117985,RETURN,-1,,NAPI_PREAMBLE(env),3,2781,1
117999,RETURN,-1,,NAPI_PREAMBLE(env),3,2781,1
118028,RETURN,-1,,"CHECK_ARG(env, constructor)",3,2782,1
118050,RETURN,-1,,"CHECK_ARG(env, argv)",5,2784,1
118067,RETURN,-1,,"CHECK_ARG(env, result)",3,2786,1
118110,RETURN,-1,,"CHECK_TO_FUNCTION(env, ctor, constructor)",3,2791,1
118139,RETURN,-1,,"CHECK_TO_FUNCTION(env, ctor, constructor)",3,2791,1
118180,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_pending_exception)",3,2798,1
118196,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2801,17
118228,RETURN,-1,,NAPI_PREAMBLE(env),3,2808,1
118242,RETURN,-1,,NAPI_PREAMBLE(env),3,2808,1
118256,RETURN,-1,,NAPI_PREAMBLE(env),3,2808,1
118285,RETURN,-1,,"CHECK_ARG(env, object)",3,2809,1
118302,RETURN,-1,,"CHECK_ARG(env, result)",3,2810,1
118351,RETURN,-1,,"CHECK_TO_OBJECT(env, context, ctor, constructor)",3,2817,1
118378,RETURN,-1,,"CHECK_TO_OBJECT(env, context, ctor, constructor)",3,2817,1
118401,RETURN,-1,,"return napi_set_last_error(env, napi_function_expected);",5,2823,2
118448,RETURN,-1,,"CHECK_MAYBE_NOTHING(env, maybe_result, status)",3,2830,1
118460,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2832,21
118490,RETURN,-1,,CHECK_ENV(env),3,2839,1
118505,RETURN,-1,,"CHECK_ARG(env, result)",3,2840,1
118520,RETURN,-1,,return napi_clear_last_error(env);,3,2843,4
118539,RETURN,-1,,CHECK_ENV(env),3,2850,1
118554,RETURN,-1,,"CHECK_ARG(env, result)",3,2851,1
118567,RETURN,-1,,"return napi_get_undefined(env, result);",5,2854,1
118604,RETURN,-1,,return napi_clear_last_error(env);,3,2861,4
118624,RETURN,-1,,CHECK_ENV(env),3,2867,1
118639,RETURN,-1,,"CHECK_ARG(env, value)",3,2868,1
118656,RETURN,-1,,"CHECK_ARG(env, result)",3,2869,1
118683,RETURN,-1,,return napi_clear_last_error(env);,3,2874,6
118704,RETURN,-1,,NAPI_PREAMBLE(env),3,2881,1
118718,RETURN,-1,,NAPI_PREAMBLE(env),3,2881,1
118732,RETURN,-1,,NAPI_PREAMBLE(env),3,2881,1
118761,RETURN,-1,,"CHECK_ARG(env, result)",3,2882,1
118810,RETURN,-1,,return GET_RETURN_STATUS(env);,3,2895,13
118856,RETURN,1,,"STATUS_CALL(napi_create_external_buffer(
      env, byte_length, external_data, finalize_cb, finalize_hint, &buffer))",3,2909,1
118859,RETURN,-1,,"return napi_get_typedarray_info(
      env, buffer, nullptr, nullptr, nullptr, result, nullptr);",3,2911,3
118886,RETURN,-1,,CHECK_ENV(env),3,2919,1
118901,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2920,1
118938,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2923,1
118981,RETURN,-1,,return napi_clear_last_error(env);,3,2935,8
119001,RETURN,-1,,CHECK_ENV(env),3,2941,1
119016,RETURN,-1,,"CHECK_ARG(env, value)",3,2942,1
119033,RETURN,-1,,"CHECK_ARG(env, result)",3,2943,1
119060,RETURN,-1,,return napi_clear_last_error(env);,3,2948,6
119083,RETURN,-1,,NAPI_PREAMBLE(env),3,2957,1
119097,RETURN,-1,,NAPI_PREAMBLE(env),3,2957,1
119111,RETURN,-1,,NAPI_PREAMBLE(env),3,2957,1
119140,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,2958,1
119157,RETURN,-1,,"CHECK_ARG(env, result)",3,2959,1
119194,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,2962,1
119256,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int8Array, 1, buffer, byte_offset, length, typedArray)",7,2969,2
119280,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int8Array, 1, buffer, byte_offset, length, typedArray)",7,2969,2
119329,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8Array, 1, buffer, byte_offset, length, typedArray)",7,2973,2
119353,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8Array, 1, buffer, byte_offset, length, typedArray)",7,2973,2
119402,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8ClampedArray, 1, buffer, byte_offset, length, typedArray)",7,2977,2
119426,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint8ClampedArray, 1, buffer, byte_offset, length, typedArray)",7,2977,2
119475,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int16Array, 2, buffer, byte_offset, length, typedArray)",7,2981,2
119499,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int16Array, 2, buffer, byte_offset, length, typedArray)",7,2981,2
119548,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint16Array, 2, buffer, byte_offset, length, typedArray)",7,2985,2
119572,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint16Array, 2, buffer, byte_offset, length, typedArray)",7,2985,2
119621,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int32Array, 4, buffer, byte_offset, length, typedArray)",7,2989,2
119645,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Int32Array, 4, buffer, byte_offset, length, typedArray)",7,2989,2
119694,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint32Array, 4, buffer, byte_offset, length, typedArray)",7,2993,2
119718,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Uint32Array, 4, buffer, byte_offset, length, typedArray)",7,2993,2
119767,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float32Array, 4, buffer, byte_offset, length, typedArray)",7,2997,2
119791,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float32Array, 4, buffer, byte_offset, length, typedArray)",7,2997,2
119840,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float64Array, 8, buffer, byte_offset, length, typedArray)",7,3001,2
119864,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, Float64Array, 8, buffer, byte_offset, length, typedArray)",7,3001,2
119913,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigInt64Array, 8, buffer, byte_offset, length, typedArray)",7,3005,2
119937,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigInt64Array, 8, buffer, byte_offset, length, typedArray)",7,3005,2
119986,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigUint64Array, 8, buffer, byte_offset, length, typedArray)",7,3009,2
120010,RETURN,-1,,"CREATE_TYPED_ARRAY(
          env, BigUint64Array, 8, buffer, byte_offset, length, typedArray)",7,3009,2
120029,RETURN,-1,,"return napi_set_last_error(env, napi_invalid_arg);",7,3013,46
120041,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3017,15
120076,RETURN,-1,,CHECK_ENV(env),3,3027,1
120091,RETURN,-1,,"CHECK_ARG(env, typedarray)",3,3028,1
120128,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsTypedArray(), napi_invalid_arg)",3,3031,1
120362,RETURN,-1,,return napi_clear_last_error(env);,3,3084,13
120384,RETURN,-1,,NAPI_PREAMBLE(env),3,3092,1
120398,RETURN,-1,,NAPI_PREAMBLE(env),3,3092,1
120412,RETURN,-1,,NAPI_PREAMBLE(env),3,3092,1
120441,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3093,1
120458,RETURN,-1,,"CHECK_ARG(env, result)",3,3094,1
120495,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsArrayBuffer(), napi_invalid_arg)",3,3097,1
120528,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,3105,2
120559,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3111,15
120590,RETURN,-1,,CHECK_ENV(env),3,3117,1
120605,RETURN,-1,,"CHECK_ARG(env, value)",3,3118,1
120622,RETURN,-1,,"CHECK_ARG(env, result)",3,3119,1
120649,RETURN,-1,,return napi_clear_last_error(env);,3,3124,6
120672,RETURN,-1,,CHECK_ENV(env),3,3133,1
120687,RETURN,-1,,"CHECK_ARG(env, dataview)",3,3134,1
120724,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, value->IsDataView(), napi_invalid_arg)",3,3137,1
120823,RETURN,-1,,return napi_clear_last_error(env);,3,3164,12
120842,RETURN,-1,,CHECK_ENV(env),3,3168,1
120857,RETURN,-1,,"CHECK_ARG(env, result)",3,3169,1
120868,RETURN,-1,,return napi_clear_last_error(env);,3,3171,4
120888,RETURN,-1,,NAPI_PREAMBLE(env),3,3177,1
120902,RETURN,-1,,NAPI_PREAMBLE(env),3,3177,1
120916,RETURN,-1,,NAPI_PREAMBLE(env),3,3177,1
120945,RETURN,-1,,"CHECK_ARG(env, deferred)",3,3178,1
120962,RETURN,-1,,"CHECK_ARG(env, promise)",3,3179,1
120997,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,3182,1
121041,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3190,19
121062,RETURN,-1,,"return v8impl::ConcludeDeferred(env, deferred, resolution, true);",3,3196,1
121078,RETURN,-1,,"return v8impl::ConcludeDeferred(env, deferred, resolution, false);",3,3202,1
121104,RETURN,-1,,CHECK_ENV(env),3,3208,1
121119,RETURN,-1,,"CHECK_ARG(env, value)",3,3209,1
121136,RETURN,-1,,"CHECK_ARG(env, is_promise)",3,3210,1
121152,RETURN,-1,,return napi_clear_last_error(env);,3,3214,5
121172,RETURN,-1,,NAPI_PREAMBLE(env),3,3220,1
121186,RETURN,-1,,NAPI_PREAMBLE(env),3,3220,1
121200,RETURN,-1,,NAPI_PREAMBLE(env),3,3220,1
121229,RETURN,-1,,"CHECK_ARG(env, result)",3,3221,1
121270,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_date, napi_generic_failure)",3,3224,1
121286,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3228,11
121317,RETURN,-1,,CHECK_ENV(env),3,3234,1
121332,RETURN,-1,,"CHECK_ARG(env, value)",3,3235,1
121349,RETURN,-1,,"CHECK_ARG(env, is_date)",3,3236,1
121365,RETURN,-1,,return napi_clear_last_error(env);,3,3240,5
121385,RETURN,-1,,NAPI_PREAMBLE(env),3,3246,1
121399,RETURN,-1,,NAPI_PREAMBLE(env),3,3246,1
121413,RETURN,-1,,NAPI_PREAMBLE(env),3,3246,1
121442,RETURN,-1,,"CHECK_ARG(env, value)",3,3247,1
121459,RETURN,-1,,"CHECK_ARG(env, result)",3,3248,1
121496,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, val->IsDate(), napi_date_expected)",3,3251,1
121522,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3256,13
121553,RETURN,-1,,NAPI_PREAMBLE(env),3,3262,1
121567,RETURN,-1,,NAPI_PREAMBLE(env),3,3262,1
121581,RETURN,-1,,NAPI_PREAMBLE(env),3,3262,1
121610,RETURN,-1,,"CHECK_ARG(env, script)",3,3263,1
121627,RETURN,-1,,"CHECK_ARG(env, result)",3,3264,1
121654,RETURN,-1,,"return napi_set_last_error(env, napi_string_expected);",5,3269,1
121701,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe_script, napi_generic_failure)",3,3275,1
121732,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, script_result, napi_generic_failure)",3,3278,1
121748,RETURN,-1,,return GET_RETURN_STATUS(env);,3,3281,19
121782,RETURN,-1,,CHECK_ENV(env),3,3292,1
121797,RETURN,-1,,"CHECK_ARG(env, js_object)",3,3293,1
121814,RETURN,-1,,"CHECK_ARG(env, finalize_cb)",3,3294,1
121851,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, v8_value->IsObject(), napi_invalid_arg)",3,3297,1
121900,RETURN,-1,,return napi_clear_last_error(env);,3,3310,11
121920,RETURN,-1,,CHECK_ENV(env),3,3316,1
121935,RETURN,-1,,"CHECK_ARG(env, adjusted_value)",3,3317,1
121950,RETURN,-1,,return napi_clear_last_error(env);,3,3322,4
121971,RETURN,-1,,CHECK_ENV(env),3,3329,1
122009,RETURN,-1,,return napi_clear_last_error(env);,3,3341,6
122028,RETURN,-1,,CHECK_ENV(env),3,3345,1
122043,RETURN,-1,,"CHECK_ARG(env, data)",3,3346,1
122068,RETURN,-1,,return napi_clear_last_error(env);,3,3352,6
122087,RETURN,-1,,CHECK_ENV(env),3,3357,1
122102,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3358,1
122139,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, value->IsArrayBuffer(), napi_arraybuffer_expected)",3,3361,1
122175,RETURN,-1,,"RETURN_STATUS_IF_FALSE(
      env, it->IsDetachable(), napi_detachable_arraybuffer_expected)",3,3365,1
122191,RETURN,-1,,return napi_clear_last_error(env);,3,3370,8
122211,RETURN,-1,,CHECK_ENV(env),3,3376,1
122226,RETURN,-1,,"CHECK_ARG(env, arraybuffer)",3,3377,1
122243,RETURN,-1,,"CHECK_ARG(env, result)",3,3378,1
122278,RETURN,-1,,return napi_clear_last_error(env);,3,3385,6
122424,RETURN,-1,,return v8impl::PersistentToLocal::Strong(context_persistent);,5,63,1
122453,RETURN,-1,,return true;,43,71,1
122467,RETURN,-1,,return;,7,75,1
122479,RETURN,-1,,return this->isolate->IsExecutionTerminating() || !can_call_into_js();,5,82,1
122655,RETURN,-1,,return napi_ok;,3,163,5
122686,RETURN,-1,,return error_code;,3,173,4
122701,RETURN,-1,,return reinterpret_cast<napi_value>(*local);,3,298,1
122729,RETURN,-1,,return local;,3,304,3
122752,RETURN,-1,,"return new Finalizer(env, finalize_callback, finalize_data, finalize_hint);",5,326,1
122763,RETURN,-1,,return finalize_callback_;,30,329,1
122769,RETURN,-1,,return finalize_data_;,18,330,1
122775,RETURN,-1,,return finalize_hint_;,18,331,1
122857,RETURN,-1,,return ownership_;,27,390,1
122967,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,35,1
122975,RETURN,-1,,return true;,3,40,1
123037,RETURN,-1,,return true;,5,52,2
123039,RETURN,-1,,return value->IsTrue();,3,54,9
123123,RETURN,-1,,return value_int;,3,69,11
123204,RETURN,-1,,return value_int;,3,84,11
123295,RETURN,-1,,return value_int;,3,106,13
123441,RETURN,-1,,return value_int;,3,140,17
123758,RETURN,-1,,return this;,40,38,1
123885,RETURN,-1,,return value_int;,3,73,11
123968,RETURN,-1,,return value_int;,3,87,11
124067,RETURN,1,,return value_int;,52,108,1
124147,RETURN,-1,,return value_int;,3,122,20
124164,RETURN,-1,,return ret;,3,128,3
124181,RETURN,-1,,return ret;,3,134,3
124608,RETURN,-1,,return isolate;,3,23,8
124718,RETURN,-1,,return false;,5,54,1
124732,RETURN,-1,,return true;,3,58,12
124798,RETURN,-1,,return {};,5,72,1
124819,RETURN,-1,,return {};,5,76,1
124824,RETURN,-1,,return utf8_value.ToString();,3,79,13
124894,RETURN,-1,,return {};,5,93,1
124909,RETURN,-1,,return {};,5,96,1
124914,RETURN,-1,,return false;,5,99,1
124936,RETURN,-1,,return {};,5,103,1
124937,RETURN,-1,,return value->BooleanValue(isolate);,3,105,14
125118,RETURN,-1,,return ret;,3,43,10
125131,RETURN,1,,return str;,26,47,1
125196,RETURN,-1,,return out;,3,66,8
125255,RETURN,-1,,return ENOTSUP;,3,437,1
125267,RETURN,-1,,"return ""Mapping to large pages is not supported."";",7,444,3
125271,RETURN,-1,,"return ""Large pages are not enabled."";",7,447,6
125275,RETURN,-1,,"return ""failed to find text region"";",7,450,9
125280,RETURN,-1,,"return ""Mapping code to large pages failed. Reverting to default page ""
          ""size."";",7,453,12
125284,RETURN,-1,,"return ""OK"";",7,457,15
125287,RETURN,-1,,"return ""Unknown error"";",7,460,17
125352,RETURN,-1,,return result;,5,388,3
125527,RETURN,1,,return {};,22,82,1
125528,RETURN,-1,,return obj.As<Object>()->GetCreationContext().ToLocalChecked();,3,83,3
125583,RETURN,-1,,return it->second;,7,91,1
125587,RETURN,-1,,return nullptr;,3,94,4
125615,RETURN,-1,,return nullptr;,5,100,1
125617,RETURN,-1,,return module_wrap_it->second;,3,102,4
126118,RETURN,-1,,return;,9,214,2
126140,RETURN,-1,,return;,9,221,3
126158,RETURN,-1,,return;,5,227,1
126330,RETURN,-1,,return assertions;,3,265,3
126385,RETURN,1,,return;,5,281,1
126548,RETURN,-1,,return;,7,313,1
126570,RETURN,-1,,return;,7,320,2
126733,RETURN,-1,,return;,5,351,5
126967,RETURN,1,,return;,7,411,1
127005,RETURN,-1,,return;,5,426,2
127080,RETURN,-1,,"return env->ThrowError(
          ""cannot get namespace, module has not been instantiated"");",7,443,5
127372,RETURN,-1,,return MaybeLocal<Module>();,5,509,4
127408,RETURN,-1,,return MaybeLocal<Module>();,5,521,2
127425,RETURN,-1,,return MaybeLocal<Module>();,5,527,2
127456,RETURN,-1,,return MaybeLocal<Module>();,5,536,2
127487,RETURN,-1,,return MaybeLocal<Module>();,5,543,2
127495,RETURN,-1,,return module->module_.Get(isolate);,3,548,20
127534,RETURN,-1,,return MaybeLocal<Promise>();,5,561,2
127591,RETURN,1,,return {};,62,572,1
127612,RETURN,-1,,return handle_scope.Escape(resolver->GetPromise());,5,578,4
127803,RETURN,-1,,return handle_scope.Escape(result.As<Promise>());,5,621,2
127812,RETURN,-1,,return MaybeLocal<Promise>();,3,624,22
127892,RETURN,1,,return;,5,645,1
127904,RETURN,-1,,return;,5,649,1
128138,RETURN,-1,,return MaybeLocal<Value>();,5,700,4
128162,RETURN,-1,,return MaybeLocal<Value>();,5,705,1
128174,RETURN,-1,,return resolver->GetPromise();,3,709,17
129090,RETURN,-1,,return scope.EscapeMaybe(realm->ExecuteBootstrapper(main_script_id));,3,268,6
129160,RETURN,-1,,"return scope.EscapeMaybe(StartExecution(env, entry));",5,290,8
129187,RETURN,-1,,return env->RunSnapshotDeserializeMain();,5,300,1
129200,RETURN,-1,,"return StartExecution(env, ""internal/main/worker_thread"");",5,304,1
129229,RETURN,-1,,"return StartExecution(env, ""internal/main/inspect"");",5,313,1
129240,RETURN,-1,,"return StartExecution(env, ""internal/main/print_help"");",5,317,1
129252,RETURN,-1,,"return StartExecution(env, ""internal/main/prof_process"");",5,321,1
129272,RETURN,-1,,"return StartExecution(env, ""internal/main/eval_string"");",5,326,1
129284,RETURN,-1,,"return StartExecution(env, ""internal/main/check_syntax"");",5,330,1
129296,RETURN,-1,,"return StartExecution(env, ""internal/main/test_runner"");",5,334,1
129308,RETURN,-1,,"return StartExecution(env, ""internal/main/watch_mode"");",5,338,1
129323,RETURN,-1,,"return StartExecution(env, ""internal/main/run_main_module"");",5,342,1
129340,RETURN,-1,,"return StartExecution(env, ""internal/main/repl"");",5,346,1
129344,RETURN,-1,,"return StartExecution(env, ""internal/main/eval_stdin"");",3,349,18
129398,RETURN,-1,,return;,5,633,1
129445,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,25,708,1
129481,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument2;,7,716,2
129515,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument2;,5,725,2
129694,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,5,766,1
129698,RETURN,-1,,return ExitCode::kNoFailure;,3,768,18
129710,RETURN,-1,,"return static_cast<int>(
      ProcessGlobalArgsInternal(args, exec_args, errors, settings));",3,775,1
129822,RETURN,1,,return ExitCode::kInvalidCommandLineArgument;,29,829,1
129855,RETURN,1,,return exit_code;,46,836,1
129880,RETURN,1,,return exit_code;,44,844,1
129905,RETURN,-1,,return ExitCode::kNoFailure;,3,899,12
129917,RETURN,-1,,"return static_cast<int>(
      InitializeNodeWithArgsInternal(argv, exec_argv, errors, flags));",3,906,1
129993,RETURN,-1,,return result;,7,931,2
130082,RETURN,-1,,return result;,7,949,4
130116,RETURN,-1,,return result;,7,957,6
130145,RETURN,-1,,return result;,7,964,4
130208,RETURN,-1,,return result;,3,1091,14
130216,RETURN,-1,,"return InitializeOncePerProcessInternal(args, flags);",3,1097,1
130335,RETURN,-1,,return exit_code;,7,1151,3
130370,RETURN,-1,,return ExitCode::kGenericUserError;,7,1165,2
130411,RETURN,-1,,return exit_code;,7,1175,1
130477,RETURN,-1,,return exit_code;,3,1198,12
130540,RETURN,-1,,return exit_code;,7,1213,3
130572,RETURN,-1,,return exit_code;,7,1222,2
130636,RETURN,-1,,return exit_code;,3,1243,8
130695,RETURN,-1,,return result->exit_code_enum();,5,1259,1
130734,RETURN,-1,,return sea::BuildSingleExecutableBlob(sea_config);,5,1278,1
130763,RETURN,-1,,return ExitCode::kInvalidCommandLineArgument;,7,1287,2
130767,RETURN,-1,,"return GenerateAndWriteSnapshotData(&snapshot_data, result.get());",5,1289,2
130775,RETURN,-1,,"return LoadSnapshotDataAndRun(&snapshot_data, result.get());",3,1293,17
130802,RETURN,-1,,"return static_cast<int>(StartInternal(argc, argv));",3,1300,2
130819,RETURN,-1,,return 0;,3,1305,2
130832,RETURN,-1,,"return CreateEnvironment(
            setup->isolate_data(), setup->context(),
            std::forward<EnvironmentArgs>(env_args)...);",9,914,1
130857,RETURN,-1,,"return CreateEnvironment(setup->isolate_data(),
                                 setup->context(),
                                 std::forward<EnvironmentArgs>(env_args)...);",9,937,1
130933,RETURN,-1,,"NODE_DEPRECATED(""Use ErrnoException(isolate, ...)"",
                inline v8::Local<v8::Value> ErrnoException(
      int errorno,
      const char* syscall = nullptr,
      const char* message = nullptr,
      const char* path = nullptr) {
  return ErrnoException(v8::Isolate::GetCurrent(),
                        errorno,
                        syscall,
                        message,
                        path);
})",1,151,1
130953,RETURN,-1,,"NODE_DEPRECATED(""Use UVException(isolate, ...)"",
                inline v8::Local<v8::Value> UVException(int errorno,
                                        const char* syscall = nullptr,
                                        const char* message = nullptr,
                                        const char* path = nullptr) {
  return UVException(v8::Isolate::GetCurrent(),
                     errorno,
                     syscall,
                     message,
                     path);
})",1,164,1
131197,RETURN,-1,,"return InitializeOncePerProcess(
      args, static_cast<ProcessInitializationFlags::Flags>(flags_accum));",3,359,4
131945,RETURN,-1,,return ret;,3,919,4
131983,RETURN,-1,,return ret;,3,942,4
131990,RETURN,-1,,"NODE_DEPRECATED(""Use v8::Date::New() directly"",
                inline v8::Local<v8::Value> NODE_UNIXTIME_V8(double time) {
                  return v8::Date::New(
                             v8::Isolate::GetCurrent()->GetCurrentContext(),
                             1000 * time)
                      .ToLocalChecked();
                })",1,946,1
132017,RETURN,-1,,"NODE_DEPRECATED(""Use v8::Date::ValueOf() directly"",
                inline double NODE_V8_UNIXTIME(v8::Local<v8::Date> date) {
  return date->ValueOf() / 1000;
})",1,954,1
132484,RETURN,-1,,"return AsyncCleanupHookHandle(AddEnvironmentCleanupHookInternal(isolate, fun,
      arg));",3,1303,1
132720,RETURN,-1,,return;,7,93,1
132744,RETURN,-1,,return;,7,104,2
132929,RETURN,-1,,return node_env()->can_call_into_js();,3,36,1
133063,RETURN,-1,,"return new BufferFinalizer(
        env, finalize_callback, finalize_data, finalize_hint);",5,123,1
133095,RETURN,1,,return;,51,133,1
133230,RETURN,-1,,return nullptr;,5,181,5
133250,RETURN,-1,,return result;,3,196,5
133335,RETURN,-1,,return napi_queue_full;,9,242,1
133350,RETURN,-1,,return napi_invalid_arg;,9,249,1
133356,RETURN,-1,,return napi_closing;,9,252,2
133366,RETURN,-1,,return napi_ok;,7,257,3
133380,RETURN,-1,,return napi_closing;,7,265,1
133384,RETURN,-1,,return napi_ok;,5,270,5
133401,RETURN,-1,,return napi_invalid_arg;,7,277,1
133436,RETURN,-1,,return napi_ok;,5,292,6
133509,RETURN,-1,,return napi_ok;,9,313,1
133528,RETURN,-1,,return napi_generic_failure;,5,332,7
133539,RETURN,-1,,return napi_ok;,5,338,2
133550,RETURN,-1,,return napi_ok;,5,344,2
133556,RETURN,-1,,return context;,28,347,1
133756,RETURN,-1,,return has_more;,5,419,9
133815,RETURN,-1,,return;,7,441,1
133850,RETURN,-1,,return;,7,458,1
133891,RETURN,-1,,return;,9,476,2
133914,RETURN,-1,,return;,9,483,2
134075,RETURN,-1,,"return node::InternalMakeCallback(node_env(),
                                      resource(),
                                      recv,
                                      callback,
                                      argc,
                                      argv,
                                      {async_id_, trigger_async_id_});",5,570,2
134106,RETURN,-1,,return it;,5,584,5
134146,RETURN,-1,,return env_->node_env();,42,596,1
134155,RETURN,-1,,return resource_.Get(node_env()->isolate());,5,598,1
134168,RETURN,-1,,"return {async_id_, trigger_async_id_};",5,601,1
134275,RETURN,-1,,return node_api_context_register_func<NODE_API_DEFAULT_MODULE_API_VERSION>;,5,680,1
134284,RETURN,-1,,return node_api_context_register_func<9>;,5,682,1
134295,RETURN,-1,,return node_api_context_register_func<NAPI_VERSION_EXPERIMENTAL>;,5,684,1
134306,RETURN,-1,,return nullptr;,5,687,2
134342,RETURN,-1,,return;,5,701,3
134461,RETURN,-1,,"return {
      -1,
      mod->nm_flags | NM_F_DELETEME,
      nullptr,
      mod->nm_filename,
      nullptr,
      napi_module_register_cb,
      mod->nm_modname,
      const_cast<napi_module*>(mod),  // priv
      nullptr,
  };",3,742,1
134499,RETURN,-1,,CHECK_ENV(env),3,766,1
134514,RETURN,-1,,"CHECK_ARG(env, fun)",3,767,1
134528,RETURN,-1,,return napi_ok;,3,771,4
134547,RETURN,-1,,CHECK_ENV(env),3,777,1
134562,RETURN,-1,,"CHECK_ARG(env, fun)",3,778,1
134576,RETURN,-1,,return napi_ok;,3,782,4
134708,RETURN,-1,,CHECK_ENV(env),3,825,1
134723,RETURN,-1,,"CHECK_ARG(env, hook)",3,826,1
134745,RETURN,-1,,return napi_clear_last_error(env);,3,833,6
134758,RETURN,1,,return napi_invalid_arg;,33,838,1
134762,RETURN,-1,,return napi_ok;,3,842,3
134780,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134794,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134808,RETURN,-1,,NAPI_PREAMBLE(env),3,846,1
134837,RETURN,-1,,"CHECK_ARG(env, err)",3,847,1
134864,RETURN,-1,,return napi_clear_last_error(env);,3,852,10
134959,RETURN,-1,,CHECK_ENV(env),3,884,1
134974,RETURN,-1,,"CHECK_ARG(env, result)",3,885,1
134992,RETURN,-1,,return napi_clear_last_error(env);,3,892,6
135011,RETURN,-1,,CHECK_ENV(env),3,899,1
135026,RETURN,-1,,"CHECK_ARG(env, scope)",3,900,1
135038,RETURN,-1,,return napi_callback_scope_mismatch;,5,902,1
135050,RETURN,-1,,return napi_clear_last_error(env);,3,908,5
135071,RETURN,-1,,CHECK_ENV(env),3,915,1
135086,RETURN,-1,,"CHECK_ARG(env, async_resource_name)",3,916,1
135103,RETURN,-1,,"CHECK_ARG(env, result)",3,917,1
135160,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8_resource, async_resource)",5,925,1
135187,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8_resource, async_resource)",5,925,1
135242,RETURN,-1,,"CHECK_TO_STRING(env, context, v8_resource_name, async_resource_name)",3,933,1
135269,RETURN,-1,,"CHECK_TO_STRING(env, context, v8_resource_name, async_resource_name)",3,933,1
135298,RETURN,-1,,return napi_clear_last_error(env);,3,943,15
135317,RETURN,-1,,CHECK_ENV(env),3,948,1
135332,RETURN,-1,,"CHECK_ARG(env, async_context)",3,949,1
135345,RETURN,-1,,return napi_clear_last_error(env);,3,956,6
135369,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
135383,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
135397,RETURN,-1,,NAPI_PREAMBLE(env),3,966,1
135426,RETURN,-1,,"CHECK_ARG(env, recv)",3,967,1
135448,RETURN,-1,,"CHECK_ARG(env, argv)",5,969,1
135493,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8recv, recv)",3,975,1
135520,RETURN,-1,,"CHECK_TO_OBJECT(env, context, v8recv, recv)",3,975,1
135556,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,978,1
135585,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8func, func)",3,978,1
135659,RETURN,-1,,"return napi_set_last_error(env, napi_pending_exception);",5,1001,1
135680,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, callback_result, napi_generic_failure)",5,1003,1
135701,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1010,17
135733,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135747,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135761,RETURN,-1,,NAPI_PREAMBLE(env),3,1017,1
135790,RETURN,-1,,"CHECK_ARG(env, result)",3,1018,1
135830,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1022,1
135872,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1032,13
135906,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135920,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135934,RETURN,-1,,NAPI_PREAMBLE(env),3,1041,1
135963,RETURN,-1,,"CHECK_ARG(env, result)",3,1042,1
136029,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1061,1
136045,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1064,15
136078,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
136092,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
136106,RETURN,-1,,NAPI_PREAMBLE(env),3,1076,1
136135,RETURN,-1,,"CHECK_ARG(env, result)",3,1077,1
136178,RETURN,-1,,"CHECK_MAYBE_EMPTY(env, maybe, napi_generic_failure)",3,1082,1
136220,RETURN,-1,,return GET_RETURN_STATUS(env);,3,1091,13
136251,RETURN,-1,,CHECK_ENV(env),3,1097,1
136266,RETURN,-1,,"CHECK_ARG(env, value)",3,1098,1
136283,RETURN,-1,,"CHECK_ARG(env, result)",3,1099,1
136302,RETURN,-1,,return napi_clear_last_error(env);,3,1102,5
136323,RETURN,-1,,CHECK_ENV(env),3,1109,1
136338,RETURN,-1,,"CHECK_ARG(env, value)",3,1110,1
136388,RETURN,-1,,return napi_clear_last_error(env);,3,1121,6
136407,RETURN,-1,,CHECK_ENV(env),3,1126,1
136422,RETURN,-1,,"CHECK_ARG(env, result)",3,1127,1
136448,RETURN,-1,,return napi_clear_last_error(env);,3,1131,6
136463,RETURN,-1,,return napi_ok;,7,1140,3
136467,RETURN,-1,,return napi_invalid_arg;,7,1142,6
136471,RETURN,-1,,return napi_cancelled;,7,1144,9
136474,RETURN,-1,,return napi_generic_failure;,7,1146,11
136500,RETURN,-1,,"return new Work(
        env, async_resource, async_resource_name, execute, complete, data);",5,1178,1
136532,RETURN,1,,return;,31,1187,1
136571,RETURN,-1,,CHECK_ENV(env),3,1230,1
136586,RETURN,-1,,"CHECK_ARG(env, execute)",3,1231,1
136603,RETURN,-1,,"CHECK_ARG(env, result)",3,1232,1
136653,RETURN,-1,,"CHECK_TO_OBJECT(env, context, resource, async_resource)",5,1238,1
136680,RETURN,-1,,"CHECK_TO_OBJECT(env, context, resource, async_resource)",5,1238,1
136731,RETURN,-1,,"CHECK_TO_STRING(env, context, resource_name, async_resource_name)",3,1244,1
136758,RETURN,-1,,"CHECK_TO_STRING(env, context, resource_name, async_resource_name)",3,1244,1
136793,RETURN,-1,,return napi_clear_last_error(env);,3,1255,12
136812,RETURN,-1,,CHECK_ENV(env),3,1260,1
136827,RETURN,-1,,"CHECK_ARG(env, work)",3,1261,1
136841,RETURN,-1,,return napi_clear_last_error(env);,3,1265,4
136860,RETURN,-1,,CHECK_ENV(env),3,1269,1
136875,RETURN,-1,,"CHECK_ARG(env, loop)",3,1270,1
136892,RETURN,-1,,return napi_clear_last_error(env);,3,1272,4
136911,RETURN,-1,,CHECK_ENV(env),3,1277,1
136926,RETURN,-1,,"CHECK_ARG(env, work)",3,1278,1
136952,RETURN,1,,"STATUS_CALL(napi_get_uv_event_loop(env, &event_loop))",3,1281,1
136965,RETURN,-1,,return napi_clear_last_error(env);,3,1287,9
136984,RETURN,-1,,CHECK_ENV(env),3,1292,1
136999,RETURN,-1,,"CHECK_ARG(env, work)",3,1293,1
137041,RETURN,-1,,"CALL_UV(env, w->CancelWork())",3,1297,1
137047,RETURN,-1,,return napi_clear_last_error(env);,3,1299,6
137075,RETURN,-1,,CHECK_ENV(env),3,1314,1
137090,RETURN,-1,,"CHECK_ARG(env, async_resource_name)",3,1315,1
137107,RETURN,-1,,"RETURN_STATUS_IF_FALSE(env, initial_thread_count > 0, napi_invalid_arg)",3,1316,1
137124,RETURN,-1,,"CHECK_ARG(env, result)",3,1317,1
137159,RETURN,-1,,"CHECK_ARG(env, call_js_cb)",5,1323,1
137181,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8_func, func)",5,1325,1
137210,RETURN,-1,,"CHECK_TO_FUNCTION(env, v8_func, func)",5,1325,1
137280,RETURN,-1,,"CHECK_TO_OBJECT(env, v8_context, v8_resource, async_resource)",5,1334,1
137307,RETURN,-1,,"CHECK_TO_OBJECT(env, v8_context, v8_resource, async_resource)",5,1334,1
137345,RETURN,-1,,"CHECK_TO_STRING(env, v8_context, v8_name, async_resource_name)",3,1338,1
137372,RETURN,-1,,"CHECK_TO_STRING(env, v8_context, v8_name, async_resource_name)",3,1338,1
137428,RETURN,-1,,"return napi_set_last_error(env, status);",3,1362,17
137451,RETURN,-1,,return napi_ok;,3,1371,4
137462,RETURN,-1,,"return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Push(data,
                                                                   is_blocking);",3,1379,2
137478,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Acquire();,3,1386,2
137493,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Release(mode);,3,1392,2
137509,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Unref();,3,1398,2
137524,RETURN,-1,,return reinterpret_cast<v8impl::ThreadSafeFunction*>(func)->Ref();,3,1404,2
137547,RETURN,-1,,CHECK_ENV(env),3,1409,1
137562,RETURN,-1,,"CHECK_ARG(env, result)",3,1410,1
137576,RETURN,-1,,return napi_clear_last_error(env);,3,1413,4
137901,RETURN,-1,,return node::Environment::GetCurrent(context());,5,31,1
137913,RETURN,-1,,return filename.c_str();,44,33,1
138012,RETURN,-1,,return false;,7,476,5
138038,RETURN,-1,,return false;,11,484,3
138066,RETURN,-1,,return true;,9,492,2
138099,RETURN,-1,,return true;,9,500,5
138129,RETURN,-1,,return false;,11,507,3
138157,RETURN,-1,,return true;,9,519,2
138176,RETURN,-1,,return false;,7,537,6
138232,RETURN,-1,,return false;,7,550,3
138234,RETURN,-1,,return true;,5,553,16
138611,RETURN,1,,return nullptr;,27,296,1
138619,RETURN,-1,,return it->second.module;,5,298,8
138652,RETURN,1,,return;,27,306,1
138727,RETURN,-1,,return true;,5,364,2
138735,RETURN,-1,,return false;,3,368,6
138746,RETURN,1,,return;,27,372,1
138775,RETURN,1,,return address;,45,381,1
138777,RETURN,-1,,return nullptr;,3,382,3
138800,RETURN,-1,,return global_handle_map.get_and_increase_refcount(handle_);,3,393,2
138818,RETURN,-1,,return reinterpret_cast<InitializerCallback>(dlib->GetSymbolAddress(name));,3,402,5
138838,RETURN,-1,,"return reinterpret_cast<napi_addon_register_func>(
      dlib->GetSymbolAddress(name));",3,408,5
138851,RETURN,-1,,"return reinterpret_cast<node_api_addon_get_api_version_func>(
      dlib->GetSymbolAddress(STRINGIFY(NODE_API_MODULE_GET_API_VERSION)));",3,414,1
138878,RETURN,-1,,"return THROW_ERR_DLOPEN_DISABLED(
      env, ""Cannot load native addon because loading addons is disabled."");",5,428,1
138898,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(
        env, ""process.dlopen needs at least 2 arguments"");",5,437,1
138930,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env, ""flag argument must be an integer."");",5,443,1
138992,RETURN,-1,,return;,5,452,1
139053,RETURN,-1,,return mp;,3,570,4
139098,RETURN,-1,,return obj;,3,603,6
139166,RETURN,-1,,return scope.Escape(exports);,3,616,9
139250,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(isolate, ""No such binding: %s"", *module_v);",5,635,1
139362,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(
        env, ""No such binding was linked: %s"", *module_name_v);",5,665,1
139464,RETURN,-1,,"return THROW_ERR_INVALID_MODULE(
        env, ""Linked binding has no declared entry point."");",5,681,1
139618,RETURN,-1,,"return DataQueue::CreateInMemoryEntryFromBackingStore(
            store, byte_offset, byte_length);",9,190,3
139668,RETURN,-1,,"return DataQueue::CreateInMemoryEntryFromBackingStore(
          store, 0, byte_length);",7,199,6
139859,RETURN,-1,,return;,7,368,11
139987,RETURN,1,,return;,55,59,1
140215,RETURN,-1,,"return THROW_ERR_INVALID_ARG_VALUE(env, ""Unabled to open file as blob"");",5,95,1
140454,RETURN,-1,,return tmpl;,3,149,3
140462,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(object);,3,153,1
140503,RETURN,1,,return BaseObjectPtr<Blob>();,5,162,1
140526,RETURN,1,,return BaseObjectPtr<Blob>();,5,166,1
140528,RETURN,-1,,"return MakeBaseObject<Blob>(env, obj, data_queue);",3,168,7
140623,RETURN,-1,,return;,7,181,1
140907,RETURN,-1,,"return Create(env,
                this->data_queue_->slice(start, static_cast<uint64_t>(end)));",3,261,1
140942,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,282,1
141015,RETURN,-1,,return tmpl;,3,296,3
141048,RETURN,-1,,return BaseObjectPtr<Blob::Reader>();,5,306,1
141051,RETURN,-1,,"return MakeBaseObject<Blob::Reader>(env, obj, std::move(blob));",3,309,3
141143,RETURN,-1,,return args.GetReturnValue().Set(bob::STATUS_EOS);,5,324,3
141231,RETURN,-1,,return {};,5,389,2
141232,RETURN,-1,,"return Blob::Create(env, data_queue);",3,391,2
141243,RETURN,-1,,return BaseObject::TransferMode::kCloneable;,3,395,1
141253,RETURN,-1,,return std::make_unique<BlobTransferData>(data_queue_);,3,399,1
141452,RETURN,-1,,return;,5,436,1
141624,RETURN,-1,,return;,7,468,1
141731,RETURN,-1,,return;,5,517,1
141768,RETURN,1,,return BlobBindingData::StoredDataObject {};,5,527,1
141771,RETURN,-1,,return entry->second;,3,528,4
141823,RETURN,-1,,return true;,3,548,1
141845,RETURN,-1,,return info;,3,555,4
141994,RETURN,-1,,return status;,5,23,3
142020,RETURN,-1,,return status;,3,30,5
142103,RETURN,-1,,return eos_;,25,90,1
142356,RETURN,-1,,return ab;,3,138,8
142512,RETURN,1,,return;,29,196,1
142524,RETURN,-1,,return val->IsArrayBufferView();,3,238,1
142534,RETURN,-1,,return obj->IsArrayBufferView();,3,243,1
142559,RETURN,-1,,return static_cast<char*>(ui->Buffer()->Data()) + ui->ByteOffset();,3,250,3
142579,RETURN,-1,,return Data(obj.As<Value>());,3,255,1
142605,RETURN,-1,,return ui->ByteLength();,3,262,3
142630,RETURN,-1,,return ui->ByteLength();,3,269,3
142686,RETURN,1,,return MaybeLocal<Uint8Array>();,5,282,1
142688,RETURN,-1,,return ui;,3,283,6
142713,RETURN,-1,,return MaybeLocal<Uint8Array>();,5,293,2
142715,RETURN,-1,,"return New(env, ab, byte_offset, length);",3,295,4
142747,RETURN,1,,return Local<Object>();,5,306,1
142780,RETURN,-1,,return Local<Object>();,7,315,2
142861,RETURN,1,,return MaybeLocal<Object>();,9,332,1
142863,RETURN,-1,,return scope.Escape(obj);,7,333,5
142869,RETURN,-1,,"return scope.EscapeMaybe(New(isolate, 0));",3,337,9
142906,RETURN,-1,,return MaybeLocal<Object>();,5,347,2
142921,RETURN,1,,return handle_scope.Escape(obj);,5,350,1
142927,RETURN,-1,,return Local<Object>();,3,351,8
142955,RETURN,-1,,return Local<Object>();,5,362,2
143014,RETURN,-1,,return scope.EscapeMaybe(obj);,3,380,9
143045,RETURN,-1,,return MaybeLocal<Object>();,5,389,2
143066,RETURN,1,,return handle_scope.Escape(obj);,5,393,1
143072,RETURN,-1,,return Local<Object>();,3,394,8
143101,RETURN,-1,,return Local<Object>();,5,405,2
143167,RETURN,-1,,return scope.EscapeMaybe(obj);,3,425,9
143203,RETURN,-1,,return MaybeLocal<Object>();,5,439,3
143205,RETURN,-1,,"return handle_scope.EscapeMaybe(
      Buffer::New(env, data, length, callback, hint));",3,441,6
143254,RETURN,-1,,return Local<Object>();,5,456,3
143293,RETURN,-1,,return Local<Object>();,5,464,1
143323,RETURN,1,,return MaybeLocal<Object>();,5,470,1
143325,RETURN,-1,,return scope.Escape(ui);,3,472,9
143358,RETURN,-1,,return MaybeLocal<Object>();,5,483,3
143379,RETURN,1,,return handle_scope.Escape(obj);,5,487,1
143385,RETURN,-1,,return Local<Object>();,3,488,8
143419,RETURN,-1,,return Local<Object>();,7,503,5
143490,RETURN,1,,return handle_scope.Escape(obj);,5,519,1
143496,RETURN,-1,,return Local<Object>();,3,520,10
143612,RETURN,1,,return args.GetReturnValue().SetEmptyString();,5,545,1
143650,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[0], 0, &start))",3,549,1
143658,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[0], 0, &start))",3,549,1
143691,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], buffer.length(), &end))",3,550,1
143699,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], buffer.length(), &end))",3,550,1
143736,RETURN,1,,THROW_AND_RETURN_IF_OOB(Just(end <= buffer.length())),3,552,1
143744,RETURN,1,,THROW_AND_RETURN_IF_OOB(Just(end <= buffer.length())),3,552,1
143809,RETURN,-1,,return;,5,566,3
143909,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,585,1
143917,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,585,1
143947,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,586,1
143955,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,586,1
143988,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], source.length(),
                                          &source_end))",3,587,1
143996,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], source.length(),
                                          &source_end))",3,587,1
144013,RETURN,1,,return args.GetReturnValue().Set(0);,5,592,1
144030,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""sourceStart\"" is out of range."");",5,595,1
144158,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &start))",3,618,1
144166,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &start))",3,618,1
144197,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &end))",3,620,1
144205,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &end))",3,620,1
144237,RETURN,1,,return args.GetReturnValue().Set(-2);,5,629,1
144301,RETURN,1,,return;,46,643,1
144314,RETURN,-1,,return;,5,646,6
144449,RETURN,1,,return;,5,678,1
144455,RETURN,1,,return args.GetReturnValue().Set(-1);,5,686,1
144597,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], 0, &offset))",3,717,1
144605,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[1], 0, &offset))",3,717,1
144618,RETURN,-1,,"return node::THROW_ERR_BUFFER_OUT_OF_BOUNDS(
        env, ""\""offset\"" is outside of buffer bounds"");",5,719,1
144649,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], ts_obj_length - offset,
                                          &max_length))",3,723,1
144657,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], ts_obj_length - offset,
                                          &max_length))",3,723,1
144680,RETURN,1,,return args.GetReturnValue().Set(0);,5,729,1
144800,RETURN,-1,,return result;,3,753,9
144824,RETURN,1,,return 1;,7,764,1
144833,RETURN,1,,return -1;,7,766,1
144843,RETURN,1,,return 1;,7,769,1
144847,RETURN,1,,return -1;,7,771,1
144850,RETURN,-1,,return val;,3,773,2
144937,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,789,1
144945,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[2], 0, &target_start))",3,789,1
144975,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,790,1
144983,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[3], 0, &source_start))",3,790,1
145016,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], target.length(),
                                          &target_end))",3,791,1
145024,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[4], target.length(),
                                          &target_end))",3,791,1
145057,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[5], source.length(),
                                          &source_end))",3,793,1
145065,RETURN,1,,"THROW_AND_RETURN_IF_OOB(ParseArrayIndex(env, args[5], source.length(),
                                          &source_end))",3,793,1
145081,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""sourceStart\"" is out of range."");",5,797,1
145093,RETURN,1,,"return THROW_ERR_OUT_OF_RANGE(
        env, ""The value of \""targetStart\"" is out of range."");",5,800,1
145286,RETURN,-1,,return length_i64 + offset_i64;,7,848,1
145299,RETURN,-1,,return 0;,7,851,1
145303,RETURN,-1,,return -1;,7,854,1
145315,RETURN,-1,,return offset_i64;,7,859,1
145324,RETURN,-1,,return length_i64;,7,862,1
145331,RETURN,-1,,return -1;,7,865,1
145336,RETURN,-1,,return length_i64 - 1;,7,868,1
145493,RETURN,1,,return;,68,897,1
145517,RETURN,-1,,return;,5,907,2
145523,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,911,1
145539,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,915,1
145571,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,921,1
145600,RETURN,1,,return args.GetReturnValue().Set(-1);,7,929,1
145622,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,932,1
145648,RETURN,1,,return;,57,937,1
145663,RETURN,1,,return args.GetReturnValue().Set(-1);,9,942,1
145736,RETURN,1,,return args.GetReturnValue().Set(-1);,7,962,1
145782,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,973,1
146001,RETURN,-1,,return;,5,1019,2
146007,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1023,1
146023,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1027,1
146055,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1033,1
146083,RETURN,-1,,return args.GetReturnValue().Set(-1);,7,1040,1
146254,RETURN,-1,,return args.GetReturnValue().Set(-1);,5,1079,1
146519,RETURN,-1,,"return node::THROW_ERR_INVALID_STATE(
        env, ""Cannot validate on a detached buffer"");",5,1130,1
146596,RETURN,-1,,"return node::THROW_ERR_INVALID_STATE(
        env, ""Cannot validate on a detached buffer"");",5,1145,1
146934,RETURN,-1,,"return {pointer, byte_length};",3,1220,4
147577,RETURN,1,,return false;,5,79,1
147586,RETURN,1,,return false;,5,83,1
147588,RETURN,-1,,return true;,3,86,3
147630,RETURN,-1,,return source->find(id) != source->end();,3,58,3
147659,RETURN,-1,,return result.second;,3,63,3
147771,RETURN,-1,,return config_.ToStringChecked(isolate);,3,82,1
147817,RETURN,-1,,return ids;,3,92,6
147960,RETURN,-1,,return builtin_categories;,3,157,9
147997,RETURN,-1,,return source_it->second.ToStringChecked(isolate);,3,186,6
148189,RETURN,-1,,return {};,5,263,1
148342,RETURN,-1,,return MaybeLocal<Function>();,5,315,1
148433,RETURN,-1,,return scope.Escape(fun);,3,354,28
148541,RETURN,-1,,return maybe;,3,411,8
148616,RETURN,-1,,return MaybeLocal<Value>();,7,433,1
148644,RETURN,-1,,"return CompileAndCall(context, id, arguments.size(), arguments.data(), realm);",3,458,5
148690,RETURN,-1,,return MaybeLocal<Value>();,5,471,1
148703,RETURN,-1,,"return fn->Call(context, undefined, argc, argv);",3,474,5
148797,RETURN,-1,,return all_succeeded;,3,495,7
148981,RETURN,1,,return;,5,537,1
148996,RETURN,1,,return;,5,543,1
149010,RETURN,1,,return;,5,546,1
149025,RETURN,-1,,return;,5,552,1
149103,RETURN,-1,,return;,5,568,1
149118,RETURN,-1,,return;,5,575,1
149132,RETURN,-1,,return;,5,580,1
149147,RETURN,-1,,return;,5,587,1
149161,RETURN,-1,,return;,5,592,1
149176,RETURN,-1,,return;,5,599,1
150525,RETURN,-1,,return result;,5,1057,3
150565,RETURN,-1,,"return Uint32::New(context->GetIsolate(), index)->ToString(context)
      .ToLocalChecked();",3,106,1
150668,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,130,1
150670,RETURN,-1,,"return New(v8_context, env, sandbox_obj, options);",3,132,11
150905,RETURN,-1,,return MaybeLocal<Context>();,7,224,1
150929,RETURN,-1,,return MaybeLocal<Context>();,5,233,1
150931,RETURN,-1,,return scope.Escape(ctx);,3,236,5
150958,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,250,1
151123,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,7,295,1
151148,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,7,302,1
151181,RETURN,-1,,return BaseObjectPtr<ContextifyContext>();,5,315,1
151183,RETURN,-1,,return result;,3,318,20
151504,RETURN,-1,,return;,5,391,2
151612,RETURN,-1,,return Unwrap<ContextifyContext>(context_global.As<Object>());,5,424,1
151621,RETURN,-1,,return nullptr;,3,426,3
151628,RETURN,-1,,return Get(args.This());,3,431,1
151656,RETURN,-1,,return nullptr;,5,437,1
151666,RETURN,-1,,return nullptr;,5,440,1
151668,RETURN,-1,,"return static_cast<ContextifyContext*>(
      context->GetAlignedPointerFromEmbedderData(
          ContextEmbedderIndex::kContextifyContext));",3,442,4
151683,RETURN,-1,,return ctx == nullptr || ctx->context_.IsEmpty();,3,448,1
151712,RETURN,1,,return;,33,458,1
151813,RETURN,1,,return;,33,486,1
151892,RETURN,1,,return;,5,505,1
151932,RETURN,1,,return;,5,525,1
151942,RETURN,1,,return;,45,527,1
151958,RETURN,1,,return;,66,528,1
152061,RETURN,1,,return;,33,554,1
152137,RETURN,1,,return;,33,576,1
152195,RETURN,1,,return;,5,593,1
152318,RETURN,1,,return;,33,636,1
152341,RETURN,1,,return;,5,641,1
152367,RETURN,1,,return;,33,654,1
152392,RETURN,1,,return;,5,659,1
152419,RETURN,1,,return;,33,671,1
152450,RETURN,1,,return;,33,685,1
152481,RETURN,1,,return;,33,698,1
152512,RETURN,1,,return;,33,712,1
152543,RETURN,1,,return;,33,725,1
152566,RETURN,1,,return;,5,730,1
153116,RETURN,-1,,return;,5,865,5
153165,RETURN,-1,,return;,5,881,1
153190,RETURN,1,,return;,5,889,1
153223,RETURN,-1,,return Nothing<bool>();,5,903,1
153260,RETURN,-1,,return Nothing<bool>();,7,912,1
153311,RETURN,-1,,return Nothing<bool>();,9,924,1
153336,RETURN,-1,,return Nothing<bool>();,7,932,1
153338,RETURN,-1,,return Just(true);,3,935,5
153347,RETURN,-1,,"return !value.IsEmpty() &&
         env->script_context_constructor_template()->HasInstance(value);",3,940,1
153559,RETURN,1,,return;,28,985,1
153678,RETURN,1,,return false;,5,1028,1
153695,RETURN,-1,,return false;,5,1033,2
153845,RETURN,1,,return false;,7,1076,1
153905,RETURN,-1,,return false;,5,1102,3
153918,RETURN,-1,,return true;,3,1106,24
154395,RETURN,1,,return;,67,1232,1
154459,RETURN,1,,return;,55,1243,1
154546,RETURN,-1,,return;,5,1265,2
154568,RETURN,-1,,return;,5,1271,1
154612,RETURN,1,,return;,5,1278,1
154628,RETURN,1,,return;,5,1281,1
154650,RETURN,1,,return;,5,1287,1
154688,RETURN,-1,,return;,5,1300,1
154898,RETURN,1,,return;,68,1349,1
154962,RETURN,-1,,return microtask_queue_;,3,1372,1
155352,RETURN,-1,,return false;,3,44,1
155447,RETURN,-1,,return true;,5,102,13
155497,RETURN,-1,,return true;,7,121,2
155504,RETURN,-1,,return false;,3,127,6
155553,RETURN,1,,return;,65,136,1
155646,RETURN,-1,,return;,5,79,1
156034,RETURN,-1,,"FS_TYPE_TO_NAME(OPENDIR, ""opendir"")",5,51,3
156040,RETURN,-1,,"FS_TYPE_TO_NAME(READDIR, ""readdir"")",5,52,6
156046,RETURN,-1,,"FS_TYPE_TO_NAME(CLOSEDIR, ""closedir"")",5,53,9
156049,RETURN,-1,,"return ""unknow"";",7,56,11
156099,RETURN,-1,,return nullptr;,5,112,1
156101,RETURN,-1,,"return new DirHandle(env, obj, dir);",3,115,3
156146,RETURN,1,,return;,16,137,1
156372,RETURN,-1,,return;,5,161,2
156981,RETURN,-1,,return MaybeLocal<Array>();,7,230,2
157007,RETURN,-1,,"return Array::New(env->isolate(), entries.out(), j);",3,237,6
157165,RETURN,-1,,return;,5,246,1
157204,RETURN,-1,,return;,5,257,4
157251,RETURN,-1,,return req_wrap->Reject(error);,5,273,2
157710,RETURN,-1,,return;,7,315,1
157736,RETURN,-1,,return;,7,322,3
157806,RETURN,-1,,return;,7,337,3
157953,RETURN,-1,,return;,5,350,1
158394,RETURN,-1,,return;,7,389,1
158782,RETURN,-1,,"return Just(std::string(*val, init_sz));",5,118,1
158791,RETURN,-1,,return Nothing<std::string>();,3,121,10
158828,RETURN,-1,,"return String::NewFromUtf8(
        isolate, val.data(), NewStringType::kNormal, val.size());",5,131,3
158845,RETURN,-1,,return MaybeLocal<String>();,3,135,5
158906,RETURN,-1,,return -1;,5,161,1
158909,RETURN,-1,,return 0;,3,172,9
158921,RETURN,-1,,return Query(*key);,3,177,3
159015,RETURN,-1,,return Local<Array>();,7,206,2
159026,RETURN,-1,,"return Array::New(isolate, env_v.out(), env_v_index);",3,211,13
159132,RETURN,-1,,return copy;,3,228,9
159150,RETURN,-1,,return it == map_.end() ? Nothing<std::string>() : Just(it->second);,3,234,5
159191,RETURN,1,,return Local<String>();,26,240,1
159200,RETURN,-1,,"return String::NewFromUtf8(
      isolate, val.data(), NewStringType::kNormal, val.size());",3,242,7
159284,RETURN,-1,,return map_.find(key) == map_.end() ? -1 : 0;,3,258,3
159309,RETURN,-1,,return Query(*str);,3,263,3
159396,RETURN,-1,,"return Array::New(isolate, values.data(), values.size());",3,282,6
159415,RETURN,-1,,return std::make_shared<MapKVStore>(*this);,3,286,1
159428,RETURN,-1,,return std::make_shared<MapKVStore>();,3,290,1
159467,RETURN,1,,return Nothing<bool>();,5,299,1
159507,RETURN,1,,return Nothing<bool>();,7,304,1
159553,RETURN,-1,,return Nothing<bool>();,7,311,1
159562,RETURN,-1,,return Just(true);,3,316,10
159669,RETURN,1,,return Nothing<bool>();,14,334,1
159671,RETURN,-1,,return Just(true);,3,336,7
159699,RETURN,-1,,return info.GetReturnValue().SetUndefined();,5,344,1
159811,RETURN,1,,return;,7,373,1
159853,RETURN,-1,,return;,5,380,1
160085,RETURN,-1,,"return EnvSetter(property, desc.value(), info);",7,442,1
160133,RETURN,1,,return;,54,461,1
160345,RETURN,-1,,return maybe_value.ToLocal(&decorated) && decorated->IsTrue();,5,43,5
160357,RETURN,-1,,return false;,3,45,2
160474,RETURN,-1,,return std::string();,5,76,2
160486,RETURN,-1,,return std::string();,5,79,1
160502,RETURN,-1,,return *error_source_utf8;,3,83,21
160556,RETURN,-1,,return sourceline;,5,96,1
160616,RETURN,-1,,return source;,7,109,1
160742,RETURN,-1,,return buf;,5,161,1
160835,RETURN,-1,,"return buf + std::string(underline_buf, off);",3,185,42
161044,RETURN,-1,,return result;,3,234,3
161141,RETURN,-1,,return result;,3,265,8
161155,RETURN,-1,,"return FormatCaughtException(
      isolate, context, try_catch.Exception(), try_catch.Message());",3,272,2
161193,RETURN,1,,return;,26,286,1
161257,RETURN,1,,return;,7,297,1
161281,RETURN,-1,,return;,5,304,1
161328,RETURN,1,,return;,31,315,1
161344,RETURN,-1,,return;,5,321,7
162120,RETURN,-1,,"return {
      codegen_allowed,
      {},
  };",3,586,9
162211,RETURN,-1,,"return """";",7,932,2
162743,RETURN,1,,return;,31,1071,1
162759,RETURN,1,,return;,43,1075,1
162826,RETURN,-1,,return;,5,1085,1
162842,RETURN,-1,,return;,5,1089,1
163038,RETURN,-1,,return;,5,1142,3
163104,RETURN,-1,,return;,5,1169,1
163112,RETURN,-1,,return;,5,1179,1
163145,RETURN,-1,,return;,5,1196,1
163179,RETURN,-1,,return;,5,1214,1
163249,RETURN,-1,,return external_references_;,3,15,2
163499,RETURN,1,,return;,44,487,1
164091,RETURN,-1,,return;,17,1733,9
164505,RETURN,-1,,"return str.substr(start_pos, str_size);",3,110,9
164517,RETURN,-1,,return IsSafeJsInt(value) ? value.As<Integer>()->Value() : -1;,3,114,1
164542,RETURN,-1,,"FS_TYPE_TO_NAME(OPEN, ""open"")",5,122,3
164548,RETURN,-1,,"FS_TYPE_TO_NAME(CLOSE, ""close"")",5,123,6
164554,RETURN,-1,,"FS_TYPE_TO_NAME(READ, ""read"")",5,124,9
164560,RETURN,-1,,"FS_TYPE_TO_NAME(WRITE, ""write"")",5,125,12
164566,RETURN,-1,,"FS_TYPE_TO_NAME(SENDFILE, ""sendfile"")",5,126,15
164572,RETURN,-1,,"FS_TYPE_TO_NAME(STAT, ""stat"")",5,127,18
164578,RETURN,-1,,"FS_TYPE_TO_NAME(LSTAT, ""lstat"")",5,128,21
164584,RETURN,-1,,"FS_TYPE_TO_NAME(FSTAT, ""fstat"")",5,129,24
164590,RETURN,-1,,"FS_TYPE_TO_NAME(FTRUNCATE, ""ftruncate"")",5,130,27
164596,RETURN,-1,,"FS_TYPE_TO_NAME(UTIME, ""utime"")",5,131,30
164602,RETURN,-1,,"FS_TYPE_TO_NAME(FUTIME, ""futime"")",5,132,33
164608,RETURN,-1,,"FS_TYPE_TO_NAME(ACCESS, ""access"")",5,133,36
164614,RETURN,-1,,"FS_TYPE_TO_NAME(CHMOD, ""chmod"")",5,134,39
164620,RETURN,-1,,"FS_TYPE_TO_NAME(FCHMOD, ""fchmod"")",5,135,42
164626,RETURN,-1,,"FS_TYPE_TO_NAME(FSYNC, ""fsync"")",5,136,45
164632,RETURN,-1,,"FS_TYPE_TO_NAME(FDATASYNC, ""fdatasync"")",5,137,48
164638,RETURN,-1,,"FS_TYPE_TO_NAME(UNLINK, ""unlink"")",5,138,51
164644,RETURN,-1,,"FS_TYPE_TO_NAME(RMDIR, ""rmdir"")",5,139,54
164650,RETURN,-1,,"FS_TYPE_TO_NAME(MKDIR, ""mkdir"")",5,140,57
164656,RETURN,-1,,"FS_TYPE_TO_NAME(MKDTEMP, ""mkdtemp"")",5,141,60
164662,RETURN,-1,,"FS_TYPE_TO_NAME(RENAME, ""rename"")",5,142,63
164668,RETURN,-1,,"FS_TYPE_TO_NAME(SCANDIR, ""scandir"")",5,143,66
164674,RETURN,-1,,"FS_TYPE_TO_NAME(LINK, ""link"")",5,144,69
164680,RETURN,-1,,"FS_TYPE_TO_NAME(SYMLINK, ""symlink"")",5,145,72
164686,RETURN,-1,,"FS_TYPE_TO_NAME(READLINK, ""readlink"")",5,146,75
164692,RETURN,-1,,"FS_TYPE_TO_NAME(CHOWN, ""chown"")",5,147,78
164698,RETURN,-1,,"FS_TYPE_TO_NAME(FCHOWN, ""fchown"")",5,148,81
164704,RETURN,-1,,"FS_TYPE_TO_NAME(REALPATH, ""realpath"")",5,149,84
164710,RETURN,-1,,"FS_TYPE_TO_NAME(COPYFILE, ""copyfile"")",5,150,87
164716,RETURN,-1,,"FS_TYPE_TO_NAME(LCHOWN, ""lchown"")",5,151,90
164722,RETURN,-1,,"FS_TYPE_TO_NAME(STATFS, ""statfs"")",5,152,93
164728,RETURN,-1,,"FS_TYPE_TO_NAME(MKSTEMP, ""mkstemp"")",5,153,96
164734,RETURN,-1,,"FS_TYPE_TO_NAME(LUTIME, ""lutime"")",5,154,99
164737,RETURN,-1,,"return ""unknow"";",7,157,101
164823,RETURN,-1,,return nullptr;,5,256,1
164861,RETURN,-1,,return handle;,3,261,8
165002,RETURN,-1,,return UV_ENOSYS;,3,294,1
165019,RETURN,-1,,"return reading_ || closing_ || closed_ ?
      TransferMode::kUntransferable : TransferMode::kTransferable;",3,302,1
165054,RETURN,-1,,return ret;,3,310,5
165300,RETURN,1,,return {};,22,331,1
165309,RETURN,-1,,"return BaseObjectPtr<BaseObject> { FileHandle::New(bd, fd) };",3,335,7
165327,RETURN,1,,return;,28,343,1
165556,RETURN,-1,,return;,5,371,2
165718,RETURN,-1,,return Unwrap<FileHandle>(obj);,3,420,7
165835,RETURN,-1,,return close_resolver.As<Promise>();,5,459,2
165911,RETURN,-1,,return MaybeLocal<Promise>();,5,474,1
166065,RETURN,-1,,return scope.Escape(promise);,3,505,29
166101,RETURN,1,,return;,42,512,1
166136,RETURN,-1,,return fd;,3,527,4
166197,RETURN,1,,return UV_EOF;,5,549,1
166205,RETURN,1,,return 0;,5,554,1
166218,RETURN,-1,,return 0;,5,560,2
166325,RETURN,-1,,return UV_EBUSY;,9,587,1
166485,RETURN,-1,,return 0;,3,662,14
166494,RETURN,-1,,return 0;,3,667,2
166502,RETURN,-1,,"return new FileHandleCloseWrap(this, object);",3,673,1
166522,RETURN,-1,,return 1;,5,679,2
166644,RETURN,-1,,return 0;,3,698,8
166778,RETURN,1,,return;,15,747,1
166855,RETURN,-1,,return false;,5,777,1
166865,RETURN,-1,,return false;,5,782,2
166867,RETURN,-1,,return true;,3,784,3
167646,RETURN,1,,return;,24,837,1
167812,RETURN,1,,return req_wrap->Resolve(Undefined(req_wrap->env()->isolate()));,7,863,1
167867,RETURN,-1,,return req_wrap->Reject(error);,7,870,1
167873,RETURN,-1,,return req_wrap->Resolve(path);,5,872,8
168399,RETURN,-1,,return;,5,922,1
168466,RETURN,-1,,"return req_wrap->Reject(
          UVException(isolate, r, nullptr, req_wrap->syscall(), req->path));",7,942,1
168509,RETURN,-1,,return req_wrap->Reject(error);,7,949,1
169456,RETURN,-1,,return;,5,1036,2
169489,RETURN,-1,,return;,5,1044,2
169570,RETURN,-1,,return;,7,1071,2
170310,RETURN,-1,,return;,7,1168,1
170735,RETURN,-1,,return;,7,1202,1
171155,RETURN,-1,,return;,7,1234,1
171580,RETURN,-1,,return;,7,1274,1
172915,RETURN,-1,,return;,7,1400,1
172980,RETURN,-1,,return;,7,1412,3
175442,RETURN,-1,,return 0;,13,1612,1
175454,RETURN,-1,,return err;,11,1619,1
175582,RETURN,-1,,return UV_ENOTDIR;,15,1641,1
175584,RETURN,-1,,return UV_EEXIST;,13,1643,3
175591,RETURN,1,,return err;,24,1645,1
175597,RETURN,-1,,return 0;,3,1653,5
175674,RETURN,-1,,return err;,3,1748,8
175781,RETURN,-1,,return err;,3,1767,5
176205,RETURN,-1,,return;,11,1811,3
176721,RETURN,-1,,return;,7,1849,1
176786,RETURN,-1,,return;,7,1862,3
177219,RETURN,-1,,return;,7,1907,1
177321,RETURN,-1,,return;,9,1927,4
177378,RETURN,-1,,return;,9,1939,3
177533,RETURN,-1,,return JustVoid();,3,1991,9
177617,RETURN,1,,return;,59,2009,1
178081,RETURN,1,,return;,59,2047,1
178432,RETURN,-1,,return;,7,2063,1
178447,RETURN,1,,return;,24,2066,1
180110,RETURN,1,,return;,66,2266,1
180317,RETURN,1,,return;,9,2296,1
185371,RETURN,-1,,return;,7,2723,3
185667,RETURN,-1,,return true;,3,2818,8
185686,RETURN,-1,,return info;,3,2825,5
186206,RETURN,-1,,return binding_data_.get();,3,2941,1
186566,RETURN,-1,,return;,9,1633,1
186642,RETURN,-1,,return code == NGHTTP2_CANCEL;,5,2276,1
186710,RETURN,-1,,return observers[performance::NODE_PERFORMANCE_ENTRY_TYPE_HTTP2] != 0;,3,56,3
186740,RETURN,1,,return;,18,82,1
186756,RETURN,-1,,return;,5,88,2
186769,RETURN,1,,return;,18,94,1
186990,RETURN,-1,,return count;,3,231,9
187021,RETURN,-1,,return callback_.Get(env()->isolate());,3,250,1
187045,RETURN,-1,,"return Pack(session_->env(), count_, entries_);",3,261,1
187065,RETURN,-1,,"return Pack(state->env(), count, entries);",3,267,4
187130,RETURN,-1,,return scope.Escape(Undefined(env->isolate()));,5,284,1
187159,RETURN,-1,,"return scope.Escape(Buffer::New(env, ab, 0, ab->ByteLength())
                          .FromMaybe(Local<Value>()));",3,287,7
187361,RETURN,-1,,"return ""server"";",34,358,3
187365,RETURN,-1,,"return ""client"";",34,359,6
187391,RETURN,-1,,return;,5,374,2
187525,RETURN,-1,,return;,7,410,6
187872,RETURN,-1,,"return std::string(""Http2Session "") + TypeName() + "" ("" +
      std::to_string(static_cast<int64_t>(get_async_id())) + "")"";",3,550,1
187947,RETURN,-1,,"SET(bytes_read_string, received_bytes)",3,569,1
187984,RETURN,-1,,"SET(bytes_written_string, sent_bytes)",3,570,1
188021,RETURN,-1,,"SET(id_string, id)",3,571,1
188064,RETURN,-1,,"SET(time_to_first_byte_string, first_byte)",3,585,1
188107,RETURN,-1,,"SET(time_to_first_byte_sent_string, first_byte_sent)",3,586,1
188150,RETURN,-1,,"SET(time_to_first_header_string, first_header)",3,587,1
188152,RETURN,-1,,return obj;,3,590,8
188209,RETURN,-1,,"SET(bytes_written_string, data_sent)",3,608,1
188246,RETURN,-1,,"SET(bytes_read_string, data_received)",3,609,1
188283,RETURN,-1,,"SET(frames_received_string, frame_count)",3,610,1
188320,RETURN,-1,,"SET(frames_sent_string, frame_sent)",3,611,1
188357,RETURN,-1,,"SET(max_concurrent_streams_string, max_concurrent_streams)",3,612,1
188394,RETURN,-1,,"SET(ping_rtt_string, ping_rtt)",3,613,1
188431,RETURN,-1,,"SET(stream_average_duration_string, stream_average_duration)",3,614,1
188468,RETURN,-1,,"SET(stream_count_string, stream_count)",3,615,1
188503,RETURN,-1,,return MaybeLocal<Object>();,5,624,1
188505,RETURN,-1,,return obj;,3,628,11
188518,RETURN,1,,return;,5,634,1
188577,RETURN,1,,return;,5,654,1
188638,RETURN,1,,return;,5,677,1
188748,RETURN,-1,,return s != streams_.end() ? s->second : BaseObjectPtr<Http2Stream>();,3,731,3
188787,RETURN,-1,,"return streams_.size() < maxSize &&
         has_available_session_memory(sizeof(Http2Stream));",3,742,5
188860,RETURN,1,,return stream;,5,759,1
188878,RETURN,-1,,return stream;,3,765,5
188899,RETURN,1,,return frameLen;,15,775,1
188921,RETURN,-1,,return pad;,3,784,8
188933,RETURN,-1,,return maxPayloadLen;,3,792,2
189113,RETURN,-1,,"return (frame->hd.type == NGHTTP2_PUSH_PROMISE) ?
      frame->push_promise.promised_stream_id :
      frame->hd.stream_id;",3,872,1
189204,RETURN,1,,return NGHTTP2_ERR_CALLBACK_FAILURE;,9,898,1
189214,RETURN,-1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,7,905,3
189239,RETURN,-1,,return 0;,3,912,8
189278,RETURN,1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,5,931,1
189301,RETURN,-1,,return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;,5,938,2
189303,RETURN,-1,,return 0;,3,940,8
189341,RETURN,-1,,return session->HandleDataFrame(frame);,7,955,3
189407,RETURN,-1,,return 0;,3,982,6
189452,RETURN,-1,,return 1;,5,999,2
189515,RETURN,-1,,return 0;,3,1013,8
189584,RETURN,-1,,return NGHTTP2_STREAM_CLOSED;,5,1034,3
189588,RETURN,-1,,return NGHTTP2_COMPRESSION_ERROR;,5,1036,6
189592,RETURN,-1,,return NGHTTP2_FRAME_SIZE_ERROR;,5,1038,9
189596,RETURN,-1,,return NGHTTP2_FLOW_CONTROL_ERROR;,5,1040,12
189600,RETURN,-1,,return NGHTTP2_REFUSED_STREAM;,5,1042,15
189608,RETURN,-1,,return NGHTTP2_PROTOCOL_ERROR;,5,1046,22
189611,RETURN,-1,,return NGHTTP2_INTERNAL_ERROR;,5,1048,24
189661,RETURN,-1,,return 0;,5,1076,2
189705,RETURN,-1,,return 0;,3,1092,16
189727,RETURN,-1,,return 0;,3,1100,4
189798,RETURN,1,,return 0;,5,1119,1
189858,RETURN,-1,,return 0;,3,1135,17
189870,RETURN,-1,,return 0;,3,1149,1
189912,RETURN,1,,return 0;,5,1171,1
189939,RETURN,1,,return 0;,5,1181,1
190068,RETURN,-1,,return NGHTTP2_ERR_PAUSE;,5,1230,4
190070,RETURN,-1,,return 0;,3,1233,15
190124,RETURN,-1,,return padding;,3,1256,6
190203,RETURN,-1,,return 0;,3,1279,5
190210,RETURN,-1,,"return uv_buf_init(nullptr, size);",3,1285,1
190259,RETURN,-1,,return;,5,1297,2
190408,RETURN,1,,return;,5,1338,1
190520,RETURN,1,,return;,49,1381,1
190650,RETURN,-1,,return 1;,7,1421,3
190652,RETURN,-1,,return 0;,3,1424,6
190751,RETURN,1,,return;,68,1460,1
191006,RETURN,-1,,return;,7,1523,3
191017,RETURN,-1,,return;,5,1527,4
191028,RETURN,1,,return;,66,1530,1
191092,RETURN,1,,return;,7,1545,1
191100,RETURN,-1,,return;,5,1548,4
191116,RETURN,-1,,return;,5,1556,2
191220,RETURN,-1,,return;,5,1600,5
191247,RETURN,1,,return;,5,1621,1
191286,RETURN,1,,return;,45,1650,1
191478,RETURN,1,,return 0;,5,1732,1
191485,RETURN,1,,return 1;,5,1737,1
191529,RETURN,-1,,return 0;,5,1761,2
191545,RETURN,-1,,return 0;,5,1769,2
191654,RETURN,-1,,return 0;,3,1803,30
191691,RETURN,1,,return 0;,16,1820,1
191846,RETURN,-1,,return 0;,3,1861,10
191912,RETURN,-1,,return stream;,3,1884,11
191919,RETURN,-1,,return env()->allocate_managed_buffer(suggested_size);,3,1888,1
191977,RETURN,-1,,return;,5,1905,2
192151,RETURN,1,,return true;,7,1964,1
192153,RETURN,-1,,return false;,3,1966,2
192306,RETURN,-1,,return nullptr;,5,2015,1
192308,RETURN,-1,,"return new Http2Stream(session, obj, id, category, options);",3,2017,3
192434,RETURN,-1,,"return ""HttpStream "" + std::to_string(id()) + "" ("" +
         std::to_string(static_cast<int64_t>(get_async_id())) + "") ["" + sname +
         ""]"";",3,2073,5
192492,RETURN,-1,,return stream();,50,2089,1
192498,RETURN,-1,,"return nghttp2_session_find_stream(session_->session(), id_);",3,2092,1
192529,RETURN,-1,,return nullptr;,3,2105,1
192539,RETURN,1,,return UV_EPIPE;,5,2110,1
192557,RETURN,-1,,return 1;,3,2120,3
192566,RETURN,1,,return;,5,2129,1
192682,RETURN,-1,,return ret;,3,2191,12
192728,RETURN,-1,,return ret;,3,2209,8
192841,RETURN,-1,,return ret;,3,2247,8
192886,RETURN,-1,,return ret;,3,2266,8
192919,RETURN,-1,,return;,7,2289,2
192933,RETURN,-1,,return;,5,2299,2
192942,RETURN,1,,return;,5,2307,1
193022,RETURN,-1,,return stream;,3,2338,10
193051,RETURN,-1,,return 0;,3,2358,8
193067,RETURN,1,,return 0;,5,2365,1
193073,RETURN,-1,,return 0;,3,2368,5
193094,RETURN,-1,,return UV_EOF;,5,2388,1
193150,RETURN,-1,,return 0;,3,2404,8
193172,RETURN,1,,return true;,5,2418,1
193210,RETURN,-1,,return false;,5,2427,1
193241,RETURN,-1,,return true;,3,2437,12
193364,RETURN,1,,return 0;,16,2478,1
193531,RETURN,-1,,"return OnRead(handle, id, buf, length, flags, source, user_data);",7,2515,1
193540,RETURN,-1,,return NGHTTP2_ERR_DEFERRED;,5,2517,5
193584,RETURN,-1,,return amount;,3,2530,15
193755,RETURN,-1,,return args.GetReturnValue().Set(false);,5,2582,2
194192,RETURN,-1,,return args.GetReturnValue().Set(ret);,5,2706,2
194230,RETURN,1,,return;,5,2721,1
194766,RETURN,-1,,return args.GetReturnValue().Set(ret);,5,2859,2
195104,RETURN,1,,return;,5,2948,1
195390,RETURN,-1,,return ping;,3,3011,3
195422,RETURN,-1,,return false;,5,3019,1
195443,RETURN,1,,return false;,5,3025,1
195458,RETURN,-1,,return false;,5,3029,2
195478,RETURN,-1,,return true;,3,3040,9
195514,RETURN,-1,,return settings;,3,3050,3
195545,RETURN,-1,,return false;,5,3058,1
195567,RETURN,1,,return false;,5,3064,1
195582,RETURN,-1,,return false;,5,3068,2
195601,RETURN,-1,,return true;,3,3074,9
195634,RETURN,-1,,return callback_.Get(env()->isolate());,3,3092,1
196102,RETURN,1,,return;,25,3184,1
197935,RETURN,-1,,return;,5,27,2
198067,RETURN,-1,,return;,7,55,6
198139,RETURN,-1,,"return std::max(max_header_pairs, min_header_pairs);",3,71,3
198155,RETURN,-1,,"return std::max(max_header_pairs, min_header_pairs);",3,76,3
198176,RETURN,-1,,return ret;,3,84,5
198184,RETURN,-1,,"return IsZeroLength(-1, name, value);",3,91,1
198208,RETURN,1,,return true;,5,101,1
198218,RETURN,-1,,"return header_name != nullptr ||
      NgHeader<T>::rcbufferpointer_t::IsZeroLength(name);",3,104,4
198385,RETURN,-1,,return str;,7,166,3
198387,RETURN,-1,,return eternal.Get(env_->isolate());,5,168,5
198396,RETURN,-1,,"return rcbufferpointer_t::External::New(allocator, name_);",3,170,4
198410,RETURN,-1,,"return rcbufferpointer_t::External::New(allocator, value_);",3,176,1
198423,RETURN,-1,,return name_.str();,3,181,1
198432,RETURN,-1,,return value_.str();,3,186,1
198441,RETURN,-1,,return name_.len() + value_.len();,3,191,1
198455,RETURN,-1,,return flags_;,3,196,1
198594,RETURN,-1,,return c == ' ' || c == '\t';,3,91,1
198760,RETURN,1,,"return OneByteString(env->isolate(), str_, size_);",7,170,1
198770,RETURN,1,,return String::Empty(env->isolate());,7,172,1
198798,RETURN,-1,,return ToString(env);,5,181,2
198906,RETURN,-1,,return rv;,7,292,1
198914,RETURN,-1,,return 0;,5,296,5
198932,RETURN,-1,,return rv;,7,303,1
198940,RETURN,-1,,return 0;,5,307,5
198958,RETURN,-1,,return rv;,7,314,1
199005,RETURN,-1,,return 0;,5,334,8
199023,RETURN,-1,,return rv;,7,341,1
199057,RETURN,-1,,return 0;,5,355,8
199108,RETURN,1,,return 0;,7,385,1
199355,RETURN,-1,,return -1;,7,444,2
199358,RETURN,-1,,return static_cast<int>(val);,5,447,24
199373,RETURN,1,,return 0;,7,453,1
199413,RETURN,1,,return 0;,7,461,1
199458,RETURN,-1,,return HPE_USER;,7,470,3
199460,RETURN,-1,,return 0;,5,473,11
199536,RETURN,1,,return 0;,7,501,1
199585,RETURN,-1,,return -1;,7,513,2
199588,RETURN,-1,,return 0;,5,516,13
199597,RETURN,-1,,return 0;,5,522,2
199606,RETURN,-1,,return 0;,5,529,2
200183,RETURN,1,,return;,7,700,1
200263,RETURN,-1,,return;,7,724,2
200316,RETURN,1,,"return uv_buf_init(Malloc(suggested_size), suggested_size);",7,746,1
200341,RETURN,-1,,"return uv_buf_init(binding_data_->parser_buffer.data(), kAllocBufferSize);",5,752,4
200373,RETURN,-1,,return;,7,770,2
200379,RETURN,1,,return;,7,775,1
200397,RETURN,1,,return;,7,781,1
200423,RETURN,1,,return;,7,787,1
200533,RETURN,1,,return scope.Escape(Local<Value>());,7,839,1
200717,RETURN,-1,,return scope.Escape(e);,7,870,11
200728,RETURN,-1,,return scope.Escape(Local<Value>());,7,875,1
200734,RETURN,-1,,return scope.Escape(nread_obj);,5,877,18
200793,RETURN,-1,,"return Array::New(env()->isolate(), headers_v, num_values_ * 2);",5,889,3
200848,RETURN,1,,return;,7,901,1
200973,RETURN,-1,,return HPE_USER;,7,950,2
200975,RETURN,-1,,return 0;,5,952,3
200985,RETURN,-1,,return 0;,7,958,1
200994,RETURN,-1,,return HPE_PAUSED;,5,963,4
201000,RETURN,-1,,return true;,5,971,1
201062,RETURN,-1,,return rv;,7,1006,6
201116,RETURN,-1,,return lhs < rhs;,5,1020,1
201129,RETURN,-1,,return true;,5,1022,1
201140,RETURN,-1,,return false;,5,1024,1
201142,RETURN,-1,,return lhs->last_message_start_ < rhs->last_message_start_;,3,1027,2
201236,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1050,8
201317,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1069,8
201391,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1086,8
201487,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, 0));",5,1104,1
201561,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, 0));",5,1123,1
201665,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(isolate, result.data(), result.size()));",3,1149,26
201781,RETURN,1,,return;,32,1208,1
202383,RETURN,-1,,"return node::Start(argc, argv);",3,97,1
202505,RETURN,-1,,return;,5,68,1
202559,RETURN,-1,,return exit_code;,3,87,14
202709,RETURN,-1,,return env;,3,145,8
202835,RETURN,-1,,return BaseObject::TransferMode::kUntransferable;,3,51,1
202845,RETURN,-1,,return CloneForMessaging();,3,55,1
202851,RETURN,-1,,return {};,3,59,1
202856,RETURN,-1,,return Just(BaseObjectList {});,3,63,1
202866,RETURN,-1,,return Just(true);,3,68,1
202876,RETURN,-1,,return Just(true);,3,75,1
202888,RETURN,-1,,return main_message_buf_.data == nullptr;,3,82,1
202921,RETURN,1,,return MaybeLocal<Object>();,7,107,1
202934,RETURN,-1,,return host_objects_[id]->object(isolate);,7,110,2
202973,RETURN,1,,return MaybeLocal<Object>();,7,116,1
202980,RETURN,-1,,return scope.Escape(object.As<Object>());,5,118,10
203001,RETURN,-1,,return shared_array_buffers_[clone_id];,5,124,2
203017,RETURN,-1,,"return WasmModuleObject::FromCompiledModule(
        isolate, wasm_modules_[transfer_id]);",5,130,2
203036,RETURN,-1,,return &shared_value_conveyor_.value();,5,136,2
203166,RETURN,1,,return {};,27,182,1
203225,RETURN,-1,,return {};,11,195,1
203358,RETURN,1,,return {};,5,231,1
203377,RETURN,1,,return {};,5,234,1
203394,RETURN,1,,return {};,7,238,1
203399,RETURN,-1,,return handle_scope.Escape(return_value);,3,242,25
203447,RETURN,-1,,return wasm_modules_.size() - 1;,3,256,2
203516,RETURN,-1,,return MaybeLocal<Function>();,5,273,1
203523,RETURN,-1,,return emit_message_val.As<Function>();,3,276,7
203575,RETURN,-1,,return MaybeLocal<Function>();,5,287,1
203592,RETURN,-1,,return domexception_ctor;,3,291,8
203650,RETURN,-1,,return;,5,303,1
203685,RETURN,-1,,"return WriteHostObject(
          BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(object) });",7,322,1
203746,RETURN,-1,,"return serializer->WriteValue(env_->context(), normal_object);",7,338,6
203761,RETURN,-1,,return Nothing<bool>();,5,342,6
203795,RETURN,-1,,return Just(i);,9,352,1
203814,RETURN,-1,,return Just(i);,5,359,5
203823,RETURN,-1,,return Just(msg_->AddWASMModule(module->GetCompiledModule()));,5,364,1
203848,RETURN,-1,,return true;,5,370,2
203915,RETURN,1,,return Nothing<bool>();,18,381,1
203928,RETURN,1,,return Nothing<bool>();,9,383,1
203939,RETURN,-1,,return Just(true);,5,386,2
204001,RETURN,1,,return Nothing<bool>();,9,402,1
204029,RETURN,-1,,return Just(true);,5,411,2
204059,RETURN,-1,,return Nothing<bool>();,7,421,2
204088,RETURN,-1,,return Just(true);,9,427,2
204102,RETURN,-1,,return Nothing<bool>();,7,433,2
204136,RETURN,-1,,return Just(true);,5,442,12
204258,RETURN,-1,,return Nothing<bool>();,9,483,1
204316,RETURN,-1,,return Nothing<bool>();,9,508,2
204373,RETURN,-1,,return Nothing<bool>();,9,524,2
204420,RETURN,-1,,return Nothing<bool>();,9,536,2
204471,RETURN,-1,,return Nothing<bool>();,9,548,2
204495,RETURN,-1,,return Nothing<bool>();,5,558,5
204506,RETURN,1,,return Nothing<bool>();,5,561,1
204523,RETURN,-1,,return Nothing<bool>();,5,565,1
204568,RETURN,1,,return Nothing<bool>();,5,577,1
204592,RETURN,-1,,return Just(true);,3,584,22
204763,RETURN,1,,return;,5,656,1
204793,RETURN,1,,return;,7,661,1
204809,RETURN,1,,return;,5,666,1
204829,RETURN,-1,,return data_ == nullptr || IsHandleClosing();,3,674,1
204842,RETURN,1,,return;,26,678,1
204936,RETURN,1,,return nullptr;,5,715,1
204954,RETURN,-1,,return nullptr;,5,720,1
205008,RETURN,-1,,return port;,3,739,11
205065,RETURN,-1,,return env()->no_message_symbol();,7,762,1
205091,RETURN,-1,,return env()->no_message_symbol();,5,771,2
205103,RETURN,1,,return MaybeLocal<Value>();,35,774,1
205105,RETURN,-1,,"return received->Deserialize(env(), context, port_list);",3,776,5
205198,RETURN,-1,,return;,7,808,2
205366,RETURN,-1,,return;,7,854,4
205396,RETURN,-1,,return std::move(data_);,3,871,5
205409,RETURN,1,,return BaseObject::TransferMode::kUntransferable;,5,876,1
205415,RETURN,-1,,return BaseObject::TransferMode::kTransferable;,3,877,2
205426,RETURN,-1,,return Detach();,3,882,2
205435,RETURN,-1,,"return BaseObjectPtr<MessagePort> { MessagePort::New(
      env, context,
      static_unique_pointer_cast<MessagePortData>(std::move(self))) };",3,889,1
205505,RETURN,-1,,return serialization_maybe;,5,909,1
205513,RETURN,-1,,return Nothing<bool>();,5,912,1
205532,RETURN,1,,return res;,5,918,1
205547,RETURN,-1,,return res;,3,923,14
205568,RETURN,-1,,return Nothing<bool>();,5,932,2
205570,RETURN,-1,,"return group_->Dispatch(this, message, error);",3,934,2
205593,RETURN,1,,return Just(false);,28,942,1
205652,RETURN,1,,return Nothing<bool>();,9,950,1
205654,RETURN,-1,,return Just(true);,5,952,6
205690,RETURN,1,,return Nothing<bool>();,35,958,1
205699,RETURN,1,,return Just(false);,39,959,1
205726,RETURN,1,,return Nothing<bool>();,28,963,1
205735,RETURN,1,,return Just(false);,30,964,1
205763,RETURN,1,,return Nothing<bool>();,5,968,1
205772,RETURN,1,,return Just(false);,28,969,1
205814,RETURN,1,,return Nothing<bool>();,28,975,1
205823,RETURN,1,,return Just(false);,30,976,1
205851,RETURN,1,,return Nothing<bool>();,7,980,1
205886,RETURN,1,,return Nothing<bool>();,7,985,1
205917,RETURN,-1,,return Just(true);,3,991,18
205964,RETURN,-1,,"return THROW_ERR_MISSING_ARGS(env, ""Not enough arguments to ""
                                       ""MessagePort.postMessage"");",5,1000,1
205985,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""Optional transferList argument must be an iterable"");",5,1007,1
206014,RETURN,1,,return;,7,1015,1
206046,RETURN,1,,return;,39,1019,1
206067,RETURN,1,,return;,33,1022,1
206072,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
              ""Optional options.transfer argument must be an iterable"");",11,1024,1
206110,RETURN,-1,,return;,5,1038,3
206195,RETURN,-1,,return;,5,1063,1
206228,RETURN,-1,,return;,5,1073,1
206317,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""The \""port\"" argument must be a MessagePort instance"");",5,1094,1
206354,RETURN,-1,,return;,5,1102,2
206430,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env,
        ""The \""port\"" argument must be a MessagePort instance"");",5,1116,1
206466,RETURN,-1,,return;,5,1123,4
206498,RETURN,-1,,"return THROW_ERR_INVALID_ARG_TYPE(env, ""Invalid context argument"");",5,1131,1
206639,RETURN,1,,return templ;,5,1163,1
206706,RETURN,-1,,return GetMessagePortConstructorTemplate(env);,3,1179,4
206771,RETURN,-1,,return TransferMode::kUntransferable;,5,1200,1
206775,RETURN,-1,,return has_clone ? TransferMode::kCloneable : TransferMode::kTransferable;,3,1203,7
206788,RETURN,-1,,return TransferOrClone(TransferMode::kTransferable);,3,1207,1
206797,RETURN,-1,,return TransferOrClone(TransferMode::kCloneable);,3,1211,1
206865,RETURN,-1,,return {};,5,1227,1
206896,RETURN,-1,,return {};,7,1233,1
206956,RETURN,-1,,return {};,9,1243,1
206970,RETURN,1,,return {};,45,1246,1
206971,RETURN,-1,,"return std::make_unique<Data>(
          *deserialize_info_str, Global<Value>(env()->isolate(), data));",7,1247,8
207000,RETURN,1,,return TransferOrClone(TransferMode::kCloneable);,5,1253,1
207007,RETURN,1,,return {};,5,1255,1
207060,RETURN,-1,,return Nothing<BaseObjectList>();,5,1267,1
207069,RETURN,1,,return Just(BaseObjectList {});,30,1269,1
207097,RETURN,-1,,return Nothing<BaseObjectList>();,5,1274,1
207106,RETURN,1,,return Just(BaseObjectList {});,27,1276,1
207155,RETURN,1,,return Nothing<BaseObjectList>();,7,1283,1
207181,RETURN,-1,,return Just(ret);,3,1287,14
207214,RETURN,1,,return Nothing<bool>();,57,1296,1
207245,RETURN,-1,,return Nothing<bool>();,5,1301,1
207254,RETURN,1,,return Just(true);,30,1303,1
207274,RETURN,-1,,return Nothing<bool>();,5,1306,1
207276,RETURN,-1,,return Just(true);,3,1308,10
207302,RETURN,-1,,return {};,5,1328,2
207325,RETURN,1,,return {};,62,1332,1
207380,RETURN,-1,,return {};,5,1340,1
207381,RETURN,-1,,return BaseObjectPtr<BaseObject> { Unwrap<BaseObject>(ret) };,3,1343,9
207418,RETURN,-1,,return ret;,3,1351,6
207484,RETURN,-1,,return group;,3,1364,7
207572,RETURN,-1,,return Nothing<bool>();,5,1394,2
207579,RETURN,1,,return Just(false);,5,1399,1
207601,RETURN,-1,,return Nothing<bool>();,5,1406,2
207637,RETURN,-1,,return Just(true);,9,1419,2
207645,RETURN,-1,,return Just(true);,3,1425,7
207791,RETURN,-1,,return;,5,1469,2
207825,RETURN,1,,return;,25,1476,1
207844,RETURN,-1,,return;,5,1480,2
208438,RETURN,1,,return;,7,40,1
208479,RETURN,-1,,return static_cast<T*>(wrap);,5,54,7
208487,RETURN,-1,,return handle(v8::Isolate::GetCurrent());,5,59,1
208500,RETURN,-1,,"return v8::Local<v8::Object>::New(isolate, persistent());",5,64,1
208519,RETURN,-1,,return handle_;,5,70,1
208684,RETURN,-1,,"return credentials::SafeGetenv(name, &text) ? text : """";",5,1285,2
209172,RETURN,1,,return;,34,300,1
210365,RETURN,1,,"return host.substr(1, host.size() - 2);",5,998,1
210379,RETURN,1,,return host;,5,1000,1
210429,RETURN,-1,,return static_cast<int>(result);,3,1013,6
210455,RETURN,1,,"return HostPort{host, DebugOptions::kDefaultInspectorPort};",5,1022,1
210492,RETURN,-1,,"return HostPort{arg, DebugOptions::kDefaultInspectorPort};",9,1030,1
210499,RETURN,-1,,"return HostPort { """", ParseAndValidatePort(arg, errors) };",5,1033,2
210506,RETURN,-1,,"return HostPort { RemoveBrackets(arg.substr(0, colon)),
                    ParseAndValidatePort(arg.substr(colon + 1), errors) };",3,1036,7
210608,RETURN,-1,,return out.str();,3,1075,11
210638,RETURN,-1,,"return env->ThrowError(
        ""Should not query options before bootstrapping is done"");",5,1085,1
210737,RETURN,-1,,return;,5,1109,1
210891,RETURN,-1,,return;,11,1147,1
210916,RETURN,-1,,return;,11,1154,1
211001,RETURN,-1,,return;,11,1168,1
211171,RETURN,-1,,return;,7,1199,1
211190,RETURN,1,,return;,71,1204,1
211208,RETURN,-1,,return;,5,1209,1
211249,RETURN,-1,,return;,5,1215,1
211278,RETURN,-1,,"return env->ThrowError(
        ""Should not query options before bootstrapping is done"");",5,1225,1
211337,RETURN,1,,return;,21,1235,1
211363,RETURN,1,,return;,21,1240,1
211616,RETURN,-1,,return env_argv;,9,1317,2
211686,RETURN,-1,,return env_argv;,3,1341,8
211793,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,70,3
211865,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,85,3
211984,RETURN,1,,return;,5,109,1
212220,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,156,2
212328,RETURN,1,,return args.GetReturnValue().SetUndefined();,5,186,1
212359,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,192,3
212752,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,261,3
212856,RETURN,1,,return;,9,283,1
212900,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,296,3
213059,RETURN,-1,,return;,5,323,3
213326,RETURN,-1,,return;,5,377,3
213691,RETURN,-1,,return info;,3,70,3
213748,RETURN,-1,,return o;,3,88,2
213895,RETURN,-1,,return;,5,129,1
213963,RETURN,-1,,return MaybeLocal<Object>();,5,146,1
213996,RETURN,-1,,return MaybeLocal<Object>();,5,155,1
213998,RETURN,-1,,return obj;,3,158,4
214027,RETURN,-1,,return;,5,170,1
214045,RETURN,1,,return;,5,175,1
214277,RETURN,-1,,return val;,3,233,3
215989,RETURN,-1,,return delayed.get() == task;,11,438,1
216154,RETURN,-1,,"return std::max(thread_pool_size, 1);",3,52,2
216203,RETURN,-1,,return t;,5,71,8
216491,RETURN,-1,,return task;,5,161,5
216667,RETURN,-1,,return threads_.size();,3,226,1
216703,RETURN,-1,,return shared_from_this();,3,240,1
216738,RETURN,-1,,return;,5,256,1
216760,RETURN,-1,,return;,5,267,1
216853,RETURN,1,,return;,5,298,1
217097,RETURN,-1,,return;,5,396,2
217121,RETURN,1,,return;,23,403,1
217141,RETURN,-1,,return worker_thread_task_runner_->NumberOfWorkerThreads();,3,414,1
217157,RETURN,1,,return;,43,418,1
217285,RETURN,1,,return;,21,452,1
217426,RETURN,-1,,return did_work;,3,496,6
217476,RETURN,-1,,return data.first;,3,514,6
217498,RETURN,-1,,return data.second;,3,522,6
217521,RETURN,1,,return false;,21,527,1
217523,RETURN,-1,,return per_isolate->FlushForegroundTasksInternal();,3,528,3
217534,RETURN,-1,,"return v8::platform::NewDefaultJobHandle(
      this, priority, std::move(job_task), NumberOfWorkerThreads());",3,533,1
217554,RETURN,-1,,return ForIsolate(isolate)->IdleTasksEnabled();,3,538,1
217565,RETURN,-1,,return ForIsolate(isolate)->GetForegroundTaskRunner();,3,543,1
217575,RETURN,-1,,return uv_hrtime() / 1e9;,3,548,1
217583,RETURN,-1,,return SystemClockTimeMillis();,3,552,1
217590,RETURN,-1,,return tracing_controller_;,3,557,2
217596,RETURN,-1,,"return []() {
    fprintf(stderr, ""\n"");
    DumpBacktrace(stderr);
    fflush(stderr);
  };",3,561,1
217602,RETURN,-1,,return page_allocator_;,3,569,1
217645,RETURN,-1,,return std::unique_ptr<T>(nullptr);,5,589,1
217673,RETURN,-1,,return result;,3,593,6
217699,RETURN,-1,,return std::unique_ptr<T>(nullptr);,5,603,1
217727,RETURN,-1,,return result;,3,607,7
217802,RETURN,-1,,return result;,3,638,5
217990,RETURN,-1,,return 1;,3,68,15
218067,RETURN,1,,return MaybeLocal<Value>();,32,28,1
218085,RETURN,-1,,"return MakeCallback(isolate, process, ""emit"", arraysize(argv), argv, {0, 0});",3,32,8
218111,RETURN,1,,return Just(false);,33,39,1
218161,RETURN,-1,,return Nothing<bool>();,5,48,1
218170,RETURN,1,,return Just(false);,36,51,1
218204,RETURN,1,,return Nothing<bool>();,5,59,1
218233,RETURN,-1,,return Nothing<bool>();,7,65,1
218261,RETURN,-1,,return Nothing<bool>();,7,71,1
218282,RETURN,-1,,return Nothing<bool>();,5,80,1
218284,RETURN,-1,,return Just(true);,3,82,16
218306,RETURN,1,,return Nothing<bool>();,5,91,1
218321,RETURN,-1,,"return ProcessEmitWarningGeneric(env, message.c_str(), ""ExperimentalWarning"");",3,96,6
218336,RETURN,-1,,"return ProcessEmitWarningGeneric(
      env, warning, ""DeprecationWarning"", deprecation_code);",3,102,1
218476,RETURN,-1,,"return env->ThrowUVException(err, ""chdir"", nullptr, buf, *path);",5,91,5
218519,RETURN,-1,,return arr->Buffer();,3,102,4
218547,RETURN,1,,"return env->ThrowUVException(err, ""uv_getrusage"");",5,117,1
218645,RETURN,1,,"return env->ThrowUVException(err, ""uv_cwd"");",5,135,1
218732,RETURN,1,,return;,47,153,1
218749,RETURN,1,,return;,47,155,1
218820,RETURN,1,,"return env->ThrowUVException(err, ""uv_resident_set_memory"");",5,176,1
218903,RETURN,1,,"return env->ThrowUVException(err, ""uv_resident_set_memory"");",5,199,1
219497,RETURN,1,,"return env->ThrowUVException(err, ""uv_getrusage"");",5,324,1
219895,RETURN,-1,,"return static_cast<BindingData*>(
      v8_object->GetAlignedPointerFromInternalField(BaseObject::kSlot));",3,501,2
220046,RETURN,-1,,return true;,3,551,2
220068,RETURN,-1,,return info;,3,558,4
220389,RETURN,-1,,return a.first < b.first;,36,129,1
220567,RETURN,-1,,"return THROW_ERR_OUT_OF_RANGE(
      env,
      ""process.debugPort must be 0 or in range 1024 to 65535"");",5,67,1
220680,RETURN,-1,,return MaybeLocal<Object>();,5,92,1
220709,RETURN,-1,,return {};,5,101,1
220869,RETURN,-1,,return scope.Escape(process);,3,174,29
221157,RETURN,1,,return;,51,269,1
221595,RETURN,-1,,return info;,3,113,10
221709,RETURN,-1,,return scope.EscapeMaybe(result);,3,173,6
221748,RETURN,-1,,return MaybeLocal<Value>();,5,184,1
221751,RETURN,-1,,return scope.Escape(result);,3,189,7
221897,RETURN,1,,return;,47,266,1
221904,RETURN,-1,,return PersistentToLocal::Strong(context_);,3,279,1
221957,RETURN,-1,,return MaybeLocal<Value>();,5,319,1
221979,RETURN,-1,,return MaybeLocal<Value>();,7,327,1
221998,RETURN,-1,,return MaybeLocal<Value>();,5,336,1
222017,RETURN,-1,,return MaybeLocal<Value>();,5,344,1
222066,RETURN,-1,,return MaybeLocal<Value>();,5,352,1
222068,RETURN,-1,,return v8::True(isolate_);,3,355,15
222145,RETURN,-1,,return !std::iswspace(ch);,17,539,1
222159,RETURN,-1,,return a.first < b.first;,36,817,1
223368,RETURN,-1,,return writer->json_objectend();,7,394,1
223502,RETURN,-1,,return Nothing<std::string>();,5,421,1
223605,RETURN,-1,,return Nothing<std::string>();,5,440,1
223612,RETURN,-1,,"return Just<>(std::string(*sv, sv.length()));",3,443,8
223679,RETURN,-1,,return;,5,464,2
223747,RETURN,-1,,return;,5,487,2
223857,RETURN,-1,,"return PrintJavaScriptStack(writer, isolate, trigger);",5,515,1
223896,RETURN,-1,,return;,5,524,2
225139,RETURN,-1,,"return """";",7,907,4
225203,RETURN,-1,,return filename;,3,931,11
225230,RETURN,-1,,"return TriggerNodeReport(isolate, env, message, trigger, name, error);",3,944,4
225247,RETURN,-1,,"return TriggerNodeReport(env != nullptr ? env->isolate() : nullptr,
                           env,
                           message,
                           trigger,
                           name,
                           error);",3,953,1
226354,RETURN,-1,,return;,5,18,2
227354,RETURN,-1,,"return {blob, size};",5,125,4
227384,RETURN,-1,,return deserializer.Read<SeaResource>();,5,144,6
227428,RETURN,-1,,"return static_cast<SeaFlags>(static_cast<uint32_t>(x) |
                               static_cast<uint32_t>(y));",3,40,1
227444,RETURN,-1,,"return static_cast<SeaFlags>(static_cast<uint32_t>(x) &
                               static_cast<uint32_t>(y));",3,45,1
227460,RETURN,-1,,return x = x | y;,3,50,1
227552,RETURN,-1,,return written_total;,3,81,12
227610,RETURN,-1,,"return {flags, code};",3,108,12
227637,RETURN,-1,,return result;,3,131,5
227648,RETURN,-1,,return sea_resource;,3,146,3
227654,RETURN,-1,,return postject_has_resource();,3,150,1
227673,RETURN,-1,,return;,5,156,2
227750,RETURN,-1,,"return {argc, argv};",3,177,2
227796,RETURN,-1,,return std::nullopt;,5,198,4
227814,RETURN,-1,,return std::nullopt;,5,205,2
227846,RETURN,-1,,return std::nullopt;,5,214,2
227878,RETURN,-1,,return std::nullopt;,5,223,2
227901,RETURN,-1,,return std::nullopt;,5,232,2
227918,RETURN,-1,,return result;,3,238,16
227955,RETURN,-1,,return ExitCode::kGenericUserError;,5,248,4
228016,RETURN,-1,,return ExitCode::kGenericUserError;,5,261,4
228026,RETURN,-1,,return ExitCode::kNoFailure;,3,267,14
228054,RETURN,-1,,return code;,5,277,3
228056,RETURN,-1,,return ExitCode::kGenericUserError;,3,280,4
228333,RETURN,1,,return;,24,118,1
228387,RETURN,-1,,"return ValueSerializer::Delegate::GetSharedArrayBufferId(
        isolate, shared_array_buffer);",5,132,1
228423,RETURN,1,,return Nothing<uint32_t>();,21,142,1
228425,RETURN,-1,,return id.ToLocalChecked()->Uint32Value(env()->context());,3,144,6
228484,RETURN,-1,,"return ValueSerializer::Delegate::WriteHostObject(isolate, input);",5,157,1
228516,RETURN,1,,return Nothing<bool>();,5,166,1
228518,RETURN,-1,,return Just(true);,3,168,7
228541,RETURN,-1,,"return THROW_ERR_CONSTRUCT_CALL_REQUIRED(
        env, ""Class constructor Serializer cannot be invoked without 'new'"");",5,174,1
228753,RETURN,1,,return;,23,227,1
228763,RETURN,1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        ctx->env(), ""arrayBuffer must be an ArrayBuffer"");",5,230,1
228796,RETURN,-1,,return;,3,235,8
228835,RETURN,1,,return;,26,243,1
228908,RETURN,1,,return;,5,255,1
228969,RETURN,1,,return;,26,267,1
229002,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        ctx->env(), ""source must be a TypedArray or a DataView"");",5,277,1
229088,RETURN,-1,,return ValueDeserializer::Delegate::ReadHostObject(isolate);,5,303,1
229125,RETURN,1,,return MaybeLocal<Object>();,5,314,1
229149,RETURN,-1,,return MaybeLocal<Object>();,5,319,2
229151,RETURN,-1,,return return_value.As<Object>();,3,322,9
229176,RETURN,-1,,"return THROW_ERR_CONSTRUCT_CALL_REQUIRED(
        env, ""Class constructor Deserializer cannot be invoked without 'new'"");",5,328,1
229189,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        env, ""buffer must be a TypedArray or a DataView"");",5,333,1
229340,RETURN,1,,return;,23,364,1
229372,RETURN,-1,,return;,5,369,3
229404,RETURN,-1,,return;,5,375,3
229405,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
      ctx->env(), ""arrayBuffer must be an ArrayBuffer or SharedArrayBuffer"");",3,378,7
229470,RETURN,1,,"return ctx->env()->ThrowError(""ReadUint32() failed"");",12,396,1
229479,RETURN,-1,,return args.GetReturnValue().Set(value);,3,397,7
229517,RETURN,1,,"return ctx->env()->ThrowError(""ReadUint64() failed"");",12,406,1
229566,RETURN,-1,,"return args.GetReturnValue().Set(Array::New(isolate, ret, arraysize(ret)));",3,417,15
229611,RETURN,1,,"return ctx->env()->ThrowError(""ReadDouble() failed"");",12,426,1
229620,RETURN,-1,,return args.GetReturnValue().Set(value);,3,427,7
229667,RETURN,1,,return;,31,436,1
229692,RETURN,1,,"return ctx->env()->ThrowError(""ReadRawBytes() failed"");",12,441,1
230147,RETURN,-1,,return nullptr;,5,25,2
230149,RETURN,-1,,return realm;,3,27,6
230183,RETURN,-1,,return scope.Escape(realm->context());,5,37,1
230192,RETURN,-1,,return MaybeLocal<Context>();,3,39,8
230288,RETURN,-1,,return;,5,83,1
230320,RETURN,-1,,return ctx;,3,95,3
230345,RETURN,-1,,return MaybeLocal<Value>();,7,136,1
230347,RETURN,-1,,return v8::True(isolate_);,3,140,4
230391,RETURN,-1,,return nullptr;,3,10,1
230437,RETURN,-1,,return;,7,1208,1
230598,RETURN,-1,,return output;,3,58,2
230619,RETURN,-1,,return output;,3,68,4
230642,RETURN,-1,,return output;,3,78,4
230667,RETURN,-1,,return output;,3,88,4
230704,RETURN,-1,,return output;,3,94,2
230729,RETURN,-1,,return output;,3,104,4
230778,RETURN,-1,,return output;,3,120,2
230857,RETURN,-1,,return output;,3,142,2
230919,RETURN,-1,,"return v8::StartupData{buf.release(), raw_size};",3,190,9
230963,RETURN,-1,,return written_total;,3,203,7
231018,RETURN,-1,,return result;,3,225,11
231072,RETURN,-1,,return written_total;,3,241,7
231110,RETURN,-1,,return result;,3,264,7
231159,RETURN,-1,,return written_total;,3,279,7
231207,RETURN,-1,,return result;,3,306,9
231277,RETURN,-1,,return written_total;,3,325,9
231305,RETURN,-1,,return result;,3,342,5
231339,RETURN,-1,,return written_total;,3,355,5
231367,RETURN,-1,,return result;,3,370,5
231401,RETURN,-1,,return written_total;,3,384,5
231439,RETURN,-1,,return result;,3,403,7
231491,RETURN,-1,,return written_total;,3,420,7
231524,RETURN,-1,,return result;,3,439,6
231567,RETURN,-1,,return written_total;,3,453,6
231597,RETURN,-1,,return result;,3,464,7
231660,RETURN,-1,,return written_total;,3,481,8
231718,RETURN,-1,,return result;,3,498,12
231813,RETURN,-1,,return written_total;,3,522,13
231863,RETURN,-1,,return result;,3,549,9
231952,RETURN,-1,,return written_total;,3,573,14
232048,RETURN,-1,,return w.sink;,3,606,16
232087,RETURN,-1,,return data != nullptr ? data->impl_ : nullptr;,3,618,1
232100,RETURN,-1,,"return EmbedderSnapshotData::Pointer{new EmbedderSnapshotData(this, false)};",3,622,1
232113,RETURN,-1,,"return FromBlob(out, ReadFileSync(in));",3,626,1
232124,RETURN,-1,,"return FromBlob(out, std::string_view(in.data(), in.size()));",3,630,1
232193,RETURN,-1,,return false;,5,646,1
232245,RETURN,-1,,return true;,3,657,19
232274,RETURN,-1,,return false;,5,667,2
232297,RETURN,-1,,return false;,5,676,2
232320,RETURN,-1,,return false;,5,685,2
232349,RETURN,-1,,return false;,5,700,2
232351,RETURN,-1,,return true;,3,704,7
232465,RETURN,-1,,"return std::string(buf) + std::string(""_cache_data"");",3,729,7
232533,RETURN,-1,,return buf;,3,742,4
232723,RETURN,-1,,return registry->external_references();,3,888,3
232832,RETURN,-1,,return ExitCode::kBootstrapFailure;,5,920,2
232886,RETURN,-1,,return ExitCode::kGenericUserError;,11,943,1
232908,RETURN,-1,,return exit_code;,11,952,1
232910,RETURN,-1,,"return CreateSnapshot(out, setup.get(), static_cast<uint8_t>(snapshot_type));",3,957,10
233022,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,9,985,1
233040,RETURN,-1,,return ExitCode::kBootstrapFailure;,7,994,1
233157,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,5,1048,1
233233,RETURN,-1,,return ExitCode::kStartupSnapshotFailure;,5,1067,1
233237,RETURN,-1,,return ExitCode::kNoFailure;,3,1069,17
233266,RETURN,-1,,return exit_code;,5,1080,1
233272,RETURN,-1,,return exit_code;,3,1083,6
233314,RETURN,-1,,return;,5,1109,2
233346,RETURN,-1,,return;,5,1119,2
233398,RETURN,-1,,"return StartupData{nullptr, 0};",5,1170,1
233483,RETURN,-1,,"return StartupData{reinterpret_cast<const char*>(info),
                     static_cast<int>(info->length)};",3,1193,13
233863,RETURN,-1,,return kAnonymousMainPath;,3,1303,1
233968,RETURN,-1,,return true;,3,1342,4
233987,RETURN,-1,,return info;,3,1349,5
234254,RETURN,-1,,return addr;,3,36,5
234269,RETURN,-1,,"return uv_ip4_addr(
          host,
          port,
          reinterpret_cast<sockaddr_in*>(addr)) == 0;",7,47,3
234280,RETURN,-1,,"return uv_ip6_addr(
          host,
          port,
          reinterpret_cast<sockaddr_in6*>(addr)) == 0;",7,52,6
234298,RETURN,-1,,"return New(AF_INET, host, port, addr) || New(AF_INET6, host, port, addr);",3,65,1
234318,RETURN,-1,,"return ToSockAddr(family, host, port,
                    reinterpret_cast<sockaddr_storage*>(addr->storage()));",3,73,1
234404,RETURN,-1,,return hash;,3,97,4
234411,RETURN,-1,,"return FromUVHandle(uv_tcp_getsockname, handle);",3,101,1
234420,RETURN,-1,,"return FromUVHandle(uv_udp_getsockname, handle);",3,105,1
234429,RETURN,-1,,"return FromUVHandle(uv_tcp_getpeername, handle);",3,109,1
234438,RETURN,-1,,"return FromUVHandle(uv_udp_getpeername, handle);",3,113,1
234483,RETURN,-1,,"return memcmp(&one_in->sin_addr, &two_in->sin_addr, sizeof(uint32_t)) == 0;",3,126,5
234521,RETURN,-1,,"return memcmp(&one_in->sin6_addr, &two_in->sin6_addr, 16) == 0;",3,136,5
234567,RETURN,-1,,"return memcmp(ptr, mask, sizeof(mask)) == 0 &&
         memcmp(ptr + sizeof(mask),
                &check_ipv4->sin_addr,
                sizeof(uint32_t)) == 0;",3,150,7
234636,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,167,1
234649,RETURN,1,,return SocketAddress::CompareResult::SAME;,5,169,1
234657,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,171,1
234705,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,183,1
234718,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,185,1
234724,RETURN,-1,,return SocketAddress::CompareResult::SAME;,3,186,8
234772,RETURN,1,,return SocketAddress::CompareResult::NOT_COMPARABLE;,5,201,1
234797,RETURN,1,,return SocketAddress::CompareResult::LESS_THAN;,5,209,1
234810,RETURN,1,,return SocketAddress::CompareResult::GREATER_THAN;,5,211,1
234816,RETURN,-1,,return SocketAddress::CompareResult::SAME;,3,212,11
234859,RETURN,-1,,"return (htonl(ip_in->sin_addr.s_addr) & mask) ==
         (htonl(net_in->sin_addr.s_addr) & mask);",3,226,7
234889,RETURN,1,,"return compare_ipv6(ip, net) == SocketAddress::CompareResult::SAME;",5,237,1
234957,RETURN,1,,return false;,5,249,1
234979,RETURN,-1,,return (p1[len] & mask) == (p2[len] & mask);,3,256,17
235003,RETURN,1,,"return compare_ipv4_ipv6(ip, net) == SocketAddress::CompareResult::SAME;",5,265,1
235101,RETURN,1,,return false;,5,281,1
235116,RETURN,-1,,return (ptr[0] & mask) == (p2[len] & mask);,3,287,21
235140,RETURN,1,,"return compare_ipv4_ipv6(net, ip) == SocketAddress::CompareResult::SAME;",5,295,1
235198,RETURN,1,,return false;,5,308,1
235209,RETURN,-1,,return (check & m) == (htonl(net_in->sin_addr.s_addr) & m);,3,313,14
235240,RETURN,-1,,"return is_match_ipv4(*this, other);",23,325,3
235247,RETURN,-1,,"return is_match_ipv4_ipv6(*this, other);",24,326,6
235263,RETURN,-1,,"return is_match_ipv4_ipv6(other, *this);",23,331,3
235270,RETURN,-1,,"return is_match_ipv6(*this, other);",24,332,6
235276,RETURN,-1,,return false;,3,336,2
235296,RETURN,-1,,"return compare_ipv4(*this, other);",23,344,3
235303,RETURN,-1,,"return compare_ipv4_ipv6(*this, other);",24,345,6
235342,RETURN,-1,,return c;,15,356,5
235350,RETURN,-1,,return SocketAddress::CompareResult::LESS_THAN;,15,358,8
235362,RETURN,-1,,return SocketAddress::CompareResult::GREATER_THAN;,15,360,11
235371,RETURN,-1,,"return compare_ipv6(*this, other);",24,364,6
235377,RETURN,-1,,return SocketAddress::CompareResult::NOT_COMPARABLE;,3,368,2
235402,RETURN,-1,,"return in_network_ipv4(*this, other, prefix);",23,378,3
235410,RETURN,-1,,"return in_network_ipv4_ipv6(*this, other, prefix);",24,379,6
235427,RETURN,-1,,"return in_network_ipv6_ipv4(*this, other, prefix);",23,384,3
235435,RETURN,-1,,"return in_network_ipv6(*this, other, prefix);",24,385,6
235442,RETURN,-1,,return false;,3,390,2
235625,RETURN,1,,return true;,7,439,1
235627,RETURN,-1,,return parent_ ? parent_->Apply(address) : false;,3,441,4
235658,RETURN,-1,,return this->address->is_match(*address.get());,3,462,1
235698,RETURN,-1,,return ret;,3,470,6
235705,RETURN,-1,,"return *address.get() >= *start.get() &&
         *address.get() <= *end.get();",3,475,1
235766,RETURN,-1,,return ret;,3,486,8
235773,RETURN,-1,,"return address->is_in_network(*network.get(), prefix);",3,491,1
235821,RETURN,-1,,return ret;,3,500,7
235847,RETURN,1,,return MaybeLocal<Array>();,5,507,1
235849,RETURN,-1,,"return Array::New(env->isolate(), rules.data(), rules.size());",3,508,5
235883,RETURN,1,,return false;,5,515,1
235907,RETURN,1,,return false;,7,519,1
235914,RETURN,-1,,return true;,3,522,3
236006,RETURN,-1,,return BaseObjectPtr<SocketAddressBlockListWrap>();,5,560,1
236023,RETURN,-1,,return wrap;,3,565,5
236058,RETURN,-1,,return BaseObjectPtr<SocketAddressBlockListWrap>();,5,575,1
236080,RETURN,-1,,return wrap;,3,583,5
236234,RETURN,1,,return args.GetReturnValue().Set(false);,5,624,1
236328,RETURN,-1,,return;,5,647,1
236493,RETURN,-1,,return std::make_unique<TransferData>(this);,3,688,1
236507,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,694,1
236597,RETURN,-1,,return tmpl;,3,712,3
236643,RETURN,-1,,"return New(env, std::move(blocklist_));",3,738,1
236667,RETURN,-1,,return GetConstructorTemplate(env)->HasInstance(value);,3,747,1
236747,RETURN,-1,,return tmpl;,3,764,3
236798,RETURN,-1,,return BaseObjectPtr<SocketAddressBase>();,5,782,1
236800,RETURN,-1,,"return MakeBaseObject<SocketAddressBase>(env, obj, std::move(address));",3,785,3
236932,RETURN,1,,return THROW_ERR_INVALID_ADDRESS(env);,5,804,1
237016,RETURN,1,,return;,5,821,1
237200,RETURN,1,,return;,53,852,1
237232,RETURN,-1,,return std::make_unique<TransferData>(this);,3,871,1
237258,RETURN,-1,,"return SocketAddressBase::Create(env, std::move(address_));",3,882,1
237735,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,5,39,1
237743,RETURN,-1,,"return maybe_async_id->IsNumber()
      ? maybe_async_id->NumberValue(env->context())
      : v8::Just(AsyncWrap::kInvalidAsyncId);",3,41,3
237813,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,7,58,1
237821,RETURN,-1,,"return maybe_async_id->IsNumber()
        ? maybe_async_id->NumberValue(env->context())
        : v8::Just(AsyncWrap::kInvalidAsyncId);",5,60,3
237844,RETURN,-1,,return v8::Just(AsyncWrap::kInvalidAsyncId);,7,64,1
237910,RETURN,1,,return;,51,78,1
238019,RETURN,-1,,return;,5,107,1
238067,RETURN,1,,return;,27,121,1
238083,RETURN,1,,return;,35,123,1
238112,RETURN,1,,return;,31,130,1
238128,RETURN,1,,return;,39,133,1
238943,RETURN,-1,,return categories_;,56,41,1
239055,RETURN,1,,return;,59,69,1
239068,RETURN,1,,return;,16,71,1
240359,RETURN,-1,,return true;,3,53,2
240381,RETURN,-1,,return info;,3,60,4
240471,RETURN,-1,,"return args.GetReturnValue().Set(FIXED_ONE_BYTE_STRING(env->isolate(), """"));",5,81,1
240507,RETURN,-1,,"return args.GetReturnValue().Set(FIXED_ONE_BYTE_STRING(env->isolate(), """"));",5,90,1
240612,RETURN,-1,,"return args.GetReturnValue().Set(
        String::NewFromUtf8(env->isolate(), """").ToLocalChecked());",5,109,1
240741,RETURN,-1,,return;,5,134,2
240886,RETURN,-1,,"return ada::can_parse(std::string_view(input.data, input.length));",3,170,1
241193,RETURN,-1,,return args.GetReturnValue().Set(false);,7,236,1
241231,RETURN,-1,,return args.GetReturnValue().Set(false);,5,244,1
241506,RETURN,-1,,return args.GetReturnValue().Set(false);,5,320,1
241786,RETURN,-1,,return ada::href_from_file(escaped_file_path);,3,384,3
241960,RETURN,1,,return;,5,103,1
242052,RETURN,1,,return;,5,121,1
242163,RETURN,-1,,return;,5,147,4
242186,RETURN,1,,return;,5,154,1
242220,RETURN,1,,return;,5,160,1
242229,RETURN,1,,return args.GetReturnValue().Set(entries);,5,163,1
242252,RETURN,-1,,"return args.GetReturnValue().Set(
      Array::New(env->isolate(), ret, arraysize(ret)));",3,169,10
242381,RETURN,-1,,return true;,5,208,2
242412,RETURN,-1,,return true;,3,225,6
242444,RETURN,-1,,return info;,3,234,6
242621,RETURN,1,,return;,36,271,1
242688,RETURN,1,,return;,36,281,1
242754,RETURN,1,,return;,53,290,1
242874,RETURN,-1,,return type;,3,354,6
243876,RETURN,-1,,return true;,3,148,6
243944,RETURN,-1,,return info;,3,169,5
244444,RETURN,-1,,"return ""Scavenge"";",7,244,3
244452,RETURN,-1,,"return ""MarkSweepCompact"";",7,246,6
244460,RETURN,-1,,"return ""IncrementalMarking"";",7,248,9
244468,RETURN,-1,,"return ""ProcessWeakCallbacks"";",7,250,12
244471,RETURN,-1,,"return ""Unknown"";",7,252,14
244704,RETURN,-1,,return;,5,304,1
244766,RETURN,-1,,return;,5,322,1
244854,RETURN,-1,,return &writer_;,3,356,1
244861,RETURN,-1,,return &out_stream_;,3,360,1
244921,RETURN,-1,,return;,5,374,1
245047,RETURN,-1,,return;,5,399,1
245191,RETURN,1,,return;,32,427,1
246119,RETURN,1,,return MaybeLocal<Value>();,5,63,1
246169,RETURN,-1,,return MaybeLocal<Value>();,5,70,1
246171,RETURN,-1,,return e;,3,73,16
246222,RETURN,1,,return;,7,87,1
246958,RETURN,-1,,return UVWASI_EINVAL;,3,233,1
246987,RETURN,1,,return EinvalError<R>();,34,247,1
247009,RETURN,-1,,return EinvalError<R>();,5,252,2
247025,RETURN,-1,,"return F(*wasi,
           {reinterpret_cast<char*>(memory), options.wasm_memory->length()},
           args...);",3,257,8
247056,RETURN,-1,,return value->IsUint32();,3,271,1
247066,RETURN,-1,,return value.As<Uint32>()->Value();,3,276,1
247079,RETURN,-1,,return value->IsBigInt();,3,281,1
247100,RETURN,-1,,return js_value->Uint64Value(&lossless);,3,288,3
247112,RETURN,-1,,return value->IsBigInt();,3,293,1
247133,RETURN,-1,,return js_value->Int64Value(&lossless);,3,300,3
247147,RETURN,-1,,return CheckType<T>(info[i]);,3,305,1
247167,RETURN,1,,return false;,37,313,1
247169,RETURN,-1,,"return CheckTypes<Ts...>(info, i + 1, args...);",3,314,2
247181,RETURN,-1,,"return CheckTypes<Args...>(info, 0, Args()...);",3,319,1
247191,RETURN,-1,,return true;,3,324,1
247254,RETURN,-1,,return;,5,361,2
247268,RETURN,-1,,return;,5,365,2
247291,RETURN,-1,,return;,5,372,2
247397,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, argv_buf_offset, wasi.uvw_.argv_buf_size)",3,402,1
247423,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, argv_offset, wasi.uvw_.argc * UVWASI_SERDES_SIZE_uint32_t)",3,403,1
247500,RETURN,-1,,return err;,3,418,11
247533,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, argc_offset, UVWASI_SERDES_SIZE_size_t)",3,426,1
247554,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, argv_buf_offset, UVWASI_SERDES_SIZE_size_t)",3,427,1
247588,RETURN,-1,,return err;,3,437,9
247621,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, resolution_ptr, UVWASI_SERDES_SIZE_timestamp_t)",3,445,1
247647,RETURN,-1,,return err;,3,452,7
247682,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, time_ptr, UVWASI_SERDES_SIZE_timestamp_t)",3,461,1
247709,RETURN,-1,,return err;,3,468,7
247750,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, environ_buf_offset, wasi.uvw_.env_buf_size)",3,476,1
247776,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size,
                         environ_offset,
                         wasi.uvw_.envc * UVWASI_SERDES_SIZE_uint32_t)",3,478,1
247853,RETURN,-1,,return err;,3,498,11
247886,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, envc_offset, UVWASI_SERDES_SIZE_size_t)",3,506,1
247907,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, env_buf_offset, UVWASI_SERDES_SIZE_size_t)",3,507,1
247941,RETURN,-1,,return err;,3,518,9
247960,RETURN,-1,,"return uvwasi_fd_advise(&wasi.uvw_, fd, offset, len, advice);",3,528,2
247985,RETURN,-1,,"return uvwasi_fd_allocate(&wasi.uvw_, fd, offset, len);",3,534,2
248005,RETURN,-1,,"return uvwasi_fd_close(&wasi.uvw_, fd);",3,539,2
248023,RETURN,-1,,"return uvwasi_fd_datasync(&wasi.uvw_, fd);",3,544,2
248061,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_fdstat_t)",3,552,1
248088,RETURN,-1,,return err;,3,559,7
248103,RETURN,-1,,"return uvwasi_fd_fdstat_set_flags(&wasi.uvw_, fd, flags);",3,567,2
248126,RETURN,-1,,"return uvwasi_fd_fdstat_set_rights(
      &wasi.uvw_, fd, fs_rights_base, fs_rights_inheriting);",3,580,2
248166,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_filestat_t)",3,589,1
248193,RETURN,-1,,return err;,3,596,7
248208,RETURN,-1,,"return uvwasi_fd_filestat_set_size(&wasi.uvw_, fd, st_size);",3,604,2
248233,RETURN,-1,,"return uvwasi_fd_filestat_set_times(
      &wasi.uvw_, fd, st_atim, st_mtim, fst_flags);",3,619,2
248281,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_iovec_t)",3,637,1
248302,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nread_ptr, UVWASI_SERDES_SIZE_size_t)",3,639,1
248334,RETURN,-1,,return err;,5,646,1
248364,RETURN,-1,,return err;,3,654,11
248397,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf, UVWASI_SERDES_SIZE_prestat_t)",3,662,1
248424,RETURN,-1,,return err;,3,669,7
248459,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,678,1
248462,RETURN,-1,,"return uvwasi_fd_prestat_dir_name(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,679,3
248514,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_ciovec_t)",3,697,1
248535,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nwritten_ptr, UVWASI_SERDES_SIZE_size_t)",3,699,1
248567,RETURN,-1,,return err;,5,706,1
248597,RETURN,-1,,return err;,3,715,11
248635,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_iovec_t)",3,725,1
248656,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nread_ptr, UVWASI_SERDES_SIZE_size_t)",3,727,1
248688,RETURN,-1,,return err;,5,734,1
248717,RETURN,-1,,return err;,3,742,11
248756,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,759,1
248777,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, bufused_ptr, UVWASI_SERDES_SIZE_size_t)",3,760,1
248811,RETURN,-1,,return err;,3,767,8
248826,RETURN,-1,,"return uvwasi_fd_renumber(&wasi.uvw_, from, to);",3,772,2
248869,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, newoffset_ptr, UVWASI_SERDES_SIZE_filesize_t)",3,782,1
248897,RETURN,-1,,return err;,3,790,7
248910,RETURN,-1,,"return uvwasi_fd_sync(&wasi.uvw_, fd);",3,795,2
248948,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, offset_ptr, UVWASI_SERDES_SIZE_filesize_t)",3,803,1
248974,RETURN,-1,,return err;,3,811,7
249012,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, iovs_ptr, iovs_len * UVWASI_SERDES_SIZE_ciovec_t)",3,826,1
249033,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nwritten_ptr, UVWASI_SERDES_SIZE_size_t)",3,828,1
249065,RETURN,-1,,return err;,5,835,1
249094,RETURN,-1,,return err;,3,843,11
249129,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,852,1
249148,RETURN,-1,,return err;,3,855,5
249185,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,870,1
249206,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, UVWASI_SERDES_SIZE_filestat_t)",3,871,1
249241,RETURN,-1,,return err;,3,878,8
249284,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,899,1
249287,RETURN,-1,,"return uvwasi_path_filestat_set_times(&wasi.uvw_,
                                        fd,
                                        flags,
                                        &memory.data[path_ptr],
                                        path_len,
                                        st_atim,
                                        st_mtim,
                                        fst_flags);",3,900,3
249346,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,928,1
249367,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,929,1
249370,RETURN,-1,,"return uvwasi_path_link(&wasi.uvw_,
                          old_fd,
                          old_flags,
                          &memory.data[old_path_ptr],
                          old_path_len,
                          new_fd,
                          &memory.data[new_path_ptr],
                          new_path_len);",3,930,4
249438,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,962,1
249459,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, fd_ptr, UVWASI_SERDES_SIZE_fd_t)",3,963,1
249501,RETURN,-1,,return err;,3,978,8
249542,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,997,1
249563,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,998,1
249584,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, bufused_ptr, UVWASI_SERDES_SIZE_size_t)",3,999,1
249624,RETURN,-1,,return err;,3,1011,9
249659,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,1020,1
249662,RETURN,-1,,"return uvwasi_path_remove_directory(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,1021,3
249715,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,1041,1
249736,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,1042,1
249739,RETURN,-1,,"return uvwasi_path_rename(&wasi.uvw_,
                            old_fd,
                            &memory.data[old_path_ptr],
                            old_path_len,
                            new_fd,
                            &memory.data[new_path_ptr],
                            new_path_len);",3,1043,4
249798,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, old_path_ptr, old_path_len)",3,1066,1
249819,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, new_path_ptr, new_path_len)",3,1067,1
249822,RETURN,-1,,"return uvwasi_path_symlink(&wasi.uvw_,
                             &memory.data[old_path_ptr],
                             old_path_len,
                             fd,
                             &memory.data[new_path_ptr],
                             new_path_len);",3,1068,4
249876,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, path_ptr, path_len)",3,1082,1
249879,RETURN,-1,,"return uvwasi_path_unlink_file(
      &wasi.uvw_, fd, &memory.data[path_ptr], path_len);",3,1083,3
249929,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, in_ptr, nsubscriptions * UVWASI_SERDES_SIZE_subscription_t)",3,1099,1
249951,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, out_ptr, nsubscriptions * UVWASI_SERDES_SIZE_event_t)",3,1101,1
249972,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, nevents_ptr, UVWASI_SERDES_SIZE_size_t)",3,1103,1
250070,RETURN,-1,,return err;,3,1124,12
250100,RETURN,-1,,"return uvwasi_proc_raise(&wasi.uvw_, sig);",3,1134,2
250138,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, buf_ptr, buf_len)",3,1142,1
250141,RETURN,-1,,"return uvwasi_random_get(&wasi.uvw_, &memory.data[buf_ptr], buf_len);",3,1143,3
250163,RETURN,-1,,return uvwasi_sched_yield(&wasi.uvw_);,3,1148,2
250208,RETURN,-1,,return err;,3,1163,6
250250,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, ri_data_ptr, ri_data_len * UVWASI_SERDES_SIZE_iovec_t)",3,1182,1
250271,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, ro_datalen_ptr, 4)",3,1184,1
250292,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(memory.size, ro_flags_ptr, 4)",3,1185,1
250324,RETURN,-1,,return err;,5,1190,1
250363,RETURN,-1,,return err;,3,1207,13
250403,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, si_data_ptr, si_data_len * UVWASI_SERDES_SIZE_ciovec_t)",3,1224,1
250424,RETURN,-1,,"CHECK_BOUNDS_OR_RETURN(
      memory.size, so_datalen_ptr, UVWASI_SERDES_SIZE_size_t)",3,1226,1
250456,RETURN,-1,,return err;,5,1232,1
250486,RETURN,-1,,return err;,3,1241,11
250501,RETURN,-1,,"return uvwasi_sock_shutdown(&wasi.uvw_, sock, how);",3,1249,2
250537,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        wasi->env(),
        ""\""instance.exports.memory\"" property must be a WebAssembly.Memory ""
        ""object"");",5,1257,1
251179,RETURN,-1,,return templ;,5,26,1
251246,RETURN,-1,,return function;,3,41,14
251321,RETURN,-1,,return MaybeLocal<Object>();,5,64,1
251345,RETURN,-1,,return obj;,3,73,10
251538,RETURN,-1,,"return node::THROW_ERR_INVALID_ARG_TYPE(
        Environment::GetCurrent(args),
        ""chunk must be an ArrayBufferView or an ArrayBuffer"");",5,118,1
251679,RETURN,-1,,return;,5,164,1
252120,RETURN,-1,,return SignalPropagation::kStopPropagation;,3,122,3
252325,RETURN,-1,,return SignalPropagation::kContinuePropagation;,3,197,3
252336,RETURN,-1,,return;,5,203,1
252347,RETURN,-1,,return;,5,207,1
252434,RETURN,-1,,return TRUE;,5,259,2
252438,RETURN,-1,,return FALSE;,5,261,1
252507,RETURN,-1,,return is_stopping;,3,289,7
252522,RETURN,-1,,return 0;,5,297,1
252535,RETURN,-1,,return 0;,3,326,5
252561,RETURN,-1,,return had_pending_signal;,7,341,2
252576,RETURN,-1,,return had_pending_signal;,3,373,8
252585,RETURN,-1,,return has_pending_signal_;,3,380,3
252721,RETURN,1,,return;,18,303,1
252761,RETURN,-1,,"return env_vars->Get(name).FromMaybe("""");",7,529,1
253014,RETURN,-1,,return;,5,73,1
253138,RETURN,1,,return env_->is_stopping();,5,106,1
253143,RETURN,-1,,return stopped_;,3,107,4
253278,RETURN,-1,,return;,7,151,4
253339,RETURN,-1,,return;,7,169,2
253526,RETURN,-1,,return !loop_init_failed_;,33,243,1
253600,RETURN,-1,,return new_limit;,3,274,11
253653,RETURN,1,,return;,28,287,1
253690,RETURN,1,,return;,23,315,1
253774,RETURN,-1,,return;,11,347,2
253778,RETURN,1,,return;,25,351,1
253823,RETURN,1,,return;,27,363,1
253847,RETURN,1,,return;,23,372,1
253865,RETURN,1,,return;,25,376,1
253875,RETURN,-1,,return;,11,379,1
253894,RETURN,1,,return;,11,384,1
254006,RETURN,-1,,return child_port;,3,424,8
254019,RETURN,1,,return;,5,429,1
254224,RETURN,-1,,return;,5,488,2
254548,RETURN,1,,return;,65,554,1
254575,RETURN,-1,,return;,9,560,5
254647,RETURN,-1,,return;,9,575,1
254669,RETURN,-1,,return;,9,579,1
254779,RETURN,-1,,return;,9,604,1
254806,RETURN,-1,,return;,7,611,5
255328,RETURN,-1,,"return Float64Array::New(ab, 0, kTotalResourceLimitCount);",3,759,3
255386,RETURN,-1,,return true;,3,789,1
255465,RETURN,-1,,return;,5,815,1
255550,RETURN,1,,return args.GetReturnValue().Set(-1);,5,871,1
255611,RETURN,1,,return args.GetReturnValue().Set(-1);,5,886,1
256659,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256666,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256673,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256680,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256687,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256694,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256701,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256708,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256715,RETURN,1,,ZLIB_ERROR_CODES(V),3,92,1
256717,RETURN,-1,,"return ""Z_UNKNOWN_ERROR"";",3,94,10
256759,RETURN,-1,,return code != nullptr;,33,127,1
257134,RETURN,-1,,return;,7,277,2
257230,RETURN,1,,return;,52,308,1
257312,RETURN,1,,return;,55,327,1
257328,RETURN,1,,return;,55,328,1
257385,RETURN,1,,return;,54,336,1
257401,RETURN,1,,return;,54,337,1
257504,RETURN,-1,,return;,7,373,5
257548,RETURN,1,,return true;,25,395,1
257552,RETURN,-1,,return false;,5,397,5
257578,RETURN,-1,,return;,7,411,2
257605,RETURN,1,,return;,7,421,1
257765,RETURN,-1,,return &ctx_;,35,470,1
257803,RETURN,-1,,"return AllocForBrotli(data, real_size);",5,488,3
257834,RETURN,1,,return nullptr;,38,495,1
257852,RETURN,-1,,return memory + sizeof(size_t);,5,499,9
257869,RETURN,1,,return;,39,503,1
257924,RETURN,1,,return;,22,517,1
258144,RETURN,1,,return;,58,595,1
258161,RETURN,1,,return;,51,598,1
258178,RETURN,1,,return;,56,601,1
258195,RETURN,1,,return;,55,604,1
258379,RETURN,1,,return;,51,638,1
258396,RETURN,1,,return;,54,640,1
258444,RETURN,-1,,return this->CompressionStream<CompressionContext>::context();,5,664,1
258601,RETURN,-1,,return;,7,697,3
258690,RETURN,-1,,return;,9,711,3
258729,RETURN,-1,,return;,7,738,3
258809,RETURN,-1,,return;,5,762,1
259080,RETURN,-1,,"return CompressionError { message, ZlibStrerror(err_), err_ };",3,890,2
259109,RETURN,-1,,"return ErrorForMessage(""unexpected end of file"");",7,900,1
259123,RETURN,1,,"return ErrorForMessage(""Missing dictionary"");",7,907,1
259128,RETURN,1,,"return ErrorForMessage(""Bad dictionary"");",7,909,1
259132,RETURN,-1,,"return ErrorForMessage(""Zlib error"");",5,912,13
259135,RETURN,-1,,return CompressionError {};,3,915,2
259153,RETURN,-1,,"return ErrorForMessage(""Failed to init stream before reset"");",5,922,1
259193,RETURN,1,,"return ErrorForMessage(""Failed to reset stream"");",5,943,1
259196,RETURN,-1,,return SetDictionary();,3,945,7
259380,RETURN,-1,,return false;,5,1008,1
259431,RETURN,-1,,return true;,5,1035,3
259437,RETURN,-1,,return true;,3,1040,8
259449,RETURN,1,,return CompressionError {};,5,1046,1
259499,RETURN,-1,,"return ErrorForMessage(""Failed to set dictionary"");",5,1069,1
259502,RETURN,-1,,return CompressionError {};,3,1072,5
259522,RETURN,-1,,"return ErrorForMessage(""Failed to init stream before set parameters"");",5,1079,1
259554,RETURN,-1,,"return ErrorForMessage(""Failed to set parameters"");",5,1094,1
259557,RETURN,-1,,return CompressionError {};,3,1097,7
259682,RETURN,-1,,"return CompressionError(""Could not initialize Brotli instance"",
                            ""ERR_ZLIB_INITIALIZATION_FAILED"",
                            -1);",5,1150,1
259690,RETURN,-1,,return CompressionError {};,5,1154,1
259697,RETURN,-1,,"return Init(alloc_, free_, alloc_opaque_);",3,1159,1
259720,RETURN,-1,,"return CompressionError(""Setting parameter failed"",
                            ""ERR_BROTLI_PARAM_SET_FAILED"",
                            -1);",5,1166,1
259728,RETURN,-1,,return CompressionError {};,5,1170,1
259739,RETURN,-1,,"return CompressionError(""Compression failed"",
                            ""ERR_BROTLI_COMPRESSION_FAILED"",
                            -1);",5,1176,1
259747,RETURN,-1,,return CompressionError {};,5,1180,1
259845,RETURN,-1,,"return CompressionError(""Could not initialize Brotli instance"",
                            ""ERR_ZLIB_INITIALIZATION_FAILED"",
                            -1);",5,1215,1
259853,RETURN,-1,,return CompressionError {};,5,1219,1
259860,RETURN,-1,,"return Init(alloc_, free_, alloc_opaque_);",3,1224,1
259883,RETURN,-1,,"return CompressionError(""Setting parameter failed"",
                            ""ERR_BROTLI_PARAM_SET_FAILED"",
                            -1);",5,1231,1
259891,RETURN,-1,,return CompressionError {};,5,1235,1
259903,RETURN,-1,,"return CompressionError(""Decompression failed"",
                            error_string_.c_str(),
                            static_cast<int>(error_));",5,1241,1
259924,RETURN,-1,,"return CompressionError(""unexpected end of file"",
                            ""Z_BUF_ERROR"",
                            Z_BUF_ERROR);",5,1247,1
259931,RETURN,-1,,return CompressionError {};,5,1251,1
270786,RETURN,-1,,return deny_all_ == false;,3,19,1
270877,RETURN,-1,,"return res + ""*"";",9,25,1
270881,RETURN,-1,,"return res + node::kPathSeparator + ""*"";",7,27,2
270892,RETURN,-1,,return res;,3,31,6
270904,RETURN,-1,,return;,5,37,1
270942,RETURN,-1,,"return granted_tree->Lookup(param, true);",3,66,1
270989,RETURN,-1,,return;,7,88,2
271060,RETURN,-1,,return allow_all_in_ && allow_all_out_;,7,109,3
271068,RETURN,-1,,"return !deny_all_in_ &&
             ((param.empty() && allow_all_in_) || allow_all_in_ ||
              is_tree_granted(&granted_in_fs_, param));",7,111,6
271089,RETURN,-1,,"return !deny_all_out_ &&
             ((param.empty() && allow_all_out_) || allow_all_out_ ||
              is_tree_granted(&granted_out_fs_, param));",7,115,9
271107,RETURN,-1,,return false;,7,119,11
271138,RETURN,-1,,return when_empty_return;,5,133,1
271172,RETURN,-1,,return true;,7,141,1
271188,RETURN,-1,,return false;,7,146,1
271214,RETURN,-1,,return true;,7,153,1
271341,RETURN,-1,,return deny_all_ == false;,3,18,1
271423,RETURN,-1,,return;,5,37,1
271444,RETURN,-1,,return args.GetReturnValue().Set(false);,5,43,1
271481,RETURN,-1,,return;,7,49,1
271482,RETURN,-1,,"return args.GetReturnValue().Set(
        env->permission()->is_granted(scope, *utf8_arg));",5,51,4
271500,RETURN,-1,,return args.GetReturnValue().Set(env->permission()->is_granted(scope));,3,55,15
271523,RETURN,-1,,return nullptr;,3,64,3
271532,RETURN,-1,,return PermissionScope::kPermissionsRoot;,3,72,3
271704,RETURN,1,,return;,5,123,1
271857,RETURN,-1,,return deny_all_ == false;,3,18,1
271966,RETURN,-1,,"return handle_scope.EscapeMaybe(
      constructor->NewInstance(env->context(), 1, &type_value));",3,61,9
272883,RETURN,1,,return;,58,202,1
272944,RETURN,1,,return;,53,217,1
273227,RETURN,-1,,return stream;,5,100,6
274544,RETURN,1,,return false;,59,18,1
274566,RETURN,-1,,return true;,3,23,4
274602,RETURN,1,,return false;,59,32,1
274624,RETURN,-1,,return true;,3,37,4
274660,RETURN,1,,return false;,59,46,1
274728,RETURN,-1,,return false;,9,59,4
274748,RETURN,-1,,return true;,3,66,4
274787,RETURN,-1,,return stats->*member;,3,90,1
275370,RETURN,1,,return;,59,110,1
275501,RETURN,-1,,return handled_signals.find(signum) != handled_signals.end();,3,173,3
275587,RETURN,-1,,return used();,3,71,2
275593,RETURN,-1,,return sizeof data_ - used();,3,76,1
275602,RETURN,-1,,return used_;,3,81,1
275608,RETURN,-1,,return next_;,3,86,1
275684,RETURN,1,,return r;,5,134,1
275694,RETURN,-1,,return 0;,3,139,7
275736,RETURN,1,,return r;,9,160,1
275751,RETURN,1,,return r;,7,165,1
275768,RETURN,1,,return r;,7,171,1
275770,RETURN,-1,,return 0;,3,174,5
275820,RETURN,-1,,return js_buffer;,3,191,5
275826,RETURN,-1,,return readable_;,3,196,1
275832,RETURN,-1,,return writable_;,3,201,1
275854,RETURN,-1,,return static_cast<uv_stdio_flags>(flags);,3,214,5
275865,RETURN,-1,,return &uv_pipe_;,3,220,2
275872,RETURN,-1,,return reinterpret_cast<uv_stream_t*>(uv_pipe());,3,225,1
275880,RETURN,-1,,return reinterpret_cast<uv_handle_t*>(uv_pipe());,3,230,1
275913,RETURN,-1,,return size;,3,241,5
276245,RETURN,1,,return;,41,377,1
276284,RETURN,-1,,return env_;,3,431,1
276312,RETURN,1,,return MaybeLocal<Object>();,22,441,1
276321,RETURN,-1,,return scope.Escape(result);,3,445,9
276349,RETURN,-1,,return Just(false);,5,459,2
276368,RETURN,-1,,return Just(false);,5,467,4
276381,RETURN,1,,return Nothing<bool>();,38,470,1
276390,RETURN,-1,,return Just(false);,5,474,2
276411,RETURN,-1,,return Just(false);,7,481,2
276442,RETURN,-1,,return Just(false);,7,496,2
276465,RETURN,-1,,return Just(false);,5,504,2
276495,RETURN,-1,,return Just(false);,9,513,2
276512,RETURN,-1,,return Just(true);,3,525,19
276646,RETURN,1,,return;,5,602,1
276710,RETURN,1,,return SetError(static_cast<int>(exit_status));,5,645,1
276736,RETURN,1,,return error_;,5,660,1
276740,RETURN,1,,return pipe_error_;,5,662,1
277008,RETURN,-1,,return scope.Escape(js_result);,3,724,10
277093,RETURN,-1,,"return scope.Escape(
      Array::New(env()->isolate(), js_output.out(), js_output.length()));",3,743,8
277137,RETURN,1,,return Just<int>(UV_EINVAL);,30,752,1
277190,RETURN,1,,return Nothing<int>();,53,759,1
277197,RETURN,1,,return Just(r);,14,760,1
277235,RETURN,1,,return Nothing<int>();,58,765,1
277242,RETURN,1,,return Just(r);,14,766,1
277286,RETURN,1,,return Nothing<int>();,53,772,1
277293,RETURN,1,,return Just(r);,16,773,1
277335,RETURN,1,,return Nothing<int>();,7,781,1
277342,RETURN,1,,return Just(r);,16,782,1
277694,RETURN,1,,return Just(r);,14,849,1
277697,RETURN,-1,,return Just(0);,3,851,41
277723,RETURN,1,,return UV_EINVAL;,5,860,1
277797,RETURN,1,,return UV_EINVAL;,7,877,1
277813,RETURN,1,,return r;,7,881,1
277825,RETURN,-1,,return 0;,3,887,15
277871,RETURN,-1,,return AddStdioIgnore(child_fd);,5,898,1
278006,RETURN,-1,,return UV_EINVAL;,9,923,1
278008,RETURN,-1,,"return AddStdioPipe(child_fd, readable, writable, buf);",5,927,12
278057,RETURN,-1,,"return AddStdioInheritFD(child_fd, inherit_fd);",5,933,3
278085,RETURN,-1,,return 0;,3,947,4
278133,RETURN,-1,,return r;,5,964,2
278166,RETURN,-1,,return 0;,3,972,10
278198,RETURN,-1,,return 0;,3,983,5
278205,RETURN,-1,,return !value->IsUndefined() && !value->IsNull();,3,988,1
278271,RETURN,1,,return Nothing<int>();,5,1002,1
278288,RETURN,1,,return Nothing<int>();,5,1006,1
278318,RETURN,-1,,return Just(0);,3,1015,14
278352,RETURN,1,,return Just<int>(UV_EINVAL);,29,1027,1
278450,RETURN,1,,return Nothing<int>();,9,1049,1
278481,RETURN,1,,return Nothing<int>();,33,1058,1
278575,RETURN,-1,,return Just(0);,3,1083,23
278725,RETURN,-1,,return UV_EBUSY;,7,52,1
278808,RETURN,-1,,return UV_EBUSY;,7,74,1
278811,RETURN,-1,,return err;,3,79,18
278876,RETURN,-1,,"return StreamWriteResult{false, err, nullptr, total_bytes, {}};",7,97,1
278915,RETURN,-1,,"return StreamWriteResult{false, UV_EBUSY, nullptr, 0, {}};",7,107,1
279001,RETURN,-1,,"return StreamWriteResult{false, UV_EBUSY, nullptr, 0, {}};",7,131,1
279010,RETURN,-1,,"return StreamWriteResult{
      async, err, req_wrap, total_bytes, std::move(req_wrap_ptr)};",3,136,24
279027,RETURN,-1,,return ReadStart();,3,151,1
279034,RETURN,-1,,return ReadStop();,3,156,1
279071,RETURN,-1,,return 0;,3,164,5
279097,RETURN,-1,,return Shutdown(req_wrap_obj);,3,171,3
279272,RETURN,1,,return -1;,9,207,1
279298,RETURN,1,,return -1;,9,216,1
279324,RETURN,1,,return -1;,9,219,1
279374,RETURN,-1,,return -1;,9,227,1
279385,RETURN,1,,return UV_ENOBUFS;,7,233,1
279420,RETURN,1,,return -1;,9,238,1
279511,RETURN,1,,return -1;,9,255,1
279588,RETURN,1,,return -1;,9,272,1
279614,RETURN,1,,return -1;,9,275,1
279684,RETURN,-1,,return res.err;,3,292,27
279723,RETURN,-1,,return 0;,5,303,2
279818,RETURN,-1,,return -1;,7,324,1
279832,RETURN,-1,,return res.err;,3,331,15
279956,RETURN,-1,,return -1;,5,356,1
279964,RETURN,1,,return UV_ENOBUFS;,5,360,1
280056,RETURN,-1,,return err;,7,390,2
280195,RETURN,-1,,return -1;,7,431,1
280233,RETURN,-1,,return res.err;,3,442,34
280345,RETURN,-1,,"return wrap->MakeCallback(onread.As<Function>(), arraysize(argv), argv);",3,476,15
280361,RETURN,-1,,return false;,3,481,1
280367,RETURN,-1,,return -1;,3,486,1
280374,RETURN,-1,,return GetAsyncWrap()->object();,3,491,1
280596,RETURN,1,,return;,22,575,1
280708,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,24,601,1
280724,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,25,603,1
280768,RETURN,1,,return args.GetReturnValue().Set(0);,24,610,1
280813,RETURN,1,,return args.GetReturnValue().Set(0);,24,618,1
280858,RETURN,1,,return;,24,626,1
280906,RETURN,1,,return;,24,635,1
280914,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,25,637,1
280947,RETURN,-1,,return 0;,3,645,1
280953,RETURN,-1,,return nullptr;,3,650,1
280974,RETURN,-1,,return env->allocate_managed_buffer(suggested_size);,3,662,4
281045,RETURN,-1,,return;,5,677,2
281087,RETURN,-1,,return buffer_;,3,688,1
281138,RETURN,-1,,return;,5,705,2
281225,RETURN,1,,return;,33,726,1
281526,RETURN,-1,,return wrap;,3,825,4
281544,RETURN,-1,,return wrap;,3,832,4
281600,RETURN,-1,,return;,7,845,1
281671,RETURN,1,,return;,7,78,1
281689,RETURN,-1,,return;,7,81,1
281762,RETURN,-1,,return;,7,92,1
281838,RETURN,-1,,return;,7,103,1
281893,RETURN,-1,,return static_cast<StreamBase*>(readable_listener_.stream());,3,42,1
281904,RETURN,-1,,return static_cast<StreamBase*>(writable_listener_.stream());,3,46,1
281919,RETURN,1,,return;,5,51,1
281954,RETURN,1,,return;,23,65,1
282001,RETURN,-1,,return pipe->env()->allocate_managed_buffer(size);,3,112,6
282086,RETURN,-1,,return;,5,135,8
282236,RETURN,1,,return;,9,167,1
282242,RETURN,-1,,return;,5,170,2
282274,RETURN,-1,,return;,5,179,7
282295,RETURN,-1,,return;,5,187,6
282423,RETURN,1,,return;,5,224,1
282457,RETURN,-1,,return previous_listener_->OnStreamAlloc(suggested_size);,3,234,2
282470,RETURN,-1,,"return previous_listener_->OnStreamRead(nread, buf);",3,240,2
282524,RETURN,-1,,return Nothing<StreamPipe*>();,5,255,1
282547,RETURN,-1,,return Nothing<StreamPipe*>();,5,260,1
282570,RETURN,-1,,return Nothing<StreamPipe*>();,5,264,1
282593,RETURN,-1,,return Nothing<StreamPipe*>();,5,269,1
282595,RETURN,-1,,return Just(stream_pipe.release());,3,272,8
282666,RETURN,1,,return;,63,282,1
283671,RETURN,-1,,return tmpl;,3,160,3
283701,RETURN,-1,,return Unwrap<LibuvStreamWrap>(object);,3,167,3
283727,RETURN,-1,,return fd;,3,178,4
283733,RETURN,-1,,return HandleWrap::IsAlive(this);,3,184,1
283743,RETURN,-1,,return uv_is_closing(reinterpret_cast<uv_handle_t*>(stream()));,3,189,1
283752,RETURN,-1,,return static_cast<AsyncWrap*>(this);,3,194,1
283760,RETURN,-1,,return is_named_pipe_ipc();,3,199,1
283766,RETURN,-1,,"return uv_read_start(
      stream(),
      [](uv_handle_t* handle, size_t suggested_size, uv_buf_t* buf) {
        static_cast<LibuvStreamWrap*>(handle->data)
            ->OnUvAlloc(suggested_size, buf);
      },
      [](uv_stream_t* stream, ssize_t nread, const uv_buf_t* buf) {
        LibuvStreamWrap* wrap = static_cast<LibuvStreamWrap*>(stream->data);
        TryCatchScope try_catch(wrap->env());
        try_catch.SetVerbose(true);
        wrap->OnUvRead(nread, buf);
      });",3,203,1
283775,RETURN,-1,,return uv_read_stop(stream());,3,219,1
283848,RETURN,1,,return Local<Object>();,5,241,1
283880,RETURN,-1,,return scope.Escape(wrap_obj);,3,251,13
284029,RETURN,-1,,return Nothing<void>();,7,289,1
284035,RETURN,-1,,return JustVoid();,3,294,11
284066,RETURN,-1,,return;,5,304,2
284110,RETURN,1,,return args.GetReturnValue().Set(UV_EINVAL);,5,318,1
284148,RETURN,-1,,"return new LibuvShutdownWrap(this, object);",3,328,1
284158,RETURN,-1,,"return new LibuvWriteWrap(this, object);",3,332,1
284174,RETURN,-1,,"return req_wrap->Dispatch(uv_shutdown, stream(), AfterUvShutdown);",3,338,3
284256,RETURN,1,,return 0;,5,364,1
284263,RETURN,1,,return err;,5,366,1
284323,RETURN,-1,,return 0;,3,388,14
284339,RETURN,-1,,"return w->Dispatch(uv_write2,
                     stream(),
                     bufs,
                     count,
                     send_handle,
                     AfterUvWrite);",3,397,3
284449,RETURN,-1,,return data_;,5,64,1
284455,RETURN,-1,,return length_;,5,68,1
284461,RETURN,-1,,return length() * sizeof(*data());,5,72,1
284480,RETURN,1,,return String::Empty(isolate);,7,80,1
284493,RETURN,1,,"return NewSimpleFromCopy(isolate, data, length, error);",7,83,1
284522,RETURN,-1,,return MaybeLocal<Value>();,7,88,2
284532,RETURN,-1,,"return ExternString<ResourceType, TypeName>::New(isolate,
                                                     new_data,
                                                     length,
                                                     error);",5,92,7
284554,RETURN,1,,return String::Empty(isolate);,7,104,1
284580,RETURN,-1,,return str;,7,109,3
284623,RETURN,-1,,return MaybeLocal<Value>();,7,121,3
284625,RETURN,-1,,return str.ToLocalChecked();,5,124,8
284634,RETURN,-1,,return isolate_;,37,127,1
284668,RETURN,-1,,"return String::NewExternalOneByte(isolate, h_str).FromMaybe(Local<Value>());",3,156,1
284685,RETURN,-1,,"return String::NewExternalTwoByte(isolate, h_str).FromMaybe(Local<Value>());",3,163,1
284738,RETURN,-1,,return MaybeLocal<Value>();,5,178,2
284740,RETURN,-1,,return str.ToLocalChecked();,3,180,3
284785,RETURN,-1,,return MaybeLocal<Value>();,5,196,2
284787,RETURN,-1,,return str.ToLocalChecked();,3,198,3
285741,RETURN,-1,,return unhex_table[x];,3,244,1
285808,RETURN,1,,return i;,7,257,1
285819,RETURN,-1,,return i;,3,261,3
285849,RETURN,-1,,return 0;,5,270,1
285876,RETURN,-1,,return nchars * sizeof(*dst);,5,277,2
285909,RETURN,-1,,return 0;,5,285,1
285964,RETURN,-1,,return nchars * sizeof(*dst);,3,299,20
286203,RETURN,-1,,return nbytes;,3,374,9
286238,RETURN,-1,,return Just(Buffer::Length(val));,5,388,1
286266,RETURN,1,,return Nothing<size_t>();,5,393,1
286344,RETURN,-1,,return Just(data_size);,3,428,11
286372,RETURN,1,,return Just(Buffer::Length(val));,5,437,1
286400,RETURN,1,,return Nothing<size_t>();,5,441,1
286409,RETURN,-1,,return Just<size_t>(str->Length());,7,446,5
286422,RETURN,-1,,return Just<size_t>(str->Utf8Length(isolate));,7,450,10
286434,RETURN,-1,,return Just(str->Length() * sizeof(uint16_t));,7,453,13
286452,RETURN,-1,,"return Just(base64_decoded_size(*value, value.length()));",7,459,3
286463,RETURN,-1,,return Just<size_t>(str->Length() / 2);,7,463,21
286519,RETURN,-1,,return;,5,479,2
286582,RETURN,-1,,return;,7,496,2
286728,RETURN,-1,,return dlen;,3,538,4
286754,RETURN,-1,,return dst;,3,545,6
286785,RETURN,-1,,CHECK_BUFLEN_IN_RANGE(buflen),3,562,2
286796,RETURN,-1,,return String::Empty(isolate);,5,565,1
286847,RETURN,-1,,return buf;,9,578,5
286882,RETURN,-1,,return MaybeLocal<Value>();,11,587,2
286888,RETURN,-1,,"return ExternOneByteString::New(isolate, out, buflen, error);",9,590,5
286899,RETURN,-1,,"return ExternOneByteString::NewFromCopy(isolate, buf, buflen, error);",9,592,1
286947,RETURN,-1,,return str;,9,605,4
286951,RETURN,-1,,"return ExternOneByteString::NewFromCopy(isolate, buf, buflen, error);",7,609,12
286989,RETURN,-1,,return MaybeLocal<Value>();,9,616,2
287002,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,622,9
287043,RETURN,-1,,return MaybeLocal<Value>();,9,630,2
287059,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,636,9
287098,RETURN,-1,,return MaybeLocal<Value>();,9,644,2
287111,RETURN,-1,,"return ExternOneByteString::New(isolate, dst, dlen, error);",7,649,9
287159,RETURN,-1,,return MaybeLocal<Value>();,11,658,2
287213,RETURN,-1,,"return ExternTwoByteString::New(isolate, dst, str_len, error);",9,667,5
287252,RETURN,-1,,return MaybeLocal<Value>();,11,674,2
287258,RETURN,-1,,"return ExternTwoByteString::New(
            isolate, reinterpret_cast<uint16_t*>(dst), str_len, error);",9,677,5
287269,RETURN,-1,,"return ExternTwoByteString::NewFromCopy(
          isolate, reinterpret_cast<const uint16_t*>(buf), str_len, error);",7,680,5
287296,RETURN,1,,return String::Empty(isolate);,20,694,1
287322,RETURN,-1,,CHECK_BUFLEN_IN_RANGE(buflen),3,695,2
287351,RETURN,-1,,return MaybeLocal<Value>();,7,705,2
287369,RETURN,-1,,"return ExternTwoByteString::New(isolate, dst, buflen, error);",5,710,8
287380,RETURN,-1,,"return ExternTwoByteString::NewFromCopy(isolate, buf, buflen, error);",5,712,1
287402,RETURN,-1,,"return Encode(isolate, buf, len, encoding, error);",3,721,3
287506,RETURN,-1,,return MaybeLocal<String>();,7,41,2
287510,RETURN,-1,,return utf8_string;,7,43,1
287556,RETURN,-1,,return ret.FromMaybe(Local<Value>()).As<String>();,3,60,6
287711,RETURN,-1,,return MaybeLocal<String>();,11,124,1
288004,RETURN,1,,return MaybeLocal<String>();,11,220,1
288021,RETURN,-1,,return body;,7,227,1
288025,RETURN,-1,,"return String::Concat(isolate, prepend, body);",7,229,1
288047,RETURN,-1,,"return MakeString(isolate, data, nread, Encoding());",5,233,2
288101,RETURN,1,,return String::Empty(isolate);,5,250,1
288128,RETURN,-1,,return ret;,3,261,7
288646,RETURN,-1,,"return uv_ip4_addr(ip_address, port, addr);",7,301,1
288660,RETURN,-1,,"return uv_ip6_addr(ip_address, port, addr);",7,313,1
288761,RETURN,-1,,"return handle_scope.EscapeMaybe(
      constructor->NewInstance(env->context(), 1, &type_value));",3,67,9
289546,RETURN,1,,return;,57,203,1
289622,RETURN,1,,return;,5,230,1
289718,RETURN,1,,return;,55,253,1
289741,RETURN,-1,,return;,5,256,1
289852,RETURN,1,,return;,58,287,1
289944,RETURN,1,,return;,55,310,1
290167,RETURN,1,,return 0;,31,372,1
290216,RETURN,-1,,return err;,3,382,6
290334,RETURN,-1,,return {};,9,415,2
290517,RETURN,-1,,return scope.Escape(info);,3,447,9
290584,RETURN,1,,return;,31,11,1
290637,RETURN,1,,return;,31,27,1
290655,RETURN,1,,return;,31,32,1
290672,RETURN,1,,return;,31,37,1
290705,RETURN,1,,return timer_->Stop();,5,48,1
290922,RETURN,-1,,return GetLibuvNowImpl(FromJSObject<BindingData>(receiver));,3,37,1
290934,RETURN,-1,,return static_cast<double>(data->env()->GetNowUint64());,3,41,1
291108,RETURN,-1,,return true;,3,93,1
291130,RETURN,-1,,return info;,3,100,4
291281,RETURN,1,,return;,32,156,1
291503,RETURN,1,,return;,28,24,1
291557,RETURN,-1,,return result;,3,43,3
291657,RETURN,1,,return;,5,88,1
291800,RETURN,-1,,"return AgentWriterHandle(this, id);",3,134,15
291808,RETURN,-1,,"return AgentWriterHandle(this, kDefaultHandleId);",3,138,1
291820,RETURN,1,,return;,5,143,1
291846,RETURN,1,,return;,35,155,1
291890,RETURN,1,,return;,5,167,1
291980,RETURN,1,,return nullptr;,5,187,1
292000,RETURN,-1,,return trace_config;,3,192,5
292025,RETURN,-1,,return categories;,3,202,3
292224,RETURN,-1,,return uv_hrtime() / 1000;,5,40,1
292264,RETURN,-1,,return agent_ == nullptr;,31,60,1
292290,RETURN,-1,,return agent_;,27,68,1
292347,RETURN,-1,,return controller;,5,92,4
292488,RETURN,-1,,return *this;,3,169,5
292540,RETURN,-1,,return agent_ != nullptr && id_ == Agent::kDefaultHandleId;,3,185,1
292554,RETURN,-1,,return agent_ != nullptr ? agent_->GetTracingController() : nullptr;,3,189,1
292729,RETURN,-1,,return trace_object;,3,31,10
292744,RETURN,-1,,return nullptr;,5,38,1
292769,RETURN,-1,,return nullptr;,5,47,1
292785,RETURN,-1,,return nullptr;,5,52,1
292787,RETURN,-1,,return chunk->GetEventAt(event_index);,3,54,13
292880,RETURN,-1,,"return ((static_cast<uint64_t>(chunk_seq) * Capacity() +
          chunk_index * TraceBufferChunk::kChunkSize + event_index) << 1) + id_;",3,83,1
293024,RETURN,-1,,return nullptr;,5,130,2
293026,RETURN,-1,,return current_buf_.load()->AddTraceEvent(handle);,3,132,2
293040,RETURN,-1,,return current_buf_.load()->GetEventByHandle(handle);,3,136,1
293063,RETURN,-1,,return true;,3,142,3
293111,RETURN,-1,,return false;,7,157,1
293113,RETURN,-1,,return true;,3,160,4
293238,RETURN,-1,,return total_chunks_ == max_chunks_ && chunks_[total_chunks_ - 1]->IsFull();,5,28,1
293255,RETURN,-1,,return flushing_;,5,31,1
293277,RETURN,-1,,return max_chunks_ * TraceBufferChunk::kChunkSize;,29,39,1
293815,RETURN,1,,return;,7,147,1
293855,RETURN,1,,return;,18,163,1
294228,RETURN,-1,,return g_agent;,3,21,1
294234,RETURN,-1,,return g_controller;,3,25,1
294248,RETURN,-1,,return tracing::TraceEventHelper::GetTracingController();,3,35,1
294355,RETURN,1,,return &disabled;,42,324,1
294358,RETURN,-1,,return controller->GetCategoryGroupEnabled(group);,5,325,6
294376,RETURN,-1,,return raw_id_;,31,338,1
294382,RETURN,-1,,return scope_;,33,339,1
294448,RETURN,-1,,return scope_;,33,363,1
294454,RETURN,-1,,return raw_id_;,31,364,1
294510,RETURN,-1,,return raw_id_;,31,384,1
294633,RETURN,-1,,return raw_id_;,29,430,1
294639,RETURN,-1,,return scope_;,31,431,1
294667,RETURN,-1,,return str_;,34,452,1
294758,RETURN,1,,return 0;,30,475,1
294760,RETURN,-1,,"return controller->AddTraceEvent(phase, category_group_enabled, name, scope, id,
                                   bind_id, num_args, arg_names, arg_types,
                                   arg_values, arg_convertibles, flags);",3,476,7
295104,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(phase, category_group_enabled, name,
                                         scope, id, bind_id, kZeroNumArgs,
                                         nullptr, nullptr, nullptr, flags);",3,589,1
295155,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(
      phase, category_group_enabled, name, scope, id, bind_id, num_args,
      &arg1_name, &arg_type, &arg_value, flags);",3,603,6
295237,RETURN,-1,,"return TRACE_EVENT_API_ADD_TRACE_EVENT(
      phase, category_group_enabled, name, scope, id, bind_id, num_args,
      arg_names, arg_types, arg_values, flags);",3,622,9
295458,RETURN,-1,,return result;,3,86,6
295476,RETURN,-1,,"return ""\""NaN\"""";",18,91,3
295480,RETURN,-1,,"return (v < 0.0 ? ""\""-Infinity\"""" : ""\""Infinity\"""");",23,92,6
295489,RETURN,-1,,"return ""0"";",19,93,9
295506,RETURN,-1,,return stream.str();,7,99,14
295515,RETURN,-1,,return std::unique_ptr<TracedValue>(new TracedValue(false));,3,106,1
295529,RETURN,-1,,return std::unique_ptr<TracedValue>(new TracedValue(true));,3,110,1
296143,RETURN,1,,return;,53,83,1
296359,RETURN,1,,return;,53,131,1
296524,RETURN,-1,,return;,5,61,2
296557,RETURN,-1,,return;,5,67,1
296600,RETURN,-1,,return have_callback_;,3,98,1
296627,RETURN,-1,,return listener_;,3,112,2
296674,RETURN,-1,,"return static_cast<UDPWrapBase*>(
      obj->GetAlignedPointerFromInternalField(UDPWrapBase::kUDPWrapBaseField));",3,127,2
297298,RETURN,-1,,"return uv_ip4_addr(address, port, reinterpret_cast<sockaddr_in*>(addr));",7,256,3
297307,RETURN,-1,,"return uv_ip6_addr(address, port, reinterpret_cast<sockaddr_in6*>(addr));",7,258,6
297398,RETURN,1,,return;,5,278,1
297515,RETURN,1,,return;,5,306,1
297708,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,356,2
297771,RETURN,-1,,return args.GetReturnValue().SetUndefined();,5,370,2
298078,RETURN,1,,return;,26,464,1
298313,RETURN,1,,return;,58,524,1
298462,RETURN,1,,return UV_EBADF;,26,559,1
298578,RETURN,-1,,return msg_size + 1;,9,585,2
298607,RETURN,1,,return UV_ENOSYS;,30,593,1
298629,RETURN,-1,,return err;,3,610,9
298649,RETURN,-1,,return req_wrap;,3,619,4
298671,RETURN,-1,,return this;,3,634,1
298677,RETURN,-1,,return SocketAddress::FromPeerName(handle_);,3,638,1
298687,RETURN,-1,,return SocketAddress::FromSockName(handle_);,3,642,1
298732,RETURN,1,,return UV_EBADF;,26,651,1
298750,RETURN,-1,,return err;,3,656,5
298791,RETURN,1,,return UV_EBADF;,26,666,1
298793,RETURN,-1,,return uv_udp_recv_stop(&handle_);,3,667,2
298905,RETURN,-1,,return env()->allocate_managed_buffer(suggested_size);,3,695,1
298985,RETURN,-1,,return;,5,715,1
299025,RETURN,-1,,return;,5,729,2
299138,RETURN,-1,,return;,7,752,3
299234,RETURN,-1,,return;,7,771,3
299267,RETURN,-1,,return env->udp_constructor_function()->NewInstance(env->context());,3,786,4
299497,RETURN,1,,return;,72,73,1
299514,RETURN,1,,return;,70,76,1
299565,RETURN,1,,return;,5,88,1
299582,RETURN,-1,,return;,5,96,1
299604,RETURN,1,,return;,72,100,1
299649,RETURN,-1,,return;,5,118,2
299765,RETURN,1,,return default_title;,7,156,1
299786,RETURN,-1,,return buf;,3,165,5
299792,RETURN,-1,,"return SPrintF(""%s[%d]"", GetProcessTitle(""Node.js""), uv_os_getpid());",3,169,1
299882,RETURN,-1,,return out;,3,187,3
299909,RETURN,-1,,return kMicrosecondsPerSecond * tv.tv_sec + tv.tv_usec;,3,198,5
299951,RETURN,-1,,return fd;,5,211,1
299974,RETURN,-1,,return err;,5,217,1
299987,RETURN,-1,,return err;,3,222,12
300012,RETURN,-1,,"return WriteFileSync(path, buf);",3,230,5
300044,RETURN,-1,,return req.result;,5,242,1
300098,RETURN,-1,,return req.result;,7,261,1
300119,RETURN,-1,,return 0;,3,269,15
300177,RETURN,-1,,return contents;,3,284,15
300353,RETURN,-1,,return oss.str();,3,339,15
300368,RETURN,-1,,"return v8::FunctionTemplate::New(isolate,
                                   callback,
                                   Local<v8::Value>(),
                                   signature,
                                   0,
                                   behavior,
                                   side_effect_type,
                                   c_function);",3,349,1
301374,RETURN,-1,,"return String::NewExternalOneByte(isolate, one_byte_resource_)
        .ToLocalChecked();",5,613,1
301386,RETURN,-1,,"return String::NewExternalTwoByte(isolate, two_byte_resource_)
        .ToLocalChecked();",5,616,1
301501,RETURN,1,,return;,5,71,1
301521,RETURN,1,,return;,54,74,1
301652,RETURN,-1,,return;,7,100,1
